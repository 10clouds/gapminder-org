{"version":3,"sources":["webpack:///app.js","webpack:///./app/index.ts","webpack:///./~/angular2/src/platform/dom/dom_adapter.js","webpack:///./~/angular2/src/compiler/util.js","webpack:///./~/angular2/src/compiler/source_module.js","webpack:///./~/angular2/src/compiler/template_ast.js","webpack:///./~/angular2/src/platform/dom/events/event_manager.js","webpack:///./~/angular2/src/compiler/html_tags.js","webpack:///./~/angular2/src/compiler/url_resolver.js","webpack:///./~/angular2/src/platform/dom/dom_tokens.js","webpack:///./~/angular2/src/compiler/directive_metadata.js","webpack:///./~/angular2/src/compiler/xhr.js","webpack:///./~/angular2/src/core/linker/interfaces.js","webpack:///./~/angular2/src/platform/dom/shared_styles_host.js","webpack:///./~/angular2/src/compiler/html_ast.js","webpack:///./~/angular2/src/compiler/html_parser.js","webpack:///./~/angular2/src/compiler/parse_util.js","webpack:///./~/angular2/src/compiler/proto_view_compiler.js","webpack:///./~/angular2/src/compiler/schema/element_schema_registry.js","webpack:///./~/angular2/src/compiler/style_url_resolver.js","webpack:///./~/angular2/src/compiler/template_compiler.js","webpack:///./~/angular2/src/compiler/template_parser.js","webpack:///./~/angular2/src/platform/dom/dom_renderer.js","webpack:///./~/angular2/compiler.js","webpack:///./~/angular2/platform/common_dom.js","webpack:///./~/angular2/src/animate/animation_builder.js","webpack:///./~/angular2/src/animate/browser_details.js","webpack:///./~/angular2/src/compiler/change_detector_compiler.js","webpack:///./~/angular2/src/compiler/runtime_compiler.js","webpack:///./~/angular2/src/compiler/runtime_metadata.js","webpack:///./~/angular2/src/compiler/selector.js","webpack:///./~/angular2/src/compiler/style_compiler.js","webpack:///./~/angular2/src/compiler/template_normalizer.js","webpack:///./~/angular2/src/compiler/template_preparser.js","webpack:///./~/angular2/src/compiler/view_compiler.js","webpack:///./~/angular2/src/facade/math.js","webpack:///./~/angular2/src/platform/browser/browser_adapter.js","webpack:///./~/angular2/src/platform/browser/xhr_impl.js","webpack:///./~/angular2/src/platform/browser_common.js","webpack:///./~/angular2/src/platform/dom/events/dom_events.js","webpack:///./~/angular2/src/platform/dom/util.js","webpack:///./~/angular2/platform/browser.js","webpack:///./~/angular2/src/animate/animation.js","webpack:///./~/angular2/src/animate/css_animation_builder.js","webpack:///./~/angular2/src/animate/css_animation_options.js","webpack:///./~/angular2/src/compiler/change_definition_factory.js","webpack:///./~/angular2/src/compiler/compiler.js","webpack:///./~/angular2/src/compiler/html_lexer.js","webpack:///./~/angular2/src/compiler/schema/dom_element_schema_registry.js","webpack:///./~/angular2/src/compiler/shadow_css.js","webpack:///./~/angular2/src/core/angular_entrypoint.js","webpack:///./~/angular2/src/core/debug/debug_renderer.js","webpack:///./~/angular2/src/core/linker/directive_lifecycle_reflector.js","webpack:///./~/angular2/src/core/profile/wtf_init.js","webpack:///./~/angular2/src/facade/browser.js","webpack:///./~/angular2/src/platform/browser/generic_browser_adapter.js","webpack:///./~/angular2/src/platform/browser/testability.js","webpack:///./~/angular2/src/platform/browser/title.js","webpack:///./~/angular2/src/platform/browser/tools/common_tools.js","webpack:///./~/angular2/src/platform/browser/tools/tools.js","webpack:///./~/angular2/src/platform/dom/debug/by.js","webpack:///./~/angular2/src/platform/dom/debug/ng_probe.js","webpack:///./~/angular2/src/platform/dom/events/hammer_common.js","webpack:///./~/angular2/src/platform/dom/events/hammer_gestures.js","webpack:///./~/angular2/src/platform/dom/events/key_events.js","webpack:///./~/angular2/src/transform/template_compiler/change_detector_codegen.js","webpack:///./app/app.component.ts"],"names":["webpackJsonp",0,"module","exports","__webpack_require__","browser_1","app_component_1","bootstrap","AppComponent",11,"setRootDomAdapter","adapter","lang_1","isBlank","DOM","DomAdapter","Object","defineProperty","prototype","get","this","_attrToPropMap","set","value","enumerable","configurable",24,"camelCaseToDashCase","input","StringWrapper","replaceAllMapped","CAMEL_CASE_REGEXP","m","toLowerCase","dashCaseToCamelCase","DASH_CASE_REGEXP","toUpperCase","escapeSingleQuoteString","escapeString","SINGLE_QUOTE_ESCAPE_STRING_RE","escapeDoubleQuoteString","DOUBLE_QUOTE_ESCAPE_STRING_RE","re","match","IS_DART","codeGenExportVariable","name","codeGenConstConstructorCall","codeGenValueFn","params","fnName","codeGenFnHeader","join","codeGenToString","expr","splitAtColon","defaultValues","parts","split","trim","length","escapeValue","Expression","expression","isString","codeGenArray","data","map","codeGenFlatArray","values","result","isFirstArrayEntry","concatFn","i","isArray","codeGenStringMap","keyValueArray","codeGenKeyValue","keyValue","addAll","source","target","push","flattenArray","isPresent","item","MODULE_SUFFIX","CONST_VAR","Statement","statement",31,"moduleRef","moduleUrl","MODULE_REGEXP","SourceModule","sourceWithModuleRefs","getSourceWithoutImports","getSourceWithImports","_this","moduleAliases","imports","newSource","alias","SourceWithImports","SourceExpression","declarations","SourceExpressions","expressions",32,"templateVisitAll","visitor","asts","context","forEach","ast","astResult","visit","TextAst","ngContentIndex","sourceSpan","visitText","BoundTextAst","visitBoundText","AttrAst","visitAttr","BoundElementPropertyAst","type","unit","visitElementProperty","BoundEventAst","handler","visitEvent","VariableAst","visitVariable","ElementAst","attrs","inputs","outputs","exportAsVars","directives","children","visitElement","isBound","getComponent","directive","isComponent","EmbeddedTemplateAst","vars","visitEmbeddedTemplate","BoundDirectivePropertyAst","directiveName","templateName","visitDirectiveProperty","DirectiveAst","hostProperties","hostEvents","visitDirective","NgContentAst","index","visitNgContent","PropertyBindingType",36,"__decorate","decorators","key","desc","d","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","__metadata","k","v","metadata","__param","paramIndex","decorator","exceptions_1","di_1","ng_zone_1","collection_1","EVENT_MANAGER_PLUGINS","CONST_EXPR","OpaqueToken","EventManager","plugins","_zone","p","manager","_plugins","ListWrapper","reversed","addEventListener","element","eventName","plugin","_findPluginFor","addGlobalEventListener","getZone","supports","BaseException","Injectable","Inject","Array","NgZone","EventManagerPlugin",43,"getHtmlTagDefinition","tagName","TAG_DEFINITIONS","DEFAULT_TAG_DEFINITION","splitNsName","elementName","RegExpWrapper","firstMatch","NS_PREFIX_RE","getNsPrefix","NAMED_ENTITIES","Aacute","aacute","Acirc","acirc","acute","AElig","aelig","Agrave","agrave","alefsym","Alpha","alpha","amp","and","ang","apos","Aring","aring","asymp","Atilde","atilde","Auml","auml","bdquo","Beta","beta","brvbar","bull","cap","Ccedil","ccedil","cedil","cent","Chi","chi","circ","clubs","cong","copy","crarr","cup","curren","dagger","Dagger","darr","dArr","deg","Delta","delta","diams","divide","Eacute","eacute","Ecirc","ecirc","Egrave","egrave","empty","emsp","ensp","Epsilon","epsilon","equiv","Eta","eta","ETH","eth","Euml","euml","euro","exist","fnof","forall","frac12","frac14","frac34","frasl","Gamma","gamma","ge","gt","harr","hArr","hearts","hellip","Iacute","iacute","Icirc","icirc","iexcl","Igrave","igrave","image","infin","int","Iota","iota","iquest","isin","Iuml","iuml","Kappa","kappa","Lambda","lambda","lang","laquo","larr","lArr","lceil","ldquo","le","lfloor","lowast","loz","lrm","lsaquo","lsquo","lt","macr","mdash","micro","middot","minus","Mu","mu","nabla","nbsp","ndash","ne","ni","not","notin","nsub","Ntilde","ntilde","Nu","nu","Oacute","oacute","Ocirc","ocirc","OElig","oelig","Ograve","ograve","oline","Omega","omega","Omicron","omicron","oplus","or","ordf","ordm","Oslash","oslash","Otilde","otilde","otimes","Ouml","ouml","para","permil","perp","Phi","phi","Pi","pi","piv","plusmn","pound","prime","Prime","prod","prop","Psi","psi","quot","radic","rang","raquo","rarr","rArr","rceil","rdquo","real","reg","rfloor","Rho","rho","rlm","rsaquo","rsquo","sbquo","Scaron","scaron","sdot","sect","shy","Sigma","sigma","sigmaf","sim","spades","sub","sube","sum","sup","sup1","sup2","sup3","supe","szlig","Tau","tau","there4","Theta","theta","thetasym","thinsp","THORN","thorn","tilde","times","trade","Uacute","uacute","uarr","uArr","Ucirc","ucirc","Ugrave","ugrave","uml","upsih","Upsilon","upsilon","Uuml","uuml","weierp","Xi","xi","Yacute","yacute","yen","yuml","Yuml","Zeta","zeta","zwj","zwnj","HtmlTagContentType","HtmlTagDefinition","_a","_b","closedByChildren","requiredParents","implicitNamespacePrefix","contentType","closedByParent","isVoid","ignoreFirstLf","normalizeBool","parentToAdd","PARSABLE_DATA","requireExtraParent","currentParent","lcParent","isClosedByChild","area","embed","link","img","param","hr","br","track","wbr","thead","tbody","tfoot","tr","td","th","col","svg","math","li","dt","dd","rb","rt","rtc","rp","optgroup","option","pre","listing","style","RAW_TEXT","script","title","ESCAPABLE_RAW_TEXT","textarea",44,"createWithoutPackagePrefix","UrlResolver","getUrlScheme","url","_split","_ComponentIndex","Scheme","_buildFromEncodedParts","opt_scheme","opt_userInfo","opt_domain","opt_port","opt_path","opt_queryData","opt_fragment","out","uri","_splitRe","_removeDotSegments","path","leadingSlash","trailingSlash","segments","up","pos","segment","pop","unshift","_joinAndCanonicalizePath","Path","UserInfo","Domain","Port","QueryData","Fragment","_resolveUrl","base","encodeURI","baseParts","lastIndexOf","substring","application_tokens_1","di_2","DEFAULT_PACKAGE_URL_PROVIDER","Provider","PACKAGE_ROOT_URL","useValue","packagePrefix","_packagePrefix","stripRight","resolve","baseUrl","resolvedUrl","replace","String","create",53,"DOCUMENT",59,"createHostComponentMeta","componentType","componentSelector","template","selector_1","CssSelector","parse","getMatchingElementTemplate","CompileDirectiveMetadata","CompileTypeMetadata","runtime","isHost","CompileTemplateMetadata","templateUrl","styles","styleUrls","ngContentSelectors","changeDetection","change_detection_1","ChangeDetectionStrategy","Default","host","lifecycleHooks","dynamicLoadable","selector","view_1","util_1","interfaces_1","HOST_REG_EXP","CompileMetadataWithType","fromJson","_COMPILE_METADATA_FROM_JSON","unimplemented","toJson","encapsulation","ViewEncapsulation","Emulated","VIEW_ENCAPSULATION_VALUES","serializeEnum","exportAs","hostListeners","hostAttributes","StringMapWrapper","matches","inputsMap","bindConfig","outputsMap","CHANGE_DETECTION_STRATEGY_VALUES","hookValue","LIFECYCLE_HOOKS_VALUES","class","hook","CompilePipeMetadata","pure","Directive","Pipe",60,"XHR",63,"LifecycleHooks","OnInit","OnDestroy","DoCheck","OnChanges","AfterContentInit","AfterContentChecked","AfterViewInit","AfterViewChecked",72,"__extends","b","__","constructor","hasOwnProperty","dom_adapter_1","dom_tokens_1","SharedStylesHost","_styles","_stylesSet","Set","addStyles","additions","SetWrapper","has","add","onStylesAdded","getAllStyles","DomSharedStylesHost","_super","doc","call","_hostNodes","head","_addStylesToHost","appendChild","createStyleElement","addHost","hostNode","removeHost","delete",89,"htmlVisitAll","HtmlTextAst","HtmlAttrAst","HtmlElementAst",90,"mergeNsAndName","prefix","localName","getElementFullName","parentElement","html_tags_1","html_ast_1","html_lexer_1","parse_util_1","HtmlTreeError","location","msg","ParseError","HtmlParseTreeResult","rootNodes","errors","HtmlParser","sourceContent","sourceUrl","tokensAndErrors","tokenizeHtml","treeAndErrors","TreeBuilder","tokens","build","concat","elementStack","_advance","peek","HtmlTokenType","EOF","TAG_OPEN_START","_consumeStartTag","TAG_CLOSE","_consumeEndTag","CDATA_START","_closeVoidElement","_consumeCdata","COMMENT_START","_consumeComment","TEXT","_consumeText","prev","_advanceIf","startToken","CDATA_END","COMMENT_END","token","text","parent_1","_getParentElement","_addToParent","el","last","startTagToken","ATTR_NAME","_consumeAttr","fullName","selfClosing","TAG_OPEN_END_VOID","start","TAG_OPEN_END","end","ParseSourceSpan","_pushElement","_popElement","parentEl","tagDef","newParent","endTagToken","stackIndex","splice","attrName","ATTR_VALUE","valueToken","node","parent",91,"ParseLocation","file","offset","line","toString","ParseSourceFile","content","ctxStart","ctxEnd","ctxLen","ctxLines",92,"visitAndReturnContext","template_ast_1","mapToKeyValueArray","entryArray","sort","entry1","entry2","compare","entry","mergeAttributeValue","attrValue1","attrValue2","CLASS_ATTR","STYLE_ATTR","keyValueArrayToStringMap","stringMap","codeGenDirectivesArray","directiveType","typeRef","codeGenTypesArray","types","codeGenViewType","VIEW_TYPE_MODULE_REF","source_module_1","getViewType","component","embeddedTemplateIndex","view_type_1","ViewType","EMBEDDED","HOST","COMPONENT","element_1","PROTO_VIEW_JIT_IMPORTS","AppProtoView","AppProtoElement","APP_VIEW_MODULE_REF","APP_EL_MODULE_REF","METADATA_MODULE_REF","IMPLICIT_TEMPLATE_VAR","ProtoViewCompiler","compileProtoViewRuntime","metadataCache","pipes","protoViewFactory","RuntimeProtoViewFactory","allProtoViews","createCompileProtoView","CompileProtoViews","compileProtoViewCodeGen","resolvedMetadataCacheExpr","CodeGenProtoViewFactory","allStatements","stmt","protoViews","CompileProtoView","protoElements","protoView","CompileProtoElement","boundElementIndex","attrNameAndValues","variableNameAndValues","renderEvents","appProtoEl","ProtoViewFactory","templateVariableBindings","targetStatements","targetProtoViews","builder","ProtoViewBuilderVisitor","viewType","appProtoView","createAppProtoView","cpv","_nextVarId","_nextProtoViewVar","protoViewVarName","viewTypeExpr","pipesExpr","pipeMeta","createAppProtoElement","varName","templateVars","dirMeta","factory","boundElementCount","_readAttrNameAndValues","attrAsts","directiveMeta","prevValue","varAst","Map","forEachWithIndex","directiveAst","DirectiveContext","renderEventArray","eventAst","_","_addProtoElement","nestedProtoView","compileProtoEl","ctx","targetDirectives","hostEventTargetAndNames","targetVariableNameAndValues","eventTargetAndNames",93,"ElementSchemaRegistry","hasProperty","propName","getMappedPropName",94,"isStyleUrlResolvable","schemeMatch","_urlWithSchemaRe","extractStyleUrls","resolver","cssText","foundUrls","modifiedCssText","_cssImportRe","StyleWithImports",95,"assertComponent","meta","templateModuleUrl","urlWithoutSuffix","codeGenHostViewFactoryName","codeGenComponentViewFactoryName","nestedCompType","mergeStringMaps","maps","removeDuplicates","items","res","hasMatch","filter","filterPipes","allPipes","PipeVisitor","collector","async_1","directive_metadata_1","change_detector_compiler_1","style_compiler_1","view_compiler_1","proto_view_compiler_1","template_parser_1","template_normalizer_1","runtime_metadata_1","resolved_metadata_cache_1","METADATA_CACHE_MODULE_REF","TemplateCompiler","_runtimeMetadataResolver","_templateNormalizer","_templateParser","_styleCompiler","_cdCompiler","_protoViewCompiler","_viewCompiler","_resolvedMetadataCache","_genConfig","_hostCacheKeys","_compiledTemplateCache","_compiledTemplateDone","normalizeDirectiveMetadata","normalizeTemplate","then","normalizedTemplate","PromiseWrapper","compileHostComponentRuntime","compMeta","getDirectiveMetadata","hostCacheKey","hostMeta","_compileComponentRuntime","compiledTemplate","HostViewFactory","viewFactory","clearCache","clear","compileTemplatesCodeGen","components","componentWithDirs","_compileComponentCodeGen","viewFactoryExpression","constructionKeyword","compiledTemplateExpr","compileStylesheetCodeGen","stylesheetUrl","cacheKey","viewDirectives","compilingComponentsPath","uniqViewDirectives","uniqViewPipes","done","CompiledTemplate","all","compileComponentRuntime","stylesAndNormalizedViewDirMetas","normalizedViewDirMetas","slice","parsedTemplate","childPromises","usedDirectives","DirectiveCollector","findUsedDirectives","_compileNestedComponentRuntime","filteredPipes","init","_createViewFactoryRuntime","childComponentDir","parentCompilingComponentsPath","clone","childCacheKey","childViewDirectives","getViewDirectivesMetadata","childViewPipes","getViewPipesMetadata","childIsRecursive","contains","useJit","changeDetectorFactories","_getNestedComponentViewFactory","viewFactoryExpr","_createViewFactoryCodeGen","resolvedMetadataCache","declarationsWithoutImports","evalExpression","CHANGE_DETECTION_JIT_IMPORTS","VIEW_JIT_IMPORTS","targetDeclarations","uniqueDirectives","uniqPipes","styleExpr","compileComponentCodeGen","changeDetectorsExprs","protoViewExprs","RuntimeMetadataResolver","TemplateNormalizer","TemplateParser","StyleCompiler","ChangeDetectionCompiler","ViewCompiler","ResolvedMetadataCache","ChangeDetectorGenConfig","NormalizedComponentWithViewDirectives","PipeCollector",96,"splitClasses","classAttrValue","createElementCssSelector","matchableAttrs","cssSelector","elNameNoNs","setElement","attrNameNoNs","attrValue","addAttribute","classes","className","addClassName","core_1","lang_2","html_parser_1","ast_1","element_schema_registry_1","template_preparser_1","style_url_resolver_1","BIND_NAME_REGEXP","TEMPLATE_ELEMENT","TEMPLATE_ATTR","TEMPLATE_ATTR_PREFIX","PROPERTY_PARTS_SEPARATOR","ATTRIBUTE_PREFIX","CLASS_PREFIX","STYLE_PREFIX","TEXT_CSS_SELECTOR","TEMPLATE_TRANSFORMS","TemplateParseError","message","_exprParser","_schemaRegistry","_htmlParser","transforms","parseVisitor","TemplateParseVisitor","htmlAstWithErrors","EMPTY_COMPONENT","errorString","transform","Optional","Parser","directivesIndex","ngContentCount","selectorMatcher","SelectorMatcher","addSelectables","pipesByName","pipe","_reportError","_parseInterpolation","sourceInfo","parseInterpolation","_checkPipes","e","wrapLiteralPrimitive","_parseAction","parseAction","_parseBinding","parseBinding","_parseTemplateBindings","bindings","parseTemplateBindings","binding","pipeName","findNgContentIndex","contex","nodeName","preparsedElement","preparseElement","PreparsedElementType","SCRIPT","STYLE","STYLESHEET","hrefAttr","elementOrDirectiveProps","events","templateElementOrDirectiveProps","templateMatchableAttrs","hasInlineTemplates","attr","hasBinding","_parseAttr","hasTemplateBinding","_parseInlineTemplateBinding","parsedElement","lcElName","isTemplateElement","elementCssSelector","_createDirectiveAsts","_parseDirectives","elementProps","_createElementPropertyAsts","nonBindable","NON_BINDABLE_VISITOR","Component","elementNgContentIndex","NG_CONTENT","_assertAllEventsPublishedByDirectives","_assertNoComponentsNorElementBindingsOnTemplate","_assertOnlyOneComponent","elementExportAsVars","templateCssSelector","templateDirectives","templateElementProps","targetMatchableAttrs","targetProps","targetVars","templateBindingsSource","startsWith","keyIsVar","_parsePropertyAst","_parseLiteralAttr","targetEvents","_normalizeAttributeName","bindParts","_parseProperty","identifier","_parseVariable","_parseEvent","_parseAssignmentEvent","_parsePropertyInterpolation","indexOf","BoundElementOrDirectiveProperty","dir1","dir2","dir1Comp","dir2Comp","props","possibleExportAsVars","matchedVariables","directiveAsts","directiveProperties","_createDirectiveHostPropertyAsts","_createDirectiveHostEventAsts","_createDirectivePropertyAsts","hostProps","targetPropertyAsts","exprAst","_createElementPropertyAst","targetEventAsts","boundProps","targetBoundDirectiveProps","boundPropsByName","boundProp","isLiteral","elProp","dirProp","boundElementProps","boundDirectivePropsIndex","bindingType","boundPropertyName","Property","Attribute","Class","Style","_findComponentDirectiveNames","componentTypeNames","typeName","allDirectiveEvents","event","NonBindableVisitor","attrAst","ngContentIndexMatcher","wildcardNgContentIndex","matcher","equals","ngContentIndices","apply","visitPipe","exp","visitAll","args","RecursiveAstVisitor",113,"moveNodesAfterSibling","sibling","nodes","nextSibling","insertBefore","appendNodes","decoratePreventDefault","eventHandler","allowDefaultBehavior","preventDefault","_shimContentAttribute","componentShortId","replaceAll","CONTENT_ATTR","COMPONENT_REGEX","_shimHostAttribute","HOST_ATTR","_flattenStyles","compId","splitNamespace","animation_builder_1","shared_styles_host_1","event_manager_1","metadata_1","NAMESPACE_URIS","xlink","TEMPLATE_COMMENT_TEXT","TEMPLATE_BINDINGS_EXP","DomRootRenderer","document","eventManager","sharedStylesHost","animate","_registeredComponents","renderComponent","componentProto","renderer","id","DomRenderer","DomRootRenderer_","_document","_eventManager","AnimationBuilder","_rootRenderer","Native","_contentAttr","_hostAttr","selectRootElement","querySelector","clearNodes","createElement","nsAndName","createElementNS","setAttribute","createViewRoot","hostElement","nodesParent","createShadowRoot","createTemplateAnchor","comment","createComment","createText","createTextNode","projectNodes","attachViewAfter","viewRootNodes","animateNodeEnter","detachView","remove","animateNodeLeave","destroyView","viewAllNodes","getShadowRoot","listen","renderElement","callback","listenGlobal","setElementProperty","propertyName","propertyValue","setProperty","setElementAttribute","attributeName","attributeValue","attrNs","setAttributeNS","removeAttribute","setBindingDebugInfo","dashCasedPropertyName","isCommentNode","existingBindings","getText","parsedBindings","Json","setText","stringify","setElementDebugInfo","info","setElementClass","isAdd","addClass","removeClass","setElementStyle","styleName","styleValue","setStyle","removeStyle","invokeElementMethod","methodName","invoke","renderNode","isElementNode","hasClass","css","addAnimationClass","onComplete","COMPONENT_VARIABLE",122,"__export",123,"dom_renderer_1","dom_events_1","DomEventsPlugin",124,"css_animation_builder_1","browser_details_1","browserDetails","CssAnimationBuilder","BrowserDetails",125,"math_1","elapsedTimeIncludesDelay","doesElapsedTimeIncludesDelay","div","raf","timestamp","on","elapsed","Math","round","elapsedTime","frames","queue","RafQueue","cancel","_raf","currentFrameId","requestAnimationFrame","_nextFrame","cancelAnimationFrame",140,"change_detection_jit_generator_1","abstract_change_detector_1","change_detection_util_1","constants_1","change_definition_factory_1","change_detector_codegen_1","ABSTRACT_CHANGE_DETECTOR","UTIL","CHANGE_DETECTOR_STATE","AbstractChangeDetector","ChangeDetectionUtil","ChangeDetectorState","ABSTRACT_CHANGE_DETECTOR_MODULE","UTIL_MODULE","PREGEN_PROTO_CHANGE_DETECTOR_MODULE","CONSTANTS_MODULE","strategy","changeDetectorDefinitions","createChangeDetectorDefinitions","definition","_createChangeDetectorFactory","proto","DynamicProtoChangeDetector","instantiate","factories","sourceParts","codegen","sourcePart","Codegen","generate","ChangeDetectorJITGenerator","generateSource",141,"compiler_1","view_ref_1","template_compiler_1","RuntimeCompiler","Compiler","RuntimeCompiler_","_templateCompiler","compileInHost","hostViewFactory","HostViewFactoryRef_","Compiler_",142,"flattenDirectives","view","platformDirectives","flattenPipes","platformPipes","tree","resolveForwardRef","isValidType","Type","calcModuleUrl","cmpMetadata","moduleId","scheme","url_resolver_1","reflection_1","reflector","importUri","cpl","md","directive_resolver_1","pipe_resolver_1","view_resolver_1","directive_lifecycle_reflector_1","platform_directives_and_pipes_1","_directiveResolver","_pipeResolver","_viewResolver","_platformDirectives","_platformPipes","_directiveCache","_pipeCache","templateMeta","changeDetectionStrategy","ComponentMetadata","cmpMeta","viewMeta","hasLifecycleHook","getPipeMetadata","pipeType","PLATFORM_DIRECTIVES","PLATFORM_PIPES","DirectiveResolver","PipeResolver","ViewResolver",143,"_EMPTY_ATTR_VALUE","_SELECTOR_REGEXP","classNames","notSelectors","results","_addResult","cssSel","isEmpty","current","inNot","RegExpMatcherWrapper","next","isElementSelector","classAttr","notSelector","_elementMap","_elementPartialMap","_classMap","_classPartialMap","_attrValueMap","_attrValuePartialMap","_listContexts","createNotMatcher","notMatcher","cssSelectors","callbackCtxt","listContext","SelectorListContext","_addSelectable","selectable","SelectorContext","isTerminal","_addTerminal","_addPartial","terminalMap","terminalValuesMap","parttialMap","partialValuesMap","terminalList","matchedCallback","alreadyMatched","_matchTerminal","_matchPartial","selectables","starSelectables","finalize","nestedSelector","selectors","cbContext",144,"xhr_1","shadow_css_1","_xhr","_urlResolver","_styleCache","_shadowCss","ShadowCss","styleAbsUrls","_loadStyles","shim","_styleCodeGen","styleWithImports","_styleModule","plainStyles","absUrls","encapsulate","promises","absUrl","nestedStyles","plainStyle","_shimIfNeeded","arrayPrefix","styleExpressions","_createModuleUrl","expressionSource","moduleSource","shimCssText",145,"normalizeLoadedTemplate","sourceAbsUrl","templateContent","templateAbsUrl","rootNodesAndErrors","TemplatePreparseVisitor","allStyles","allStyleAbsUrls","allResolvedStyles","styleUrl","None","ngNonBindableStackCount","selectAttr","textContent","child",146,"relAttr","lcAttrName","NG_CONTENT_SELECT_ATTR","LINK_STYLE_HREF_ATTR","LINK_STYLE_REL_ATTR","NG_NON_BINDABLE_ATTR","normalizeNgContentSelect","OTHER","NG_CONTENT_ELEMENT","STYLE_ELEMENT","SCRIPT_ELEMENT","LINK_ELEMENT","LINK_STYLE_REL_VALUE","PreparsedElement",147,"codeGenEventHandler","codeGenViewFactoryName","codeGenViewEncapsulation","view_2","AppView","AppElement","flattenNestedViewRenderNodes","checkSlotCount","componentViewFactory","RuntimeViewFactory","createViewFactory","changeDetectorFactoryExpressions","CodeGenViewFactory","changeDetectorExpressions","_nextVar","_nextRenderVar","_nextAppVar","_nextDisposableVar","parentRenderNode","rootSelector","valueExpr","createGlobalEventListener","appView","disposableVar","eventHandlerExpr","createElementEventListener","createAppElement","parentAppEl","embeddedViewFactory","appVar","varValue","createAndSetComponentView","viewManager","appEl","contentNodesByNgContentIndex","codeGenContentNodes","getProjectedNodes","projectableNodes","appendProjectedNodes","compileProtoView","isHostView","isComponentView","ViewBuilderVisitor","ParentElement","viewFactoryName","changeDetectorFactory","factoryArgs","initRendererStmts","rendererExpr","renderCompTypeVar","stylesVar","renderStmts","appStmts","rootNodesOrAppElements","renderNodes","appDisposables","appElements","triggerEventHandlers","flattenedContentNodes","createFixedSize","renderComponentType","parentRenderer","containerEl","dynamicallyCreatedProviders","rootInjector","createRenderComponentType","changeDetector","nativeElement","addContentNode","nodeExpr","elementCount","_addRenderNode","_getParentRenderNode","_visitText","nodesExpression","elementIndex","protoEl","disposable",172,"global","NaN",173,"getBaseElementHref","baseElement","getAttribute","relativePath","urlParsingNode","pathname","charAt","generic_browser_adapter_1","innerHtml","readonly","tabindex","DOM_KEY_LOCATION_NUMPAD","_keyMap","\b","\t","","\u001b","Del","Esc","Left","Right","Up","Down","Menu","Scroll","Win","_chromeNumKeyPadMap","A","B","C","D","E","F","G","H","I","J","K","M","N","O","`","","BrowserDomAdapter","templateHtml","Error","makeCurrent","getProperty","logError","error","window","console","log","logGroup","group","logGroupEnd","groupEnd","query","querySelectorAll","evt","listener","onAndCancel","removeEventListener","dispatchEvent","createMouseEvent","eventType","createEvent","initEvent","returnValue","isPrevented","defaultPrevented","getInnerHTML","innerHTML","getOuterHTML","outerHTML","nodeValue","firstChild","parentNode","childNodes","childNodesAsList","removeChild","replaceChild","newChild","oldChild","insertAllBefore","n","insertAfter","setInnerHTML","getValue","setValue","getChecked","checked","setChecked","createTemplate","html","t","ns","createScriptTag","shadowRoot","getHost","cloneNode","getElementsByClassName","getElementsByTagName","classList","stylename","getStyle","hasStyle","attributeMap","elAttrs","attributes","attrib","hasAttribute","attribute","templateAwareRoot","createHtmlDocument","implementation","createHTMLDocument","defaultDoc","getBoundingClientRect","top","bottom","left","right","width","height","getTitle","setTitle","newTitle","elementMatches","HTMLElement","msMatchesSelector","webkitMatchesSelector","isTextNode","nodeType","Node","TEXT_NODE","COMMENT_NODE","ELEMENT_NODE","hasShadowRoot","isShadowRoot","DocumentFragment","importIntoDoc","toImport","importNode","adoptNode","getHref","href","getEventKey","keyIdentifier","fromCharCode","parseInt","getGlobalEventTarget","body","getHistory","history","getLocation","getBaseHref","resetBaseElement","getUserAgent","navigator","userAgent","setData","getData","getComputedStyle","setGlobalVar","setValueOnPath","performanceNow","performance","now","DateWrapper","toMillis","GenericBrowserDomAdapter",174,"promise_1","XHRImpl","completer","xhr","XMLHttpRequest","open","responseType","onload","response","responseText","status","reject","onerror","send","promise",175,"_exceptionHandler","ExceptionHandler","initDomAdapter","browser_adapter_1","wtf_init_1","wtfInit","testability_2","BrowserGetTestability","common_1","testability_1","key_events_1","hammer_gestures_1","shared_styles_host_2","common_dom_1","dom_tokens_2","title_1","Title","common_dom_2","ELEMENT_PROBE_PROVIDERS","ELEMENT_PROBE_PROVIDERS_PROD_MODE","inspectNativeElement","By","browser_adapter_2","tools_1","enableDebugTools","disableDebugTools","BROWSER_PROVIDERS","PLATFORM_COMMON_PROVIDERS","PLATFORM_INITIALIZER","multi","BROWSER_APP_COMMON_PROVIDERS","APPLICATION_COMMON_PROVIDERS","FORM_PROVIDERS","COMMON_PIPES","COMMON_DIRECTIVES","useFactory","deps","useClass","KeyEventsPlugin","HammerGesturesPlugin","RootRenderer","useExisting","Testability",176,"zone","outsideHandler","run","runOutsideAngular",177,194,"appComponentType","customProviders","reflectionCapabilities","reflection_capabilities_1","ReflectionCapabilities","appProviders","BROWSER_APP_PROVIDERS","platform","browser_common_2","application","angular_entrypoint_1","AngularEntrypoint","browser_common_1","xhr_impl_1","compiler_2","COMPILER_PROVIDERS",195,"Animation","callbacks","eventClearFunctions","completed","_stringPrefix","startTime","getAnimationPrefix","setup","wait","delay","computedDelay","duration","computedDuration","fromStyles","applyStyles","transitionDuration","transitionDelay","addClasses","classesToAdd","animationClasses","removeClasses","classesToRemove","toStyles","computedStyles","max","parseDurationString","getPropertyValue","addEvents","dashCaseKey","len","totalTime","getTransitionEnd","handleAnimationEvent","handleAnimationCompleted","stopPropagation","fn","maxValue","NumberWrapper","stripLetters","ms","parseFloat","floor","str",196,"css_animation_options_1","animation_1","CssAnimationOptions","setDuration","setDelay","setStyles","from","to","setFromStyles","setToStyles",197,205,"componentStrategy","genConfig","pvVisitors","ProtoViewVisitor","createChangeDefinitions","pvVariableNames","_collectNestedProtoViewsVariableNames","pvVisitor","viewIndex","ChangeDetectorDefinition","bindingRecords","eventRecords","directiveRecords","nestedPvVariableNames","pv","parentVariableNames","variableNames","allVisitors","nodeCount","childVisitor","directiveRecord","bindingRecord","BindingRecord","createForHostEvent","createForEvent","dirIndex","directiveIndex","createForHostProperty","createForElementProperty","createForHostAttribute","createForElementAttribute","createForHostClass","createForElementClass","createForHostStyle","createForElementStyle","nodeIndex","createForTextNode","directiveIndexAsNumber","DirectiveIndex","directiveMetadata","outputsArray","dirProperty","DirectiveRecord","callAfterContentInit","callAfterContentChecked","callAfterViewInit","callAfterViewChecked","callOnChanges","callDoCheck","callOnInit","callOnDestroy","createDirectiveOnChanges","createDirectiveOnInit","createDirectiveDoCheck","setter","createForDirective",206,"_createChangeDetectorGenConfig","assertionsEnabled","runtime_compiler_1","template_parser_2","template_compiler_2","runtime_compiler_2","dom_element_schema_registry_1","change_detection_2","Lexer","DomElementSchemaRegistry",207,"_HtmlTokenizer","tokenize","unexpectedCharacterErrorMsg","charCode","char","$EOF","unknownEntityErrorMsg","entitySrc","isNotWhitespace","code","isWhitespace","$TAB","$SPACE","$NBSP","isNameEnd","$GT","$SLASH","$SQ","$DQ","$EQ","isPrefixEnd","$a","$z","$A","$Z","$0","$9","isDigitEntityEnd","$SEMICOLON","isAsciiHexDigit","isNamedEntityEnd","isAsciiLetter","isTextEnd","$LT","$f","$F","compareCharCodeCaseInsensitive","code1","code2","toUpperCaseCharCode","mergeTextTokens","srcTokens","lastDstToken","dstTokens","HtmlToken","HtmlTokenError","errorMsg","tokenType","HtmlTokenizeResult","$LF","$CR","$BANG","$HASH","$AMPERSAND","$MINUS","$COLON","$LBRACKET","$RBRACKET","$X","$x","CR_OR_CRLF_REGEXP","ControlFlowError","column","_processCarriageReturns","_getLocation","_attemptCharCode","_consumeDocType","_consumeTagClose","_consumeTagOpen","_beginToken","_endToken","currentTokenStart","currentTokenType","_createError","position","charCodeAt","_attemptCharCodeCaseInsensitive","_requireCharCode","_attemptStr","chars","_attemptStrCaseInsensitive","_requireStr","_attemptCharCodeUntilFn","predicate","_requireCharCodeUntilFn","_attemptUntilChar","_readChar","decodeEntities","_decodeEntity","startPosition","_savePosition","_restorePosition","name_1","isHex","numberStart","strNum","entity","_consumeRawText","firstCharOfEnd","attemptEndRest","tagCloseStart","textStart","textToken","DOC_TYPE","_consumePrefixAndName","nameOrPrefixStart","nameStart","lowercaseTagName","savedPos","_consumeTagOpenStart","_consumeAttributeName","_consumeAttributeValue","_consumeTagOpenEnd","contentTokenType","_consumeRawTextWithTagClose","prefixAndName","quoteChar","valueStart","nbTokens",208,"_protoElements","_getProtoElement","elm","mappedPropName","attrToPropMap",209,"stripComments","_commentRe","processRules","ruleCallback","inputWithEscapedBlocks","escapeBlocks","nextBlockIndex","escapedString","_ruleRe","suffix","contentPrefix","BLOCK_PLACEHOLDER","blocks","rule","CssRule","inputParts","_curlyRe","resultParts","escapedBlocks","bracketCount","currentBlockParts","partIndex","part","CLOSE_CURLY","OPEN_CURLY","StringWithEscapedBlocks","strictStyling","hostSelector","_insertDirectives","_scopeCssText","_insertPolyfillDirectivesInCssText","_insertPolyfillRulesInCssText","_cssContentNextSelectorRe","_cssContentRuleRe","scopeSelector","unscoped","_extractUnscopedRulesFromCssText","_insertPolyfillHostInCssText","_convertColonHost","_convertColonHostContext","_convertShadowDOMSelectors","_scopeSelectors","_cssContentUnscopedRuleRe","_convertColonRule","_cssColonHostRe","_colonHostPartReplacer","_cssColonHostContextRe","_colonHostContextPartReplacer","regExp","partReplacer","_polyfillHostNoCombinator","_polyfillHost","_shadowDOMSelectorsRe","_scopeSelector","strict","_selectorNeedsScoping","_applyStrictSelectorScope","_applySelectorScope","_makeScopeMatcher","lre","rre","_selectorReSuffix","_applySimpleSelectorScope","_polyfillHostRe","replaceBy","isRe","splits","scoped","sep","_colonHostContextRe","_polyfillHostContext","_colonHostRe","_parenSuffix",210,"CONST",223,"debug_node_1","DebugDomRootRenderer","_delegate","DebugDomRenderer","nativeEl","debugEl","DebugElement","indexDebugNode","getDebugNode","DebugNode","debugParent","addChild","debugNode","debugViewRootNodes","rootNode","insertChildrenAfter","removeDebugNodeFromIndex","listeners","EventListener","properties","setDebugInfo",226,"lcInterface","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","ngOnChanges","ngDoCheck","ngOnDestroy","ngOnInit",230,235,"win","gc","Event","MouseEvent","KeyboardEvent","EventTarget","History","Location",237,"_animationPrefix","_transitionEnd","domPrefixes","transEndEventNames","WebkitTransition","MozTransition","OTransition","transition","getXHR","getDistributedNodes","resolveAndSetHref","supportsDOMEvents","supportsNativeShadowDOM","isFunction","supportsAnimation",238,"PublicTestability","testability","_testability","isStable","whenStable","findBindings","using","provider","exactMatch","findProviders","setTestabilityGetter","addToWindow","registry","getAngularTestability","elem","findInAncestors","findTestabilityInTree","getAllAngularTestabilities","testabilities","getAllTestabilities","whenAllStable","count","didWork","decrement","didWork_","frameworkStabilizers","createGrowableSize","getTestability",239,240,"application_ref_1","AngularTools","ref","profiler","AngularProfiler","appRef","injector","ApplicationRef","timeChangeDetection","config","record","profileName","isProfilerAvailable","profile","numTicks","tick","profileEnd","msPerTick","toFixed",241,"ng","common_tools_1",242,"debugElement","providerTokens",243,"_createConditionalRootRenderer","rootRenderer","_createRootRenderer","INSPECT_GLOBAL_NAME","debug_renderer_1",244,"_eventNames","pan","panstart","panmove","panend","pancancel","panleft","panright","panup","pandown","pinch","pinchstart","pinchmove","pinchend","pinchcancel","pinchin","pinchout","press","pressup","rotate","rotatestart","rotatemove","rotateend","rotatecancel","swipe","swipeleft","swiperight","swipeup","swipedown","tap","HammerGesturesPluginCommon",245,"hammer_common_1","mc","Hammer","enable","eventObj","off",246,"modifierKeys","modifierKeyGetters","alt","altKey","control","ctrlKey","metaKey","shift","shiftKey","parseEventName","parsedEvent","eventCallback","domEventName","_normalizeKey","fullKey","modifierName","getEventFullKey","modifierGetter","keyName",247,"moduleAlias","changeDetectorTypeName","def",445,"AppComponent.constructor"],"mappings":"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IACAC,KAAA,IACAC,IAAA,IACAC,IAAA,IACAC,KAAA,IACAC,MAAA,IACAC,KAAA,IACAC,KAAA,IACAC,MAAA,IACAC,IAAA,IACAC,OAAA,IACAC,OAAA,IACAC,OAAA,IACAC,KAAA,IACAC,KAAA,IACAC,IAAA,IACAC,MAAA,IACAC,MAAA,IACAC,MAAA,IACAC,OAAA,IACAC,OAAA,IACAC,OAAA,IACAC,MAAA,IACAC,MAAA,IACAC,OAAA,IACAC,OAAA,IACAC,MAAA,IACAC,KAAA,IACAC,KAAA,IACAC,QAAA,IACAC,QAAA,IACAC,MAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,KAAA,IACAC,KAAA,IACAC,KAAA,IACAC,MAAA,IACAC,KAAA,IACAC,OAAA,IACAC,OAAA,IACAC,OAAA,IACAC,OAAA,IACAC,MAAA,IACAC,MAAA,IACAC,MAAA,IACAC,GAAA,IACAC,GAAA,IACAC,KAAA,IACAC,KAAA,IACAC,OAAA,IACAC,OAAA,IACAC,OAAA,IACAC,OAAA,IACAC,MAAA,IACAC,MAAA,IACAC,MAAA,IACAC,OAAA,IACAC,OAAA,IACAC,MAAA,IACAC,MAAA,IACAC,MAAA,IACAC,KAAA,IACAC,KAAA,IACAC,OAAA,IACAC,KAAA,IACAC,KAAA,IACAC,KAAA,IACAC,MAAA,IACAC,MAAA,IACAC,OAAA,IACAC,OAAA,IACAC,KAAA,IACAC,MAAA,IACAC,KAAA,IACAC,KAAA,IACAC,MAAA,IACAC,MAAA,IACAC,GAAA,IACAC,OAAA,IACAC,OAAA,IACAC,IAAA,IACAC,IAAA,IACAC,OAAA,IACAC,MAAA,IACAC,GAAA,IACAC,KAAA,IACAC,MAAA,IACAC,MAAA,IACAC,OAAA,IACAC,MAAA,IACAC,GAAA,IACAC,GAAA,IACAC,MAAA,IACAC,KAAA,IACAC,MAAA,IACAC,GAAA,IACAC,GAAA,IACAC,IAAA,IACAC,MAAA,IACAC,KAAA,IACAC,OAAA,IACAC,OAAA,IACAC,GAAA,IACAC,GAAA,IACAC,OAAA,IACAC,OAAA,IACAC,MAAA,IACAC,MAAA,IACAC,MAAA,IACAC,MAAA,IACAC,OAAA,IACAC,OAAA,IACAC,MAAA,IACAC,MAAA,IACAC,MAAA,IACAC,QAAA,IACAC,QAAA,IACAC,MAAA,IACAC,GAAA,IACAC,KAAA,IACAC,KAAA,IACAC,OAAA,IACAC,OAAA,IACAC,OAAA,IACAC,OAAA,IACAC,OAAA,IACAC,KAAA,IACAC,KAAA,IACAC,KAAA,IACAC,OAAA,IACAC,KAAA,IACAC,IAAA,IACAC,IAAA,IACAC,GAAA,IACAC,GAAA,IACAC,IAAA,IACAC,OAAA,IACAC,MAAA,IACAC,MAAA,IACAC,MAAA,IACAC,KAAA,IACAC,KAAA,IACAC,IAAA,IACAC,IAAA,IACAC,KAAA,IACAC,MAAA,IACAC,KAAA,IACAC,MAAA,IACAC,KAAA,IACAC,KAAA,IACAC,MAAA,IACAC,MAAA,IACAC,KAAA,IACAC,IAAA,IACAC,OAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,OAAA,IACAC,MAAA,IACAC,MAAA,IACAC,OAAA,IACAC,OAAA,IACAC,KAAA,IACAC,KAAA,IACAC,IAAA,IACAC,MAAA,IACAC,MAAA,IACAC,OAAA,IACAC,IAAA,IACAC,OAAA,IACAC,IAAA,IACAC,KAAA,IACAC,IAAA,IACAC,IAAA,IACAC,KAAA,IACAC,KAAA,IACAC,KAAA,IACAC,KAAA,IACAC,MAAA,IACAC,IAAA,IACAC,IAAA,IACAC,OAAA,IACAC,MAAA,IACAC,MAAA,IACAC,SAAA,IACAC,OAAA,IACAC,MAAA,IACAC,MAAA,IACAC,MAAA,IACAC,MAAA,IACAC,MAAA,IACAC,OAAA,IACAC,OAAA,IACAC,KAAA,IACAC,KAAA,IACAC,MAAA,IACAC,MAAA,IACAC,OAAA,IACAC,OAAA,IACAC,IAAA,IACAC,MAAA,IACAC,QAAA,IACAC,QAAA,IACAC,KAAA,IACAC,KAAA,IACAC,OAAA,IACAC,GAAA,IACAC,GAAA,IACAC,OAAA,IACAC,OAAA,IACAC,IAAA,IACAC,KAAA,IACAC,KAAA,IACAC,KAAA,IACAC,KAAA,IA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","file":"app.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar browser_1 = __webpack_require__(194);\n\tvar app_component_1 = __webpack_require__(445);\n\tbrowser_1.bootstrap(app_component_1.AppComponent);\n\n\n/***/ },\n\n/***/ 11:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';var lang_1 = __webpack_require__(1);\r\n\texports.DOM = null;\r\n\tfunction setRootDomAdapter(adapter) {\r\n\t    if (lang_1.isBlank(exports.DOM)) {\r\n\t        exports.DOM = adapter;\r\n\t    }\r\n\t}\r\n\texports.setRootDomAdapter = setRootDomAdapter;\r\n\t/* tslint:disable:requireParameterType */\r\n\t/**\r\n\t * Provides DOM operations in an environment-agnostic way.\r\n\t */\r\n\tvar DomAdapter = (function () {\r\n\t    function DomAdapter() {\r\n\t    }\r\n\t    Object.defineProperty(DomAdapter.prototype, \"attrToPropMap\", {\r\n\t        /**\r\n\t         * Maps attribute names to their corresponding property names for cases\r\n\t         * where attribute name doesn't match property name.\r\n\t         */\r\n\t        get: function () { return this._attrToPropMap; },\r\n\t        set: function (value) { this._attrToPropMap = value; },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    ;\r\n\t    ;\r\n\t    return DomAdapter;\r\n\t})();\r\n\texports.DomAdapter = DomAdapter;\r\n\t//# sourceMappingURL=data:application/json;base64,\n\n/***/ },\n\n/***/ 24:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';var lang_1 = __webpack_require__(1);\r\n\tvar CAMEL_CASE_REGEXP = /([A-Z])/g;\r\n\tvar DASH_CASE_REGEXP = /-([a-z])/g;\r\n\tvar SINGLE_QUOTE_ESCAPE_STRING_RE = /'|\\\\|\\n|\\r|\\$/g;\r\n\tvar DOUBLE_QUOTE_ESCAPE_STRING_RE = /\"|\\\\|\\n|\\r|\\$/g;\r\n\texports.MODULE_SUFFIX = lang_1.IS_DART ? '.dart' : '.js';\r\n\texports.CONST_VAR = lang_1.IS_DART ? 'const' : 'var';\r\n\tfunction camelCaseToDashCase(input) {\r\n\t    return lang_1.StringWrapper.replaceAllMapped(input, CAMEL_CASE_REGEXP, function (m) { return '-' + m[1].toLowerCase(); });\r\n\t}\r\n\texports.camelCaseToDashCase = camelCaseToDashCase;\r\n\tfunction dashCaseToCamelCase(input) {\r\n\t    return lang_1.StringWrapper.replaceAllMapped(input, DASH_CASE_REGEXP, function (m) { return m[1].toUpperCase(); });\r\n\t}\r\n\texports.dashCaseToCamelCase = dashCaseToCamelCase;\r\n\tfunction escapeSingleQuoteString(input) {\r\n\t    if (lang_1.isBlank(input)) {\r\n\t        return null;\r\n\t    }\r\n\t    return \"'\" + escapeString(input, SINGLE_QUOTE_ESCAPE_STRING_RE) + \"'\";\r\n\t}\r\n\texports.escapeSingleQuoteString = escapeSingleQuoteString;\r\n\tfunction escapeDoubleQuoteString(input) {\r\n\t    if (lang_1.isBlank(input)) {\r\n\t        return null;\r\n\t    }\r\n\t    return \"\\\"\" + escapeString(input, DOUBLE_QUOTE_ESCAPE_STRING_RE) + \"\\\"\";\r\n\t}\r\n\texports.escapeDoubleQuoteString = escapeDoubleQuoteString;\r\n\tfunction escapeString(input, re) {\r\n\t    return lang_1.StringWrapper.replaceAllMapped(input, re, function (match) {\r\n\t        if (match[0] == '$') {\r\n\t            return lang_1.IS_DART ? '\\\\$' : '$';\r\n\t        }\r\n\t        else if (match[0] == '\\n') {\r\n\t            return '\\\\n';\r\n\t        }\r\n\t        else if (match[0] == '\\r') {\r\n\t            return '\\\\r';\r\n\t        }\r\n\t        else {\r\n\t            return \"\\\\\" + match[0];\r\n\t        }\r\n\t    });\r\n\t}\r\n\tfunction codeGenExportVariable(name) {\r\n\t    if (lang_1.IS_DART) {\r\n\t        return \"const \" + name + \" = \";\r\n\t    }\r\n\t    else {\r\n\t        return \"var \" + name + \" = exports['\" + name + \"'] = \";\r\n\t    }\r\n\t}\r\n\texports.codeGenExportVariable = codeGenExportVariable;\r\n\tfunction codeGenConstConstructorCall(name) {\r\n\t    if (lang_1.IS_DART) {\r\n\t        return \"const \" + name;\r\n\t    }\r\n\t    else {\r\n\t        return \"new \" + name;\r\n\t    }\r\n\t}\r\n\texports.codeGenConstConstructorCall = codeGenConstConstructorCall;\r\n\tfunction codeGenValueFn(params, value, fnName) {\r\n\t    if (fnName === void 0) { fnName = ''; }\r\n\t    if (lang_1.IS_DART) {\r\n\t        return codeGenFnHeader(params, fnName) + \" => \" + value;\r\n\t    }\r\n\t    else {\r\n\t        return codeGenFnHeader(params, fnName) + \" { return \" + value + \"; }\";\r\n\t    }\r\n\t}\r\n\texports.codeGenValueFn = codeGenValueFn;\r\n\tfunction codeGenFnHeader(params, fnName) {\r\n\t    if (fnName === void 0) { fnName = ''; }\r\n\t    if (lang_1.IS_DART) {\r\n\t        return fnName + \"(\" + params.join(',') + \")\";\r\n\t    }\r\n\t    else {\r\n\t        return \"function \" + fnName + \"(\" + params.join(',') + \")\";\r\n\t    }\r\n\t}\r\n\texports.codeGenFnHeader = codeGenFnHeader;\r\n\tfunction codeGenToString(expr) {\r\n\t    if (lang_1.IS_DART) {\r\n\t        return \"'${\" + expr + \"}'\";\r\n\t    }\r\n\t    else {\r\n\t        // JS automatically converts to string...\r\n\t        return expr;\r\n\t    }\r\n\t}\r\n\texports.codeGenToString = codeGenToString;\r\n\tfunction splitAtColon(input, defaultValues) {\r\n\t    var parts = lang_1.StringWrapper.split(input.trim(), /\\s*:\\s*/g);\r\n\t    if (parts.length > 1) {\r\n\t        return parts;\r\n\t    }\r\n\t    else {\r\n\t        return defaultValues;\r\n\t    }\r\n\t}\r\n\texports.splitAtColon = splitAtColon;\r\n\tvar Statement = (function () {\r\n\t    function Statement(statement) {\r\n\t        this.statement = statement;\r\n\t    }\r\n\t    return Statement;\r\n\t})();\r\n\texports.Statement = Statement;\r\n\tvar Expression = (function () {\r\n\t    function Expression(expression, isArray) {\r\n\t        if (isArray === void 0) { isArray = false; }\r\n\t        this.expression = expression;\r\n\t        this.isArray = isArray;\r\n\t    }\r\n\t    return Expression;\r\n\t})();\r\n\texports.Expression = Expression;\r\n\tfunction escapeValue(value) {\r\n\t    if (value instanceof Expression) {\r\n\t        return value.expression;\r\n\t    }\r\n\t    else if (lang_1.isString(value)) {\r\n\t        return escapeSingleQuoteString(value);\r\n\t    }\r\n\t    else if (lang_1.isBlank(value)) {\r\n\t        return 'null';\r\n\t    }\r\n\t    else {\r\n\t        return \"\" + value;\r\n\t    }\r\n\t}\r\n\texports.escapeValue = escapeValue;\r\n\tfunction codeGenArray(data) {\r\n\t    return \"[\" + data.map(escapeValue).join(',') + \"]\";\r\n\t}\r\n\texports.codeGenArray = codeGenArray;\r\n\tfunction codeGenFlatArray(values) {\r\n\t    var result = '([';\r\n\t    var isFirstArrayEntry = true;\r\n\t    var concatFn = lang_1.IS_DART ? '.addAll' : 'concat';\r\n\t    for (var i = 0; i < values.length; i++) {\r\n\t        var value = values[i];\r\n\t        if (value instanceof Expression && value.isArray) {\r\n\t            result += \"]).\" + concatFn + \"(\" + value.expression + \").\" + concatFn + \"([\";\r\n\t            isFirstArrayEntry = true;\r\n\t        }\r\n\t        else {\r\n\t            if (!isFirstArrayEntry) {\r\n\t                result += ',';\r\n\t            }\r\n\t            isFirstArrayEntry = false;\r\n\t            result += escapeValue(value);\r\n\t        }\r\n\t    }\r\n\t    result += '])';\r\n\t    return result;\r\n\t}\r\n\texports.codeGenFlatArray = codeGenFlatArray;\r\n\tfunction codeGenStringMap(keyValueArray) {\r\n\t    return \"{\" + keyValueArray.map(codeGenKeyValue).join(',') + \"}\";\r\n\t}\r\n\texports.codeGenStringMap = codeGenStringMap;\r\n\tfunction codeGenKeyValue(keyValue) {\r\n\t    return escapeValue(keyValue[0]) + \":\" + escapeValue(keyValue[1]);\r\n\t}\r\n\tfunction addAll(source, target) {\r\n\t    for (var i = 0; i < source.length; i++) {\r\n\t        target.push(source[i]);\r\n\t    }\r\n\t}\r\n\texports.addAll = addAll;\r\n\tfunction flattenArray(source, target) {\r\n\t    if (lang_1.isPresent(source)) {\r\n\t        for (var i = 0; i < source.length; i++) {\r\n\t            var item = source[i];\r\n\t            if (lang_1.isArray(item)) {\r\n\t                flattenArray(item, target);\r\n\t            }\r\n\t            else {\r\n\t                target.push(item);\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t    return target;\r\n\t}\r\n\texports.flattenArray = flattenArray;\r\n\t//# sourceMappingURL=data:application/json;base64,\n\n/***/ },\n\n/***/ 31:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';var lang_1 = __webpack_require__(1);\r\n\tvar MODULE_REGEXP = /#MODULE\\[([^\\]]*)\\]/g;\r\n\tfunction moduleRef(moduleUrl) {\r\n\t    return \"#MODULE[\" + moduleUrl + \"]\";\r\n\t}\r\n\texports.moduleRef = moduleRef;\r\n\t/**\r\n\t * Represents generated source code with module references. Internal to the Angular compiler.\r\n\t */\r\n\tvar SourceModule = (function () {\r\n\t    function SourceModule(moduleUrl, sourceWithModuleRefs) {\r\n\t        this.moduleUrl = moduleUrl;\r\n\t        this.sourceWithModuleRefs = sourceWithModuleRefs;\r\n\t    }\r\n\t    SourceModule.getSourceWithoutImports = function (sourceWithModuleRefs) {\r\n\t        return lang_1.StringWrapper.replaceAllMapped(sourceWithModuleRefs, MODULE_REGEXP, function (match) { return ''; });\r\n\t    };\r\n\t    SourceModule.prototype.getSourceWithImports = function () {\r\n\t        var _this = this;\r\n\t        var moduleAliases = {};\r\n\t        var imports = [];\r\n\t        var newSource = lang_1.StringWrapper.replaceAllMapped(this.sourceWithModuleRefs, MODULE_REGEXP, function (match) {\r\n\t            var moduleUrl = match[1];\r\n\t            var alias = moduleAliases[moduleUrl];\r\n\t            if (lang_1.isBlank(alias)) {\r\n\t                if (moduleUrl == _this.moduleUrl) {\r\n\t                    alias = '';\r\n\t                }\r\n\t                else {\r\n\t                    alias = \"import\" + imports.length;\r\n\t                    imports.push([moduleUrl, alias]);\r\n\t                }\r\n\t                moduleAliases[moduleUrl] = alias;\r\n\t            }\r\n\t            return alias.length > 0 ? alias + \".\" : '';\r\n\t        });\r\n\t        return new SourceWithImports(newSource, imports);\r\n\t    };\r\n\t    return SourceModule;\r\n\t})();\r\n\texports.SourceModule = SourceModule;\r\n\tvar SourceExpression = (function () {\r\n\t    function SourceExpression(declarations, expression) {\r\n\t        this.declarations = declarations;\r\n\t        this.expression = expression;\r\n\t    }\r\n\t    return SourceExpression;\r\n\t})();\r\n\texports.SourceExpression = SourceExpression;\r\n\tvar SourceExpressions = (function () {\r\n\t    function SourceExpressions(declarations, expressions) {\r\n\t        this.declarations = declarations;\r\n\t        this.expressions = expressions;\r\n\t    }\r\n\t    return SourceExpressions;\r\n\t})();\r\n\texports.SourceExpressions = SourceExpressions;\r\n\t/**\r\n\t * Represents generated source code with imports. Internal to the Angular compiler.\r\n\t */\r\n\tvar SourceWithImports = (function () {\r\n\t    function SourceWithImports(source, imports) {\r\n\t        this.source = source;\r\n\t        this.imports = imports;\r\n\t    }\r\n\t    return SourceWithImports;\r\n\t})();\r\n\texports.SourceWithImports = SourceWithImports;\r\n\t//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic291cmNlX21vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImFuZ3VsYXIyL3NyYy9jb21waWxlci9zb3VyY2VfbW9kdWxlLnRzIl0sIm5hbWVzIjpbIm1vZHVsZVJlZiIsIlNvdXJjZU1vZHVsZSIsIlNvdXJjZU1vZHVsZS5jb25zdHJ1Y3RvciIsIlNvdXJjZU1vZHVsZS5nZXRTb3VyY2VXaXRob3V0SW1wb3J0cyIsIlNvdXJjZU1vZHVsZS5nZXRTb3VyY2VXaXRoSW1wb3J0cyIsIlNvdXJjZUV4cHJlc3Npb24iLCJTb3VyY2VFeHByZXNzaW9uLmNvbnN0cnVjdG9yIiwiU291cmNlRXhwcmVzc2lvbnMiLCJTb3VyY2VFeHByZXNzaW9ucy5jb25zdHJ1Y3RvciIsIlNvdXJjZVdpdGhJbXBvcnRzIiwiU291cmNlV2l0aEltcG9ydHMuY29uc3RydWN0b3IiXSwibWFwcGluZ3MiOiJBQUFBLHFCQUFxQywwQkFBMEIsQ0FBQyxDQUFBO0FBRWhFLElBQUksYUFBYSxHQUFHLHNCQUFzQixDQUFDO0FBRTNDLG1CQUEwQixTQUFTO0lBQ2pDQSxNQUFNQSxDQUFDQSxhQUFXQSxTQUFTQSxNQUFHQSxDQUFDQTtBQUNqQ0EsQ0FBQ0E7QUFGZSxpQkFBUyxZQUV4QixDQUFBO0FBRUQ7O0dBRUc7QUFDSDtJQUtFQyxzQkFBbUJBLFNBQWlCQSxFQUFTQSxvQkFBNEJBO1FBQXREQyxjQUFTQSxHQUFUQSxTQUFTQSxDQUFRQTtRQUFTQSx5QkFBb0JBLEdBQXBCQSxvQkFBb0JBLENBQVFBO0lBQUdBLENBQUNBO0lBSnRFRCxvQ0FBdUJBLEdBQTlCQSxVQUErQkEsb0JBQTRCQTtRQUN6REUsTUFBTUEsQ0FBQ0Esb0JBQWFBLENBQUNBLGdCQUFnQkEsQ0FBQ0Esb0JBQW9CQSxFQUFFQSxhQUFhQSxFQUFFQSxVQUFDQSxLQUFLQSxJQUFLQSxPQUFBQSxFQUFFQSxFQUFGQSxDQUFFQSxDQUFDQSxDQUFDQTtJQUM1RkEsQ0FBQ0E7SUFJREYsMkNBQW9CQSxHQUFwQkE7UUFBQUcsaUJBbUJDQTtRQWxCQ0EsSUFBSUEsYUFBYUEsR0FBR0EsRUFBRUEsQ0FBQ0E7UUFDdkJBLElBQUlBLE9BQU9BLEdBQWVBLEVBQUVBLENBQUNBO1FBQzdCQSxJQUFJQSxTQUFTQSxHQUNUQSxvQkFBYUEsQ0FBQ0EsZ0JBQWdCQSxDQUFDQSxJQUFJQSxDQUFDQSxvQkFBb0JBLEVBQUVBLGFBQWFBLEVBQUVBLFVBQUNBLEtBQUtBO1lBQzdFQSxJQUFJQSxTQUFTQSxHQUFHQSxLQUFLQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQTtZQUN6QkEsSUFBSUEsS0FBS0EsR0FBR0EsYUFBYUEsQ0FBQ0EsU0FBU0EsQ0FBQ0EsQ0FBQ0E7WUFDckNBLEVBQUVBLENBQUNBLENBQUNBLGNBQU9BLENBQUNBLEtBQUtBLENBQUNBLENBQUNBLENBQUNBLENBQUNBO2dCQUNuQkEsRUFBRUEsQ0FBQ0EsQ0FBQ0EsU0FBU0EsSUFBSUEsS0FBSUEsQ0FBQ0EsU0FBU0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7b0JBQ2hDQSxLQUFLQSxHQUFHQSxFQUFFQSxDQUFDQTtnQkFDYkEsQ0FBQ0E7Z0JBQUNBLElBQUlBLENBQUNBLENBQUNBO29CQUNOQSxLQUFLQSxHQUFHQSxXQUFTQSxPQUFPQSxDQUFDQSxNQUFRQSxDQUFDQTtvQkFDbENBLE9BQU9BLENBQUNBLElBQUlBLENBQUNBLENBQUNBLFNBQVNBLEVBQUVBLEtBQUtBLENBQUNBLENBQUNBLENBQUNBO2dCQUNuQ0EsQ0FBQ0E7Z0JBQ0RBLGFBQWFBLENBQUNBLFNBQVNBLENBQUNBLEdBQUdBLEtBQUtBLENBQUNBO1lBQ25DQSxDQUFDQTtZQUNEQSxNQUFNQSxDQUFDQSxLQUFLQSxDQUFDQSxNQUFNQSxHQUFHQSxDQUFDQSxHQUFNQSxLQUFLQSxNQUFHQSxHQUFHQSxFQUFFQSxDQUFDQTtRQUM3Q0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7UUFDUEEsTUFBTUEsQ0FBQ0EsSUFBSUEsaUJBQWlCQSxDQUFDQSxTQUFTQSxFQUFFQSxPQUFPQSxDQUFDQSxDQUFDQTtJQUNuREEsQ0FBQ0E7SUFDSEgsbUJBQUNBO0FBQURBLENBQUNBLEFBM0JELElBMkJDO0FBM0JZLG9CQUFZLGVBMkJ4QixDQUFBO0FBRUQ7SUFDRUksMEJBQW1CQSxZQUFzQkEsRUFBU0EsVUFBa0JBO1FBQWpEQyxpQkFBWUEsR0FBWkEsWUFBWUEsQ0FBVUE7UUFBU0EsZUFBVUEsR0FBVkEsVUFBVUEsQ0FBUUE7SUFBR0EsQ0FBQ0E7SUFDMUVELHVCQUFDQTtBQUFEQSxDQUFDQSxBQUZELElBRUM7QUFGWSx3QkFBZ0IsbUJBRTVCLENBQUE7QUFFRDtJQUNFRSwyQkFBbUJBLFlBQXNCQSxFQUFTQSxXQUFxQkE7UUFBcERDLGlCQUFZQSxHQUFaQSxZQUFZQSxDQUFVQTtRQUFTQSxnQkFBV0EsR0FBWEEsV0FBV0EsQ0FBVUE7SUFBR0EsQ0FBQ0E7SUFDN0VELHdCQUFDQTtBQUFEQSxDQUFDQSxBQUZELElBRUM7QUFGWSx5QkFBaUIsb0JBRTdCLENBQUE7QUFFRDs7R0FFRztBQUNIO0lBQ0VFLDJCQUFtQkEsTUFBY0EsRUFBU0EsT0FBbUJBO1FBQTFDQyxXQUFNQSxHQUFOQSxNQUFNQSxDQUFRQTtRQUFTQSxZQUFPQSxHQUFQQSxPQUFPQSxDQUFZQTtJQUFHQSxDQUFDQTtJQUNuRUQsd0JBQUNBO0FBQURBLENBQUNBLEFBRkQsSUFFQztBQUZZLHlCQUFpQixvQkFFN0IsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7U3RyaW5nV3JhcHBlciwgaXNCbGFua30gZnJvbSAnYW5ndWxhcjIvc3JjL2ZhY2FkZS9sYW5nJztcblxudmFyIE1PRFVMRV9SRUdFWFAgPSAvI01PRFVMRVxcWyhbXlxcXV0qKVxcXS9nO1xuXG5leHBvcnQgZnVuY3Rpb24gbW9kdWxlUmVmKG1vZHVsZVVybCk6IHN0cmluZyB7XG4gIHJldHVybiBgI01PRFVMRVske21vZHVsZVVybH1dYDtcbn1cblxuLyoqXG4gKiBSZXByZXNlbnRzIGdlbmVyYXRlZCBzb3VyY2UgY29kZSB3aXRoIG1vZHVsZSByZWZlcmVuY2VzLiBJbnRlcm5hbCB0byB0aGUgQW5ndWxhciBjb21waWxlci5cbiAqL1xuZXhwb3J0IGNsYXNzIFNvdXJjZU1vZHVsZSB7XG4gIHN0YXRpYyBnZXRTb3VyY2VXaXRob3V0SW1wb3J0cyhzb3VyY2VXaXRoTW9kdWxlUmVmczogc3RyaW5nKTogc3RyaW5nIHtcbiAgICByZXR1cm4gU3RyaW5nV3JhcHBlci5yZXBsYWNlQWxsTWFwcGVkKHNvdXJjZVdpdGhNb2R1bGVSZWZzLCBNT0RVTEVfUkVHRVhQLCAobWF0Y2gpID0+ICcnKTtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBtb2R1bGVVcmw6IHN0cmluZywgcHVibGljIHNvdXJjZVdpdGhNb2R1bGVSZWZzOiBzdHJpbmcpIHt9XG5cbiAgZ2V0U291cmNlV2l0aEltcG9ydHMoKTogU291cmNlV2l0aEltcG9ydHMge1xuICAgIHZhciBtb2R1bGVBbGlhc2VzID0ge307XG4gICAgdmFyIGltcG9ydHM6IHN0cmluZ1tdW10gPSBbXTtcbiAgICB2YXIgbmV3U291cmNlID1cbiAgICAgICAgU3RyaW5nV3JhcHBlci5yZXBsYWNlQWxsTWFwcGVkKHRoaXMuc291cmNlV2l0aE1vZHVsZVJlZnMsIE1PRFVMRV9SRUdFWFAsIChtYXRjaCkgPT4ge1xuICAgICAgICAgIHZhciBtb2R1bGVVcmwgPSBtYXRjaFsxXTtcbiAgICAgICAgICB2YXIgYWxpYXMgPSBtb2R1bGVBbGlhc2VzW21vZHVsZVVybF07XG4gICAgICAgICAgaWYgKGlzQmxhbmsoYWxpYXMpKSB7XG4gICAgICAgICAgICBpZiAobW9kdWxlVXJsID09IHRoaXMubW9kdWxlVXJsKSB7XG4gICAgICAgICAgICAgIGFsaWFzID0gJyc7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBhbGlhcyA9IGBpbXBvcnQke2ltcG9ydHMubGVuZ3RofWA7XG4gICAgICAgICAgICAgIGltcG9ydHMucHVzaChbbW9kdWxlVXJsLCBhbGlhc10pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbW9kdWxlQWxpYXNlc1ttb2R1bGVVcmxdID0gYWxpYXM7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiBhbGlhcy5sZW5ndGggPiAwID8gYCR7YWxpYXN9LmAgOiAnJztcbiAgICAgICAgfSk7XG4gICAgcmV0dXJuIG5ldyBTb3VyY2VXaXRoSW1wb3J0cyhuZXdTb3VyY2UsIGltcG9ydHMpO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBTb3VyY2VFeHByZXNzaW9uIHtcbiAgY29uc3RydWN0b3IocHVibGljIGRlY2xhcmF0aW9uczogc3RyaW5nW10sIHB1YmxpYyBleHByZXNzaW9uOiBzdHJpbmcpIHt9XG59XG5cbmV4cG9ydCBjbGFzcyBTb3VyY2VFeHByZXNzaW9ucyB7XG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBkZWNsYXJhdGlvbnM6IHN0cmluZ1tdLCBwdWJsaWMgZXhwcmVzc2lvbnM6IHN0cmluZ1tdKSB7fVxufVxuXG4vKipcbiAqIFJlcHJlc2VudHMgZ2VuZXJhdGVkIHNvdXJjZSBjb2RlIHdpdGggaW1wb3J0cy4gSW50ZXJuYWwgdG8gdGhlIEFuZ3VsYXIgY29tcGlsZXIuXG4gKi9cbmV4cG9ydCBjbGFzcyBTb3VyY2VXaXRoSW1wb3J0cyB7XG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBzb3VyY2U6IHN0cmluZywgcHVibGljIGltcG9ydHM6IHN0cmluZ1tdW10pIHt9XG59XG4iXX0=\n\n/***/ },\n\n/***/ 32:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';var lang_1 = __webpack_require__(1);\r\n\t/**\r\n\t * A segment of text within the template.\r\n\t */\r\n\tvar TextAst = (function () {\r\n\t    function TextAst(value, ngContentIndex, sourceSpan) {\r\n\t        this.value = value;\r\n\t        this.ngContentIndex = ngContentIndex;\r\n\t        this.sourceSpan = sourceSpan;\r\n\t    }\r\n\t    TextAst.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\r\n\t    return TextAst;\r\n\t})();\r\n\texports.TextAst = TextAst;\r\n\t/**\r\n\t * A bound expression within the text of a template.\r\n\t */\r\n\tvar BoundTextAst = (function () {\r\n\t    function BoundTextAst(value, ngContentIndex, sourceSpan) {\r\n\t        this.value = value;\r\n\t        this.ngContentIndex = ngContentIndex;\r\n\t        this.sourceSpan = sourceSpan;\r\n\t    }\r\n\t    BoundTextAst.prototype.visit = function (visitor, context) {\r\n\t        return visitor.visitBoundText(this, context);\r\n\t    };\r\n\t    return BoundTextAst;\r\n\t})();\r\n\texports.BoundTextAst = BoundTextAst;\r\n\t/**\r\n\t * A plain attribute on an element.\r\n\t */\r\n\tvar AttrAst = (function () {\r\n\t    function AttrAst(name, value, sourceSpan) {\r\n\t        this.name = name;\r\n\t        this.value = value;\r\n\t        this.sourceSpan = sourceSpan;\r\n\t    }\r\n\t    AttrAst.prototype.visit = function (visitor, context) { return visitor.visitAttr(this, context); };\r\n\t    return AttrAst;\r\n\t})();\r\n\texports.AttrAst = AttrAst;\r\n\t/**\r\n\t * A binding for an element property (e.g. `[property]=\"expression\"`).\r\n\t */\r\n\tvar BoundElementPropertyAst = (function () {\r\n\t    function BoundElementPropertyAst(name, type, value, unit, sourceSpan) {\r\n\t        this.name = name;\r\n\t        this.type = type;\r\n\t        this.value = value;\r\n\t        this.unit = unit;\r\n\t        this.sourceSpan = sourceSpan;\r\n\t    }\r\n\t    BoundElementPropertyAst.prototype.visit = function (visitor, context) {\r\n\t        return visitor.visitElementProperty(this, context);\r\n\t    };\r\n\t    return BoundElementPropertyAst;\r\n\t})();\r\n\texports.BoundElementPropertyAst = BoundElementPropertyAst;\r\n\t/**\r\n\t * A binding for an element event (e.g. `(event)=\"handler()\"`).\r\n\t */\r\n\tvar BoundEventAst = (function () {\r\n\t    function BoundEventAst(name, target, handler, sourceSpan) {\r\n\t        this.name = name;\r\n\t        this.target = target;\r\n\t        this.handler = handler;\r\n\t        this.sourceSpan = sourceSpan;\r\n\t    }\r\n\t    BoundEventAst.prototype.visit = function (visitor, context) {\r\n\t        return visitor.visitEvent(this, context);\r\n\t    };\r\n\t    Object.defineProperty(BoundEventAst.prototype, \"fullName\", {\r\n\t        get: function () {\r\n\t            if (lang_1.isPresent(this.target)) {\r\n\t                return this.target + \":\" + this.name;\r\n\t            }\r\n\t            else {\r\n\t                return this.name;\r\n\t            }\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    return BoundEventAst;\r\n\t})();\r\n\texports.BoundEventAst = BoundEventAst;\r\n\t/**\r\n\t * A variable declaration on an element (e.g. `#var=\"expression\"`).\r\n\t */\r\n\tvar VariableAst = (function () {\r\n\t    function VariableAst(name, value, sourceSpan) {\r\n\t        this.name = name;\r\n\t        this.value = value;\r\n\t        this.sourceSpan = sourceSpan;\r\n\t    }\r\n\t    VariableAst.prototype.visit = function (visitor, context) {\r\n\t        return visitor.visitVariable(this, context);\r\n\t    };\r\n\t    return VariableAst;\r\n\t})();\r\n\texports.VariableAst = VariableAst;\r\n\t/**\r\n\t * An element declaration in a template.\r\n\t */\r\n\tvar ElementAst = (function () {\r\n\t    function ElementAst(name, attrs, inputs, outputs, exportAsVars, directives, children, ngContentIndex, sourceSpan) {\r\n\t        this.name = name;\r\n\t        this.attrs = attrs;\r\n\t        this.inputs = inputs;\r\n\t        this.outputs = outputs;\r\n\t        this.exportAsVars = exportAsVars;\r\n\t        this.directives = directives;\r\n\t        this.children = children;\r\n\t        this.ngContentIndex = ngContentIndex;\r\n\t        this.sourceSpan = sourceSpan;\r\n\t    }\r\n\t    ElementAst.prototype.visit = function (visitor, context) {\r\n\t        return visitor.visitElement(this, context);\r\n\t    };\r\n\t    /**\r\n\t     * Whether the element has any active bindings (inputs, outputs, vars, or directives).\r\n\t     */\r\n\t    ElementAst.prototype.isBound = function () {\r\n\t        return (this.inputs.length > 0 || this.outputs.length > 0 || this.exportAsVars.length > 0 ||\r\n\t            this.directives.length > 0);\r\n\t    };\r\n\t    /**\r\n\t     * Get the component associated with this element, if any.\r\n\t     */\r\n\t    ElementAst.prototype.getComponent = function () {\r\n\t        return this.directives.length > 0 && this.directives[0].directive.isComponent ?\r\n\t            this.directives[0].directive :\r\n\t            null;\r\n\t    };\r\n\t    return ElementAst;\r\n\t})();\r\n\texports.ElementAst = ElementAst;\r\n\t/**\r\n\t * A `<template>` element included in an Angular template.\r\n\t */\r\n\tvar EmbeddedTemplateAst = (function () {\r\n\t    function EmbeddedTemplateAst(attrs, outputs, vars, directives, children, ngContentIndex, sourceSpan) {\r\n\t        this.attrs = attrs;\r\n\t        this.outputs = outputs;\r\n\t        this.vars = vars;\r\n\t        this.directives = directives;\r\n\t        this.children = children;\r\n\t        this.ngContentIndex = ngContentIndex;\r\n\t        this.sourceSpan = sourceSpan;\r\n\t    }\r\n\t    EmbeddedTemplateAst.prototype.visit = function (visitor, context) {\r\n\t        return visitor.visitEmbeddedTemplate(this, context);\r\n\t    };\r\n\t    return EmbeddedTemplateAst;\r\n\t})();\r\n\texports.EmbeddedTemplateAst = EmbeddedTemplateAst;\r\n\t/**\r\n\t * A directive property with a bound value (e.g. `*ngIf=\"condition\").\r\n\t */\r\n\tvar BoundDirectivePropertyAst = (function () {\r\n\t    function BoundDirectivePropertyAst(directiveName, templateName, value, sourceSpan) {\r\n\t        this.directiveName = directiveName;\r\n\t        this.templateName = templateName;\r\n\t        this.value = value;\r\n\t        this.sourceSpan = sourceSpan;\r\n\t    }\r\n\t    BoundDirectivePropertyAst.prototype.visit = function (visitor, context) {\r\n\t        return visitor.visitDirectiveProperty(this, context);\r\n\t    };\r\n\t    return BoundDirectivePropertyAst;\r\n\t})();\r\n\texports.BoundDirectivePropertyAst = BoundDirectivePropertyAst;\r\n\t/**\r\n\t * A directive declared on an element.\r\n\t */\r\n\tvar DirectiveAst = (function () {\r\n\t    function DirectiveAst(directive, inputs, hostProperties, hostEvents, exportAsVars, sourceSpan) {\r\n\t        this.directive = directive;\r\n\t        this.inputs = inputs;\r\n\t        this.hostProperties = hostProperties;\r\n\t        this.hostEvents = hostEvents;\r\n\t        this.exportAsVars = exportAsVars;\r\n\t        this.sourceSpan = sourceSpan;\r\n\t    }\r\n\t    DirectiveAst.prototype.visit = function (visitor, context) {\r\n\t        return visitor.visitDirective(this, context);\r\n\t    };\r\n\t    return DirectiveAst;\r\n\t})();\r\n\texports.DirectiveAst = DirectiveAst;\r\n\t/**\r\n\t * Position where content is to be projected (instance of `<ng-content>` in a template).\r\n\t */\r\n\tvar NgContentAst = (function () {\r\n\t    function NgContentAst(index, ngContentIndex, sourceSpan) {\r\n\t        this.index = index;\r\n\t        this.ngContentIndex = ngContentIndex;\r\n\t        this.sourceSpan = sourceSpan;\r\n\t    }\r\n\t    NgContentAst.prototype.visit = function (visitor, context) {\r\n\t        return visitor.visitNgContent(this, context);\r\n\t    };\r\n\t    return NgContentAst;\r\n\t})();\r\n\texports.NgContentAst = NgContentAst;\r\n\t/**\r\n\t * Enumeration of types of property bindings.\r\n\t */\r\n\t(function (PropertyBindingType) {\r\n\t    /**\r\n\t     * A normal binding to a property (e.g. `[property]=\"expression\"`).\r\n\t     */\r\n\t    PropertyBindingType[PropertyBindingType[\"Property\"] = 0] = \"Property\";\r\n\t    /**\r\n\t     * A binding to an element attribute (e.g. `[attr.name]=\"expression\"`).\r\n\t     */\r\n\t    PropertyBindingType[PropertyBindingType[\"Attribute\"] = 1] = \"Attribute\";\r\n\t    /**\r\n\t     * A binding to a CSS class (e.g. `[class.name]=\"condition\"`).\r\n\t     */\r\n\t    PropertyBindingType[PropertyBindingType[\"Class\"] = 2] = \"Class\";\r\n\t    /**\r\n\t     * A binding to a style rule (e.g. `[style.rule]=\"expression\"`).\r\n\t     */\r\n\t    PropertyBindingType[PropertyBindingType[\"Style\"] = 3] = \"Style\";\r\n\t})(exports.PropertyBindingType || (exports.PropertyBindingType = {}));\r\n\tvar PropertyBindingType = exports.PropertyBindingType;\r\n\t/**\r\n\t * Visit every node in a list of {@link TemplateAst}s with the given {@link TemplateAstVisitor}.\r\n\t */\r\n\tfunction templateVisitAll(visitor, asts, context) {\r\n\t    if (context === void 0) { context = null; }\r\n\t    var result = [];\r\n\t    asts.forEach(function (ast) {\r\n\t        var astResult = ast.visit(visitor, context);\r\n\t        if (lang_1.isPresent(astResult)) {\r\n\t            result.push(astResult);\r\n\t        }\r\n\t    });\r\n\t    return result;\r\n\t}\r\n\texports.templateVisitAll = templateVisitAll;\r\n\t//# sourceMappingURL=data:application/json;base64,\n\n/***/ },\n\n/***/ 36:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n\t    return function (target, key) { decorator(target, key, paramIndex); }\r\n\t};\r\n\tvar lang_1 = __webpack_require__(1);\r\n\tvar exceptions_1 = __webpack_require__(5);\r\n\tvar di_1 = __webpack_require__(6);\r\n\tvar ng_zone_1 = __webpack_require__(70);\r\n\tvar collection_1 = __webpack_require__(3);\r\n\texports.EVENT_MANAGER_PLUGINS = lang_1.CONST_EXPR(new di_1.OpaqueToken(\"EventManagerPlugins\"));\r\n\tvar EventManager = (function () {\r\n\t    function EventManager(plugins, _zone) {\r\n\t        var _this = this;\r\n\t        this._zone = _zone;\r\n\t        plugins.forEach(function (p) { return p.manager = _this; });\r\n\t        this._plugins = collection_1.ListWrapper.reversed(plugins);\r\n\t    }\r\n\t    EventManager.prototype.addEventListener = function (element, eventName, handler) {\r\n\t        var plugin = this._findPluginFor(eventName);\r\n\t        return plugin.addEventListener(element, eventName, handler);\r\n\t    };\r\n\t    EventManager.prototype.addGlobalEventListener = function (target, eventName, handler) {\r\n\t        var plugin = this._findPluginFor(eventName);\r\n\t        return plugin.addGlobalEventListener(target, eventName, handler);\r\n\t    };\r\n\t    EventManager.prototype.getZone = function () { return this._zone; };\r\n\t    /** @internal */\r\n\t    EventManager.prototype._findPluginFor = function (eventName) {\r\n\t        var plugins = this._plugins;\r\n\t        for (var i = 0; i < plugins.length; i++) {\r\n\t            var plugin = plugins[i];\r\n\t            if (plugin.supports(eventName)) {\r\n\t                return plugin;\r\n\t            }\r\n\t        }\r\n\t        throw new exceptions_1.BaseException(\"No event manager plugin found for event \" + eventName);\r\n\t    };\r\n\t    EventManager = __decorate([\r\n\t        di_1.Injectable(),\r\n\t        __param(0, di_1.Inject(exports.EVENT_MANAGER_PLUGINS)), \r\n\t        __metadata('design:paramtypes', [Array, ng_zone_1.NgZone])\r\n\t    ], EventManager);\r\n\t    return EventManager;\r\n\t})();\r\n\texports.EventManager = EventManager;\r\n\tvar EventManagerPlugin = (function () {\r\n\t    function EventManagerPlugin() {\r\n\t    }\r\n\t    // That is equivalent to having supporting $event.target\r\n\t    EventManagerPlugin.prototype.supports = function (eventName) { return false; };\r\n\t    EventManagerPlugin.prototype.addEventListener = function (element, eventName, handler) {\r\n\t        throw \"not implemented\";\r\n\t    };\r\n\t    EventManagerPlugin.prototype.addGlobalEventListener = function (element, eventName, handler) {\r\n\t        throw \"not implemented\";\r\n\t    };\r\n\t    return EventManagerPlugin;\r\n\t})();\r\n\texports.EventManagerPlugin = EventManagerPlugin;\r\n\t//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXZlbnRfbWFuYWdlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImFuZ3VsYXIyL3NyYy9wbGF0Zm9ybS9kb20vZXZlbnRzL2V2ZW50X21hbmFnZXIudHMiXSwibmFtZXMiOlsiRXZlbnRNYW5hZ2VyIiwiRXZlbnRNYW5hZ2VyLmNvbnN0cnVjdG9yIiwiRXZlbnRNYW5hZ2VyLmFkZEV2ZW50TGlzdGVuZXIiLCJFdmVudE1hbmFnZXIuYWRkR2xvYmFsRXZlbnRMaXN0ZW5lciIsIkV2ZW50TWFuYWdlci5nZXRab25lIiwiRXZlbnRNYW5hZ2VyLl9maW5kUGx1Z2luRm9yIiwiRXZlbnRNYW5hZ2VyUGx1Z2luIiwiRXZlbnRNYW5hZ2VyUGx1Z2luLmNvbnN0cnVjdG9yIiwiRXZlbnRNYW5hZ2VyUGx1Z2luLnN1cHBvcnRzIiwiRXZlbnRNYW5hZ2VyUGx1Z2luLmFkZEV2ZW50TGlzdGVuZXIiLCJFdmVudE1hbmFnZXJQbHVnaW4uYWRkR2xvYmFsRXZlbnRMaXN0ZW5lciJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUEscUJBQXlCLDBCQUEwQixDQUFDLENBQUE7QUFDcEQsMkJBQThDLGdDQUFnQyxDQUFDLENBQUE7QUFDL0UsbUJBQThDLHNCQUFzQixDQUFDLENBQUE7QUFDckUsd0JBQXFCLGdDQUFnQyxDQUFDLENBQUE7QUFDdEQsMkJBQTBCLGdDQUFnQyxDQUFDLENBQUE7QUFFOUMsNkJBQXFCLEdBQzlCLGlCQUFVLENBQUMsSUFBSSxnQkFBVyxDQUFDLHFCQUFxQixDQUFDLENBQUMsQ0FBQztBQUV2RDtJQUlFQSxzQkFBMkNBLE9BQTZCQSxFQUFVQSxLQUFhQTtRQUpqR0MsaUJBZ0NDQTtRQTVCbUZBLFVBQUtBLEdBQUxBLEtBQUtBLENBQVFBO1FBQzdGQSxPQUFPQSxDQUFDQSxPQUFPQSxDQUFDQSxVQUFBQSxDQUFDQSxJQUFJQSxPQUFBQSxDQUFDQSxDQUFDQSxPQUFPQSxHQUFHQSxLQUFJQSxFQUFoQkEsQ0FBZ0JBLENBQUNBLENBQUNBO1FBQ3ZDQSxJQUFJQSxDQUFDQSxRQUFRQSxHQUFHQSx3QkFBV0EsQ0FBQ0EsUUFBUUEsQ0FBQ0EsT0FBT0EsQ0FBQ0EsQ0FBQ0E7SUFDaERBLENBQUNBO0lBRURELHVDQUFnQkEsR0FBaEJBLFVBQWlCQSxPQUFvQkEsRUFBRUEsU0FBaUJBLEVBQUVBLE9BQWlCQTtRQUN6RUUsSUFBSUEsTUFBTUEsR0FBR0EsSUFBSUEsQ0FBQ0EsY0FBY0EsQ0FBQ0EsU0FBU0EsQ0FBQ0EsQ0FBQ0E7UUFDNUNBLE1BQU1BLENBQUNBLE1BQU1BLENBQUNBLGdCQUFnQkEsQ0FBQ0EsT0FBT0EsRUFBRUEsU0FBU0EsRUFBRUEsT0FBT0EsQ0FBQ0EsQ0FBQ0E7SUFDOURBLENBQUNBO0lBRURGLDZDQUFzQkEsR0FBdEJBLFVBQXVCQSxNQUFjQSxFQUFFQSxTQUFpQkEsRUFBRUEsT0FBaUJBO1FBQ3pFRyxJQUFJQSxNQUFNQSxHQUFHQSxJQUFJQSxDQUFDQSxjQUFjQSxDQUFDQSxTQUFTQSxDQUFDQSxDQUFDQTtRQUM1Q0EsTUFBTUEsQ0FBQ0EsTUFBTUEsQ0FBQ0Esc0JBQXNCQSxDQUFDQSxNQUFNQSxFQUFFQSxTQUFTQSxFQUFFQSxPQUFPQSxDQUFDQSxDQUFDQTtJQUNuRUEsQ0FBQ0E7SUFFREgsOEJBQU9BLEdBQVBBLGNBQW9CSSxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQSxLQUFLQSxDQUFDQSxDQUFDQSxDQUFDQTtJQUV4Q0osZ0JBQWdCQTtJQUNoQkEscUNBQWNBLEdBQWRBLFVBQWVBLFNBQWlCQTtRQUM5QkssSUFBSUEsT0FBT0EsR0FBR0EsSUFBSUEsQ0FBQ0EsUUFBUUEsQ0FBQ0E7UUFDNUJBLEdBQUdBLENBQUNBLENBQUNBLEdBQUdBLENBQUNBLENBQUNBLEdBQUdBLENBQUNBLEVBQUVBLENBQUNBLEdBQUdBLE9BQU9BLENBQUNBLE1BQU1BLEVBQUVBLENBQUNBLEVBQUVBLEVBQUVBLENBQUNBO1lBQ3hDQSxJQUFJQSxNQUFNQSxHQUFHQSxPQUFPQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQTtZQUN4QkEsRUFBRUEsQ0FBQ0EsQ0FBQ0EsTUFBTUEsQ0FBQ0EsUUFBUUEsQ0FBQ0EsU0FBU0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7Z0JBQy9CQSxNQUFNQSxDQUFDQSxNQUFNQSxDQUFDQTtZQUNoQkEsQ0FBQ0E7UUFDSEEsQ0FBQ0E7UUFDREEsTUFBTUEsSUFBSUEsMEJBQWFBLENBQUNBLDZDQUEyQ0EsU0FBV0EsQ0FBQ0EsQ0FBQ0E7SUFDbEZBLENBQUNBO0lBL0JITDtRQUFDQSxlQUFVQSxFQUFFQTtRQUlDQSxXQUFDQSxXQUFNQSxDQUFDQSw2QkFBcUJBLENBQUNBLENBQUFBOztxQkE0QjNDQTtJQUFEQSxtQkFBQ0E7QUFBREEsQ0FBQ0EsQUFoQ0QsSUFnQ0M7QUEvQlksb0JBQVksZUErQnhCLENBQUE7QUFFRDtJQUFBTTtJQWFBQyxDQUFDQTtJQVZDRCx3REFBd0RBO0lBQ3hEQSxxQ0FBUUEsR0FBUkEsVUFBU0EsU0FBaUJBLElBQWFFLE1BQU1BLENBQUNBLEtBQUtBLENBQUNBLENBQUNBLENBQUNBO0lBRXRERiw2Q0FBZ0JBLEdBQWhCQSxVQUFpQkEsT0FBb0JBLEVBQUVBLFNBQWlCQSxFQUFFQSxPQUFpQkE7UUFDekVHLE1BQU1BLGlCQUFpQkEsQ0FBQ0E7SUFDMUJBLENBQUNBO0lBRURILG1EQUFzQkEsR0FBdEJBLFVBQXVCQSxPQUFlQSxFQUFFQSxTQUFpQkEsRUFBRUEsT0FBaUJBO1FBQzFFSSxNQUFNQSxpQkFBaUJBLENBQUNBO0lBQzFCQSxDQUFDQTtJQUNISix5QkFBQ0E7QUFBREEsQ0FBQ0EsQUFiRCxJQWFDO0FBYlksMEJBQWtCLHFCQWE5QixDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDT05TVF9FWFBSfSBmcm9tICdhbmd1bGFyMi9zcmMvZmFjYWRlL2xhbmcnO1xuaW1wb3J0IHtCYXNlRXhjZXB0aW9uLCBXcmFwcGVkRXhjZXB0aW9ufSBmcm9tICdhbmd1bGFyMi9zcmMvZmFjYWRlL2V4Y2VwdGlvbnMnO1xuaW1wb3J0IHtJbmplY3RhYmxlLCBJbmplY3QsIE9wYXF1ZVRva2VufSBmcm9tICdhbmd1bGFyMi9zcmMvY29yZS9kaSc7XG5pbXBvcnQge05nWm9uZX0gZnJvbSAnYW5ndWxhcjIvc3JjL2NvcmUvem9uZS9uZ196b25lJztcbmltcG9ydCB7TGlzdFdyYXBwZXJ9IGZyb20gJ2FuZ3VsYXIyL3NyYy9mYWNhZGUvY29sbGVjdGlvbic7XG5cbmV4cG9ydCBjb25zdCBFVkVOVF9NQU5BR0VSX1BMVUdJTlM6IE9wYXF1ZVRva2VuID1cbiAgICBDT05TVF9FWFBSKG5ldyBPcGFxdWVUb2tlbihcIkV2ZW50TWFuYWdlclBsdWdpbnNcIikpO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgRXZlbnRNYW5hZ2VyIHtcbiAgcHJpdmF0ZSBfcGx1Z2luczogRXZlbnRNYW5hZ2VyUGx1Z2luW107XG5cbiAgY29uc3RydWN0b3IoQEluamVjdChFVkVOVF9NQU5BR0VSX1BMVUdJTlMpIHBsdWdpbnM6IEV2ZW50TWFuYWdlclBsdWdpbltdLCBwcml2YXRlIF96b25lOiBOZ1pvbmUpIHtcbiAgICBwbHVnaW5zLmZvckVhY2gocCA9PiBwLm1hbmFnZXIgPSB0aGlzKTtcbiAgICB0aGlzLl9wbHVnaW5zID0gTGlzdFdyYXBwZXIucmV2ZXJzZWQocGx1Z2lucyk7XG4gIH1cblxuICBhZGRFdmVudExpc3RlbmVyKGVsZW1lbnQ6IEhUTUxFbGVtZW50LCBldmVudE5hbWU6IHN0cmluZywgaGFuZGxlcjogRnVuY3Rpb24pOiBGdW5jdGlvbiB7XG4gICAgdmFyIHBsdWdpbiA9IHRoaXMuX2ZpbmRQbHVnaW5Gb3IoZXZlbnROYW1lKTtcbiAgICByZXR1cm4gcGx1Z2luLmFkZEV2ZW50TGlzdGVuZXIoZWxlbWVudCwgZXZlbnROYW1lLCBoYW5kbGVyKTtcbiAgfVxuXG4gIGFkZEdsb2JhbEV2ZW50TGlzdGVuZXIodGFyZ2V0OiBzdHJpbmcsIGV2ZW50TmFtZTogc3RyaW5nLCBoYW5kbGVyOiBGdW5jdGlvbik6IEZ1bmN0aW9uIHtcbiAgICB2YXIgcGx1Z2luID0gdGhpcy5fZmluZFBsdWdpbkZvcihldmVudE5hbWUpO1xuICAgIHJldHVybiBwbHVnaW4uYWRkR2xvYmFsRXZlbnRMaXN0ZW5lcih0YXJnZXQsIGV2ZW50TmFtZSwgaGFuZGxlcik7XG4gIH1cblxuICBnZXRab25lKCk6IE5nWm9uZSB7IHJldHVybiB0aGlzLl96b25lOyB9XG5cbiAgLyoqIEBpbnRlcm5hbCAqL1xuICBfZmluZFBsdWdpbkZvcihldmVudE5hbWU6IHN0cmluZyk6IEV2ZW50TWFuYWdlclBsdWdpbiB7XG4gICAgdmFyIHBsdWdpbnMgPSB0aGlzLl9wbHVnaW5zO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcGx1Z2lucy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHBsdWdpbiA9IHBsdWdpbnNbaV07XG4gICAgICBpZiAocGx1Z2luLnN1cHBvcnRzKGV2ZW50TmFtZSkpIHtcbiAgICAgICAgcmV0dXJuIHBsdWdpbjtcbiAgICAgIH1cbiAgICB9XG4gICAgdGhyb3cgbmV3IEJhc2VFeGNlcHRpb24oYE5vIGV2ZW50IG1hbmFnZXIgcGx1Z2luIGZvdW5kIGZvciBldmVudCAke2V2ZW50TmFtZX1gKTtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgRXZlbnRNYW5hZ2VyUGx1Z2luIHtcbiAgbWFuYWdlcjogRXZlbnRNYW5hZ2VyO1xuXG4gIC8vIFRoYXQgaXMgZXF1aXZhbGVudCB0byBoYXZpbmcgc3VwcG9ydGluZyAkZXZlbnQudGFyZ2V0XG4gIHN1cHBvcnRzKGV2ZW50TmFtZTogc3RyaW5nKTogYm9vbGVhbiB7IHJldHVybiBmYWxzZTsgfVxuXG4gIGFkZEV2ZW50TGlzdGVuZXIoZWxlbWVudDogSFRNTEVsZW1lbnQsIGV2ZW50TmFtZTogc3RyaW5nLCBoYW5kbGVyOiBGdW5jdGlvbik6IEZ1bmN0aW9uIHtcbiAgICB0aHJvdyBcIm5vdCBpbXBsZW1lbnRlZFwiO1xuICB9XG5cbiAgYWRkR2xvYmFsRXZlbnRMaXN0ZW5lcihlbGVtZW50OiBzdHJpbmcsIGV2ZW50TmFtZTogc3RyaW5nLCBoYW5kbGVyOiBGdW5jdGlvbik6IEZ1bmN0aW9uIHtcbiAgICB0aHJvdyBcIm5vdCBpbXBsZW1lbnRlZFwiO1xuICB9XG59Il19\n\n/***/ },\n\n/***/ 43:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';var lang_1 = __webpack_require__(1);\r\n\t// see http://www.w3.org/TR/html51/syntax.html#named-character-references\r\n\t// see https://html.spec.whatwg.org/multipage/entities.json\r\n\t// This list is not exhaustive to keep the compiler footprint low.\r\n\t// The `&#123;` / `&#x1ab;` syntax should be used when the named character reference does not exist.\r\n\texports.NAMED_ENTITIES = lang_1.CONST_EXPR({\r\n\t    'Aacute': '\\u00C1',\r\n\t    'aacute': '\\u00E1',\r\n\t    'Acirc': '\\u00C2',\r\n\t    'acirc': '\\u00E2',\r\n\t    'acute': '\\u00B4',\r\n\t    'AElig': '\\u00C6',\r\n\t    'aelig': '\\u00E6',\r\n\t    'Agrave': '\\u00C0',\r\n\t    'agrave': '\\u00E0',\r\n\t    'alefsym': '\\u2135',\r\n\t    'Alpha': '\\u0391',\r\n\t    'alpha': '\\u03B1',\r\n\t    'amp': '&',\r\n\t    'and': '\\u2227',\r\n\t    'ang': '\\u2220',\r\n\t    'apos': '\\u0027',\r\n\t    'Aring': '\\u00C5',\r\n\t    'aring': '\\u00E5',\r\n\t    'asymp': '\\u2248',\r\n\t    'Atilde': '\\u00C3',\r\n\t    'atilde': '\\u00E3',\r\n\t    'Auml': '\\u00C4',\r\n\t    'auml': '\\u00E4',\r\n\t    'bdquo': '\\u201E',\r\n\t    'Beta': '\\u0392',\r\n\t    'beta': '\\u03B2',\r\n\t    'brvbar': '\\u00A6',\r\n\t    'bull': '\\u2022',\r\n\t    'cap': '\\u2229',\r\n\t    'Ccedil': '\\u00C7',\r\n\t    'ccedil': '\\u00E7',\r\n\t    'cedil': '\\u00B8',\r\n\t    'cent': '\\u00A2',\r\n\t    'Chi': '\\u03A7',\r\n\t    'chi': '\\u03C7',\r\n\t    'circ': '\\u02C6',\r\n\t    'clubs': '\\u2663',\r\n\t    'cong': '\\u2245',\r\n\t    'copy': '\\u00A9',\r\n\t    'crarr': '\\u21B5',\r\n\t    'cup': '\\u222A',\r\n\t    'curren': '\\u00A4',\r\n\t    'dagger': '\\u2020',\r\n\t    'Dagger': '\\u2021',\r\n\t    'darr': '\\u2193',\r\n\t    'dArr': '\\u21D3',\r\n\t    'deg': '\\u00B0',\r\n\t    'Delta': '\\u0394',\r\n\t    'delta': '\\u03B4',\r\n\t    'diams': '\\u2666',\r\n\t    'divide': '\\u00F7',\r\n\t    'Eacute': '\\u00C9',\r\n\t    'eacute': '\\u00E9',\r\n\t    'Ecirc': '\\u00CA',\r\n\t    'ecirc': '\\u00EA',\r\n\t    'Egrave': '\\u00C8',\r\n\t    'egrave': '\\u00E8',\r\n\t    'empty': '\\u2205',\r\n\t    'emsp': '\\u2003',\r\n\t    'ensp': '\\u2002',\r\n\t    'Epsilon': '\\u0395',\r\n\t    'epsilon': '\\u03B5',\r\n\t    'equiv': '\\u2261',\r\n\t    'Eta': '\\u0397',\r\n\t    'eta': '\\u03B7',\r\n\t    'ETH': '\\u00D0',\r\n\t    'eth': '\\u00F0',\r\n\t    'Euml': '\\u00CB',\r\n\t    'euml': '\\u00EB',\r\n\t    'euro': '\\u20AC',\r\n\t    'exist': '\\u2203',\r\n\t    'fnof': '\\u0192',\r\n\t    'forall': '\\u2200',\r\n\t    'frac12': '\\u00BD',\r\n\t    'frac14': '\\u00BC',\r\n\t    'frac34': '\\u00BE',\r\n\t    'frasl': '\\u2044',\r\n\t    'Gamma': '\\u0393',\r\n\t    'gamma': '\\u03B3',\r\n\t    'ge': '\\u2265',\r\n\t    'gt': '>',\r\n\t    'harr': '\\u2194',\r\n\t    'hArr': '\\u21D4',\r\n\t    'hearts': '\\u2665',\r\n\t    'hellip': '\\u2026',\r\n\t    'Iacute': '\\u00CD',\r\n\t    'iacute': '\\u00ED',\r\n\t    'Icirc': '\\u00CE',\r\n\t    'icirc': '\\u00EE',\r\n\t    'iexcl': '\\u00A1',\r\n\t    'Igrave': '\\u00CC',\r\n\t    'igrave': '\\u00EC',\r\n\t    'image': '\\u2111',\r\n\t    'infin': '\\u221E',\r\n\t    'int': '\\u222B',\r\n\t    'Iota': '\\u0399',\r\n\t    'iota': '\\u03B9',\r\n\t    'iquest': '\\u00BF',\r\n\t    'isin': '\\u2208',\r\n\t    'Iuml': '\\u00CF',\r\n\t    'iuml': '\\u00EF',\r\n\t    'Kappa': '\\u039A',\r\n\t    'kappa': '\\u03BA',\r\n\t    'Lambda': '\\u039B',\r\n\t    'lambda': '\\u03BB',\r\n\t    'lang': '\\u27E8',\r\n\t    'laquo': '\\u00AB',\r\n\t    'larr': '\\u2190',\r\n\t    'lArr': '\\u21D0',\r\n\t    'lceil': '\\u2308',\r\n\t    'ldquo': '\\u201C',\r\n\t    'le': '\\u2264',\r\n\t    'lfloor': '\\u230A',\r\n\t    'lowast': '\\u2217',\r\n\t    'loz': '\\u25CA',\r\n\t    'lrm': '\\u200E',\r\n\t    'lsaquo': '\\u2039',\r\n\t    'lsquo': '\\u2018',\r\n\t    'lt': '<',\r\n\t    'macr': '\\u00AF',\r\n\t    'mdash': '\\u2014',\r\n\t    'micro': '\\u00B5',\r\n\t    'middot': '\\u00B7',\r\n\t    'minus': '\\u2212',\r\n\t    'Mu': '\\u039C',\r\n\t    'mu': '\\u03BC',\r\n\t    'nabla': '\\u2207',\r\n\t    'nbsp': '\\u00A0',\r\n\t    'ndash': '\\u2013',\r\n\t    'ne': '\\u2260',\r\n\t    'ni': '\\u220B',\r\n\t    'not': '\\u00AC',\r\n\t    'notin': '\\u2209',\r\n\t    'nsub': '\\u2284',\r\n\t    'Ntilde': '\\u00D1',\r\n\t    'ntilde': '\\u00F1',\r\n\t    'Nu': '\\u039D',\r\n\t    'nu': '\\u03BD',\r\n\t    'Oacute': '\\u00D3',\r\n\t    'oacute': '\\u00F3',\r\n\t    'Ocirc': '\\u00D4',\r\n\t    'ocirc': '\\u00F4',\r\n\t    'OElig': '\\u0152',\r\n\t    'oelig': '\\u0153',\r\n\t    'Ograve': '\\u00D2',\r\n\t    'ograve': '\\u00F2',\r\n\t    'oline': '\\u203E',\r\n\t    'Omega': '\\u03A9',\r\n\t    'omega': '\\u03C9',\r\n\t    'Omicron': '\\u039F',\r\n\t    'omicron': '\\u03BF',\r\n\t    'oplus': '\\u2295',\r\n\t    'or': '\\u2228',\r\n\t    'ordf': '\\u00AA',\r\n\t    'ordm': '\\u00BA',\r\n\t    'Oslash': '\\u00D8',\r\n\t    'oslash': '\\u00F8',\r\n\t    'Otilde': '\\u00D5',\r\n\t    'otilde': '\\u00F5',\r\n\t    'otimes': '\\u2297',\r\n\t    'Ouml': '\\u00D6',\r\n\t    'ouml': '\\u00F6',\r\n\t    'para': '\\u00B6',\r\n\t    'permil': '\\u2030',\r\n\t    'perp': '\\u22A5',\r\n\t    'Phi': '\\u03A6',\r\n\t    'phi': '\\u03C6',\r\n\t    'Pi': '\\u03A0',\r\n\t    'pi': '\\u03C0',\r\n\t    'piv': '\\u03D6',\r\n\t    'plusmn': '\\u00B1',\r\n\t    'pound': '\\u00A3',\r\n\t    'prime': '\\u2032',\r\n\t    'Prime': '\\u2033',\r\n\t    'prod': '\\u220F',\r\n\t    'prop': '\\u221D',\r\n\t    'Psi': '\\u03A8',\r\n\t    'psi': '\\u03C8',\r\n\t    'quot': '\\u0022',\r\n\t    'radic': '\\u221A',\r\n\t    'rang': '\\u27E9',\r\n\t    'raquo': '\\u00BB',\r\n\t    'rarr': '\\u2192',\r\n\t    'rArr': '\\u21D2',\r\n\t    'rceil': '\\u2309',\r\n\t    'rdquo': '\\u201D',\r\n\t    'real': '\\u211C',\r\n\t    'reg': '\\u00AE',\r\n\t    'rfloor': '\\u230B',\r\n\t    'Rho': '\\u03A1',\r\n\t    'rho': '\\u03C1',\r\n\t    'rlm': '\\u200F',\r\n\t    'rsaquo': '\\u203A',\r\n\t    'rsquo': '\\u2019',\r\n\t    'sbquo': '\\u201A',\r\n\t    'Scaron': '\\u0160',\r\n\t    'scaron': '\\u0161',\r\n\t    'sdot': '\\u22C5',\r\n\t    'sect': '\\u00A7',\r\n\t    'shy': '\\u00AD',\r\n\t    'Sigma': '\\u03A3',\r\n\t    'sigma': '\\u03C3',\r\n\t    'sigmaf': '\\u03C2',\r\n\t    'sim': '\\u223C',\r\n\t    'spades': '\\u2660',\r\n\t    'sub': '\\u2282',\r\n\t    'sube': '\\u2286',\r\n\t    'sum': '\\u2211',\r\n\t    'sup': '\\u2283',\r\n\t    'sup1': '\\u00B9',\r\n\t    'sup2': '\\u00B2',\r\n\t    'sup3': '\\u00B3',\r\n\t    'supe': '\\u2287',\r\n\t    'szlig': '\\u00DF',\r\n\t    'Tau': '\\u03A4',\r\n\t    'tau': '\\u03C4',\r\n\t    'there4': '\\u2234',\r\n\t    'Theta': '\\u0398',\r\n\t    'theta': '\\u03B8',\r\n\t    'thetasym': '\\u03D1',\r\n\t    'thinsp': '\\u2009',\r\n\t    'THORN': '\\u00DE',\r\n\t    'thorn': '\\u00FE',\r\n\t    'tilde': '\\u02DC',\r\n\t    'times': '\\u00D7',\r\n\t    'trade': '\\u2122',\r\n\t    'Uacute': '\\u00DA',\r\n\t    'uacute': '\\u00FA',\r\n\t    'uarr': '\\u2191',\r\n\t    'uArr': '\\u21D1',\r\n\t    'Ucirc': '\\u00DB',\r\n\t    'ucirc': '\\u00FB',\r\n\t    'Ugrave': '\\u00D9',\r\n\t    'ugrave': '\\u00F9',\r\n\t    'uml': '\\u00A8',\r\n\t    'upsih': '\\u03D2',\r\n\t    'Upsilon': '\\u03A5',\r\n\t    'upsilon': '\\u03C5',\r\n\t    'Uuml': '\\u00DC',\r\n\t    'uuml': '\\u00FC',\r\n\t    'weierp': '\\u2118',\r\n\t    'Xi': '\\u039E',\r\n\t    'xi': '\\u03BE',\r\n\t    'Yacute': '\\u00DD',\r\n\t    'yacute': '\\u00FD',\r\n\t    'yen': '\\u00A5',\r\n\t    'yuml': '\\u00FF',\r\n\t    'Yuml': '\\u0178',\r\n\t    'Zeta': '\\u0396',\r\n\t    'zeta': '\\u03B6',\r\n\t    'zwj': '\\u200D',\r\n\t    'zwnj': '\\u200C',\r\n\t});\r\n\t(function (HtmlTagContentType) {\r\n\t    HtmlTagContentType[HtmlTagContentType[\"RAW_TEXT\"] = 0] = \"RAW_TEXT\";\r\n\t    HtmlTagContentType[HtmlTagContentType[\"ESCAPABLE_RAW_TEXT\"] = 1] = \"ESCAPABLE_RAW_TEXT\";\r\n\t    HtmlTagContentType[HtmlTagContentType[\"PARSABLE_DATA\"] = 2] = \"PARSABLE_DATA\";\r\n\t})(exports.HtmlTagContentType || (exports.HtmlTagContentType = {}));\r\n\tvar HtmlTagContentType = exports.HtmlTagContentType;\r\n\tvar HtmlTagDefinition = (function () {\r\n\t    function HtmlTagDefinition(_a) {\r\n\t        var _this = this;\r\n\t        var _b = _a === void 0 ? {} : _a, closedByChildren = _b.closedByChildren, requiredParents = _b.requiredParents, implicitNamespacePrefix = _b.implicitNamespacePrefix, contentType = _b.contentType, closedByParent = _b.closedByParent, isVoid = _b.isVoid, ignoreFirstLf = _b.ignoreFirstLf;\r\n\t        this.closedByChildren = {};\r\n\t        this.closedByParent = false;\r\n\t        if (lang_1.isPresent(closedByChildren) && closedByChildren.length > 0) {\r\n\t            closedByChildren.forEach(function (tagName) { return _this.closedByChildren[tagName] = true; });\r\n\t        }\r\n\t        this.isVoid = lang_1.normalizeBool(isVoid);\r\n\t        this.closedByParent = lang_1.normalizeBool(closedByParent) || this.isVoid;\r\n\t        if (lang_1.isPresent(requiredParents) && requiredParents.length > 0) {\r\n\t            this.requiredParents = {};\r\n\t            this.parentToAdd = requiredParents[0];\r\n\t            requiredParents.forEach(function (tagName) { return _this.requiredParents[tagName] = true; });\r\n\t        }\r\n\t        this.implicitNamespacePrefix = implicitNamespacePrefix;\r\n\t        this.contentType = lang_1.isPresent(contentType) ? contentType : HtmlTagContentType.PARSABLE_DATA;\r\n\t        this.ignoreFirstLf = lang_1.normalizeBool(ignoreFirstLf);\r\n\t    }\r\n\t    HtmlTagDefinition.prototype.requireExtraParent = function (currentParent) {\r\n\t        if (lang_1.isBlank(this.requiredParents)) {\r\n\t            return false;\r\n\t        }\r\n\t        if (lang_1.isBlank(currentParent)) {\r\n\t            return true;\r\n\t        }\r\n\t        var lcParent = currentParent.toLowerCase();\r\n\t        return this.requiredParents[lcParent] != true && lcParent != 'template';\r\n\t    };\r\n\t    HtmlTagDefinition.prototype.isClosedByChild = function (name) {\r\n\t        return this.isVoid || lang_1.normalizeBool(this.closedByChildren[name.toLowerCase()]);\r\n\t    };\r\n\t    return HtmlTagDefinition;\r\n\t})();\r\n\texports.HtmlTagDefinition = HtmlTagDefinition;\r\n\t// see http://www.w3.org/TR/html51/syntax.html#optional-tags\r\n\t// This implementation does not fully conform to the HTML5 spec.\r\n\tvar TAG_DEFINITIONS = {\r\n\t    'area': new HtmlTagDefinition({ isVoid: true }),\r\n\t    'embed': new HtmlTagDefinition({ isVoid: true }),\r\n\t    'link': new HtmlTagDefinition({ isVoid: true }),\r\n\t    'img': new HtmlTagDefinition({ isVoid: true }),\r\n\t    'input': new HtmlTagDefinition({ isVoid: true }),\r\n\t    'param': new HtmlTagDefinition({ isVoid: true }),\r\n\t    'hr': new HtmlTagDefinition({ isVoid: true }),\r\n\t    'br': new HtmlTagDefinition({ isVoid: true }),\r\n\t    'source': new HtmlTagDefinition({ isVoid: true }),\r\n\t    'track': new HtmlTagDefinition({ isVoid: true }),\r\n\t    'wbr': new HtmlTagDefinition({ isVoid: true }),\r\n\t    'p': new HtmlTagDefinition({\r\n\t        closedByChildren: [\r\n\t            'address',\r\n\t            'article',\r\n\t            'aside',\r\n\t            'blockquote',\r\n\t            'div',\r\n\t            'dl',\r\n\t            'fieldset',\r\n\t            'footer',\r\n\t            'form',\r\n\t            'h1',\r\n\t            'h2',\r\n\t            'h3',\r\n\t            'h4',\r\n\t            'h5',\r\n\t            'h6',\r\n\t            'header',\r\n\t            'hgroup',\r\n\t            'hr',\r\n\t            'main',\r\n\t            'nav',\r\n\t            'ol',\r\n\t            'p',\r\n\t            'pre',\r\n\t            'section',\r\n\t            'table',\r\n\t            'ul'\r\n\t        ],\r\n\t        closedByParent: true\r\n\t    }),\r\n\t    'thead': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'] }),\r\n\t    'tbody': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'], closedByParent: true }),\r\n\t    'tfoot': new HtmlTagDefinition({ closedByChildren: ['tbody'], closedByParent: true }),\r\n\t    'tr': new HtmlTagDefinition({\r\n\t        closedByChildren: ['tr'],\r\n\t        requiredParents: ['tbody', 'tfoot', 'thead'],\r\n\t        closedByParent: true\r\n\t    }),\r\n\t    'td': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\r\n\t    'th': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\r\n\t    'col': new HtmlTagDefinition({ requiredParents: ['colgroup'], isVoid: true }),\r\n\t    'svg': new HtmlTagDefinition({ implicitNamespacePrefix: 'svg' }),\r\n\t    'math': new HtmlTagDefinition({ implicitNamespacePrefix: 'math' }),\r\n\t    'li': new HtmlTagDefinition({ closedByChildren: ['li'], closedByParent: true }),\r\n\t    'dt': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'] }),\r\n\t    'dd': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'], closedByParent: true }),\r\n\t    'rb': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\r\n\t    'rt': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\r\n\t    'rtc': new HtmlTagDefinition({ closedByChildren: ['rb', 'rtc', 'rp'], closedByParent: true }),\r\n\t    'rp': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\r\n\t    'optgroup': new HtmlTagDefinition({ closedByChildren: ['optgroup'], closedByParent: true }),\r\n\t    'option': new HtmlTagDefinition({ closedByChildren: ['option', 'optgroup'], closedByParent: true }),\r\n\t    'pre': new HtmlTagDefinition({ ignoreFirstLf: true }),\r\n\t    'listing': new HtmlTagDefinition({ ignoreFirstLf: true }),\r\n\t    'style': new HtmlTagDefinition({ contentType: HtmlTagContentType.RAW_TEXT }),\r\n\t    'script': new HtmlTagDefinition({ contentType: HtmlTagContentType.RAW_TEXT }),\r\n\t    'title': new HtmlTagDefinition({ contentType: HtmlTagContentType.ESCAPABLE_RAW_TEXT }),\r\n\t    'textarea': new HtmlTagDefinition({ contentType: HtmlTagContentType.ESCAPABLE_RAW_TEXT, ignoreFirstLf: true }),\r\n\t};\r\n\tvar DEFAULT_TAG_DEFINITION = new HtmlTagDefinition();\r\n\tfunction getHtmlTagDefinition(tagName) {\r\n\t    var result = TAG_DEFINITIONS[tagName.toLowerCase()];\r\n\t    return lang_1.isPresent(result) ? result : DEFAULT_TAG_DEFINITION;\r\n\t}\r\n\texports.getHtmlTagDefinition = getHtmlTagDefinition;\r\n\tvar NS_PREFIX_RE = /^@([^:]+):(.+)/g;\r\n\tfunction splitNsName(elementName) {\r\n\t    if (elementName[0] != '@') {\r\n\t        return [null, elementName];\r\n\t    }\r\n\t    var match = lang_1.RegExpWrapper.firstMatch(NS_PREFIX_RE, elementName);\r\n\t    return [match[1], match[2]];\r\n\t}\r\n\texports.splitNsName = splitNsName;\r\n\tfunction getNsPrefix(elementName) {\r\n\t    return splitNsName(elementName)[0];\r\n\t}\r\n\texports.getNsPrefix = getNsPrefix;\r\n\t//# sourceMappingURL=data:application/json;base64,\n\n/***/ },\n\n/***/ 44:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n\t    return function (target, key) { decorator(target, key, paramIndex); }\r\n\t};\r\n\tvar di_1 = __webpack_require__(6);\r\n\tvar lang_1 = __webpack_require__(1);\r\n\tvar application_tokens_1 = __webpack_require__(45);\r\n\tvar di_2 = __webpack_require__(6);\r\n\t/**\r\n\t * Create a {@link UrlResolver} with no package prefix.\r\n\t */\r\n\tfunction createWithoutPackagePrefix() {\r\n\t    return new UrlResolver();\r\n\t}\r\n\texports.createWithoutPackagePrefix = createWithoutPackagePrefix;\r\n\t/**\r\n\t * A default provider for {@link PACKAGE_ROOT_URL} that maps to '/'.\r\n\t */\r\n\texports.DEFAULT_PACKAGE_URL_PROVIDER = new di_2.Provider(application_tokens_1.PACKAGE_ROOT_URL, { useValue: \"/\" });\r\n\t/**\r\n\t * Used by the {@link Compiler} when resolving HTML and CSS template URLs.\r\n\t *\r\n\t * This class can be overridden by the application developer to create custom behavior.\r\n\t *\r\n\t * See {@link Compiler}\r\n\t *\r\n\t * ## Example\r\n\t *\r\n\t * {@example compiler/ts/url_resolver/url_resolver.ts region='url_resolver'}\r\n\t */\r\n\tvar UrlResolver = (function () {\r\n\t    function UrlResolver(packagePrefix) {\r\n\t        if (packagePrefix === void 0) { packagePrefix = null; }\r\n\t        if (lang_1.isPresent(packagePrefix)) {\r\n\t            this._packagePrefix = lang_1.StringWrapper.stripRight(packagePrefix, \"/\") + \"/\";\r\n\t        }\r\n\t    }\r\n\t    /**\r\n\t     * Resolves the `url` given the `baseUrl`:\r\n\t     * - when the `url` is null, the `baseUrl` is returned,\r\n\t     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\r\n\t     * `baseUrl` and `url`,\r\n\t     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\r\n\t     * returned as is (ignoring the `baseUrl`)\r\n\t     *\r\n\t     * @param {string} baseUrl\r\n\t     * @param {string} url\r\n\t     * @returns {string} the resolved URL\r\n\t     */\r\n\t    UrlResolver.prototype.resolve = function (baseUrl, url) {\r\n\t        var resolvedUrl = url;\r\n\t        if (lang_1.isPresent(baseUrl) && baseUrl.length > 0) {\r\n\t            resolvedUrl = _resolveUrl(baseUrl, resolvedUrl);\r\n\t        }\r\n\t        if (lang_1.isPresent(this._packagePrefix) && getUrlScheme(resolvedUrl) == \"package\") {\r\n\t            resolvedUrl = resolvedUrl.replace(\"package:\", this._packagePrefix);\r\n\t        }\r\n\t        return resolvedUrl;\r\n\t    };\r\n\t    UrlResolver = __decorate([\r\n\t        di_1.Injectable(),\r\n\t        __param(0, di_1.Inject(application_tokens_1.PACKAGE_ROOT_URL)), \r\n\t        __metadata('design:paramtypes', [String])\r\n\t    ], UrlResolver);\r\n\t    return UrlResolver;\r\n\t})();\r\n\texports.UrlResolver = UrlResolver;\r\n\t/**\r\n\t * Extract the scheme of a URL.\r\n\t */\r\n\tfunction getUrlScheme(url) {\r\n\t    var match = _split(url);\r\n\t    return (match && match[_ComponentIndex.Scheme]) || \"\";\r\n\t}\r\n\texports.getUrlScheme = getUrlScheme;\r\n\t// The code below is adapted from Traceur:\r\n\t// https://github.com/google/traceur-compiler/blob/9511c1dafa972bf0de1202a8a863bad02f0f95a8/src/runtime/url.js\r\n\t/**\r\n\t * Builds a URI string from already-encoded parts.\r\n\t *\r\n\t * No encoding is performed.  Any component may be omitted as either null or\r\n\t * undefined.\r\n\t *\r\n\t * @param {?string=} opt_scheme The scheme such as 'http'.\r\n\t * @param {?string=} opt_userInfo The user name before the '@'.\r\n\t * @param {?string=} opt_domain The domain such as 'www.google.com', already\r\n\t *     URI-encoded.\r\n\t * @param {(string|null)=} opt_port The port number.\r\n\t * @param {?string=} opt_path The path, already URI-encoded.  If it is not\r\n\t *     empty, it must begin with a slash.\r\n\t * @param {?string=} opt_queryData The URI-encoded query data.\r\n\t * @param {?string=} opt_fragment The URI-encoded fragment identifier.\r\n\t * @return {string} The fully combined URI.\r\n\t */\r\n\tfunction _buildFromEncodedParts(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {\r\n\t    var out = [];\r\n\t    if (lang_1.isPresent(opt_scheme)) {\r\n\t        out.push(opt_scheme + ':');\r\n\t    }\r\n\t    if (lang_1.isPresent(opt_domain)) {\r\n\t        out.push('//');\r\n\t        if (lang_1.isPresent(opt_userInfo)) {\r\n\t            out.push(opt_userInfo + '@');\r\n\t        }\r\n\t        out.push(opt_domain);\r\n\t        if (lang_1.isPresent(opt_port)) {\r\n\t            out.push(':' + opt_port);\r\n\t        }\r\n\t    }\r\n\t    if (lang_1.isPresent(opt_path)) {\r\n\t        out.push(opt_path);\r\n\t    }\r\n\t    if (lang_1.isPresent(opt_queryData)) {\r\n\t        out.push('?' + opt_queryData);\r\n\t    }\r\n\t    if (lang_1.isPresent(opt_fragment)) {\r\n\t        out.push('#' + opt_fragment);\r\n\t    }\r\n\t    return out.join('');\r\n\t}\r\n\t/**\r\n\t * A regular expression for breaking a URI into its component parts.\r\n\t *\r\n\t * {@link http://www.gbiv.com/protocols/uri/rfc/rfc3986.html#RFC2234} says\r\n\t * As the \"first-match-wins\" algorithm is identical to the \"greedy\"\r\n\t * disambiguation method used by POSIX regular expressions, it is natural and\r\n\t * commonplace to use a regular expression for parsing the potential five\r\n\t * components of a URI reference.\r\n\t *\r\n\t * The following line is the regular expression for breaking-down a\r\n\t * well-formed URI reference into its components.\r\n\t *\r\n\t * <pre>\r\n\t * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\r\n\t *  12            3  4          5       6  7        8 9\r\n\t * </pre>\r\n\t *\r\n\t * The numbers in the second line above are only to assist readability; they\r\n\t * indicate the reference points for each subexpression (i.e., each paired\r\n\t * parenthesis). We refer to the value matched for subexpression <n> as $<n>.\r\n\t * For example, matching the above expression to\r\n\t * <pre>\r\n\t *     http://www.ics.uci.edu/pub/ietf/uri/#Related\r\n\t * </pre>\r\n\t * results in the following subexpression matches:\r\n\t * <pre>\r\n\t *    $1 = http:\r\n\t *    $2 = http\r\n\t *    $3 = //www.ics.uci.edu\r\n\t *    $4 = www.ics.uci.edu\r\n\t *    $5 = /pub/ietf/uri/\r\n\t *    $6 = <undefined>\r\n\t *    $7 = <undefined>\r\n\t *    $8 = #Related\r\n\t *    $9 = Related\r\n\t * </pre>\r\n\t * where <undefined> indicates that the component is not present, as is the\r\n\t * case for the query component in the above example. Therefore, we can\r\n\t * determine the value of the five components as\r\n\t * <pre>\r\n\t *    scheme    = $2\r\n\t *    authority = $4\r\n\t *    path      = $5\r\n\t *    query     = $7\r\n\t *    fragment  = $9\r\n\t * </pre>\r\n\t *\r\n\t * The regular expression has been modified slightly to expose the\r\n\t * userInfo, domain, and port separately from the authority.\r\n\t * The modified version yields\r\n\t * <pre>\r\n\t *    $1 = http              scheme\r\n\t *    $2 = <undefined>       userInfo -\\\r\n\t *    $3 = www.ics.uci.edu   domain     | authority\r\n\t *    $4 = <undefined>       port     -/\r\n\t *    $5 = /pub/ietf/uri/    path\r\n\t *    $6 = <undefined>       query without ?\r\n\t *    $7 = Related           fragment without #\r\n\t * </pre>\r\n\t * @type {!RegExp}\r\n\t * @internal\r\n\t */\r\n\tvar _splitRe = lang_1.RegExpWrapper.create('^' +\r\n\t    '(?:' +\r\n\t    '([^:/?#.]+)' +\r\n\t    // used by other URL parts such as :,\r\n\t    // ?, /, #, and .\r\n\t    ':)?' +\r\n\t    '(?://' +\r\n\t    '(?:([^/?#]*)@)?' +\r\n\t    '([\\\\w\\\\d\\\\-\\\\u0100-\\\\uffff.%]*)' +\r\n\t    // digits, dashes, dots, percent\r\n\t    // escapes, and unicode characters.\r\n\t    '(?::([0-9]+))?' +\r\n\t    ')?' +\r\n\t    '([^?#]+)?' +\r\n\t    '(?:\\\\?([^#]*))?' +\r\n\t    '(?:#(.*))?' +\r\n\t    '$');\r\n\t/**\r\n\t * The index of each URI component in the return value of goog.uri.utils.split.\r\n\t * @enum {number}\r\n\t */\r\n\tvar _ComponentIndex;\r\n\t(function (_ComponentIndex) {\r\n\t    _ComponentIndex[_ComponentIndex[\"Scheme\"] = 1] = \"Scheme\";\r\n\t    _ComponentIndex[_ComponentIndex[\"UserInfo\"] = 2] = \"UserInfo\";\r\n\t    _ComponentIndex[_ComponentIndex[\"Domain\"] = 3] = \"Domain\";\r\n\t    _ComponentIndex[_ComponentIndex[\"Port\"] = 4] = \"Port\";\r\n\t    _ComponentIndex[_ComponentIndex[\"Path\"] = 5] = \"Path\";\r\n\t    _ComponentIndex[_ComponentIndex[\"QueryData\"] = 6] = \"QueryData\";\r\n\t    _ComponentIndex[_ComponentIndex[\"Fragment\"] = 7] = \"Fragment\";\r\n\t})(_ComponentIndex || (_ComponentIndex = {}));\r\n\t/**\r\n\t * Splits a URI into its component parts.\r\n\t *\r\n\t * Each component can be accessed via the component indices; for example:\r\n\t * <pre>\r\n\t * goog.uri.utils.split(someStr)[goog.uri.utils.CompontentIndex.QUERY_DATA];\r\n\t * </pre>\r\n\t *\r\n\t * @param {string} uri The URI string to examine.\r\n\t * @return {!Array.<string|undefined>} Each component still URI-encoded.\r\n\t *     Each component that is present will contain the encoded value, whereas\r\n\t *     components that are not present will be undefined or empty, depending\r\n\t *     on the browser's regular expression implementation.  Never null, since\r\n\t *     arbitrary strings may still look like path names.\r\n\t */\r\n\tfunction _split(uri) {\r\n\t    return lang_1.RegExpWrapper.firstMatch(_splitRe, uri);\r\n\t}\r\n\t/**\r\n\t  * Removes dot segments in given path component, as described in\r\n\t  * RFC 3986, section 5.2.4.\r\n\t  *\r\n\t  * @param {string} path A non-empty path component.\r\n\t  * @return {string} Path component with removed dot segments.\r\n\t  */\r\n\tfunction _removeDotSegments(path) {\r\n\t    if (path == '/')\r\n\t        return '/';\r\n\t    var leadingSlash = path[0] == '/' ? '/' : '';\r\n\t    var trailingSlash = path[path.length - 1] === '/' ? '/' : '';\r\n\t    var segments = path.split('/');\r\n\t    var out = [];\r\n\t    var up = 0;\r\n\t    for (var pos = 0; pos < segments.length; pos++) {\r\n\t        var segment = segments[pos];\r\n\t        switch (segment) {\r\n\t            case '':\r\n\t            case '.':\r\n\t                break;\r\n\t            case '..':\r\n\t                if (out.length > 0) {\r\n\t                    out.pop();\r\n\t                }\r\n\t                else {\r\n\t                    up++;\r\n\t                }\r\n\t                break;\r\n\t            default:\r\n\t                out.push(segment);\r\n\t        }\r\n\t    }\r\n\t    if (leadingSlash == '') {\r\n\t        while (up-- > 0) {\r\n\t            out.unshift('..');\r\n\t        }\r\n\t        if (out.length === 0)\r\n\t            out.push('.');\r\n\t    }\r\n\t    return leadingSlash + out.join('/') + trailingSlash;\r\n\t}\r\n\t/**\r\n\t * Takes an array of the parts from split and canonicalizes the path part\r\n\t * and then joins all the parts.\r\n\t * @param {Array.<string?>} parts\r\n\t * @return {string}\r\n\t */\r\n\tfunction _joinAndCanonicalizePath(parts) {\r\n\t    var path = parts[_ComponentIndex.Path];\r\n\t    path = lang_1.isBlank(path) ? '' : _removeDotSegments(path);\r\n\t    parts[_ComponentIndex.Path] = path;\r\n\t    return _buildFromEncodedParts(parts[_ComponentIndex.Scheme], parts[_ComponentIndex.UserInfo], parts[_ComponentIndex.Domain], parts[_ComponentIndex.Port], path, parts[_ComponentIndex.QueryData], parts[_ComponentIndex.Fragment]);\r\n\t}\r\n\t/**\r\n\t * Resolves a URL.\r\n\t * @param {string} base The URL acting as the base URL.\r\n\t * @param {string} to The URL to resolve.\r\n\t * @return {string}\r\n\t */\r\n\tfunction _resolveUrl(base, url) {\r\n\t    var parts = _split(encodeURI(url));\r\n\t    var baseParts = _split(base);\r\n\t    if (lang_1.isPresent(parts[_ComponentIndex.Scheme])) {\r\n\t        return _joinAndCanonicalizePath(parts);\r\n\t    }\r\n\t    else {\r\n\t        parts[_ComponentIndex.Scheme] = baseParts[_ComponentIndex.Scheme];\r\n\t    }\r\n\t    for (var i = _ComponentIndex.Scheme; i <= _ComponentIndex.Port; i++) {\r\n\t        if (lang_1.isBlank(parts[i])) {\r\n\t            parts[i] = baseParts[i];\r\n\t        }\r\n\t    }\r\n\t    if (parts[_ComponentIndex.Path][0] == '/') {\r\n\t        return _joinAndCanonicalizePath(parts);\r\n\t    }\r\n\t    var path = baseParts[_ComponentIndex.Path];\r\n\t    if (lang_1.isBlank(path))\r\n\t        path = '/';\r\n\t    var index = path.lastIndexOf('/');\r\n\t    path = path.substring(0, index + 1) + parts[_ComponentIndex.Path];\r\n\t    parts[_ComponentIndex.Path] = path;\r\n\t    return _joinAndCanonicalizePath(parts);\r\n\t}\r\n\t//# sourceMappingURL=data:application/json;base64,\n\n/***/ },\n\n/***/ 53:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';var di_1 = __webpack_require__(6);\r\n\tvar lang_1 = __webpack_require__(1);\r\n\t/**\r\n\t * A DI Token representing the main rendering context. In a browser this is the DOM Document.\r\n\t *\r\n\t * Note: Document might not be available in the Application Context when Application and Rendering\r\n\t * Contexts are not the same (e.g. when running the application into a Web Worker).\r\n\t */\r\n\texports.DOCUMENT = lang_1.CONST_EXPR(new di_1.OpaqueToken('DocumentToken'));\r\n\t//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZG9tX3Rva2Vucy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImFuZ3VsYXIyL3NyYy9wbGF0Zm9ybS9kb20vZG9tX3Rva2Vucy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxtQkFBMEIsc0JBQXNCLENBQUMsQ0FBQTtBQUNqRCxxQkFBeUIsMEJBQTBCLENBQUMsQ0FBQTtBQUVwRDs7Ozs7R0FLRztBQUNVLGdCQUFRLEdBQWdCLGlCQUFVLENBQUMsSUFBSSxnQkFBVyxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge09wYXF1ZVRva2VufSBmcm9tICdhbmd1bGFyMi9zcmMvY29yZS9kaSc7XG5pbXBvcnQge0NPTlNUX0VYUFJ9IGZyb20gJ2FuZ3VsYXIyL3NyYy9mYWNhZGUvbGFuZyc7XG5cbi8qKlxuICogQSBESSBUb2tlbiByZXByZXNlbnRpbmcgdGhlIG1haW4gcmVuZGVyaW5nIGNvbnRleHQuIEluIGEgYnJvd3NlciB0aGlzIGlzIHRoZSBET00gRG9jdW1lbnQuXG4gKlxuICogTm90ZTogRG9jdW1lbnQgbWlnaHQgbm90IGJlIGF2YWlsYWJsZSBpbiB0aGUgQXBwbGljYXRpb24gQ29udGV4dCB3aGVuIEFwcGxpY2F0aW9uIGFuZCBSZW5kZXJpbmdcbiAqIENvbnRleHRzIGFyZSBub3QgdGhlIHNhbWUgKGUuZy4gd2hlbiBydW5uaW5nIHRoZSBhcHBsaWNhdGlvbiBpbnRvIGEgV2ViIFdvcmtlcikuXG4gKi9cbmV4cG9ydCBjb25zdCBET0NVTUVOVDogT3BhcXVlVG9rZW4gPSBDT05TVF9FWFBSKG5ldyBPcGFxdWVUb2tlbignRG9jdW1lbnRUb2tlbicpKTtcbiJdfQ==\n\n/***/ },\n\n/***/ 59:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';var lang_1 = __webpack_require__(1);\r\n\tvar exceptions_1 = __webpack_require__(5);\r\n\tvar collection_1 = __webpack_require__(3);\r\n\tvar change_detection_1 = __webpack_require__(15);\r\n\tvar view_1 = __webpack_require__(25);\r\n\tvar selector_1 = __webpack_require__(143);\r\n\tvar util_1 = __webpack_require__(24);\r\n\tvar interfaces_1 = __webpack_require__(63);\r\n\t// group 1: \"property\" from \"[property]\"\r\n\t// group 2: \"event\" from \"(event)\"\r\n\tvar HOST_REG_EXP = /^(?:(?:\\[([^\\]]+)\\])|(?:\\(([^\\)]+)\\)))$/g;\r\n\tvar CompileMetadataWithType = (function () {\r\n\t    function CompileMetadataWithType() {\r\n\t    }\r\n\t    CompileMetadataWithType.fromJson = function (data) {\r\n\t        return _COMPILE_METADATA_FROM_JSON[data['class']](data);\r\n\t    };\r\n\t    Object.defineProperty(CompileMetadataWithType.prototype, \"type\", {\r\n\t        get: function () { return exceptions_1.unimplemented(); },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    return CompileMetadataWithType;\r\n\t})();\r\n\texports.CompileMetadataWithType = CompileMetadataWithType;\r\n\t/**\r\n\t * Metadata regarding compilation of a type.\r\n\t */\r\n\tvar CompileTypeMetadata = (function () {\r\n\t    function CompileTypeMetadata(_a) {\r\n\t        var _b = _a === void 0 ? {} : _a, runtime = _b.runtime, name = _b.name, moduleUrl = _b.moduleUrl, isHost = _b.isHost;\r\n\t        this.runtime = runtime;\r\n\t        this.name = name;\r\n\t        this.moduleUrl = moduleUrl;\r\n\t        this.isHost = lang_1.normalizeBool(isHost);\r\n\t    }\r\n\t    CompileTypeMetadata.fromJson = function (data) {\r\n\t        return new CompileTypeMetadata({ name: data['name'], moduleUrl: data['moduleUrl'], isHost: data['isHost'] });\r\n\t    };\r\n\t    CompileTypeMetadata.prototype.toJson = function () {\r\n\t        return {\r\n\t            // Note: Runtime type can't be serialized...\r\n\t            'name': this.name,\r\n\t            'moduleUrl': this.moduleUrl,\r\n\t            'isHost': this.isHost\r\n\t        };\r\n\t    };\r\n\t    return CompileTypeMetadata;\r\n\t})();\r\n\texports.CompileTypeMetadata = CompileTypeMetadata;\r\n\t/**\r\n\t * Metadata regarding compilation of a template.\r\n\t */\r\n\tvar CompileTemplateMetadata = (function () {\r\n\t    function CompileTemplateMetadata(_a) {\r\n\t        var _b = _a === void 0 ? {} : _a, encapsulation = _b.encapsulation, template = _b.template, templateUrl = _b.templateUrl, styles = _b.styles, styleUrls = _b.styleUrls, ngContentSelectors = _b.ngContentSelectors;\r\n\t        this.encapsulation = lang_1.isPresent(encapsulation) ? encapsulation : view_1.ViewEncapsulation.Emulated;\r\n\t        this.template = template;\r\n\t        this.templateUrl = templateUrl;\r\n\t        this.styles = lang_1.isPresent(styles) ? styles : [];\r\n\t        this.styleUrls = lang_1.isPresent(styleUrls) ? styleUrls : [];\r\n\t        this.ngContentSelectors = lang_1.isPresent(ngContentSelectors) ? ngContentSelectors : [];\r\n\t    }\r\n\t    CompileTemplateMetadata.fromJson = function (data) {\r\n\t        return new CompileTemplateMetadata({\r\n\t            encapsulation: lang_1.isPresent(data['encapsulation']) ?\r\n\t                view_1.VIEW_ENCAPSULATION_VALUES[data['encapsulation']] :\r\n\t                data['encapsulation'],\r\n\t            template: data['template'],\r\n\t            templateUrl: data['templateUrl'],\r\n\t            styles: data['styles'],\r\n\t            styleUrls: data['styleUrls'],\r\n\t            ngContentSelectors: data['ngContentSelectors']\r\n\t        });\r\n\t    };\r\n\t    CompileTemplateMetadata.prototype.toJson = function () {\r\n\t        return {\r\n\t            'encapsulation': lang_1.isPresent(this.encapsulation) ? lang_1.serializeEnum(this.encapsulation) : this.encapsulation,\r\n\t            'template': this.template,\r\n\t            'templateUrl': this.templateUrl,\r\n\t            'styles': this.styles,\r\n\t            'styleUrls': this.styleUrls,\r\n\t            'ngContentSelectors': this.ngContentSelectors\r\n\t        };\r\n\t    };\r\n\t    return CompileTemplateMetadata;\r\n\t})();\r\n\texports.CompileTemplateMetadata = CompileTemplateMetadata;\r\n\t/**\r\n\t * Metadata regarding compilation of a directive.\r\n\t */\r\n\tvar CompileDirectiveMetadata = (function () {\r\n\t    function CompileDirectiveMetadata(_a) {\r\n\t        var _b = _a === void 0 ? {} : _a, type = _b.type, isComponent = _b.isComponent, dynamicLoadable = _b.dynamicLoadable, selector = _b.selector, exportAs = _b.exportAs, changeDetection = _b.changeDetection, inputs = _b.inputs, outputs = _b.outputs, hostListeners = _b.hostListeners, hostProperties = _b.hostProperties, hostAttributes = _b.hostAttributes, lifecycleHooks = _b.lifecycleHooks, template = _b.template;\r\n\t        this.type = type;\r\n\t        this.isComponent = isComponent;\r\n\t        this.dynamicLoadable = dynamicLoadable;\r\n\t        this.selector = selector;\r\n\t        this.exportAs = exportAs;\r\n\t        this.changeDetection = changeDetection;\r\n\t        this.inputs = inputs;\r\n\t        this.outputs = outputs;\r\n\t        this.hostListeners = hostListeners;\r\n\t        this.hostProperties = hostProperties;\r\n\t        this.hostAttributes = hostAttributes;\r\n\t        this.lifecycleHooks = lifecycleHooks;\r\n\t        this.template = template;\r\n\t    }\r\n\t    CompileDirectiveMetadata.create = function (_a) {\r\n\t        var _b = _a === void 0 ? {} : _a, type = _b.type, isComponent = _b.isComponent, dynamicLoadable = _b.dynamicLoadable, selector = _b.selector, exportAs = _b.exportAs, changeDetection = _b.changeDetection, inputs = _b.inputs, outputs = _b.outputs, host = _b.host, lifecycleHooks = _b.lifecycleHooks, template = _b.template;\r\n\t        var hostListeners = {};\r\n\t        var hostProperties = {};\r\n\t        var hostAttributes = {};\r\n\t        if (lang_1.isPresent(host)) {\r\n\t            collection_1.StringMapWrapper.forEach(host, function (value, key) {\r\n\t                var matches = lang_1.RegExpWrapper.firstMatch(HOST_REG_EXP, key);\r\n\t                if (lang_1.isBlank(matches)) {\r\n\t                    hostAttributes[key] = value;\r\n\t                }\r\n\t                else if (lang_1.isPresent(matches[1])) {\r\n\t                    hostProperties[matches[1]] = value;\r\n\t                }\r\n\t                else if (lang_1.isPresent(matches[2])) {\r\n\t                    hostListeners[matches[2]] = value;\r\n\t                }\r\n\t            });\r\n\t        }\r\n\t        var inputsMap = {};\r\n\t        if (lang_1.isPresent(inputs)) {\r\n\t            inputs.forEach(function (bindConfig) {\r\n\t                // canonical syntax: `dirProp: elProp`\r\n\t                // if there is no `:`, use dirProp = elProp\r\n\t                var parts = util_1.splitAtColon(bindConfig, [bindConfig, bindConfig]);\r\n\t                inputsMap[parts[0]] = parts[1];\r\n\t            });\r\n\t        }\r\n\t        var outputsMap = {};\r\n\t        if (lang_1.isPresent(outputs)) {\r\n\t            outputs.forEach(function (bindConfig) {\r\n\t                // canonical syntax: `dirProp: elProp`\r\n\t                // if there is no `:`, use dirProp = elProp\r\n\t                var parts = util_1.splitAtColon(bindConfig, [bindConfig, bindConfig]);\r\n\t                outputsMap[parts[0]] = parts[1];\r\n\t            });\r\n\t        }\r\n\t        return new CompileDirectiveMetadata({\r\n\t            type: type,\r\n\t            isComponent: lang_1.normalizeBool(isComponent),\r\n\t            dynamicLoadable: lang_1.normalizeBool(dynamicLoadable),\r\n\t            selector: selector,\r\n\t            exportAs: exportAs,\r\n\t            changeDetection: changeDetection,\r\n\t            inputs: inputsMap,\r\n\t            outputs: outputsMap,\r\n\t            hostListeners: hostListeners,\r\n\t            hostProperties: hostProperties,\r\n\t            hostAttributes: hostAttributes,\r\n\t            lifecycleHooks: lang_1.isPresent(lifecycleHooks) ? lifecycleHooks : [],\r\n\t            template: template\r\n\t        });\r\n\t    };\r\n\t    CompileDirectiveMetadata.fromJson = function (data) {\r\n\t        return new CompileDirectiveMetadata({\r\n\t            isComponent: data['isComponent'],\r\n\t            dynamicLoadable: data['dynamicLoadable'],\r\n\t            selector: data['selector'],\r\n\t            exportAs: data['exportAs'],\r\n\t            type: lang_1.isPresent(data['type']) ? CompileTypeMetadata.fromJson(data['type']) : data['type'],\r\n\t            changeDetection: lang_1.isPresent(data['changeDetection']) ?\r\n\t                change_detection_1.CHANGE_DETECTION_STRATEGY_VALUES[data['changeDetection']] :\r\n\t                data['changeDetection'],\r\n\t            inputs: data['inputs'],\r\n\t            outputs: data['outputs'],\r\n\t            hostListeners: data['hostListeners'],\r\n\t            hostProperties: data['hostProperties'],\r\n\t            hostAttributes: data['hostAttributes'],\r\n\t            lifecycleHooks: data['lifecycleHooks'].map(function (hookValue) { return interfaces_1.LIFECYCLE_HOOKS_VALUES[hookValue]; }),\r\n\t            template: lang_1.isPresent(data['template']) ? CompileTemplateMetadata.fromJson(data['template']) :\r\n\t                data['template']\r\n\t        });\r\n\t    };\r\n\t    CompileDirectiveMetadata.prototype.toJson = function () {\r\n\t        return {\r\n\t            'class': 'Directive',\r\n\t            'isComponent': this.isComponent,\r\n\t            'dynamicLoadable': this.dynamicLoadable,\r\n\t            'selector': this.selector,\r\n\t            'exportAs': this.exportAs,\r\n\t            'type': lang_1.isPresent(this.type) ? this.type.toJson() : this.type,\r\n\t            'changeDetection': lang_1.isPresent(this.changeDetection) ? lang_1.serializeEnum(this.changeDetection) :\r\n\t                this.changeDetection,\r\n\t            'inputs': this.inputs,\r\n\t            'outputs': this.outputs,\r\n\t            'hostListeners': this.hostListeners,\r\n\t            'hostProperties': this.hostProperties,\r\n\t            'hostAttributes': this.hostAttributes,\r\n\t            'lifecycleHooks': this.lifecycleHooks.map(function (hook) { return lang_1.serializeEnum(hook); }),\r\n\t            'template': lang_1.isPresent(this.template) ? this.template.toJson() : this.template\r\n\t        };\r\n\t    };\r\n\t    return CompileDirectiveMetadata;\r\n\t})();\r\n\texports.CompileDirectiveMetadata = CompileDirectiveMetadata;\r\n\t/**\r\n\t * Construct {@link CompileDirectiveMetadata} from {@link ComponentTypeMetadata} and a selector.\r\n\t */\r\n\tfunction createHostComponentMeta(componentType, componentSelector) {\r\n\t    var template = selector_1.CssSelector.parse(componentSelector)[0].getMatchingElementTemplate();\r\n\t    return CompileDirectiveMetadata.create({\r\n\t        type: new CompileTypeMetadata({\r\n\t            runtime: Object,\r\n\t            name: \"Host\" + componentType.name,\r\n\t            moduleUrl: componentType.moduleUrl,\r\n\t            isHost: true\r\n\t        }),\r\n\t        template: new CompileTemplateMetadata({ template: template, templateUrl: '', styles: [], styleUrls: [], ngContentSelectors: [] }),\r\n\t        changeDetection: change_detection_1.ChangeDetectionStrategy.Default,\r\n\t        inputs: [],\r\n\t        outputs: [],\r\n\t        host: {},\r\n\t        lifecycleHooks: [],\r\n\t        isComponent: true,\r\n\t        dynamicLoadable: false,\r\n\t        selector: '*'\r\n\t    });\r\n\t}\r\n\texports.createHostComponentMeta = createHostComponentMeta;\r\n\tvar CompilePipeMetadata = (function () {\r\n\t    function CompilePipeMetadata(_a) {\r\n\t        var _b = _a === void 0 ? {} : _a, type = _b.type, name = _b.name, pure = _b.pure;\r\n\t        this.type = type;\r\n\t        this.name = name;\r\n\t        this.pure = lang_1.normalizeBool(pure);\r\n\t    }\r\n\t    CompilePipeMetadata.fromJson = function (data) {\r\n\t        return new CompilePipeMetadata({\r\n\t            type: lang_1.isPresent(data['type']) ? CompileTypeMetadata.fromJson(data['type']) : data['type'],\r\n\t            name: data['name'],\r\n\t            pure: data['pure']\r\n\t        });\r\n\t    };\r\n\t    CompilePipeMetadata.prototype.toJson = function () {\r\n\t        return {\r\n\t            'class': 'Pipe',\r\n\t            'type': lang_1.isPresent(this.type) ? this.type.toJson() : null,\r\n\t            'name': this.name,\r\n\t            'pure': this.pure\r\n\t        };\r\n\t    };\r\n\t    return CompilePipeMetadata;\r\n\t})();\r\n\texports.CompilePipeMetadata = CompilePipeMetadata;\r\n\tvar _COMPILE_METADATA_FROM_JSON = {\r\n\t    'Directive': CompileDirectiveMetadata.fromJson,\r\n\t    'Pipe': CompilePipeMetadata.fromJson\r\n\t};\r\n\t//# sourceMappingURL=data:application/json;base64,\n\n/***/ },\n\n/***/ 60:\n/***/ function(module, exports) {\n\n\t'use strict';// TODO: vsavkin rename it into TemplateLoader\r\n\t/**\r\n\t * An interface for retrieving documents by URL that the compiler uses\r\n\t * to load templates.\r\n\t */\r\n\tvar XHR = (function () {\r\n\t    function XHR() {\r\n\t    }\r\n\t    XHR.prototype.get = function (url) { return null; };\r\n\t    return XHR;\r\n\t})();\r\n\texports.XHR = XHR;\r\n\t//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoieGhyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYW5ndWxhcjIvc3JjL2NvbXBpbGVyL3hoci50cyJdLCJuYW1lcyI6WyJYSFIiLCJYSFIuY29uc3RydWN0b3IiLCJYSFIuZ2V0Il0sIm1hcHBpbmdzIjoiQUFFQSw4Q0FBOEM7QUFDOUM7OztHQUdHO0FBQ0g7SUFBQUE7SUFFQUMsQ0FBQ0E7SUFEQ0QsaUJBQUdBLEdBQUhBLFVBQUlBLEdBQVdBLElBQXFCRSxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQSxDQUFDQSxDQUFDQTtJQUNwREYsVUFBQ0E7QUFBREEsQ0FBQ0EsQUFGRCxJQUVDO0FBRlksV0FBRyxNQUVmLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1Byb21pc2V9IGZyb20gJ2FuZ3VsYXIyL3NyYy9mYWNhZGUvYXN5bmMnO1xuXG4vLyBUT0RPOiB2c2F2a2luIHJlbmFtZSBpdCBpbnRvIFRlbXBsYXRlTG9hZGVyXG4vKipcbiAqIEFuIGludGVyZmFjZSBmb3IgcmV0cmlldmluZyBkb2N1bWVudHMgYnkgVVJMIHRoYXQgdGhlIGNvbXBpbGVyIHVzZXNcbiAqIHRvIGxvYWQgdGVtcGxhdGVzLlxuICovXG5leHBvcnQgY2xhc3MgWEhSIHtcbiAgZ2V0KHVybDogc3RyaW5nKTogUHJvbWlzZTxzdHJpbmc+IHsgcmV0dXJuIG51bGw7IH1cbn1cbiJdfQ==\n\n/***/ },\n\n/***/ 63:\n/***/ function(module, exports) {\n\n\t'use strict';(function (LifecycleHooks) {\r\n\t    LifecycleHooks[LifecycleHooks[\"OnInit\"] = 0] = \"OnInit\";\r\n\t    LifecycleHooks[LifecycleHooks[\"OnDestroy\"] = 1] = \"OnDestroy\";\r\n\t    LifecycleHooks[LifecycleHooks[\"DoCheck\"] = 2] = \"DoCheck\";\r\n\t    LifecycleHooks[LifecycleHooks[\"OnChanges\"] = 3] = \"OnChanges\";\r\n\t    LifecycleHooks[LifecycleHooks[\"AfterContentInit\"] = 4] = \"AfterContentInit\";\r\n\t    LifecycleHooks[LifecycleHooks[\"AfterContentChecked\"] = 5] = \"AfterContentChecked\";\r\n\t    LifecycleHooks[LifecycleHooks[\"AfterViewInit\"] = 6] = \"AfterViewInit\";\r\n\t    LifecycleHooks[LifecycleHooks[\"AfterViewChecked\"] = 7] = \"AfterViewChecked\";\r\n\t})(exports.LifecycleHooks || (exports.LifecycleHooks = {}));\r\n\tvar LifecycleHooks = exports.LifecycleHooks;\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\texports.LIFECYCLE_HOOKS_VALUES = [\r\n\t    LifecycleHooks.OnInit,\r\n\t    LifecycleHooks.OnDestroy,\r\n\t    LifecycleHooks.DoCheck,\r\n\t    LifecycleHooks.OnChanges,\r\n\t    LifecycleHooks.AfterContentInit,\r\n\t    LifecycleHooks.AfterContentChecked,\r\n\t    LifecycleHooks.AfterViewInit,\r\n\t    LifecycleHooks.AfterViewChecked\r\n\t];\r\n\t//# sourceMappingURL=data:application/json;base64,\n\n/***/ },\n\n/***/ 72:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';var __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n\t    return function (target, key) { decorator(target, key, paramIndex); }\r\n\t};\r\n\tvar dom_adapter_1 = __webpack_require__(11);\r\n\tvar di_1 = __webpack_require__(6);\r\n\tvar collection_1 = __webpack_require__(3);\r\n\tvar dom_tokens_1 = __webpack_require__(53);\r\n\tvar SharedStylesHost = (function () {\r\n\t    function SharedStylesHost() {\r\n\t        /** @internal */\r\n\t        this._styles = [];\r\n\t        /** @internal */\r\n\t        this._stylesSet = new Set();\r\n\t    }\r\n\t    SharedStylesHost.prototype.addStyles = function (styles) {\r\n\t        var _this = this;\r\n\t        var additions = [];\r\n\t        styles.forEach(function (style) {\r\n\t            if (!collection_1.SetWrapper.has(_this._stylesSet, style)) {\r\n\t                _this._stylesSet.add(style);\r\n\t                _this._styles.push(style);\r\n\t                additions.push(style);\r\n\t            }\r\n\t        });\r\n\t        this.onStylesAdded(additions);\r\n\t    };\r\n\t    SharedStylesHost.prototype.onStylesAdded = function (additions) { };\r\n\t    SharedStylesHost.prototype.getAllStyles = function () { return this._styles; };\r\n\t    SharedStylesHost = __decorate([\r\n\t        di_1.Injectable(), \r\n\t        __metadata('design:paramtypes', [])\r\n\t    ], SharedStylesHost);\r\n\t    return SharedStylesHost;\r\n\t})();\r\n\texports.SharedStylesHost = SharedStylesHost;\r\n\tvar DomSharedStylesHost = (function (_super) {\r\n\t    __extends(DomSharedStylesHost, _super);\r\n\t    function DomSharedStylesHost(doc) {\r\n\t        _super.call(this);\r\n\t        this._hostNodes = new Set();\r\n\t        this._hostNodes.add(doc.head);\r\n\t    }\r\n\t    /** @internal */\r\n\t    DomSharedStylesHost.prototype._addStylesToHost = function (styles, host) {\r\n\t        for (var i = 0; i < styles.length; i++) {\r\n\t            var style = styles[i];\r\n\t            dom_adapter_1.DOM.appendChild(host, dom_adapter_1.DOM.createStyleElement(style));\r\n\t        }\r\n\t    };\r\n\t    DomSharedStylesHost.prototype.addHost = function (hostNode) {\r\n\t        this._addStylesToHost(this._styles, hostNode);\r\n\t        this._hostNodes.add(hostNode);\r\n\t    };\r\n\t    DomSharedStylesHost.prototype.removeHost = function (hostNode) { collection_1.SetWrapper.delete(this._hostNodes, hostNode); };\r\n\t    DomSharedStylesHost.prototype.onStylesAdded = function (additions) {\r\n\t        var _this = this;\r\n\t        this._hostNodes.forEach(function (hostNode) { _this._addStylesToHost(additions, hostNode); });\r\n\t    };\r\n\t    DomSharedStylesHost = __decorate([\r\n\t        di_1.Injectable(),\r\n\t        __param(0, di_1.Inject(dom_tokens_1.DOCUMENT)), \r\n\t        __metadata('design:paramtypes', [Object])\r\n\t    ], DomSharedStylesHost);\r\n\t    return DomSharedStylesHost;\r\n\t})(SharedStylesHost);\r\n\texports.DomSharedStylesHost = DomSharedStylesHost;\r\n\t//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2hhcmVkX3N0eWxlc19ob3N0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYW5ndWxhcjIvc3JjL3BsYXRmb3JtL2RvbS9zaGFyZWRfc3R5bGVzX2hvc3QudHMiXSwibmFtZXMiOlsiU2hhcmVkU3R5bGVzSG9zdCIsIlNoYXJlZFN0eWxlc0hvc3QuY29uc3RydWN0b3IiLCJTaGFyZWRTdHlsZXNIb3N0LmFkZFN0eWxlcyIsIlNoYXJlZFN0eWxlc0hvc3Qub25TdHlsZXNBZGRlZCIsIlNoYXJlZFN0eWxlc0hvc3QuZ2V0QWxsU3R5bGVzIiwiRG9tU2hhcmVkU3R5bGVzSG9zdCIsIkRvbVNoYXJlZFN0eWxlc0hvc3QuY29uc3RydWN0b3IiLCJEb21TaGFyZWRTdHlsZXNIb3N0Ll9hZGRTdHlsZXNUb0hvc3QiLCJEb21TaGFyZWRTdHlsZXNIb3N0LmFkZEhvc3QiLCJEb21TaGFyZWRTdHlsZXNIb3N0LnJlbW92ZUhvc3QiLCJEb21TaGFyZWRTdHlsZXNIb3N0Lm9uU3R5bGVzQWRkZWQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsNEJBQWtCLHVDQUF1QyxDQUFDLENBQUE7QUFDMUQsbUJBQWlDLHNCQUFzQixDQUFDLENBQUE7QUFDeEQsMkJBQXlCLGdDQUFnQyxDQUFDLENBQUE7QUFDMUQsMkJBQXVCLGNBQWMsQ0FBQyxDQUFBO0FBRXRDO0lBT0VBO1FBTEFDLGdCQUFnQkE7UUFDaEJBLFlBQU9BLEdBQWFBLEVBQUVBLENBQUNBO1FBQ3ZCQSxnQkFBZ0JBO1FBQ2hCQSxlQUFVQSxHQUFHQSxJQUFJQSxHQUFHQSxFQUFVQSxDQUFDQTtJQUVoQkEsQ0FBQ0E7SUFFaEJELG9DQUFTQSxHQUFUQSxVQUFVQSxNQUFnQkE7UUFBMUJFLGlCQVVDQTtRQVRDQSxJQUFJQSxTQUFTQSxHQUFHQSxFQUFFQSxDQUFDQTtRQUNuQkEsTUFBTUEsQ0FBQ0EsT0FBT0EsQ0FBQ0EsVUFBQUEsS0FBS0E7WUFDbEJBLEVBQUVBLENBQUNBLENBQUNBLENBQUNB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ZnJvbSAnYW5ndWxhcjIvc3JjL3BsYXRmb3JtL2RvbS9kb21fYWRhcHRlcic7XG5pbXBvcnQge0luamVjdCwgSW5qZWN0YWJsZX0gZnJvbSAnYW5ndWxhcjIvc3JjL2NvcmUvZGknO1xuaW1wb3J0IHtTZXRXcmFwcGVyfSBmcm9tICdhbmd1bGFyMi9zcmMvZmFjYWRlL2NvbGxlY3Rpb24nO1xuaW1wb3J0IHtET0NVTUVOVH0gZnJvbSAnLi9kb21fdG9rZW5zJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFNoYXJlZFN0eWxlc0hvc3Qge1xuICAvKiogQGludGVybmFsICovXG4gIF9zdHlsZXM6IHN0cmluZ1tdID0gW107XG4gIC8qKiBAaW50ZXJuYWwgKi9cbiAgX3N0eWxlc1NldCA9IG5ldyBTZXQ8c3RyaW5nPigpO1xuXG4gIGNvbnN0cnVjdG9yKCkge31cblxuICBhZGRTdHlsZXMoc3R5bGVzOiBzdHJpbmdbXSkge1xuICAgIHZhciBhZGRpdGlvbnMgPSBbXTtcbiAgICBzdHlsZXMuZm9yRWFjaChzdHlsZSA9PiB7XG4gICAgICBpZiAoIVNldFdyYXBwZXIuaGFzKHRoaXMuX3N0eWxlc1NldCwgc3R5bGUpKSB7XG4gICAgICAgIHRoaXMuX3N0eWxlc1NldC5hZGQoc3R5bGUpO1xuICAgICAgICB0aGlzLl9zdHlsZXMucHVzaChzdHlsZSk7XG4gICAgICAgIGFkZGl0aW9ucy5wdXNoKHN0eWxlKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICB0aGlzLm9uU3R5bGVzQWRkZWQoYWRkaXRpb25zKTtcbiAgfVxuXG4gIG9uU3R5bGVzQWRkZWQoYWRkaXRpb25zOiBzdHJpbmdbXSkge31cblxuICBnZXRBbGxTdHlsZXMoKTogc3RyaW5nW10geyByZXR1cm4gdGhpcy5fc3R5bGVzOyB9XG59XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBEb21TaGFyZWRTdHlsZXNIb3N0IGV4dGVuZHMgU2hhcmVkU3R5bGVzSG9zdCB7XG4gIHByaXZhdGUgX2hvc3ROb2RlcyA9IG5ldyBTZXQ8Tm9kZT4oKTtcbiAgY29uc3RydWN0b3IoQEluamVjdChET0NVTUVOVCkgZG9jOiBhbnkpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuX2hvc3ROb2Rlcy5hZGQoZG9jLmhlYWQpO1xuICB9XG4gIC8qKiBAaW50ZXJuYWwgKi9cbiAgX2FkZFN0eWxlc1RvSG9zdChzdHlsZXM6IHN0cmluZ1tdLCBob3N0OiBOb2RlKSB7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBzdHlsZSA9IHN0eWxlc1tpXTtcbiAgICAgIERPTS5hcHBlbmRDaGlsZChob3N0LCBET00uY3JlYXRlU3R5bGVFbGVtZW50KHN0eWxlKSk7XG4gICAgfVxuICB9XG4gIGFkZEhvc3QoaG9zdE5vZGU6IE5vZGUpIHtcbiAgICB0aGlzLl9hZGRTdHlsZXNUb0hvc3QodGhpcy5fc3R5bGVzLCBob3N0Tm9kZSk7XG4gICAgdGhpcy5faG9zdE5vZGVzLmFkZChob3N0Tm9kZSk7XG4gIH1cbiAgcmVtb3ZlSG9zdChob3N0Tm9kZTogTm9kZSkgeyBTZXRXcmFwcGVyLmRlbGV0ZSh0aGlzLl9ob3N0Tm9kZXMsIGhvc3ROb2RlKTsgfVxuXG4gIG9uU3R5bGVzQWRkZWQoYWRkaXRpb25zOiBzdHJpbmdbXSkge1xuICAgIHRoaXMuX2hvc3ROb2Rlcy5mb3JFYWNoKChob3N0Tm9kZSkgPT4geyB0aGlzLl9hZGRTdHlsZXNUb0hvc3QoYWRkaXRpb25zLCBob3N0Tm9kZSk7IH0pO1xuICB9XG59XG4iXX0=\n\n/***/ },\n\n/***/ 89:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';var lang_1 = __webpack_require__(1);\r\n\tvar HtmlTextAst = (function () {\r\n\t    function HtmlTextAst(value, sourceSpan) {\r\n\t        this.value = value;\r\n\t        this.sourceSpan = sourceSpan;\r\n\t    }\r\n\t    HtmlTextAst.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\r\n\t    return HtmlTextAst;\r\n\t})();\r\n\texports.HtmlTextAst = HtmlTextAst;\r\n\tvar HtmlAttrAst = (function () {\r\n\t    function HtmlAttrAst(name, value, sourceSpan) {\r\n\t        this.name = name;\r\n\t        this.value = value;\r\n\t        this.sourceSpan = sourceSpan;\r\n\t    }\r\n\t    HtmlAttrAst.prototype.visit = function (visitor, context) { return visitor.visitAttr(this, context); };\r\n\t    return HtmlAttrAst;\r\n\t})();\r\n\texports.HtmlAttrAst = HtmlAttrAst;\r\n\tvar HtmlElementAst = (function () {\r\n\t    function HtmlElementAst(name, attrs, children, sourceSpan) {\r\n\t        this.name = name;\r\n\t        this.attrs = attrs;\r\n\t        this.children = children;\r\n\t        this.sourceSpan = sourceSpan;\r\n\t    }\r\n\t    HtmlElementAst.prototype.visit = function (visitor, context) { return visitor.visitElement(this, context); };\r\n\t    return HtmlElementAst;\r\n\t})();\r\n\texports.HtmlElementAst = HtmlElementAst;\r\n\tfunction htmlVisitAll(visitor, asts, context) {\r\n\t    if (context === void 0) { context = null; }\r\n\t    var result = [];\r\n\t    asts.forEach(function (ast) {\r\n\t        var astResult = ast.visit(visitor, context);\r\n\t        if (lang_1.isPresent(astResult)) {\r\n\t            result.push(astResult);\r\n\t        }\r\n\t    });\r\n\t    return result;\r\n\t}\r\n\texports.htmlVisitAll = htmlVisitAll;\r\n\t//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaHRtbF9hc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJhbmd1bGFyMi9zcmMvY29tcGlsZXIvaHRtbF9hc3QudHMiXSwibmFtZXMiOlsiSHRtbFRleHRBc3QiLCJIdG1sVGV4dEFzdC5jb25zdHJ1Y3RvciIsIkh0bWxUZXh0QXN0LnZpc2l0IiwiSHRtbEF0dHJBc3QiLCJIdG1sQXR0ckFzdC5jb25zdHJ1Y3RvciIsIkh0bWxBdHRyQXN0LnZpc2l0IiwiSHRtbEVsZW1lbnRBc3QiLCJIdG1sRWxlbWVudEFzdC5jb25zdHJ1Y3RvciIsIkh0bWxFbGVtZW50QXN0LnZpc2l0IiwiaHRtbFZpc2l0QWxsIl0sIm1hcHBpbmdzIjoiQUFBQSxxQkFBd0IsMEJBQTBCLENBQUMsQ0FBQTtBQVNuRDtJQUNFQSxxQkFBbUJBLEtBQWFBLEVBQVNBLFVBQTJCQTtRQUFqREMsVUFBS0EsR0FBTEEsS0FBS0EsQ0FBUUE7UUFBU0EsZUFBVUEsR0FBVkEsVUFBVUEsQ0FBaUJBO0lBQUdBLENBQUNBO0lBQ3hFRCwyQkFBS0EsR0FBTEEsVUFBTUEsT0FBdUJBLEVBQUVBLE9BQVlBLElBQVNFLE1BQU1BLENBQUNBLE9BQU9BLENBQUNBLFNBQVNBLENBQUNBLElBQUlBLEVBQUVBLE9BQU9BLENBQUNBLENBQUNBLENBQUNBLENBQUNBO0lBQ2hHRixrQkFBQ0E7QUFBREEsQ0FBQ0EsQUFIRCxJQUdDO0FBSFksbUJBQVcsY0FHdkIsQ0FBQTtBQUVEO0lBQ0VHLHFCQUFtQkEsSUFBWUEsRUFBU0EsS0FBYUEsRUFBU0EsVUFBMkJBO1FBQXRFQyxTQUFJQSxHQUFKQSxJQUFJQSxDQUFRQTtRQUFTQSxVQUFLQSxHQUFMQSxLQUFLQSxDQUFRQTtRQUFTQSxlQUFVQSxHQUFWQSxVQUFVQSxDQUFpQkE7SUFBR0EsQ0FBQ0E7SUFDN0ZELDJCQUFLQSxHQUFMQSxVQUFNQSxPQUF1QkEsRUFBRUEsT0FBWUEsSUFBU0UsTUFBTUEsQ0FBQ0EsT0FBT0EsQ0FBQ0EsU0FBU0EsQ0FBQ0EsSUFBSUEsRUFBRUEsT0FBT0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7SUFDaEdGLGtCQUFDQTtBQUFEQSxDQUFDQSxBQUhELElBR0M7QUFIWSxtQkFBVyxjQUd2QixDQUFBO0FBRUQ7SUFDRUcsd0JBQW1CQSxJQUFZQSxFQUFTQSxLQUFvQkEsRUFBU0EsUUFBbUJBLEVBQ3JFQSxVQUEyQkE7UUFEM0JDLFNBQUlBLEdBQUpBLElBQUlBLENBQVFBO1FBQVNBLFVBQUtBLEdBQUxBLEtBQUtBLENBQWVBO1FBQVNBLGFBQVFBLEdBQVJBLFFBQVFBLENBQVdBO1FBQ3JFQSxlQUFVQSxHQUFWQSxVQUFVQSxDQUFpQkE7SUFBR0EsQ0FBQ0E7SUFDbERELDhCQUFLQSxHQUFMQSxVQUFNQSxPQUF1QkEsRUFBRUEsT0FBWUEsSUFBU0UsTUFBTUEsQ0FBQ0EsT0FBT0EsQ0FBQ0EsWUFBWUEsQ0FBQ0EsSUFBSUEsRUFBRUEsT0FBT0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7SUFDbkdGLHFCQUFDQTtBQUFEQSxDQUFDQSxBQUpELElBSUM7QUFKWSxzQkFBYyxpQkFJMUIsQ0FBQTtBQVFELHNCQUE2QixPQUF1QixFQUFFLElBQWUsRUFBRSxPQUFtQjtJQUFuQkcsdUJBQW1CQSxHQUFuQkEsY0FBbUJBO0lBQ3hGQSxJQUFJQSxNQUFNQSxHQUFHQSxFQUFFQSxDQUFDQTtJQUNoQkEsSUFBSUEsQ0FBQ0EsT0FBT0EsQ0FBQ0EsVUFBQUEsR0FBR0E7UUFDZEEsSUFBSUEsU0FBU0EsR0FBR0EsR0FBR0EsQ0FBQ0EsS0FBS0EsQ0FBQ0EsT0FBT0EsRUFBRUEsT0FBT0EsQ0FBQ0EsQ0FBQ0E7UUFDNUNBLEVBQUVBLENBQUNBLENBQUNBLGdCQUFTQSxDQUFDQSxTQUFTQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQTtZQUN6QkEsTUFBTUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsU0FBU0EsQ0FBQ0EsQ0FBQ0E7UUFDekJBLENBQUNBO0lBQ0hBLENBQUNBLENBQUNBLENBQUNBO0lBQ0hBLE1BQU1BLENBQUNBLE1BQU1BLENBQUNBO0FBQ2hCQSxDQUFDQTtBQVRlLG9CQUFZLGVBUzNCLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2lzUHJlc2VudH0gZnJvbSAnYW5ndWxhcjIvc3JjL2ZhY2FkZS9sYW5nJztcblxuaW1wb3J0IHtQYXJzZVNvdXJjZVNwYW59IGZyb20gJy4vcGFyc2VfdXRpbCc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgSHRtbEFzdCB7XG4gIHNvdXJjZVNwYW46IFBhcnNlU291cmNlU3BhbjtcbiAgdmlzaXQodmlzaXRvcjogSHRtbEFzdFZpc2l0b3IsIGNvbnRleHQ6IGFueSk6IGFueTtcbn1cblxuZXhwb3J0IGNsYXNzIEh0bWxUZXh0QXN0IGltcGxlbWVudHMgSHRtbEFzdCB7XG4gIGNvbnN0cnVjdG9yKHB1YmxpYyB2YWx1ZTogc3RyaW5nLCBwdWJsaWMgc291cmNlU3BhbjogUGFyc2VTb3VyY2VTcGFuKSB7fVxuICB2aXNpdCh2aXNpdG9yOiBIdG1sQXN0VmlzaXRvciwgY29udGV4dDogYW55KTogYW55IHsgcmV0dXJuIHZpc2l0b3IudmlzaXRUZXh0KHRoaXMsIGNvbnRleHQpOyB9XG59XG5cbmV4cG9ydCBjbGFzcyBIdG1sQXR0ckFzdCBpbXBsZW1lbnRzIEh0bWxBc3Qge1xuICBjb25zdHJ1Y3RvcihwdWJsaWMgbmFtZTogc3RyaW5nLCBwdWJsaWMgdmFsdWU6IHN0cmluZywgcHVibGljIHNvdXJjZVNwYW46IFBhcnNlU291cmNlU3Bhbikge31cbiAgdmlzaXQodmlzaXRvcjogSHRtbEFzdFZpc2l0b3IsIGNvbnRleHQ6IGFueSk6IGFueSB7IHJldHVybiB2aXNpdG9yLnZpc2l0QXR0cih0aGlzLCBjb250ZXh0KTsgfVxufVxuXG5leHBvcnQgY2xhc3MgSHRtbEVsZW1lbnRBc3QgaW1wbGVtZW50cyBIdG1sQXN0IHtcbiAgY29uc3RydWN0b3IocHVibGljIG5hbWU6IHN0cmluZywgcHVibGljIGF0dHJzOiBIdG1sQXR0ckFzdFtdLCBwdWJsaWMgY2hpbGRyZW46IEh0bWxBc3RbXSxcbiAgICAgICAgICAgICAgcHVibGljIHNvdXJjZVNwYW46IFBhcnNlU291cmNlU3Bhbikge31cbiAgdmlzaXQodmlzaXRvcjogSHRtbEFzdFZpc2l0b3IsIGNvbnRleHQ6IGFueSk6IGFueSB7IHJldHVybiB2aXNpdG9yLnZpc2l0RWxlbWVudCh0aGlzLCBjb250ZXh0KTsgfVxufVxuXG5leHBvcnQgaW50ZXJmYWNlIEh0bWxBc3RWaXNpdG9yIHtcbiAgdmlzaXRFbGVtZW50KGFzdDogSHRtbEVsZW1lbnRBc3QsIGNvbnRleHQ6IGFueSk6IGFueTtcbiAgdmlzaXRBdHRyKGFzdDogSHRtbEF0dHJBc3QsIGNvbnRleHQ6IGFueSk6IGFueTtcbiAgdmlzaXRUZXh0KGFzdDogSHRtbFRleHRBc3QsIGNvbnRleHQ6IGFueSk6IGFueTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGh0bWxWaXNpdEFsbCh2aXNpdG9yOiBIdG1sQXN0VmlzaXRvciwgYXN0czogSHRtbEFzdFtdLCBjb250ZXh0OiBhbnkgPSBudWxsKTogYW55W10ge1xuICB2YXIgcmVzdWx0ID0gW107XG4gIGFzdHMuZm9yRWFjaChhc3QgPT4ge1xuICAgIHZhciBhc3RSZXN1bHQgPSBhc3QudmlzaXQodmlzaXRvciwgY29udGV4dCk7XG4gICAgaWYgKGlzUHJlc2VudChhc3RSZXN1bHQpKSB7XG4gICAgICByZXN1bHQucHVzaChhc3RSZXN1bHQpO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiByZXN1bHQ7XG59XG4iXX0=\n\n/***/ },\n\n/***/ 90:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';var __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar lang_1 = __webpack_require__(1);\r\n\tvar collection_1 = __webpack_require__(3);\r\n\tvar html_ast_1 = __webpack_require__(89);\r\n\tvar di_1 = __webpack_require__(6);\r\n\tvar html_lexer_1 = __webpack_require__(207);\r\n\tvar parse_util_1 = __webpack_require__(91);\r\n\tvar html_tags_1 = __webpack_require__(43);\r\n\tvar HtmlTreeError = (function (_super) {\r\n\t    __extends(HtmlTreeError, _super);\r\n\t    function HtmlTreeError(elementName, location, msg) {\r\n\t        _super.call(this, location, msg);\r\n\t        this.elementName = elementName;\r\n\t    }\r\n\t    HtmlTreeError.create = function (elementName, location, msg) {\r\n\t        return new HtmlTreeError(elementName, location, msg);\r\n\t    };\r\n\t    return HtmlTreeError;\r\n\t})(parse_util_1.ParseError);\r\n\texports.HtmlTreeError = HtmlTreeError;\r\n\tvar HtmlParseTreeResult = (function () {\r\n\t    function HtmlParseTreeResult(rootNodes, errors) {\r\n\t        this.rootNodes = rootNodes;\r\n\t        this.errors = errors;\r\n\t    }\r\n\t    return HtmlParseTreeResult;\r\n\t})();\r\n\texports.HtmlParseTreeResult = HtmlParseTreeResult;\r\n\tvar HtmlParser = (function () {\r\n\t    function HtmlParser() {\r\n\t    }\r\n\t    HtmlParser.prototype.parse = function (sourceContent, sourceUrl) {\r\n\t        var tokensAndErrors = html_lexer_1.tokenizeHtml(sourceContent, sourceUrl);\r\n\t        var treeAndErrors = new TreeBuilder(tokensAndErrors.tokens).build();\r\n\t        return new HtmlParseTreeResult(treeAndErrors.rootNodes, tokensAndErrors.errors\r\n\t            .concat(treeAndErrors.errors));\r\n\t    };\r\n\t    HtmlParser = __decorate([\r\n\t        di_1.Injectable(), \r\n\t        __metadata('design:paramtypes', [])\r\n\t    ], HtmlParser);\r\n\t    return HtmlParser;\r\n\t})();\r\n\texports.HtmlParser = HtmlParser;\r\n\tvar TreeBuilder = (function () {\r\n\t    function TreeBuilder(tokens) {\r\n\t        this.tokens = tokens;\r\n\t        this.index = -1;\r\n\t        this.rootNodes = [];\r\n\t        this.errors = [];\r\n\t        this.elementStack = [];\r\n\t        this._advance();\r\n\t    }\r\n\t    TreeBuilder.prototype.build = function () {\r\n\t        while (this.peek.type !== html_lexer_1.HtmlTokenType.EOF) {\r\n\t            if (this.peek.type === html_lexer_1.HtmlTokenType.TAG_OPEN_START) {\r\n\t                this._consumeStartTag(this._advance());\r\n\t            }\r\n\t            else if (this.peek.type === html_lexer_1.HtmlTokenType.TAG_CLOSE) {\r\n\t                this._consumeEndTag(this._advance());\r\n\t            }\r\n\t            else if (this.peek.type === html_lexer_1.HtmlTokenType.CDATA_START) {\r\n\t                this._closeVoidElement();\r\n\t                this._consumeCdata(this._advance());\r\n\t            }\r\n\t            else if (this.peek.type === html_lexer_1.HtmlTokenType.COMMENT_START) {\r\n\t                this._closeVoidElement();\r\n\t                this._consumeComment(this._advance());\r\n\t            }\r\n\t            else if (this.peek.type === html_lexer_1.HtmlTokenType.TEXT ||\r\n\t                this.peek.type === html_lexer_1.HtmlTokenType.RAW_TEXT ||\r\n\t                this.peek.type === html_lexer_1.HtmlTokenType.ESCAPABLE_RAW_TEXT) {\r\n\t                this._closeVoidElement();\r\n\t                this._consumeText(this._advance());\r\n\t            }\r\n\t            else {\r\n\t                // Skip all other tokens...\r\n\t                this._advance();\r\n\t            }\r\n\t        }\r\n\t        return new HtmlParseTreeResult(this.rootNodes, this.errors);\r\n\t    };\r\n\t    TreeBuilder.prototype._advance = function () {\r\n\t        var prev = this.peek;\r\n\t        if (this.index < this.tokens.length - 1) {\r\n\t            // Note: there is always an EOF token at the end\r\n\t            this.index++;\r\n\t        }\r\n\t        this.peek = this.tokens[this.index];\r\n\t        return prev;\r\n\t    };\r\n\t    TreeBuilder.prototype._advanceIf = function (type) {\r\n\t        if (this.peek.type === type) {\r\n\t            return this._advance();\r\n\t        }\r\n\t        return null;\r\n\t    };\r\n\t    TreeBuilder.prototype._consumeCdata = function (startToken) {\r\n\t        this._consumeText(this._advance());\r\n\t        this._advanceIf(html_lexer_1.HtmlTokenType.CDATA_END);\r\n\t    };\r\n\t    TreeBuilder.prototype._consumeComment = function (startToken) {\r\n\t        this._advanceIf(html_lexer_1.HtmlTokenType.RAW_TEXT);\r\n\t        this._advanceIf(html_lexer_1.HtmlTokenType.COMMENT_END);\r\n\t    };\r\n\t    TreeBuilder.prototype._consumeText = function (token) {\r\n\t        var text = token.parts[0];\r\n\t        if (text.length > 0 && text[0] == '\\n') {\r\n\t            var parent_1 = this._getParentElement();\r\n\t            if (lang_1.isPresent(parent_1) && parent_1.children.length == 0 &&\r\n\t                html_tags_1.getHtmlTagDefinition(parent_1.name).ignoreFirstLf) {\r\n\t                text = text.substring(1);\r\n\t            }\r\n\t        }\r\n\t        if (text.length > 0) {\r\n\t            this._addToParent(new html_ast_1.HtmlTextAst(text, token.sourceSpan));\r\n\t        }\r\n\t    };\r\n\t    TreeBuilder.prototype._closeVoidElement = function () {\r\n\t        if (this.elementStack.length > 0) {\r\n\t            var el = collection_1.ListWrapper.last(this.elementStack);\r\n\t            if (html_tags_1.getHtmlTagDefinition(el.name).isVoid) {\r\n\t                this.elementStack.pop();\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    TreeBuilder.prototype._consumeStartTag = function (startTagToken) {\r\n\t        var prefix = startTagToken.parts[0];\r\n\t        var name = startTagToken.parts[1];\r\n\t        var attrs = [];\r\n\t        while (this.peek.type === html_lexer_1.HtmlTokenType.ATTR_NAME) {\r\n\t            attrs.push(this._consumeAttr(this._advance()));\r\n\t        }\r\n\t        var fullName = getElementFullName(prefix, name, this._getParentElement());\r\n\t        var selfClosing = false;\r\n\t        // Note: There could have been a tokenizer error\r\n\t        // so that we don't get a token for the end tag...\r\n\t        if (this.peek.type === html_lexer_1.HtmlTokenType.TAG_OPEN_END_VOID) {\r\n\t            this._advance();\r\n\t            selfClosing = true;\r\n\t            if (html_tags_1.getNsPrefix(fullName) == null && !html_tags_1.getHtmlTagDefinition(fullName).isVoid) {\r\n\t                this.errors.push(HtmlTreeError.create(fullName, startTagToken.sourceSpan.start, \"Only void and foreign elements can be self closed \\\"\" + startTagToken.parts[1] + \"\\\"\"));\r\n\t            }\r\n\t        }\r\n\t        else if (this.peek.type === html_lexer_1.HtmlTokenType.TAG_OPEN_END) {\r\n\t            this._advance();\r\n\t            selfClosing = false;\r\n\t        }\r\n\t        var end = this.peek.sourceSpan.start;\r\n\t        var el = new html_ast_1.HtmlElementAst(fullName, attrs, [], new parse_util_1.ParseSourceSpan(startTagToken.sourceSpan.start, end));\r\n\t        this._pushElement(el);\r\n\t        if (selfClosing) {\r\n\t            this._popElement(fullName);\r\n\t        }\r\n\t    };\r\n\t    TreeBuilder.prototype._pushElement = function (el) {\r\n\t        if (this.elementStack.length > 0) {\r\n\t            var parentEl = collection_1.ListWrapper.last(this.elementStack);\r\n\t            if (html_tags_1.getHtmlTagDefinition(parentEl.name).isClosedByChild(el.name)) {\r\n\t                this.elementStack.pop();\r\n\t            }\r\n\t        }\r\n\t        var tagDef = html_tags_1.getHtmlTagDefinition(el.name);\r\n\t        var parentEl = this._getParentElement();\r\n\t        if (tagDef.requireExtraParent(lang_1.isPresent(parentEl) ? parentEl.name : null)) {\r\n\t            var newParent = new html_ast_1.HtmlElementAst(tagDef.parentToAdd, [], [el], el.sourceSpan);\r\n\t            this._addToParent(newParent);\r\n\t            this.elementStack.push(newParent);\r\n\t            this.elementStack.push(el);\r\n\t        }\r\n\t        else {\r\n\t            this._addToParent(el);\r\n\t            this.elementStack.push(el);\r\n\t        }\r\n\t    };\r\n\t    TreeBuilder.prototype._consumeEndTag = function (endTagToken) {\r\n\t        var fullName = getElementFullName(endTagToken.parts[0], endTagToken.parts[1], this._getParentElement());\r\n\t        if (html_tags_1.getHtmlTagDefinition(fullName).isVoid) {\r\n\t            this.errors.push(HtmlTreeError.create(fullName, endTagToken.sourceSpan.start, \"Void elements do not have end tags \\\"\" + endTagToken.parts[1] + \"\\\"\"));\r\n\t        }\r\n\t        else if (!this._popElement(fullName)) {\r\n\t            this.errors.push(HtmlTreeError.create(fullName, endTagToken.sourceSpan.start, \"Unexpected closing tag \\\"\" + endTagToken.parts[1] + \"\\\"\"));\r\n\t        }\r\n\t    };\r\n\t    TreeBuilder.prototype._popElement = function (fullName) {\r\n\t        for (var stackIndex = this.elementStack.length - 1; stackIndex >= 0; stackIndex--) {\r\n\t            var el = this.elementStack[stackIndex];\r\n\t            if (el.name == fullName) {\r\n\t                collection_1.ListWrapper.splice(this.elementStack, stackIndex, this.elementStack.length - stackIndex);\r\n\t                return true;\r\n\t            }\r\n\t            if (!html_tags_1.getHtmlTagDefinition(el.name).closedByParent) {\r\n\t                return false;\r\n\t            }\r\n\t        }\r\n\t        return false;\r\n\t    };\r\n\t    TreeBuilder.prototype._consumeAttr = function (attrName) {\r\n\t        var fullName = mergeNsAndName(attrName.parts[0], attrName.parts[1]);\r\n\t        var end = attrName.sourceSpan.end;\r\n\t        var value = '';\r\n\t        if (this.peek.type === html_lexer_1.HtmlTokenType.ATTR_VALUE) {\r\n\t            var valueToken = this._advance();\r\n\t            value = valueToken.parts[0];\r\n\t            end = valueToken.sourceSpan.end;\r\n\t        }\r\n\t        return new html_ast_1.HtmlAttrAst(fullName, value, new parse_util_1.ParseSourceSpan(attrName.sourceSpan.start, end));\r\n\t    };\r\n\t    TreeBuilder.prototype._getParentElement = function () {\r\n\t        return this.elementStack.length > 0 ? collection_1.ListWrapper.last(this.elementStack) : null;\r\n\t    };\r\n\t    TreeBuilder.prototype._addToParent = function (node) {\r\n\t        var parent = this._getParentElement();\r\n\t        if (lang_1.isPresent(parent)) {\r\n\t            parent.children.push(node);\r\n\t        }\r\n\t        else {\r\n\t            this.rootNodes.push(node);\r\n\t        }\r\n\t    };\r\n\t    return TreeBuilder;\r\n\t})();\r\n\tfunction mergeNsAndName(prefix, localName) {\r\n\t    return lang_1.isPresent(prefix) ? \"@\" + prefix + \":\" + localName : localName;\r\n\t}\r\n\tfunction getElementFullName(prefix, localName, parentElement) {\r\n\t    if (lang_1.isBlank(prefix)) {\r\n\t        prefix = html_tags_1.getHtmlTagDefinition(localName).implicitNamespacePrefix;\r\n\t        if (lang_1.isBlank(prefix) && lang_1.isPresent(parentElement)) {\r\n\t            prefix = html_tags_1.getNsPrefix(parentElement.name);\r\n\t        }\r\n\t    }\r\n\t    return mergeNsAndName(prefix, localName);\r\n\t}\r\n\t//# sourceMappingURL=data:application/json;base64,\n\n/***/ },\n\n/***/ 91:\n/***/ function(module, exports) {\n\n\t'use strict';var ParseLocation = (function () {\r\n\t    function ParseLocation(file, offset, line, col) {\r\n\t        this.file = file;\r\n\t        this.offset = offset;\r\n\t        this.line = line;\r\n\t        this.col = col;\r\n\t    }\r\n\t    ParseLocation.prototype.toString = function () { return this.file.url + \"@\" + this.line + \":\" + this.col; };\r\n\t    return ParseLocation;\r\n\t})();\r\n\texports.ParseLocation = ParseLocation;\r\n\tvar ParseSourceFile = (function () {\r\n\t    function ParseSourceFile(content, url) {\r\n\t        this.content = content;\r\n\t        this.url = url;\r\n\t    }\r\n\t    return ParseSourceFile;\r\n\t})();\r\n\texports.ParseSourceFile = ParseSourceFile;\r\n\tvar ParseError = (function () {\r\n\t    function ParseError(location, msg) {\r\n\t        this.location = location;\r\n\t        this.msg = msg;\r\n\t    }\r\n\t    ParseError.prototype.toString = function () {\r\n\t        var source = this.location.file.content;\r\n\t        var ctxStart = this.location.offset;\r\n\t        if (ctxStart > source.length - 1) {\r\n\t            ctxStart = source.length - 1;\r\n\t        }\r\n\t        var ctxEnd = ctxStart;\r\n\t        var ctxLen = 0;\r\n\t        var ctxLines = 0;\r\n\t        while (ctxLen < 100 && ctxStart > 0) {\r\n\t            ctxStart--;\r\n\t            ctxLen++;\r\n\t            if (source[ctxStart] == \"\\n\") {\r\n\t                if (++ctxLines == 3) {\r\n\t                    break;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        ctxLen = 0;\r\n\t        ctxLines = 0;\r\n\t        while (ctxLen < 100 && ctxEnd < source.length - 1) {\r\n\t            ctxEnd++;\r\n\t            ctxLen++;\r\n\t            if (source[ctxEnd] == \"\\n\") {\r\n\t                if (++ctxLines == 3) {\r\n\t                    break;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        var context = source.substring(ctxStart, this.location.offset) + '[ERROR ->]' +\r\n\t            source.substring(this.location.offset, ctxEnd + 1);\r\n\t        return this.msg + \" (\\\"\" + context + \"\\\"): \" + this.location;\r\n\t    };\r\n\t    return ParseError;\r\n\t})();\r\n\texports.ParseError = ParseError;\r\n\tvar ParseSourceSpan = (function () {\r\n\t    function ParseSourceSpan(start, end) {\r\n\t        this.start = start;\r\n\t        this.end = end;\r\n\t    }\r\n\t    ParseSourceSpan.prototype.toString = function () {\r\n\t        return this.start.file.content.substring(this.start.offset, this.end.offset);\r\n\t    };\r\n\t    return ParseSourceSpan;\r\n\t})();\r\n\texports.ParseSourceSpan = ParseSourceSpan;\r\n\t//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFyc2VfdXRpbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImFuZ3VsYXIyL3NyYy9jb21waWxlci9wYXJzZV91dGlsLnRzIl0sIm5hbWVzIjpbIlBhcnNlTG9jYXRpb24iLCJQYXJzZUxvY2F0aW9uLmNvbnN0cnVjdG9yIiwiUGFyc2VMb2NhdGlvbi50b1N0cmluZyIsIlBhcnNlU291cmNlRmlsZSIsIlBhcnNlU291cmNlRmlsZS5jb25zdHJ1Y3RvciIsIlBhcnNlRXJyb3IiLCJQYXJzZUVycm9yLmNvbnN0cnVjdG9yIiwiUGFyc2VFcnJvci50b1N0cmluZyIsIlBhcnNlU291cmNlU3BhbiIsIlBhcnNlU291cmNlU3Bhbi5jb25zdHJ1Y3RvciIsIlBhcnNlU291cmNlU3Bhbi50b1N0cmluZyJdLCJtYXBwaW5ncyI6IkFBQUE7SUFDRUEsdUJBQW1CQSxJQUFxQkEsRUFBU0EsTUFBY0EsRUFBU0EsSUFBWUEsRUFDakVBLEdBQVdBO1FBRFhDLFNBQUlBLEdBQUpBLElBQUlBLENBQWlCQTtRQUFTQSxXQUFNQSxHQUFOQSxNQUFNQSxDQUFRQTtRQUFTQSxTQUFJQSxHQUFKQSxJQUFJQSxDQUFRQTtRQUNqRUEsUUFBR0EsR0FBSEEsR0FBR0EsQ0FBUUE7SUFBR0EsQ0FBQ0E7SUFFbENELGdDQUFRQSxHQUFSQSxjQUFxQkUsTUFBTUEsQ0FBSUEsSUFBSUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsR0FBR0EsU0FBSUEsSUFBSUEsQ0FBQ0EsSUFBSUEsU0FBSUEsSUFBSUEsQ0FBQ0EsR0FBS0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7SUFDNUVGLG9CQUFDQTtBQUFEQSxDQUFDQSxBQUxELElBS0M7QUFMWSxxQkFBYSxnQkFLekIsQ0FBQTtBQUVEO0lBQ0VHLHlCQUFtQkEsT0FBZUEsRUFBU0EsR0FBV0E7UUFBbkNDLFlBQU9BLEdBQVBBLE9BQU9BLENBQVFBO1FBQVNBLFFBQUdBLEdBQUhBLEdBQUdBLENBQVFBO0lBQUdBLENBQUNBO0lBQzVERCxzQkFBQ0E7QUFBREEsQ0FB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QUNBLEtBQUtBLENBQUNBLElBQUlBLENBQUNBLE9BQU9BLENBQUNBLFNBQVNBLENBQUNBLElBQUlBLENBQUNBLEtBQUtBLENBQUNBLE1BQU1BLEVBQUVBLElBQUlBLENBQUNBLEdBQUdBLENBQUNBLE1BQU1BLENBQUNBLENBQUNBO0lBQy9FQSxDQUFDQTtJQUNIRixzQkFBQ0E7QUFBREEsQ0FBQ0EsQUFORCxJQU1DO0FBTlksdUJBQWUsa0JBTTNCLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgUGFyc2VMb2NhdGlvbiB7XG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBmaWxlOiBQYXJzZVNvdXJjZUZpbGUsIHB1YmxpYyBvZmZzZXQ6IG51bWJlciwgcHVibGljIGxpbmU6IG51bWJlcixcbiAgICAgICAgICAgICAgcHVibGljIGNvbDogbnVtYmVyKSB7fVxuXG4gIHRvU3RyaW5nKCk6IHN0cmluZyB7IHJldHVybiBgJHt0aGlzLmZpbGUudXJsfUAke3RoaXMubGluZX06JHt0aGlzLmNvbH1gOyB9XG59XG5cbmV4cG9ydCBjbGFzcyBQYXJzZVNvdXJjZUZpbGUge1xuICBjb25zdHJ1Y3RvcihwdWJsaWMgY29udGVudDogc3RyaW5nLCBwdWJsaWMgdXJsOiBzdHJpbmcpIHt9XG59XG5cbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBQYXJzZUVycm9yIHtcbiAgY29uc3RydWN0b3IocHVibGljIGxvY2F0aW9uOiBQYXJzZUxvY2F0aW9uLCBwdWJsaWMgbXNnOiBzdHJpbmcpIHt9XG5cbiAgdG9TdHJpbmcoKTogc3RyaW5nIHtcbiAgICB2YXIgc291cmNlID0gdGhpcy5sb2NhdGlvbi5maWxlLmNvbnRlbnQ7XG4gICAgdmFyIGN0eFN0YXJ0ID0gdGhpcy5sb2NhdGlvbi5vZmZzZXQ7XG4gICAgaWYgKGN0eFN0YXJ0ID4gc291cmNlLmxlbmd0aCAtIDEpIHtcbiAgICAgIGN0eFN0YXJ0ID0gc291cmNlLmxlbmd0aCAtIDE7XG4gICAgfVxuICAgIHZhciBjdHhFbmQgPSBjdHhTdGFydDtcbiAgICB2YXIgY3R4TGVuID0gMDtcbiAgICB2YXIgY3R4TGluZXMgPSAwO1xuXG4gICAgd2hpbGUgKGN0eExlbiA8IDEwMCAmJiBjdHhTdGFydCA+IDApIHtcbiAgICAgIGN0eFN0YXJ0LS07XG4gICAgICBjdHhMZW4rKztcbiAgICAgIGlmIChzb3VyY2VbY3R4U3RhcnRdID09IFwiXFxuXCIpIHtcbiAgICAgICAgaWYgKCsrY3R4TGluZXMgPT0gMykge1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgY3R4TGVuID0gMDtcbiAgICBjdHhMaW5lcyA9IDA7XG4gICAgd2hpbGUgKGN0eExlbiA8IDEwMCAmJiBjdHhFbmQgPCBzb3VyY2UubGVuZ3RoIC0gMSkge1xuICAgICAgY3R4RW5kKys7XG4gICAgICBjdHhMZW4rKztcbiAgICAgIGlmIChzb3VyY2VbY3R4RW5kXSA9PSBcIlxcblwiKSB7XG4gICAgICAgIGlmICgrK2N0eExpbmVzID09IDMpIHtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGxldCBjb250ZXh0ID0gc291cmNlLnN1YnN0cmluZyhjdHhTdGFydCwgdGhpcy5sb2NhdGlvbi5vZmZzZXQpICsgJ1tFUlJPUiAtPl0nICtcbiAgICAgICAgICAgICAgICAgIHNvdXJjZS5zdWJzdHJpbmcodGhpcy5sb2NhdGlvbi5vZmZzZXQsIGN0eEVuZCArIDEpO1xuXG4gICAgcmV0dXJuIGAke3RoaXMubXNnfSAoXCIke2NvbnRleHR9XCIpOiAke3RoaXMubG9jYXRpb259YDtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgUGFyc2VTb3VyY2VTcGFuIHtcbiAgY29uc3RydWN0b3IocHVibGljIHN0YXJ0OiBQYXJzZUxvY2F0aW9uLCBwdWJsaWMgZW5kOiBQYXJzZUxvY2F0aW9uKSB7fVxuXG4gIHRvU3RyaW5nKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMuc3RhcnQuZmlsZS5jb250ZW50LnN1YnN0cmluZyh0aGlzLnN0YXJ0Lm9mZnNldCwgdGhpcy5lbmQub2Zmc2V0KTtcbiAgfVxufVxuIl19\n\n/***/ },\n\n/***/ 92:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';var __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar lang_1 = __webpack_require__(1);\r\n\tvar collection_1 = __webpack_require__(3);\r\n\tvar template_ast_1 = __webpack_require__(32);\r\n\tvar source_module_1 = __webpack_require__(31);\r\n\tvar view_1 = __webpack_require__(50);\r\n\tvar view_type_1 = __webpack_require__(51);\r\n\tvar element_1 = __webpack_require__(49);\r\n\tvar util_1 = __webpack_require__(24);\r\n\tvar di_1 = __webpack_require__(6);\r\n\texports.PROTO_VIEW_JIT_IMPORTS = lang_1.CONST_EXPR({ 'AppProtoView': view_1.AppProtoView, 'AppProtoElement': element_1.AppProtoElement, 'ViewType': view_type_1.ViewType });\r\n\t// TODO: have a single file that reexports everything needed for\r\n\t// codegen explicitly\r\n\t// - helps understanding what codegen works against\r\n\t// - less imports in codegen code\r\n\texports.APP_VIEW_MODULE_REF = source_module_1.moduleRef('package:angular2/src/core/linker/view' + util_1.MODULE_SUFFIX);\r\n\texports.VIEW_TYPE_MODULE_REF = source_module_1.moduleRef('package:angular2/src/core/linker/view_type' + util_1.MODULE_SUFFIX);\r\n\texports.APP_EL_MODULE_REF = source_module_1.moduleRef('package:angular2/src/core/linker/element' + util_1.MODULE_SUFFIX);\r\n\texports.METADATA_MODULE_REF = source_module_1.moduleRef('package:angular2/src/core/metadata/view' + util_1.MODULE_SUFFIX);\r\n\tvar IMPLICIT_TEMPLATE_VAR = '\\$implicit';\r\n\tvar CLASS_ATTR = 'class';\r\n\tvar STYLE_ATTR = 'style';\r\n\tvar ProtoViewCompiler = (function () {\r\n\t    function ProtoViewCompiler() {\r\n\t    }\r\n\t    ProtoViewCompiler.prototype.compileProtoViewRuntime = function (metadataCache, component, template, pipes) {\r\n\t        var protoViewFactory = new RuntimeProtoViewFactory(metadataCache, component, pipes);\r\n\t        var allProtoViews = [];\r\n\t        protoViewFactory.createCompileProtoView(template, [], [], allProtoViews);\r\n\t        return new CompileProtoViews([], allProtoViews);\r\n\t    };\r\n\t    ProtoViewCompiler.prototype.compileProtoViewCodeGen = function (resolvedMetadataCacheExpr, component, template, pipes) {\r\n\t        var protoViewFactory = new CodeGenProtoViewFactory(resolvedMetadataCacheExpr, component, pipes);\r\n\t        var allProtoViews = [];\r\n\t        var allStatements = [];\r\n\t        protoViewFactory.createCompileProtoView(template, [], allStatements, allProtoViews);\r\n\t        return new CompileProtoViews(allStatements.map(function (stmt) { return stmt.statement; }), allProtoViews);\r\n\t    };\r\n\t    ProtoViewCompiler = __decorate([\r\n\t        di_1.Injectable(), \r\n\t        __metadata('design:paramtypes', [])\r\n\t    ], ProtoViewCompiler);\r\n\t    return ProtoViewCompiler;\r\n\t})();\r\n\texports.ProtoViewCompiler = ProtoViewCompiler;\r\n\tvar CompileProtoViews = (function () {\r\n\t    function CompileProtoViews(declarations, protoViews) {\r\n\t        this.declarations = declarations;\r\n\t        this.protoViews = protoViews;\r\n\t    }\r\n\t    return CompileProtoViews;\r\n\t})();\r\n\texports.CompileProtoViews = CompileProtoViews;\r\n\tvar CompileProtoView = (function () {\r\n\t    function CompileProtoView(embeddedTemplateIndex, protoElements, protoView) {\r\n\t        this.embeddedTemplateIndex = embeddedTemplateIndex;\r\n\t        this.protoElements = protoElements;\r\n\t        this.protoView = protoView;\r\n\t    }\r\n\t    return CompileProtoView;\r\n\t})();\r\n\texports.CompileProtoView = CompileProtoView;\r\n\tvar CompileProtoElement = (function () {\r\n\t    function CompileProtoElement(boundElementIndex, attrNameAndValues, variableNameAndValues, renderEvents, directives, embeddedTemplateIndex, appProtoEl) {\r\n\t        this.boundElementIndex = boundElementIndex;\r\n\t        this.attrNameAndValues = attrNameAndValues;\r\n\t        this.variableNameAndValues = variableNameAndValues;\r\n\t        this.renderEvents = renderEvents;\r\n\t        this.directives = directives;\r\n\t        this.embeddedTemplateIndex = embeddedTemplateIndex;\r\n\t        this.appProtoEl = appProtoEl;\r\n\t    }\r\n\t    return CompileProtoElement;\r\n\t})();\r\n\texports.CompileProtoElement = CompileProtoElement;\r\n\tfunction visitAndReturnContext(visitor, asts, context) {\r\n\t    template_ast_1.templateVisitAll(visitor, asts, context);\r\n\t    return context;\r\n\t}\r\n\tvar ProtoViewFactory = (function () {\r\n\t    function ProtoViewFactory(component) {\r\n\t        this.component = component;\r\n\t    }\r\n\t    ProtoViewFactory.prototype.createCompileProtoView = function (template, templateVariableBindings, targetStatements, targetProtoViews) {\r\n\t        var embeddedTemplateIndex = targetProtoViews.length;\r\n\t        // Note: targetProtoViews needs to be in depth first order.\r\n\t        // So we \"reserve\" a space here that we fill after the recursion is done\r\n\t        targetProtoViews.push(null);\r\n\t        var builder = new ProtoViewBuilderVisitor(this, targetStatements, targetProtoViews);\r\n\t        template_ast_1.templateVisitAll(builder, template);\r\n\t        var viewType = getViewType(this.component, embeddedTemplateIndex);\r\n\t        var appProtoView = this.createAppProtoView(embeddedTemplateIndex, viewType, templateVariableBindings, targetStatements);\r\n\t        var cpv = new CompileProtoView(embeddedTemplateIndex, builder.protoElements, appProtoView);\r\n\t        targetProtoViews[embeddedTemplateIndex] = cpv;\r\n\t        return cpv;\r\n\t    };\r\n\t    return ProtoViewFactory;\r\n\t})();\r\n\tvar CodeGenProtoViewFactory = (function (_super) {\r\n\t    __extends(CodeGenProtoViewFactory, _super);\r\n\t    function CodeGenProtoViewFactory(resolvedMetadataCacheExpr, component, pipes) {\r\n\t        _super.call(this, component);\r\n\t        this.resolvedMetadataCacheExpr = resolvedMetadataCacheExpr;\r\n\t        this.pipes = pipes;\r\n\t        this._nextVarId = 0;\r\n\t    }\r\n\t    CodeGenProtoViewFactory.prototype._nextProtoViewVar = function (embeddedTemplateIndex) {\r\n\t        return \"appProtoView\" + this._nextVarId++ + \"_\" + this.component.type.name + embeddedTemplateIndex;\r\n\t    };\r\n\t    CodeGenProtoViewFactory.prototype.createAppProtoView = function (embeddedTemplateIndex, viewType, templateVariableBindings, targetStatements) {\r\n\t        var protoViewVarName = this._nextProtoViewVar(embeddedTemplateIndex);\r\n\t        var viewTypeExpr = codeGenViewType(viewType);\r\n\t        var pipesExpr = embeddedTemplateIndex === 0 ?\r\n\t            codeGenTypesArray(this.pipes.map(function (pipeMeta) { return pipeMeta.type; })) :\r\n\t            null;\r\n\t        var statement = \"var \" + protoViewVarName + \" = \" + exports.APP_VIEW_MODULE_REF + \"AppProtoView.create(\" + this.resolvedMetadataCacheExpr.expression + \", \" + viewTypeExpr + \", \" + pipesExpr + \", \" + util_1.codeGenStringMap(templateVariableBindings) + \");\";\r\n\t        targetStatements.push(new util_1.Statement(statement));\r\n\t        return new util_1.Expression(protoViewVarName);\r\n\t    };\r\n\t    CodeGenProtoViewFactory.prototype.createAppProtoElement = function (boundElementIndex, attrNameAndValues, variableNameAndValues, directives, targetStatements) {\r\n\t        var varName = \"appProtoEl\" + this._nextVarId++ + \"_\" + this.component.type.name;\r\n\t        var value = exports.APP_EL_MODULE_REF + \"AppProtoElement.create(\\n        \" + this.resolvedMetadataCacheExpr.expression + \",\\n        \" + boundElementIndex + \",\\n        \" + util_1.codeGenStringMap(attrNameAndValues) + \",\\n        \" + codeGenDirectivesArray(directives) + \",\\n        \" + util_1.codeGenStringMap(variableNameAndValues) + \"\\n      )\";\r\n\t        var statement = \"var \" + varName + \" = \" + value + \";\";\r\n\t        targetStatements.push(new util_1.Statement(statement));\r\n\t        return new util_1.Expression(varName);\r\n\t    };\r\n\t    return CodeGenProtoViewFactory;\r\n\t})(ProtoViewFactory);\r\n\tvar RuntimeProtoViewFactory = (function (_super) {\r\n\t    __extends(RuntimeProtoViewFactory, _super);\r\n\t    function RuntimeProtoViewFactory(metadataCache, component, pipes) {\r\n\t        _super.call(this, component);\r\n\t        this.metadataCache = metadataCache;\r\n\t        this.pipes = pipes;\r\n\t    }\r\n\t    RuntimeProtoViewFactory.prototype.createAppProtoView = function (embeddedTemplateIndex, viewType, templateVariableBindings, targetStatements) {\r\n\t        var pipes = embeddedTemplateIndex === 0 ? this.pipes.map(function (pipeMeta) { return pipeMeta.type.runtime; }) : [];\r\n\t        var templateVars = keyValueArrayToStringMap(templateVariableBindings);\r\n\t        return view_1.AppProtoView.create(this.metadataCache, viewType, pipes, templateVars);\r\n\t    };\r\n\t    RuntimeProtoViewFactory.prototype.createAppProtoElement = function (boundElementIndex, attrNameAndValues, variableNameAndValues, directives, targetStatements) {\r\n\t        var attrs = keyValueArrayToStringMap(attrNameAndValues);\r\n\t        return element_1.AppProtoElement.create(this.metadataCache, boundElementIndex, attrs, directives.map(function (dirMeta) { return dirMeta.type.runtime; }), keyValueArrayToStringMap(variableNameAndValues));\r\n\t    };\r\n\t    return RuntimeProtoViewFactory;\r\n\t})(ProtoViewFactory);\r\n\tvar ProtoViewBuilderVisitor = (function () {\r\n\t    function ProtoViewBuilderVisitor(factory, allStatements, allProtoViews) {\r\n\t        this.factory = factory;\r\n\t        this.allStatements = allStatements;\r\n\t        this.allProtoViews = allProtoViews;\r\n\t        this.protoElements = [];\r\n\t        this.boundElementCount = 0;\r\n\t    }\r\n\t    ProtoViewBuilderVisitor.prototype._readAttrNameAndValues = function (directives, attrAsts) {\r\n\t        var attrs = visitAndReturnContext(this, attrAsts, {});\r\n\t        directives.forEach(function (directiveMeta) {\r\n\t            collection_1.StringMapWrapper.forEach(directiveMeta.hostAttributes, function (value, name) {\r\n\t                var prevValue = attrs[name];\r\n\t                attrs[name] = lang_1.isPresent(prevValue) ? mergeAttributeValue(name, prevValue, value) : value;\r\n\t            });\r\n\t        });\r\n\t        return mapToKeyValueArray(attrs);\r\n\t    };\r\n\t    ProtoViewBuilderVisitor.prototype.visitBoundText = function (ast, context) { return null; };\r\n\t    ProtoViewBuilderVisitor.prototype.visitText = function (ast, context) { return null; };\r\n\t    ProtoViewBuilderVisitor.prototype.visitNgContent = function (ast, context) { return null; };\r\n\t    ProtoViewBuilderVisitor.prototype.visitElement = function (ast, context) {\r\n\t        var _this = this;\r\n\t        var boundElementIndex = null;\r\n\t        if (ast.isBound()) {\r\n\t            boundElementIndex = this.boundElementCount++;\r\n\t        }\r\n\t        var component = ast.getComponent();\r\n\t        var variableNameAndValues = [];\r\n\t        if (lang_1.isBlank(component)) {\r\n\t            ast.exportAsVars.forEach(function (varAst) { variableNameAndValues.push([varAst.name, null]); });\r\n\t        }\r\n\t        var directives = [];\r\n\t        var renderEvents = visitAndReturnContext(this, ast.outputs, new Map());\r\n\t        collection_1.ListWrapper.forEachWithIndex(ast.directives, function (directiveAst, index) {\r\n\t            directiveAst.visit(_this, new DirectiveContext(index, boundElementIndex, renderEvents, variableNameAndValues, directives));\r\n\t        });\r\n\t        var renderEventArray = [];\r\n\t        renderEvents.forEach(function (eventAst, _) { return renderEventArray.push(eventAst); });\r\n\t        var attrNameAndValues = this._readAttrNameAndValues(directives, ast.attrs);\r\n\t        this._addProtoElement(ast.isBound(), boundElementIndex, attrNameAndValues, variableNameAndValues, renderEventArray, directives, null);\r\n\t        template_ast_1.templateVisitAll(this, ast.children);\r\n\t        return null;\r\n\t    };\r\n\t    ProtoViewBuilderVisitor.prototype.visitEmbeddedTemplate = function (ast, context) {\r\n\t        var _this = this;\r\n\t        var boundElementIndex = this.boundElementCount++;\r\n\t        var directives = [];\r\n\t        collection_1.ListWrapper.forEachWithIndex(ast.directives, function (directiveAst, index) {\r\n\t            directiveAst.visit(_this, new DirectiveContext(index, boundElementIndex, new Map(), [], directives));\r\n\t        });\r\n\t        var attrNameAndValues = this._readAttrNameAndValues(directives, ast.attrs);\r\n\t        var templateVariableBindings = ast.vars.map(function (varAst) { return [varAst.value.length > 0 ? varAst.value : IMPLICIT_TEMPLATE_VAR, varAst.name]; });\r\n\t        var nestedProtoView = this.factory.createCompileProtoView(ast.children, templateVariableBindings, this.allStatements, this.allProtoViews);\r\n\t        this._addProtoElement(true, boundElementIndex, attrNameAndValues, [], [], directives, nestedProtoView.embeddedTemplateIndex);\r\n\t        return null;\r\n\t    };\r\n\t    ProtoViewBuilderVisitor.prototype._addProtoElement = function (isBound, boundElementIndex, attrNameAndValues, variableNameAndValues, renderEvents, directives, embeddedTemplateIndex) {\r\n\t        var appProtoEl = null;\r\n\t        if (isBound) {\r\n\t            appProtoEl =\r\n\t                this.factory.createAppProtoElement(boundElementIndex, attrNameAndValues, variableNameAndValues, directives, this.allStatements);\r\n\t        }\r\n\t        var compileProtoEl = new CompileProtoElement(boundElementIndex, attrNameAndValues, variableNameAndValues, renderEvents, directives, embeddedTemplateIndex, appProtoEl);\r\n\t        this.protoElements.push(compileProtoEl);\r\n\t    };\r\n\t    ProtoViewBuilderVisitor.prototype.visitVariable = function (ast, ctx) { return null; };\r\n\t    ProtoViewBuilderVisitor.prototype.visitAttr = function (ast, attrNameAndValues) {\r\n\t        attrNameAndValues[ast.name] = ast.value;\r\n\t        return null;\r\n\t    };\r\n\t    ProtoViewBuilderVisitor.prototype.visitDirective = function (ast, ctx) {\r\n\t        ctx.targetDirectives.push(ast.directive);\r\n\t        template_ast_1.templateVisitAll(this, ast.hostEvents, ctx.hostEventTargetAndNames);\r\n\t        ast.exportAsVars.forEach(function (varAst) { ctx.targetVariableNameAndValues.push([varAst.name, ctx.index]); });\r\n\t        return null;\r\n\t    };\r\n\t    ProtoViewBuilderVisitor.prototype.visitEvent = function (ast, eventTargetAndNames) {\r\n\t        eventTargetAndNames.set(ast.fullName, ast);\r\n\t        return null;\r\n\t    };\r\n\t    ProtoViewBuilderVisitor.prototype.visitDirectiveProperty = function (ast, context) { return null; };\r\n\t    ProtoViewBuilderVisitor.prototype.visitElementProperty = function (ast, context) { return null; };\r\n\t    return ProtoViewBuilderVisitor;\r\n\t})();\r\n\tfunction mapToKeyValueArray(data) {\r\n\t    var entryArray = [];\r\n\t    collection_1.StringMapWrapper.forEach(data, function (value, name) { entryArray.push([name, value]); });\r\n\t    // We need to sort to get a defined output order\r\n\t    // for tests and for caching generated artifacts...\r\n\t    collection_1.ListWrapper.sort(entryArray, function (entry1, entry2) { return lang_1.StringWrapper.compare(entry1[0], entry2[0]); });\r\n\t    var keyValueArray = [];\r\n\t    entryArray.forEach(function (entry) { keyValueArray.push([entry[0], entry[1]]); });\r\n\t    return keyValueArray;\r\n\t}\r\n\tfunction mergeAttributeValue(attrName, attrValue1, attrValue2) {\r\n\t    if (attrName == CLASS_ATTR || attrName == STYLE_ATTR) {\r\n\t        return attrValue1 + \" \" + attrValue2;\r\n\t    }\r\n\t    else {\r\n\t        return attrValue2;\r\n\t    }\r\n\t}\r\n\tvar DirectiveContext = (function () {\r\n\t    function DirectiveContext(index, boundElementIndex, hostEventTargetAndNames, targetVariableNameAndValues, targetDirectives) {\r\n\t        this.index = index;\r\n\t        this.boundElementIndex = boundElementIndex;\r\n\t        this.hostEventTargetAndNames = hostEventTargetAndNames;\r\n\t        this.targetVariableNameAndValues = targetVariableNameAndValues;\r\n\t        this.targetDirectives = targetDirectives;\r\n\t    }\r\n\t    return DirectiveContext;\r\n\t})();\r\n\tfunction keyValueArrayToStringMap(keyValueArray) {\r\n\t    var stringMap = {};\r\n\t    for (var i = 0; i < keyValueArray.length; i++) {\r\n\t        var entry = keyValueArray[i];\r\n\t        stringMap[entry[0]] = entry[1];\r\n\t    }\r\n\t    return stringMap;\r\n\t}\r\n\tfunction codeGenDirectivesArray(directives) {\r\n\t    var expressions = directives.map(function (directiveType) { return typeRef(directiveType.type); });\r\n\t    return \"[\" + expressions.join(',') + \"]\";\r\n\t}\r\n\tfunction codeGenTypesArray(types) {\r\n\t    var expressions = types.map(typeRef);\r\n\t    return \"[\" + expressions.join(',') + \"]\";\r\n\t}\r\n\tfunction codeGenViewType(value) {\r\n\t    if (lang_1.IS_DART) {\r\n\t        return \"\" + exports.VIEW_TYPE_MODULE_REF + value;\r\n\t    }\r\n\t    else {\r\n\t        return \"\" + value;\r\n\t    }\r\n\t}\r\n\tfunction typeRef(type) {\r\n\t    return \"\" + source_module_1.moduleRef(type.moduleUrl) + type.name;\r\n\t}\r\n\tfunction getViewType(component, embeddedTemplateIndex) {\r\n\t    if (embeddedTemplateIndex > 0) {\r\n\t        return view_type_1.ViewType.EMBEDDED;\r\n\t    }\r\n\t    else if (component.type.isHost) {\r\n\t        return view_type_1.ViewType.HOST;\r\n\t    }\r\n\t    else {\r\n\t        return view_type_1.ViewType.COMPONENT;\r\n\t    }\r\n\t}\r\n\t//# sourceMappingURL=data:application/json;base64,\n\n/***/ },\n\n/***/ 93:\n/***/ function(module, exports) {\n\n\t'use strict';var ElementSchemaRegistry = (function () {\r\n\t    function ElementSchemaRegistry() {\r\n\t    }\r\n\t    ElementSchemaRegistry.prototype.hasProperty = function (tagName, propName) { return true; };\r\n\t    ElementSchemaRegistry.prototype.getMappedPropName = function (propName) { return propName; };\r\n\t    return ElementSchemaRegistry;\r\n\t})();\r\n\texports.ElementSchemaRegistry = ElementSchemaRegistry;\r\n\t//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWxlbWVudF9zY2hlbWFfcmVnaXN0cnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJhbmd1bGFyMi9zcmMvY29tcGlsZXIvc2NoZW1hL2VsZW1lbnRfc2NoZW1hX3JlZ2lzdHJ5LnRzIl0sIm5hbWVzIjpbIkVsZW1lbnRTY2hlbWFSZWdpc3RyeSIsIkVsZW1lbnRTY2hlbWFSZWdpc3RyeS5jb25zdHJ1Y3RvciIsIkVsZW1lbnRTY2hlbWFSZWdpc3RyeS5oYXNQcm9wZXJ0eSIsIkVsZW1lbnRTY2hlbWFSZWdpc3RyeS5nZXRNYXBwZWRQcm9wTmFtZSJdLCJtYXBwaW5ncyI6IkFBQUE7SUFBQUE7SUFHQUMsQ0FBQ0E7SUFGQ0QsMkNBQVdBLEdBQVhBLFVBQVlBLE9BQWVBLEVBQUVBLFFBQWdCQSxJQUFhRSxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQSxDQUFDQSxDQUFDQTtJQUN4RUYsaURBQWlCQSxHQUFqQkEsVUFBa0JBLFFBQWdCQSxJQUFZRyxNQUFNQSxDQUFDQSxRQUFRQSxDQUFDQSxDQUFDQSxDQUFDQTtJQUNsRUgsNEJBQUNBO0FBQURBLENBQUNBLEFBSEQsSUFHQztBQUhZLDZCQUFxQix3QkFHakMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBFbGVtZW50U2NoZW1hUmVnaXN0cnkge1xuICBoYXNQcm9wZXJ0eSh0YWdOYW1lOiBzdHJpbmcsIHByb3BOYW1lOiBzdHJpbmcpOiBib29sZWFuIHsgcmV0dXJuIHRydWU7IH1cbiAgZ2V0TWFwcGVkUHJvcE5hbWUocHJvcE5hbWU6IHN0cmluZyk6IHN0cmluZyB7IHJldHVybiBwcm9wTmFtZTsgfVxufVxuIl19\n\n/***/ },\n\n/***/ 94:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';// Some of the code comes from WebComponents.JS\r\n\t// https://github.com/webcomponents/webcomponentsjs/blob/master/src/HTMLImports/path.js\r\n\tvar lang_1 = __webpack_require__(1);\r\n\tvar StyleWithImports = (function () {\r\n\t    function StyleWithImports(style, styleUrls) {\r\n\t        this.style = style;\r\n\t        this.styleUrls = styleUrls;\r\n\t    }\r\n\t    return StyleWithImports;\r\n\t})();\r\n\texports.StyleWithImports = StyleWithImports;\r\n\tfunction isStyleUrlResolvable(url) {\r\n\t    if (lang_1.isBlank(url) || url.length === 0 || url[0] == '/')\r\n\t        return false;\r\n\t    var schemeMatch = lang_1.RegExpWrapper.firstMatch(_urlWithSchemaRe, url);\r\n\t    return lang_1.isBlank(schemeMatch) || schemeMatch[1] == 'package' || schemeMatch[1] == 'asset';\r\n\t}\r\n\texports.isStyleUrlResolvable = isStyleUrlResolvable;\r\n\t/**\r\n\t * Rewrites stylesheets by resolving and removing the @import urls that\r\n\t * are either relative or don't have a `package:` scheme\r\n\t */\r\n\tfunction extractStyleUrls(resolver, baseUrl, cssText) {\r\n\t    var foundUrls = [];\r\n\t    var modifiedCssText = lang_1.StringWrapper.replaceAllMapped(cssText, _cssImportRe, function (m) {\r\n\t        var url = lang_1.isPresent(m[1]) ? m[1] : m[2];\r\n\t        if (!isStyleUrlResolvable(url)) {\r\n\t            // Do not attempt to resolve non-package absolute URLs with URI scheme\r\n\t            return m[0];\r\n\t        }\r\n\t        foundUrls.push(resolver.resolve(baseUrl, url));\r\n\t        return '';\r\n\t    });\r\n\t    return new StyleWithImports(modifiedCssText, foundUrls);\r\n\t}\r\n\texports.extractStyleUrls = extractStyleUrls;\r\n\tvar _cssImportRe = /@import\\s+(?:url\\()?\\s*(?:(?:['\"]([^'\"]*))|([^;\\)\\s]*))[^;]*;?/g;\r\n\t// TODO: can't use /^[^:/?#.]+:/g due to clang-format bug:\r\n\t//       https://github.com/angular/angular/issues/4596\r\n\tvar _urlWithSchemaRe = /^([a-zA-Z\\-\\+\\.]+):/g;\r\n\t//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVfdXJsX3Jlc29sdmVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYW5ndWxhcjIvc3JjL2NvbXBpbGVyL3N0eWxlX3VybF9yZXNvbHZlci50cyJdLCJuYW1lcyI6WyJTdHlsZVdpdGhJbXBvcnRzIiwiU3R5bGVXaXRoSW1wb3J0cy5jb25zdHJ1Y3RvciIsImlzU3R5bGVVcmxSZXNvbHZhYmxlIiwiZXh0cmFjdFN0eWxlVXJscyJdLCJtYXBwaW5ncyI6IkFBQUEsK0NBQStDO0FBQy9DLHVGQUF1RjtBQUV2RixxQkFBdUUsMEJBQTBCLENBQUMsQ0FBQTtBQUdsRztJQUNFQSwwQkFBbUJBLEtBQWFBLEVBQVNBLFNBQW1CQTtRQUF6Q0MsVUFBS0EsR0FBTEEsS0FBS0EsQ0FBUUE7UUFBU0EsY0FBU0EsR0FBVEEsU0FBU0EsQ0FBVUE7SUFBR0EsQ0FBQ0E7SUFDbEVELHVCQUFDQTtBQUFEQSxDQUFDQSxBQUZELElBRUM7QUFGWSx3QkFBZ0IsbUJBRTVCLENBQUE7QUFFRCw4QkFBcUMsR0FBVztJQUM5Q0UsRUFBRUEsQ0FBQ0EsQ0FBQ0EsY0FBT0EsQ0FBQ0EsR0FBR0EsQ0FBQ0EsSUFBSUEsR0FBR0EsQ0FBQ0EsTUFBTUEsS0FBS0EsQ0FBQ0EsSUFBSUEsR0FBR0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsSUFBSUEsR0FBR0EsQ0FBQ0E7UUFBQ0EsTUFBTUEsQ0FBQ0EsS0FBS0EsQ0FBQ0E7SUFDcEVBLElBQUlBLFdBQVdBLEdBQUdBLG9CQUFhQSxDQUFDQSxVQUFVQSxDQUFDQSxnQkFBZ0JBLEVBQUVBLEdBQUdBLENBQUNBLENBQUNBO0lBQ2xFQSxNQUFNQSxDQUFDQSxjQUFPQSxDQUFDQSxXQUFXQSxDQUFDQSxJQUFJQSxXQUFXQSxDQUFDQSxDQUFDQSxDQUFDQSxJQUFJQSxTQUFTQSxJQUFJQSxXQUFXQSxDQUFDQSxDQUFDQSxDQUFDQSxJQUFJQSxPQUFPQSxDQUFDQTtBQUMxRkEsQ0FBQ0E7QUFKZSw0QkFBb0IsdUJBSW5DLENBQUE7QUFFRDs7O0dBR0c7QUFDSCwwQkFBaUMsUUFBcUIsRUFBRSxPQUFlLEVBQ3RDLE9BQWU7SUFDOUNDLElBQUlBLFNBQVNBLEdBQUdBLEVBQUVBLENBQUNBO0lBQ25CQSxJQUFJQSxlQUFlQSxHQUFHQSxvQkFBYUEsQ0FBQ0EsZ0JBQWdCQSxDQUFDQSxPQUFPQSxFQUFFQSxZQUFZQSxFQUFFQSxVQUFDQSxDQUFDQTtRQUM1RUEsSUFBSUEsR0FBR0EsR0FBR0EsZ0JBQVNBLENBQUNBLENBQUNBLENBQUNBLENBQUNBLENBQUNBLENBQUNBLEdBQUdBLENBQUNBLENBQUNBLENBQUNBLENBQUNBLEdBQUdBLENBQUNBLENBQUNBLENBQUNBLENBQUNBLENBQUNBO1FBQ3hDQSxFQUFFQSxDQUFDQSxDQUFDQSxDQUFDQSxvQkFBb0JBLENBQUNBLEdBQUdBLENBQUNBLENBQUNBLENBQUNBLENBQUNBO1lBQy9CQSxzRUFBc0VBO1lBQ3RFQSxNQUFNQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQTtRQUNkQSxDQUFDQTtRQUNEQSxTQUFTQSxDQUFDQSxJQUFJQSxDQUFDQSxRQUFRQSxDQUFDQSxPQUFPQSxDQUFDQSxPQUFPQSxFQUFFQSxHQUFHQSxDQUFDQSxDQUFDQSxDQUFDQTtRQUMvQ0EsTUFBTUEsQ0FBQ0EsRUFBRUEsQ0FBQ0E7SUFDWkEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7SUFDSEEsTUFBTUEsQ0FBQ0EsSUFBSUEsZ0JBQWdCQSxDQUFDQSxlQUFlQSxFQUFFQSxTQUFTQSxDQUFDQSxDQUFDQTtBQUMxREEsQ0FBQ0E7QUFiZSx3QkFBZ0IsbUJBYS9CLENBQUE7QUFFRCxJQUFJLFlBQVksR0FBRyxpRUFBaUUsQ0FBQztBQUNyRiwwREFBMEQ7QUFDMUQsdURBQXVEO0FBQ3ZELElBQUksZ0JBQWdCLEdBQUcsc0JBQXNCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBTb21lIG9mIHRoZSBjb2RlIGNvbWVzIGZyb20gV2ViQ29tcG9uZW50cy5KU1xuLy8gaHR0cHM6Ly9naXRodWIuY29tL3dlYmNvbXBvbmVudHMvd2ViY29tcG9uZW50c2pzL2Jsb2IvbWFzdGVyL3NyYy9IVE1MSW1wb3J0cy9wYXRoLmpzXG5cbmltcG9ydCB7UmVnRXhwLCBSZWdFeHBXcmFwcGVyLCBTdHJpbmdXcmFwcGVyLCBpc1ByZXNlbnQsIGlzQmxhbmt9IGZyb20gJ2FuZ3VsYXIyL3NyYy9mYWNhZGUvbGFuZyc7XG5pbXBvcnQge1VybFJlc29sdmVyfSBmcm9tICdhbmd1bGFyMi9zcmMvY29tcGlsZXIvdXJsX3Jlc29sdmVyJztcblxuZXhwb3J0IGNsYXNzIFN0eWxlV2l0aEltcG9ydHMge1xuICBjb25zdHJ1Y3RvcihwdWJsaWMgc3R5bGU6IHN0cmluZywgcHVibGljIHN0eWxlVXJsczogc3RyaW5nW10pIHt9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc1N0eWxlVXJsUmVzb2x2YWJsZSh1cmw6IHN0cmluZyk6IGJvb2xlYW4ge1xuICBpZiAoaXNCbGFuayh1cmwpIHx8IHVybC5sZW5ndGggPT09IDAgfHwgdXJsWzBdID09ICcvJykgcmV0dXJuIGZhbHNlO1xuICB2YXIgc2NoZW1lTWF0Y2ggPSBSZWdFeHBXcmFwcGVyLmZpcnN0TWF0Y2goX3VybFdpdGhTY2hlbWFSZSwgdXJsKTtcbiAgcmV0dXJuIGlzQmxhbmsoc2NoZW1lTWF0Y2gpIHx8IHNjaGVtZU1hdGNoWzFdID09ICdwYWNrYWdlJyB8fCBzY2hlbWVNYXRjaFsxXSA9PSAnYXNzZXQnO1xufVxuXG4vKipcbiAqIFJld3JpdGVzIHN0eWxlc2hlZXRzIGJ5IHJlc29sdmluZyBhbmQgcmVtb3ZpbmcgdGhlIEBpbXBvcnQgdXJscyB0aGF0XG4gKiBhcmUgZWl0aGVyIHJlbGF0aXZlIG9yIGRvbid0IGhhdmUgYSBgcGFja2FnZTpgIHNjaGVtZVxuICovXG5leHBvcnQgZnVuY3Rpb24gZXh0cmFjdFN0eWxlVXJscyhyZXNvbHZlcjogVXJsUmVzb2x2ZXIsIGJhc2VVcmw6IHN0cmluZyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNzc1RleHQ6IHN0cmluZyk6IFN0eWxlV2l0aEltcG9ydHMge1xuICB2YXIgZm91bmRVcmxzID0gW107XG4gIHZhciBtb2RpZmllZENzc1RleHQgPSBTdHJpbmdXcmFwcGVyLnJlcGxhY2VBbGxNYXBwZWQoY3NzVGV4dCwgX2Nzc0ltcG9ydFJlLCAobSkgPT4ge1xuICAgIHZhciB1cmwgPSBpc1ByZXNlbnQobVsxXSkgPyBtWzFdIDogbVsyXTtcbiAgICBpZiAoIWlzU3R5bGVVcmxSZXNvbHZhYmxlKHVybCkpIHtcbiAgICAgIC8vIERvIG5vdCBhdHRlbXB0IHRvIHJlc29sdmUgbm9uLXBhY2thZ2UgYWJzb2x1dGUgVVJMcyB3aXRoIFVSSSBzY2hlbWVcbiAgICAgIHJldHVybiBtWzBdO1xuICAgIH1cbiAgICBmb3VuZFVybHMucHVzaChyZXNvbHZlci5yZXNvbHZlKGJhc2VVcmwsIHVybCkpO1xuICAgIHJldHVybiAnJztcbiAgfSk7XG4gIHJldHVybiBuZXcgU3R5bGVXaXRoSW1wb3J0cyhtb2RpZmllZENzc1RleHQsIGZvdW5kVXJscyk7XG59XG5cbnZhciBfY3NzSW1wb3J0UmUgPSAvQGltcG9ydFxccysoPzp1cmxcXCgpP1xccyooPzooPzpbJ1wiXShbXidcIl0qKSl8KFteO1xcKVxcc10qKSlbXjtdKjs/L2c7XG4vLyBUT0RPOiBjYW4ndCB1c2UgL15bXjovPyMuXSs6L2cgZHVlIHRvIGNsYW5nLWZvcm1hdCBidWc6XG4vLyAgICAgICBodHRwczovL2dpdGh1Yi5jb20vYW5ndWxhci9hbmd1bGFyL2lzc3Vlcy80NTk2XG52YXIgX3VybFdpdGhTY2hlbWFSZSA9IC9eKFthLXpBLVpcXC1cXCtcXC5dKyk6L2c7XG4iXX0=\n\n/***/ },\n\n/***/ 95:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar lang_1 = __webpack_require__(1);\r\n\tvar exceptions_1 = __webpack_require__(5);\r\n\tvar collection_1 = __webpack_require__(3);\r\n\tvar async_1 = __webpack_require__(10);\r\n\tvar directive_metadata_1 = __webpack_require__(59);\r\n\tvar template_ast_1 = __webpack_require__(32);\r\n\tvar di_1 = __webpack_require__(6);\r\n\tvar source_module_1 = __webpack_require__(31);\r\n\tvar change_detector_compiler_1 = __webpack_require__(140);\r\n\tvar style_compiler_1 = __webpack_require__(144);\r\n\tvar view_compiler_1 = __webpack_require__(147);\r\n\tvar proto_view_compiler_1 = __webpack_require__(92);\r\n\tvar template_parser_1 = __webpack_require__(96);\r\n\tvar template_normalizer_1 = __webpack_require__(145);\r\n\tvar runtime_metadata_1 = __webpack_require__(142);\r\n\tvar view_1 = __webpack_require__(50);\r\n\tvar change_detection_1 = __webpack_require__(15);\r\n\tvar resolved_metadata_cache_1 = __webpack_require__(165);\r\n\tvar util_1 = __webpack_require__(24);\r\n\texports.METADATA_CACHE_MODULE_REF = source_module_1.moduleRef('package:angular2/src/core/linker/resolved_metadata_cache' + util_1.MODULE_SUFFIX);\r\n\t/**\r\n\t * An internal module of the Angular compiler that begins with component types,\r\n\t * extracts templates, and eventually produces a compiled version of the component\r\n\t * ready for linking into an application.\r\n\t */\r\n\tvar TemplateCompiler = (function () {\r\n\t    function TemplateCompiler(_runtimeMetadataResolver, _templateNormalizer, _templateParser, _styleCompiler, _cdCompiler, _protoViewCompiler, _viewCompiler, _resolvedMetadataCache, _genConfig) {\r\n\t        this._runtimeMetadataResolver = _runtimeMetadataResolver;\r\n\t        this._templateNormalizer = _templateNormalizer;\r\n\t        this._templateParser = _templateParser;\r\n\t        this._styleCompiler = _styleCompiler;\r\n\t        this._cdCompiler = _cdCompiler;\r\n\t        this._protoViewCompiler = _protoViewCompiler;\r\n\t        this._viewCompiler = _viewCompiler;\r\n\t        this._resolvedMetadataCache = _resolvedMetadataCache;\r\n\t        this._genConfig = _genConfig;\r\n\t        this._hostCacheKeys = new Map();\r\n\t        this._compiledTemplateCache = new Map();\r\n\t        this._compiledTemplateDone = new Map();\r\n\t    }\r\n\t    TemplateCompiler.prototype.normalizeDirectiveMetadata = function (directive) {\r\n\t        if (!directive.isComponent) {\r\n\t            // For non components there is nothing to be normalized yet.\r\n\t            return async_1.PromiseWrapper.resolve(directive);\r\n\t        }\r\n\t        return this._templateNormalizer.normalizeTemplate(directive.type, directive.template)\r\n\t            .then(function (normalizedTemplate) { return new directive_metadata_1.CompileDirectiveMetadata({\r\n\t            type: directive.type,\r\n\t            isComponent: directive.isComponent,\r\n\t            dynamicLoadable: directive.dynamicLoadable,\r\n\t            selector: directive.selector,\r\n\t            exportAs: directive.exportAs,\r\n\t            changeDetection: directive.changeDetection,\r\n\t            inputs: directive.inputs,\r\n\t            outputs: directive.outputs,\r\n\t            hostListeners: directive.hostListeners,\r\n\t            hostProperties: directive.hostProperties,\r\n\t            hostAttributes: directive.hostAttributes,\r\n\t            lifecycleHooks: directive.lifecycleHooks,\r\n\t            template: normalizedTemplate\r\n\t        }); });\r\n\t    };\r\n\t    TemplateCompiler.prototype.compileHostComponentRuntime = function (type) {\r\n\t        var compMeta = this._runtimeMetadataResolver.getDirectiveMetadata(type);\r\n\t        var hostCacheKey = this._hostCacheKeys.get(type);\r\n\t        if (lang_1.isBlank(hostCacheKey)) {\r\n\t            hostCacheKey = new Object();\r\n\t            this._hostCacheKeys.set(type, hostCacheKey);\r\n\t            assertComponent(compMeta);\r\n\t            var hostMeta = directive_metadata_1.createHostComponentMeta(compMeta.type, compMeta.selector);\r\n\t            this._compileComponentRuntime(hostCacheKey, hostMeta, [compMeta], [], []);\r\n\t        }\r\n\t        return this._compiledTemplateDone.get(hostCacheKey)\r\n\t            .then(function (compiledTemplate) {\r\n\t            return new view_1.HostViewFactory(compMeta.selector, compiledTemplate.viewFactory);\r\n\t        });\r\n\t    };\r\n\t    TemplateCompiler.prototype.clearCache = function () {\r\n\t        this._styleCompiler.clearCache();\r\n\t        this._compiledTemplateCache.clear();\r\n\t        this._compiledTemplateDone.clear();\r\n\t        this._hostCacheKeys.clear();\r\n\t    };\r\n\t    TemplateCompiler.prototype.compileTemplatesCodeGen = function (components) {\r\n\t        var _this = this;\r\n\t        if (components.length === 0) {\r\n\t            throw new exceptions_1.BaseException('No components given');\r\n\t        }\r\n\t        var declarations = [];\r\n\t        components.forEach(function (componentWithDirs) {\r\n\t            var compMeta = componentWithDirs.component;\r\n\t            assertComponent(compMeta);\r\n\t            _this._compileComponentCodeGen(compMeta, componentWithDirs.directives, componentWithDirs.pipes, declarations);\r\n\t            if (compMeta.dynamicLoadable) {\r\n\t                var hostMeta = directive_metadata_1.createHostComponentMeta(compMeta.type, compMeta.selector);\r\n\t                var viewFactoryExpression = _this._compileComponentCodeGen(hostMeta, [compMeta], [], declarations);\r\n\t                var constructionKeyword = lang_1.IS_DART ? 'const' : 'new';\r\n\t                var compiledTemplateExpr = constructionKeyword + \" \" + proto_view_compiler_1.APP_VIEW_MODULE_REF + \"HostViewFactory('\" + compMeta.selector + \"',\" + viewFactoryExpression + \")\";\r\n\t                var varName = codeGenHostViewFactoryName(compMeta.type);\r\n\t                declarations.push(\"\" + util_1.codeGenExportVariable(varName) + compiledTemplateExpr + \";\");\r\n\t            }\r\n\t        });\r\n\t        var moduleUrl = components[0].component.type.moduleUrl;\r\n\t        return new source_module_1.SourceModule(\"\" + templateModuleUrl(moduleUrl), declarations.join('\\n'));\r\n\t    };\r\n\t    TemplateCompiler.prototype.compileStylesheetCodeGen = function (stylesheetUrl, cssText) {\r\n\t        return this._styleCompiler.compileStylesheetCodeGen(stylesheetUrl, cssText);\r\n\t    };\r\n\t    TemplateCompiler.prototype._compileComponentRuntime = function (cacheKey, compMeta, viewDirectives, pipes, compilingComponentsPath) {\r\n\t        var _this = this;\r\n\t        var uniqViewDirectives = removeDuplicates(viewDirectives);\r\n\t        var uniqViewPipes = removeDuplicates(pipes);\r\n\t        var compiledTemplate = this._compiledTemplateCache.get(cacheKey);\r\n\t        var done = this._compiledTemplateDone.get(cacheKey);\r\n\t        if (lang_1.isBlank(compiledTemplate)) {\r\n\t            compiledTemplate = new CompiledTemplate();\r\n\t            this._compiledTemplateCache.set(cacheKey, compiledTemplate);\r\n\t            done = async_1.PromiseWrapper\r\n\t                .all([this._styleCompiler.compileComponentRuntime(compMeta.template)].concat(uniqViewDirectives.map(function (dirMeta) { return _this.normalizeDirectiveMetadata(dirMeta); })))\r\n\t                .then(function (stylesAndNormalizedViewDirMetas) {\r\n\t                var normalizedViewDirMetas = stylesAndNormalizedViewDirMetas.slice(1);\r\n\t                var styles = stylesAndNormalizedViewDirMetas[0];\r\n\t                var parsedTemplate = _this._templateParser.parse(compMeta.template.template, normalizedViewDirMetas, uniqViewPipes, compMeta.type.name);\r\n\t                var childPromises = [];\r\n\t                var usedDirectives = DirectiveCollector.findUsedDirectives(parsedTemplate);\r\n\t                usedDirectives.components.forEach(function (component) { return _this._compileNestedComponentRuntime(component, compilingComponentsPath, childPromises); });\r\n\t                return async_1.PromiseWrapper.all(childPromises)\r\n\t                    .then(function (_) {\r\n\t                    var filteredPipes = filterPipes(parsedTemplate, uniqViewPipes);\r\n\t                    compiledTemplate.init(_this._createViewFactoryRuntime(compMeta, parsedTemplate, usedDirectives.directives, styles, filteredPipes));\r\n\t                    return compiledTemplate;\r\n\t                });\r\n\t            });\r\n\t            this._compiledTemplateDone.set(cacheKey, done);\r\n\t        }\r\n\t        return compiledTemplate;\r\n\t    };\r\n\t    TemplateCompiler.prototype._compileNestedComponentRuntime = function (childComponentDir, parentCompilingComponentsPath, childPromises) {\r\n\t        var compilingComponentsPath = collection_1.ListWrapper.clone(parentCompilingComponentsPath);\r\n\t        var childCacheKey = childComponentDir.type.runtime;\r\n\t        var childViewDirectives = this._runtimeMetadataResolver.getViewDirectivesMetadata(childComponentDir.type.runtime);\r\n\t        var childViewPipes = this._runtimeMetadataResolver.getViewPipesMetadata(childComponentDir.type.runtime);\r\n\t        var childIsRecursive = collection_1.ListWrapper.contains(compilingComponentsPath, childCacheKey);\r\n\t        compilingComponentsPath.push(childCacheKey);\r\n\t        this._compileComponentRuntime(childCacheKey, childComponentDir, childViewDirectives, childViewPipes, compilingComponentsPath);\r\n\t        if (!childIsRecursive) {\r\n\t            // Only wait for a child if it is not a cycle\r\n\t            childPromises.push(this._compiledTemplateDone.get(childCacheKey));\r\n\t        }\r\n\t    };\r\n\t    TemplateCompiler.prototype._createViewFactoryRuntime = function (compMeta, parsedTemplate, directives, styles, pipes) {\r\n\t        var _this = this;\r\n\t        if (lang_1.IS_DART || !this._genConfig.useJit) {\r\n\t            var changeDetectorFactories = this._cdCompiler.compileComponentRuntime(compMeta.type, compMeta.changeDetection, parsedTemplate);\r\n\t            var protoViews = this._protoViewCompiler.compileProtoViewRuntime(this._resolvedMetadataCache, compMeta, parsedTemplate, pipes);\r\n\t            return this._viewCompiler.compileComponentRuntime(compMeta, parsedTemplate, styles, protoViews.protoViews, changeDetectorFactories, function (compMeta) { return _this._getNestedComponentViewFactory(compMeta); });\r\n\t        }\r\n\t        else {\r\n\t            var declarations = [];\r\n\t            var viewFactoryExpr = this._createViewFactoryCodeGen('resolvedMetadataCache', compMeta, new source_module_1.SourceExpression([], 'styles'), parsedTemplate, pipes, declarations);\r\n\t            var vars = { 'exports': {}, 'styles': styles, 'resolvedMetadataCache': this._resolvedMetadataCache };\r\n\t            directives.forEach(function (dirMeta) {\r\n\t                vars[dirMeta.type.name] = dirMeta.type.runtime;\r\n\t                if (dirMeta.isComponent && dirMeta.type.runtime !== compMeta.type.runtime) {\r\n\t                    vars[(\"viewFactory_\" + dirMeta.type.name + \"0\")] = _this._getNestedComponentViewFactory(dirMeta);\r\n\t                }\r\n\t            });\r\n\t            pipes.forEach(function (pipeMeta) { return vars[pipeMeta.type.name] = pipeMeta.type.runtime; });\r\n\t            var declarationsWithoutImports = source_module_1.SourceModule.getSourceWithoutImports(declarations.join('\\n'));\r\n\t            return lang_1.evalExpression(\"viewFactory_\" + compMeta.type.name, viewFactoryExpr, declarationsWithoutImports, mergeStringMaps([vars, change_detector_compiler_1.CHANGE_DETECTION_JIT_IMPORTS, proto_view_compiler_1.PROTO_VIEW_JIT_IMPORTS, view_compiler_1.VIEW_JIT_IMPORTS]));\r\n\t        }\r\n\t    };\r\n\t    TemplateCompiler.prototype._getNestedComponentViewFactory = function (compMeta) {\r\n\t        return this._compiledTemplateCache.get(compMeta.type.runtime).viewFactory;\r\n\t    };\r\n\t    TemplateCompiler.prototype._compileComponentCodeGen = function (compMeta, directives, pipes, targetDeclarations) {\r\n\t        var uniqueDirectives = removeDuplicates(directives);\r\n\t        var uniqPipes = removeDuplicates(pipes);\r\n\t        var styleExpr = this._styleCompiler.compileComponentCodeGen(compMeta.template);\r\n\t        var parsedTemplate = this._templateParser.parse(compMeta.template.template, uniqueDirectives, uniqPipes, compMeta.type.name);\r\n\t        var filteredPipes = filterPipes(parsedTemplate, uniqPipes);\r\n\t        return this._createViewFactoryCodeGen(exports.METADATA_CACHE_MODULE_REF + \"CODEGEN_RESOLVED_METADATA_CACHE\", compMeta, styleExpr, parsedTemplate, filteredPipes, targetDeclarations);\r\n\t    };\r\n\t    TemplateCompiler.prototype._createViewFactoryCodeGen = function (resolvedMetadataCacheExpr, compMeta, styleExpr, parsedTemplate, pipes, targetDeclarations) {\r\n\t        var changeDetectorsExprs = this._cdCompiler.compileComponentCodeGen(compMeta.type, compMeta.changeDetection, parsedTemplate);\r\n\t        var protoViewExprs = this._protoViewCompiler.compileProtoViewCodeGen(new util_1.Expression(resolvedMetadataCacheExpr), compMeta, parsedTemplate, pipes);\r\n\t        var viewFactoryExpr = this._viewCompiler.compileComponentCodeGen(compMeta, parsedTemplate, styleExpr, protoViewExprs.protoViews, changeDetectorsExprs, codeGenComponentViewFactoryName);\r\n\t        util_1.addAll(changeDetectorsExprs.declarations, targetDeclarations);\r\n\t        util_1.addAll(protoViewExprs.declarations, targetDeclarations);\r\n\t        util_1.addAll(viewFactoryExpr.declarations, targetDeclarations);\r\n\t        return viewFactoryExpr.expression;\r\n\t    };\r\n\t    TemplateCompiler = __decorate([\r\n\t        di_1.Injectable(), \r\n\t        __metadata('design:paramtypes', [runtime_metadata_1.RuntimeMetadataResolver, template_normalizer_1.TemplateNormalizer, template_parser_1.TemplateParser, style_compiler_1.StyleCompiler, change_detector_compiler_1.ChangeDetectionCompiler, proto_view_compiler_1.ProtoViewCompiler, view_compiler_1.ViewCompiler, resolved_metadata_cache_1.ResolvedMetadataCache, change_detection_1.ChangeDetectorGenConfig])\r\n\t    ], TemplateCompiler);\r\n\t    return TemplateCompiler;\r\n\t})();\r\n\texports.TemplateCompiler = TemplateCompiler;\r\n\tvar NormalizedComponentWithViewDirectives = (function () {\r\n\t    function NormalizedComponentWithViewDirectives(component, directives, pipes) {\r\n\t        this.component = component;\r\n\t        this.directives = directives;\r\n\t        this.pipes = pipes;\r\n\t    }\r\n\t    return NormalizedComponentWithViewDirectives;\r\n\t})();\r\n\texports.NormalizedComponentWithViewDirectives = NormalizedComponentWithViewDirectives;\r\n\tvar CompiledTemplate = (function () {\r\n\t    function CompiledTemplate() {\r\n\t        this.viewFactory = null;\r\n\t    }\r\n\t    CompiledTemplate.prototype.init = function (viewFactory) { this.viewFactory = viewFactory; };\r\n\t    return CompiledTemplate;\r\n\t})();\r\n\tfunction assertComponent(meta) {\r\n\t    if (!meta.isComponent) {\r\n\t        throw new exceptions_1.BaseException(\"Could not compile '\" + meta.type.name + \"' because it is not a component.\");\r\n\t    }\r\n\t}\r\n\tfunction templateModuleUrl(moduleUrl) {\r\n\t    var urlWithoutSuffix = moduleUrl.substring(0, moduleUrl.length - util_1.MODULE_SUFFIX.length);\r\n\t    return urlWithoutSuffix + \".template\" + util_1.MODULE_SUFFIX;\r\n\t}\r\n\tfunction codeGenHostViewFactoryName(type) {\r\n\t    return \"hostViewFactory_\" + type.name;\r\n\t}\r\n\tfunction codeGenComponentViewFactoryName(nestedCompType) {\r\n\t    return source_module_1.moduleRef(templateModuleUrl(nestedCompType.type.moduleUrl)) + \"viewFactory_\" + nestedCompType.type.name + \"0\";\r\n\t}\r\n\tfunction mergeStringMaps(maps) {\r\n\t    var result = {};\r\n\t    maps.forEach(function (map) { collection_1.StringMapWrapper.forEach(map, function (value, key) { result[key] = value; }); });\r\n\t    return result;\r\n\t}\r\n\tfunction removeDuplicates(items) {\r\n\t    var res = [];\r\n\t    items.forEach(function (item) {\r\n\t        var hasMatch = res.filter(function (r) { return r.type.name == item.type.name && r.type.moduleUrl == item.type.moduleUrl &&\r\n\t            r.type.runtime == item.type.runtime; })\r\n\t            .length > 0;\r\n\t        if (!hasMatch) {\r\n\t            res.push(item);\r\n\t        }\r\n\t    });\r\n\t    return res;\r\n\t}\r\n\tvar DirectiveCollector = (function () {\r\n\t    function DirectiveCollector() {\r\n\t        this.directives = [];\r\n\t        this.components = [];\r\n\t    }\r\n\t    DirectiveCollector.findUsedDirectives = function (parsedTemplate) {\r\n\t        var collector = new DirectiveCollector();\r\n\t        template_ast_1.templateVisitAll(collector, parsedTemplate);\r\n\t        return collector;\r\n\t    };\r\n\t    DirectiveCollector.prototype.visitBoundText = function (ast, context) { return null; };\r\n\t    DirectiveCollector.prototype.visitText = function (ast, context) { return null; };\r\n\t    DirectiveCollector.prototype.visitNgContent = function (ast, context) { return null; };\r\n\t    DirectiveCollector.prototype.visitElement = function (ast, context) {\r\n\t        template_ast_1.templateVisitAll(this, ast.directives);\r\n\t        template_ast_1.templateVisitAll(this, ast.children);\r\n\t        return null;\r\n\t    };\r\n\t    DirectiveCollector.prototype.visitEmbeddedTemplate = function (ast, context) {\r\n\t        template_ast_1.templateVisitAll(this, ast.directives);\r\n\t        template_ast_1.templateVisitAll(this, ast.children);\r\n\t        return null;\r\n\t    };\r\n\t    DirectiveCollector.prototype.visitVariable = function (ast, ctx) { return null; };\r\n\t    DirectiveCollector.prototype.visitAttr = function (ast, attrNameAndValues) { return null; };\r\n\t    DirectiveCollector.prototype.visitDirective = function (ast, ctx) {\r\n\t        if (ast.directive.isComponent) {\r\n\t            this.components.push(ast.directive);\r\n\t        }\r\n\t        this.directives.push(ast.directive);\r\n\t        return null;\r\n\t    };\r\n\t    DirectiveCollector.prototype.visitEvent = function (ast, eventTargetAndNames) {\r\n\t        return null;\r\n\t    };\r\n\t    DirectiveCollector.prototype.visitDirectiveProperty = function (ast, context) { return null; };\r\n\t    DirectiveCollector.prototype.visitElementProperty = function (ast, context) { return null; };\r\n\t    return DirectiveCollector;\r\n\t})();\r\n\tfunction filterPipes(template, allPipes) {\r\n\t    var visitor = new PipeVisitor();\r\n\t    template_ast_1.templateVisitAll(visitor, template);\r\n\t    return allPipes.filter(function (pipeMeta) { return collection_1.SetWrapper.has(visitor.collector.pipes, pipeMeta.name); });\r\n\t}\r\n\tvar PipeVisitor = (function () {\r\n\t    function PipeVisitor() {\r\n\t        this.collector = new template_parser_1.PipeCollector();\r\n\t    }\r\n\t    PipeVisitor.prototype.visitBoundText = function (ast, context) {\r\n\t        ast.value.visit(this.collector);\r\n\t        return null;\r\n\t    };\r\n\t    PipeVisitor.prototype.visitText = function (ast, context) { return null; };\r\n\t    PipeVisitor.prototype.visitNgContent = function (ast, context) { return null; };\r\n\t    PipeVisitor.prototype.visitElement = function (ast, context) {\r\n\t        template_ast_1.templateVisitAll(this, ast.inputs);\r\n\t        template_ast_1.templateVisitAll(this, ast.outputs);\r\n\t        template_ast_1.templateVisitAll(this, ast.directives);\r\n\t        template_ast_1.templateVisitAll(this, ast.children);\r\n\t        return null;\r\n\t    };\r\n\t    PipeVisitor.prototype.visitEmbeddedTemplate = function (ast, context) {\r\n\t        template_ast_1.templateVisitAll(this, ast.outputs);\r\n\t        template_ast_1.templateVisitAll(this, ast.directives);\r\n\t        template_ast_1.templateVisitAll(this, ast.children);\r\n\t        return null;\r\n\t    };\r\n\t    PipeVisitor.prototype.visitVariable = function (ast, ctx) { return null; };\r\n\t    PipeVisitor.prototype.visitAttr = function (ast, attrNameAndValues) { return null; };\r\n\t    PipeVisitor.prototype.visitDirective = function (ast, ctx) {\r\n\t        template_ast_1.templateVisitAll(this, ast.inputs);\r\n\t        template_ast_1.templateVisitAll(this, ast.hostEvents);\r\n\t        template_ast_1.templateVisitAll(this, ast.hostProperties);\r\n\t        return null;\r\n\t    };\r\n\t    PipeVisitor.prototype.visitEvent = function (ast, eventTargetAndNames) {\r\n\t        ast.handler.visit(this.collector);\r\n\t        return null;\r\n\t    };\r\n\t    PipeVisitor.prototype.visitDirectiveProperty = function (ast, context) {\r\n\t        ast.value.visit(this.collector);\r\n\t        return null;\r\n\t    };\r\n\t    PipeVisitor.prototype.visitElementProperty = function (ast, context) {\r\n\t        ast.value.visit(this.collector);\r\n\t        return null;\r\n\t    };\r\n\t    return PipeVisitor;\r\n\t})();\r\n\t//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVtcGxhdGVfY29tcGlsZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJhbmd1bGFyMi9zcmMvY29tcGlsZXIvdGVtcGxhdGVfY29tcGlsZXIudHMiXSwibmFtZXMiOlsiVGVtcGxhdGVDb21waWxlciIsIlRlbXBsYXRlQ29tcGlsZXIuY29uc3RydWN0b3IiLCJUZW1wbGF0ZUNvbXBpbGVyLm5vcm1hbGl6ZURpcmVjdGl2ZU1ldGFkYXRhIiwiVGVtcGxhdGVDb21waWxlci5jb21waWxlSG9zdENvbXBvbmVudFJ1bnRpbWUiLCJUZW1wbGF0ZUNvbXBpbGVyLmNsZWFyQ2FjaGUiLCJUZW1wbGF0ZUNvbXBpbGVyLmNvbXBpbGVUZW1wbGF0ZXNDb2RlR2VuIiwiVGVtcGxhdGVDb21waWxlci5jb21waWxlU3R5bGVzaGVldENvZGVHZW4iLCJUZW1wbGF0ZUNvbXBpbGVyLl9jb21waWxlQ29tcG9uZW50UnVudGltZSIsIlRlbXBsYXRlQ29tcGlsZXIuX2NvbXBpbGVOZXN0ZWRDb21wb25lbnRSdW50aW1lIiwiVGVtcGxhdGVDb21waWxlci5fY3JlYXRlVmlld0ZhY3RvcnlSdW50aW1lIiwiVGVtcGxhdGVDb21waWxlci5fZ2V0TmVzdGVkQ29tcG9uZW50Vmlld0ZhY3RvcnkiLCJUZW1wbGF0ZUNvbXBpbGVyLl9jb21waWxlQ29tcG9uZW50Q29kZUdlbiIsIlRlbXBsYXRlQ29tcGlsZXIuX2NyZWF0ZVZpZXdGYWN0b3J5Q29kZUdlbiIsIk5vcm1hbGl6ZWRDb21wb25lbnRXaXRoVmlld0RpcmVjdGl2ZXMiLCJOb3JtYWxpemVkQ29tcG9uZW50V2l0aFZpZXdEaXJlY3RpdmVzLmNvbnN0cnVjdG9yIiwiQ29tcGlsZWRUZW1wbGF0ZSIsIkNvbXBpbGVkVGVtcGxhdGUuY29uc3RydWN0b3IiLCJDb21waWxlZFRlbXBsYXRlLmluaXQiLCJhc3NlcnRDb21wb25lbnQiLCJ0ZW1wbGF0ZU1vZHVsZVVybCIsImNvZGVHZW5Ib3N0Vmlld0ZhY3RvcnlOYW1lIiwiY29kZUdlbkNvbXBvbmVudFZpZXdGYWN0b3J5TmFtZSIsIm1lcmdlU3RyaW5nTWFwcyIsInJlbW92ZUR1cGxpY2F0ZXMiLCJEaXJlY3RpdmVDb2xsZWN0b3IiLCJEaXJlY3RpdmVDb2xsZWN0b3IuY29uc3RydWN0b3IiLCJEaXJlY3RpdmVDb2xsZWN0b3IuZmluZFVzZWREaXJlY3RpdmVzIiwiRGlyZWN0aXZlQ29sbGVjdG9yLnZpc2l0Qm91bmRUZXh0IiwiRGlyZWN0aXZlQ29sbGVjdG9yLnZpc2l0VGV4dCIsIkRpcmVjdGl2ZUNvbGxlY3Rvci52aXNpdE5nQ29udGVudCIsIkRpcmVjdGl2ZUNvbGxlY3Rvci52aXNpdEVsZW1lbnQiLCJEaXJlY3RpdmVDb2xsZWN0b3IudmlzaXRFbWJlZGRlZFRlbXBsYXRlIiwiRGlyZWN0aXZlQ29sbGVjdG9yLnZpc2l0VmFyaWFibGUiLCJEaXJlY3RpdmVDb2xsZWN0b3IudmlzaXRBdHRyIiwiRGlyZWN0aXZlQ29sbGVjdG9yLnZpc2l0RGlyZWN0aXZlIiwiRGlyZWN0aXZlQ29sbGVjdG9yLnZpc2l0RXZlbnQiLCJEaXJlY3RpdmVDb2xsZWN0b3IudmlzaXREaXJlY3RpdmVQcm9wZXJ0eSIsIkRpcmVjdGl2ZUNvbGxlY3Rvci52aXNpdEVsZW1lbnRQcm9wZXJ0eSIsImZpbHRlclBpcGVzIiwiUGlwZVZpc2l0b3IiLCJQaXBlVmlzaXRvci5jb25zdHJ1Y3RvciIsIlBpcGVWaXNpdG9yLnZpc2l0Qm91bmRUZXh0IiwiUGlwZVZpc2l0b3IudmlzaXRUZXh0IiwiUGlwZVZpc2l0b3IudmlzaXROZ0NvbnRlbnQiLCJQaXBlVmlzaXRvci52aXNpdEVsZW1lbnQiLCJQaXBlVmlzaXRvci52aXNpdEVtYmVkZGVkVGVtcGxhdGUiLCJQaXBlVmlzaXRvci52aXNpdFZhcmlhYmxlIiwiUGlwZVZpc2l0b3IudmlzaXRBdHRyIiwiUGlwZVZpc2l0b3IudmlzaXREaXJlY3RpdmUiLCJQaXBlVmlzaXRvci52aXNpdEV2ZW50IiwiUGlwZVZpc2l0b3IudmlzaXREaXJlY3RpdmVQcm9wZXJ0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QUFwQkEsVUFBcUJBLEdBQTRCQSxFQUFFQSxPQUFZQTtRQUM3RFksR0FBR0EsQ0FBQ0EsS0FBS0EsQ0FBQ0EsS0FBS0EsQ0FBQ0EsSUFBSUEsQ0FBQ0EsU0FBU0EsQ0FBQ0EsQ0FBQ0E7UUFDaENBLE1BQU1BLENBQUNBLElBQUlBLENBQUNBO0lBQ2RBLENBQUNBO0lBQ0haLGtCQUFDQTtBQUFEQSxDQUFDQSxBQTdDRCxJQTZDQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIElTX0RBUlQsXG4gIFR5cGUsXG4gIEpzb24sXG4gIGlzQmxhbmssXG4gIGlzUHJlc2VudCxcbiAgc3RyaW5naWZ5LFxuICBldmFsRXhwcmVzc2lvblxufSBmcm9tICdhbmd1bGFyMi9zcmMvZmFjYWRlL2xhbmcnO1xuaW1wb3J0IHtCYXNlRXhjZXB0aW9ufSBmcm9tICdhbmd1bGFyMi9zcmMvZmFjYWRlL2V4Y2VwdGlvbnMnO1xuaW1wb3J0IHtcbiAgTGlzdFdyYXBwZXIsXG4gIFNldFdyYXBwZXIsXG4gIE1hcFdyYXBwZXIsXG4gIFN0cmluZ01hcFdyYXBwZXJcbn0gZnJvbSAnYW5ndWxhcjIvc3JjL2ZhY2FkZS9jb2xsZWN0aW9uJztcbmltcG9ydCB7UHJvbWlzZVdyYXBwZXIsIFByb21pc2V9IGZyb20gJ2FuZ3VsYXIyL3NyYy9mYWNhZGUvYXN5bmMnO1xuaW1wb3J0IHtcbiAgY3JlYXRlSG9zdENvbXBvbmVudE1ldGEsXG4gIENvbXBpbGVEaXJlY3RpdmVNZXRhZGF0YSxcbiAgQ29tcGlsZVR5cGVNZXRhZGF0YSxcbiAgQ29tcGlsZVRlbXBsYXRlTWV0YWRhdGEsXG4gIENvbXBpbGVQaXBlTWV0YWRhdGEsXG4gIENvbXBpbGVNZXRhZGF0YVdpdGhUeXBlXG59IGZyb20gJy4vZGlyZWN0aXZlX21ldGFkYXRhJztcbmltcG9ydCB7XG4gIFRlbXBsYXRlQXN0LFxuICBUZW1wbGF0ZUFzdFZpc2l0b3IsXG4gIE5nQ29udGVudEFzdCxcbiAgRW1iZWRkZWRUZW1wbGF0ZUFzdCxcbiAgRWxlbWVudEFzdCxcbiAgVmFyaWFibGVBc3QsXG4gIEJvdW5kRXZlbnRBc3QsXG4gIEJvdW5kRWxlbWVudFByb3BlcnR5QXN0LFxuICBBdHRyQXN0LFxuICBCb3VuZFRleHRBc3QsXG4gIFRleHRBc3QsXG4gIERpcmVjdGl2ZUFzdCxcbiAgQm91bmREaXJlY3RpdmVQcm9wZXJ0eUFzdCxcbiAgdGVtcGxhdGVWaXNpdEFsbFxufSBmcm9tICcuL3RlbXBsYXRlX2FzdCc7XG5pbXBvcnQge0luamVjdGFibGV9IGZyb20gJ2FuZ3VsYXIyL3NyYy9jb3JlL2RpJztcbmltcG9ydCB7U291cmNlTW9kdWxlLCBtb2R1bGVSZWYsIFNvdXJjZUV4cHJlc3Npb259IGZyb20gJy4vc291cmNlX21vZHVsZSc7XG5pbXBvcnQge0NoYW5nZURldGVjdGlvbkNvbXBpbGVyLCBDSEFOR0VfREVURUNUSU9OX0pJVF9JTVBPUlRTfSBmcm9tICcuL2NoYW5nZV9kZXRlY3Rvcl9jb21waWxlcic7XG5pbXBvcnQge1N0eWxlQ29tcGlsZXJ9IGZyb20gJy4vc3R5bGVfY29tcGlsZXInO1xuaW1wb3J0IHtWaWV3Q29tcGlsZXIsIFZJRVdfSklUX0lNUE9SVFN9IGZyb20gJy4vdmlld19jb21waWxlcic7XG5pbXBvcnQge1xuICBQcm90b1ZpZXdDb21waWxlcixcbiAgQVBQX1ZJRVdfTU9EVUxFX1JFRixcbiAgQ29tcGlsZVByb3RvVmlldyxcbiAgUFJPVE9fVklFV19KSVRfSU1QT1JUU1xufSBmcm9tICcuL3Byb3RvX3ZpZXdfY29tcGlsZXInO1xuaW1wb3J0IHtUZW1wbGF0ZVBhcnNlciwgUGlwZUNvbGxlY3Rvcn0gZnJvbSAnLi90ZW1wbGF0ZV9wYXJzZXInO1xuaW1wb3J0IHtUZW1wbGF0ZU5vcm1hbGl6ZXJ9IGZyb20gJy4vdGVtcGxhdGVfbm9ybWFsaXplcic7XG5pbXBvcnQge1J1bnRpbWVNZXRhZGF0YVJlc29sdmVyfSBmcm9tICcuL3J1bnRpbWVfbWV0YWRhdGEnO1xuaW1wb3J0IHtIb3N0Vmlld0ZhY3Rvcnl9IGZyb20gJ2FuZ3VsYXIyL3NyYy9jb3JlL2xpbmtlci92aWV3JztcbmltcG9ydCB7Q2hhbmdlRGV0ZWN0b3JHZW5Db25maWd9IGZyb20gJ2FuZ3VsYXIyL3NyYy9jb3JlL2NoYW5nZV9kZXRlY3Rpb24vY2hhbmdlX2RldGVjdGlvbic7XG5pbXBvcnQge1Jlc29sdmVkTWV0YWRhdGFDYWNoZX0gZnJvbSAnYW5ndWxhcjIvc3JjL2NvcmUvbGlua2VyL3Jlc29sdmVkX21ldGFkYXRhX2NhY2hlJztcblxuaW1wb3J0IHtcbiAgY29kZUdlbkV4cG9ydFZhcmlhYmxlLFxuICBlc2NhcGVTaW5nbGVRdW90ZVN0cmluZyxcbiAgY29kZUdlblZhbHVlRm4sXG4gIE1PRFVMRV9TVUZGSVgsXG4gIGFkZEFsbCxcbiAgRXhwcmVzc2lvblxufSBmcm9tICcuL3V0aWwnO1xuXG5leHBvcnQgdmFyIE1FVEFEQVRBX0NBQ0hFX01PRFVMRV9SRUYgPVxuICAgIG1vZHVsZVJlZigncGFja2FnZTphbmd1bGFyMi9zcmMvY29yZS9saW5rZXIvcmVzb2x2ZWRfbWV0YWRhdGFfY2FjaGUnICsgTU9EVUxFX1NVRkZJWCk7XG5cbi8qKlxuICogQW4gaW50ZXJuYWwgbW9kdWxlIG9mIHRoZSBBbmd1bGFyIGNvbXBpbGVyIHRoYXQgYmVnaW5zIHdpdGggY29tcG9uZW50IHR5cGVzLFxuICogZXh0cmFjdHMgdGVtcGxhdGVzLCBhbmQgZXZlbnR1YWxseSBwcm9kdWNlcyBhIGNvbXBpbGVkIHZlcnNpb24gb2YgdGhlIGNvbXBvbmVudFxuICogcmVhZHkgZm9yIGxpbmtpbmcgaW50byBhbiBhcHBsaWNhdGlvbi5cbiAqL1xuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFRlbXBsYXRlQ29tcGlsZXIge1xuICBwcml2YXRlIF9ob3N0Q2FjaGVLZXlzID0gbmV3IE1hcDxUeXBlLCBhbnk+KCk7XG4gIHByaXZhdGUgX2NvbXBpbGVkVGVtcGxhdGVDYWNoZSA9IG5ldyBNYXA8YW55LCBDb21waWxlZFRlbXBsYXRlPigpO1xuICBwcml2YXRlIF9jb21waWxlZFRlbXBsYXRlRG9uZSA9IG5ldyBNYXA8YW55LCBQcm9taXNlPENvbXBpbGVkVGVtcGxhdGU+PigpO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgX3J1bnRpbWVNZXRhZGF0YVJlc29sdmVyOiBSdW50aW1lTWV0YWRhdGFSZXNvbHZlcixcbiAgICAgICAgICAgICAgcHJpdmF0ZSBfdGVtcGxhdGVOb3JtYWxpemVyOiBUZW1wbGF0ZU5vcm1hbGl6ZXIsXG4gICAgICAgICAgICAgIHByaXZhdGUgX3RlbXBsYXRlUGFyc2VyOiBUZW1wbGF0ZVBhcnNlciwgcHJpdmF0ZSBfc3R5bGVDb21waWxlcjogU3R5bGVDb21waWxlcixcbiAgICAgICAgICAgICAgcHJpdmF0ZSBfY2RDb21waWxlcjogQ2hhbmdlRGV0ZWN0aW9uQ29tcGlsZXIsXG4gICAgICAgICAgICAgIHByaXZhdGUgX3Byb3RvVmlld0NvbXBpbGVyOiBQcm90b1ZpZXdDb21waWxlciwgcHJpdmF0ZSBfdmlld0NvbXBpbGVyOiBWaWV3Q29tcGlsZXIsXG4gICAgICAgICAgICAgIHByaXZhdGUgX3Jlc29sdmVkTWV0YWRhdGFDYWNoZTogUmVzb2x2ZWRNZXRhZGF0YUNhY2hlLFxuICAgICAgICAgICAgICBwcml2YXRlIF9nZW5Db25maWc6IENoYW5nZURldGVjdG9yR2VuQ29uZmlnKSB7fVxuXG4gIG5vcm1hbGl6ZURpcmVjdGl2ZU1ldGFkYXRhKGRpcmVjdGl2ZTogQ29tcGlsZURpcmVjdGl2ZU1ldGFkYXRhKTpcbiAgICAgIFByb21pc2U8Q29tcGlsZURpcmVjdGl2ZU1ldGFkYXRhPiB7XG4gICAgaWYgKCFkaXJlY3RpdmUuaXNDb21wb25lbnQpIHtcbiAgICAgIC8vIEZvciBub24gY29tcG9uZW50cyB0aGVyZSBpcyBub3RoaW5nIHRvIGJlIG5vcm1hbGl6ZWQgeWV0LlxuICAgICAgcmV0dXJuIFByb21pc2VXcmFwcGVyLnJlc29sdmUoZGlyZWN0aXZlKTtcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcy5fdGVtcGxhdGVOb3JtYWxpemVyLm5vcm1hbGl6ZVRlbXBsYXRlKGRpcmVjdGl2ZS50eXBlLCBkaXJlY3RpdmUudGVtcGxhdGUpXG4gICAgICAgIC50aGVuKChub3JtYWxpemVkVGVtcGxhdGU6IENvbXBpbGVUZW1wbGF0ZU1ldGFkYXRhKSA9PiBuZXcgQ29tcGlsZURpcmVjdGl2ZU1ldGFkYXRhKHtcbiAgICAgICAgICAgICAgICB0eXBlOiBkaXJlY3RpdmUudHlwZSxcbiAgICAgICAgICAgICAgICBpc0NvbXBvbmVudDogZGlyZWN0aXZlLmlzQ29tcG9uZW50LFxuICAgICAgICAgICAgICAgIGR5bmFtaWNMb2FkYWJsZTogZGlyZWN0aXZlLmR5bmFtaWNMb2FkYWJsZSxcbiAgICAgICAgICAgICAgICBzZWxlY3RvcjogZGlyZWN0aXZlLnNlbGVjdG9yLFxuICAgICAgICAgICAgICAgIGV4cG9ydEFzOiBkaXJlY3RpdmUuZXhwb3J0QXMsXG4gICAgICAgICAgICAgICAgY2hhbmdlRGV0ZWN0aW9uOiBkaXJlY3RpdmUuY2hhbmdlRGV0ZWN0aW9uLFxuICAgICAgICAgICAgICAgIGlucHV0czogZGlyZWN0aXZlLmlucHV0cyxcbiAgICAgICAgICAgICAgICBvdXRwdXRzOiBkaXJlY3RpdmUub3V0cHV0cyxcbiAgICAgICAgICAgICAgICBob3N0TGlzdGVuZXJzOiBkaXJlY3RpdmUuaG9zdExpc3RlbmVycyxcbiAgICAgICAgICAgICAgICBob3N0UHJvcGVydGllczogZGlyZWN0aXZlLmhvc3RQcm9wZXJ0aWVzLFxuICAgICAgICAgICAgICAgIGhvc3RBdHRyaWJ1dGVzOiBkaXJlY3RpdmUuaG9zdEF0dHJpYnV0ZXMsXG4gICAgICAgICAgICAgICAgbGlmZWN5Y2xlSG9va3M6IGRpcmVjdGl2ZS5saWZlY3ljbGVIb29rcyxcbiAgICAgICAgICAgICAgICB0ZW1wbGF0ZTogbm9ybWFsaXplZFRlbXBsYXRlXG4gICAgICAgICAgICAgIH0pKTtcbiAgfVxuXG4gIGNvbXBpbGVIb3N0Q29tcG9uZW50UnVudGltZSh0eXBlOiBUeXBlKTogUHJvbWlzZTxIb3N0Vmlld0ZhY3Rvcnk+IHtcbiAgICB2YXIgY29tcE1ldGE6IENvbXBpbGVEaXJlY3RpdmVNZXRhZGF0YSA9XG4gICAgICAgIHRoaXMuX3J1bnRpbWVNZXRhZGF0YVJlc29sdmVyLmdldERpcmVjdGl2ZU1ldGFkYXRhKHR5cGUpO1xuICAgIHZhciBob3N0Q2FjaGVLZXkgPSB0aGlzLl9ob3N0Q2FjaGVLZXlzLmdldCh0eXBlKTtcbiAgICBpZiAoaXNCbGFuayhob3N0Q2FjaGVLZXkpKSB7XG4gICAgICBob3N0Q2FjaGVLZXkgPSBuZXcgT2JqZWN0KCk7XG4gICAgICB0aGlzLl9ob3N0Q2FjaGVLZXlzLnNldCh0eXBlLCBob3N0Q2FjaGVLZXkpO1xuICAgICAgYXNzZXJ0Q29tcG9uZW50KGNvbXBNZXRhKTtcbiAgICAgIHZhciBob3N0TWV0YTogQ29tcGlsZURpcmVjdGl2ZU1ldGFkYXRhID1cbiAgICAgICAgICBjcmVhdGVIb3N0Q29tcG9uZW50TWV0YShjb21wTWV0YS50eXBlLCBjb21wTWV0YS5zZWxlY3Rvcik7XG5cbiAgICAgIHRoaXMuX2NvbXBpbGVDb21wb25lbnRSdW50aW1lKGhvc3RDYWNoZUtleSwgaG9zdE1ldGEsIFtjb21wTWV0YV0sIFtdLCBbXSk7XG4gICAgfVxuICAgIHJldHVybiB0aGlzLl9jb21waWxlZFRlbXBsYXRlRG9uZS5nZXQoaG9zdENhY2hlS2V5KVxuICAgICAgICAudGhlbigoY29tcGlsZWRUZW1wbGF0ZTogQ29tcGlsZWRUZW1wbGF0ZSkgPT5cbiAgICAgICAgICAgICAgICAgIG5ldyBIb3N0Vmlld0ZhY3RvcnkoY29tcE1ldGEuc2VsZWN0b3IsIGNvbXBpbGVkVGVtcGxhdGUudmlld0ZhY3RvcnkpKTtcbiAgfVxuXG4gIGNsZWFyQ2FjaGUoKSB7XG4gICAgdGhpcy5fc3R5bGVDb21waWxlci5jbGVhckNhY2hlKCk7XG4gICAgdGhpcy5fY29tcGlsZWRUZW1wbGF0ZUNhY2hlLmNsZWFyKCk7XG4gICAgdGhpcy5fY29tcGlsZWRUZW1wbGF0ZURvbmUuY2xlYXIoKTtcbiAgICB0aGlzLl9ob3N0Q2FjaGVLZXlzLmNsZWFyKCk7XG4gIH1cblxuICBjb21waWxlVGVtcGxhdGVzQ29kZUdlbihjb21wb25lbnRzOiBOb3JtYWxpemVkQ29tcG9uZW50V2l0aFZpZXdEaXJlY3RpdmVzW10pOiBTb3VyY2VNb2R1bGUge1xuICAgIGlmIChjb21wb25lbnRzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgdGhyb3cgbmV3IEJhc2VFeGNlcHRpb24oJ05vIGNvbXBvbmVudHMgZ2l2ZW4nKTtcbiAgICB9XG4gICAgdmFyIGRlY2xhcmF0aW9ucyA9IFtdO1xuICAgIGNvbXBvbmVudHMuZm9yRWFjaChjb21wb25lbnRXaXRoRGlycyA9PiB7XG4gICAgICB2YXIgY29tcE1ldGEgPSA8Q29tcGlsZURpcmVjdGl2ZU1ldGFkYXRhPmNvbXBvbmVudFdpdGhEaXJzLmNvbXBvbmVudDtcbiAgICAgIGFzc2VydENvbXBvbmVudChjb21wTWV0YSk7XG4gICAgICB0aGlzLl9jb21waWxlQ29tcG9uZW50Q29kZUdlbihjb21wTWV0YSwgY29tcG9uZW50V2l0aERpcnMuZGlyZWN0aXZlcywgY29tcG9uZW50V2l0aERpcnMucGlwZXMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWNsYXJhdGlvbnMpO1xuICAgICAgaWYgKGNvbXBNZXRhLmR5bmFtaWNMb2FkYWJsZSkge1xuICAgICAgICB2YXIgaG9zdE1ldGEgPSBjcmVhdGVIb3N0Q29tcG9uZW50TWV0YShjb21wTWV0YS50eXBlLCBjb21wTWV0YS5zZWxlY3Rvcik7XG4gICAgICAgIHZhciB2aWV3RmFjdG9yeUV4cHJlc3Npb24gPVxuICAgICAgICAgICAgdGhpcy5fY29tcGlsZUNvbXBvbmVudENvZGVHZW4oaG9zdE1ldGEsIFtjb21wTWV0YV0sIFtdLCBkZWNsYXJhdGlvbnMpO1xuICAgICAgICB2YXIgY29uc3RydWN0aW9uS2V5d29yZCA9IElTX0RBUlQgPyAnY29uc3QnIDogJ25ldyc7XG4gICAgICAgIHZhciBjb21waWxlZFRlbXBsYXRlRXhwciA9XG4gICAgICAgICAgICBgJHtjb25zdHJ1Y3Rpb25LZXl3b3JkfSAke0FQUF9WSUVXX01PRFVMRV9SRUZ9SG9zdFZpZXdGYWN0b3J5KCcke2NvbXBNZXRhLnNlbGVjdG9yfScsJHt2aWV3RmFjdG9yeUV4cHJlc3Npb259KWA7XG4gICAgICAgIHZhciB2YXJOYW1lID0gY29kZUdlbkhvc3RWaWV3RmFjdG9yeU5hbWUoY29tcE1ldGEudHlwZSk7XG4gICAgICAgIGRlY2xhcmF0aW9ucy5wdXNoKGAke2NvZGVHZW5FeHBvcnRWYXJpYWJsZSh2YXJOYW1lKX0ke2NvbXBpbGVkVGVtcGxhdGVFeHByfTtgKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICB2YXIgbW9kdWxlVXJsID0gY29tcG9uZW50c1swXS5jb21wb25lbnQudHlwZS5tb2R1bGVVcmw7XG4gICAgcmV0dXJuIG5ldyBTb3VyY2VNb2R1bGUoYCR7dGVtcGxhdGVNb2R1bGVVcmwobW9kdWxlVXJsKX1gLCBkZWNsYXJhdGlvbnMuam9pbignXFxuJykpO1xuICB9XG5cbiAgY29tcGlsZVN0eWxlc2hlZXRDb2RlR2VuKHN0eWxlc2hlZXRVcmw6IHN0cmluZywgY3NzVGV4dDogc3RyaW5nKTogU291cmNlTW9kdWxlW10ge1xuICAgIHJldHVybiB0aGlzLl9zdHlsZUNvbXBpbGVyLmNvbXBpbGVTdHlsZXNoZWV0Q29kZUdlbihzdHlsZXNoZWV0VXJsLCBjc3NUZXh0KTtcbiAgfVxuXG5cblxuICBwcml2YXRlIF9jb21waWxlQ29tcG9uZW50UnVudGltZShjYWNoZUtleTogYW55LCBjb21wTWV0YTogQ29tcGlsZURpcmVjdGl2ZU1ldGFkYXRhLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2aWV3RGlyZWN0aXZlczogQ29tcGlsZURpcmVjdGl2ZU1ldGFkYXRhW10sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBpcGVzOiBDb21waWxlUGlwZU1ldGFkYXRhW10sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbXBpbGluZ0NvbXBvbmVudHNQYXRoOiBhbnlbXSk6IENvbXBpbGVkVGVtcGxhdGUge1xuICAgIGxldCB1bmlxVmlld0RpcmVjdGl2ZXMgPSA8Q29tcGlsZURpcmVjdGl2ZU1ldGFkYXRhW10+cmVtb3ZlRHVwbGljYXRlcyh2aWV3RGlyZWN0aXZlcyk7XG4gICAgbGV0IHVuaXFWaWV3UGlwZXMgPSA8Q29tcGlsZVBpcGVNZXRhZGF0YVtdPnJlbW92ZUR1cGxpY2F0ZXMocGlwZXMpO1xuICAgIHZhciBjb21waWxlZFRlbXBsYXRlID0gdGhpcy5fY29tcGlsZWRUZW1wbGF0ZUNhY2hlLmdldChjYWNoZUtleSk7XG4gICAgdmFyIGRvbmUgPSB0aGlzLl9jb21waWxlZFRlbXBsYXRlRG9uZS5nZXQoY2FjaGVLZXkpO1xuICAgIGlmIChpc0JsYW5rKGNvbXBpbGVkVGVtcGxhdGUpKSB7XG4gICAgICBjb21waWxlZFRlbXBsYXRlID0gbmV3IENvbXBpbGVkVGVtcGxhdGUoKTtcbiAgICAgIHRoaXMuX2NvbXBpbGVkVGVtcGxhdGVDYWNoZS5zZXQoY2FjaGVLZXksIGNvbXBpbGVkVGVtcGxhdGUpO1xuICAgICAgZG9uZSA9IFByb21pc2VXcmFwcGVyXG4gICAgICAgICAgICAgICAgIC5hbGwoWzxhbnk+dGhpcy5fc3R5bGVDb21waWxlci5jb21waWxlQ29tcG9uZW50UnVudGltZShjb21wTWV0YS50ZW1wbGF0ZSldLmNvbmNhdChcbiAgICAgICAgICAgICAgICAgICAgIHVuaXFWaWV3RGlyZWN0aXZlcy5tYXAoZGlyTWV0YSA9PiB0aGlzLm5vcm1hbGl6ZURpcmVjdGl2ZU1ldGFkYXRhKGRpck1ldGEpKSkpXG4gICAgICAgICAgICAgICAgIC50aGVuKChzdHlsZXNBbmROb3JtYWxpemVkVmlld0Rpck1ldGFzOiBhbnlbXSkgPT4ge1xuICAgICAgICAgICAgICAgICAgIHZhciBub3JtYWxpemVkVmlld0Rpck1ldGFzID0gc3R5bGVzQW5kTm9ybWFsaXplZFZpZXdEaXJNZXRhcy5zbGljZSgxKTtcbiAgICAgICAgICAgICAgICAgICB2YXIgc3R5bGVzID0gc3R5bGVzQW5kTm9ybWFsaXplZFZpZXdEaXJNZXRhc1swXTtcbiAgICAgICAgICAgICAgICAgICB2YXIgcGFyc2VkVGVtcGxhdGUgPSB0aGlzLl90ZW1wbGF0ZVBhcnNlci5wYXJzZShcbiAgICAgICAgICAgICAgICAgICAgICAgY29tcE1ldGEudGVtcGxhdGUudGVtcGxhdGUsIG5vcm1hbGl6ZWRWaWV3RGlyTWV0YXMsIHVuaXFWaWV3UGlwZXMsXG4gICAgICAgICAgICAgICAgICAgICAgIGNvbXBNZXRhLnR5cGUubmFtZSk7XG5cbiAgICAgICAgICAgICAgICAgICB2YXIgY2hpbGRQcm9taXNlcyA9IFtdO1xuICAgICAgICAgICAgICAgICAgIHZhciB1c2VkRGlyZWN0aXZlcyA9IERpcmVjdGl2ZUNvbGxlY3Rvci5maW5kVXNlZERpcmVjdGl2ZXMocGFyc2VkVGVtcGxhdGUpO1xuICAgICAgICAgICAgICAgICAgIHVzZWREaXJlY3RpdmVzLmNvbXBvbmVudHMuZm9yRWFjaChcbiAgICAgICAgICAgICAgICAgICAgICAgY29tcG9uZW50ID0+IHRoaXMuX2NvbXBpbGVOZXN0ZWRDb21wb25lbnRSdW50aW1lKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgY29tcG9uZW50LCBjb21waWxpbmdDb21wb25lbnRzUGF0aCwgY2hpbGRQcm9taXNlcykpO1xuICAgICAgICAgICAgICAgICAgIHJldHVybiBQcm9taXNlV3JhcHBlci5hbGwoY2hpbGRQcm9taXNlcylcbiAgICAgICAgICAgICAgICAgICAgICAgLnRoZW4oKF8pID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZmlsdGVyZWRQaXBlcyA9IGZpbHRlclBpcGVzKHBhcnNlZFRlbXBsYXRlLCB1bmlxVmlld1BpcGVzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICBjb21waWxlZFRlbXBsYXRlLmluaXQodGhpcy5fY3JlYXRlVmlld0ZhY3RvcnlSdW50aW1lKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb21wTWV0YSwgcGFyc2VkVGVtcGxhdGUsIHVzZWREaXJlY3RpdmVzLmRpcmVjdGl2ZXMsIHN0eWxlcyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmlsdGVyZWRQaXBlcykpO1xuICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjb21waWxlZFRlbXBsYXRlO1xuICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgfSk7XG4gICAgICB0aGlzLl9jb21waWxlZFRlbXBsYXRlRG9uZS5zZXQoY2FjaGVLZXksIGRvbmUpO1xuICAgIH1cbiAgICByZXR1cm4gY29tcGlsZWRUZW1wbGF0ZTtcbiAgfVxuXG4gIHByaXZhdGUgX2NvbXBpbGVOZXN0ZWRDb21wb25lbnRSdW50aW1lKGNoaWxkQ29tcG9uZW50RGlyOiBDb21waWxlRGlyZWN0aXZlTWV0YWRhdGEsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhcmVudENvbXBpbGluZ0NvbXBvbmVudHNQYXRoOiBhbnlbXSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRQcm9taXNlczogUHJvbWlzZTxhbnk+W10pIHtcbiAgICB2YXIgY29tcGlsaW5nQ29tcG9uZW50c1BhdGggPSBMaXN0V3JhcHBlci5jbG9uZShwYXJlbnRDb21waWxpbmdDb21wb25lbnRzUGF0aCk7XG5cbiAgICB2YXIgY2hpbGRDYWNoZUtleSA9IGNoaWxkQ29tcG9uZW50RGlyLnR5cGUucnVudGltZTtcbiAgICB2YXIgY2hpbGRWaWV3RGlyZWN0aXZlczogQ29tcGlsZURpcmVjdGl2ZU1ldGFkYXRhW10gPVxuICAgICAgICB0aGlzLl9ydW50aW1lTWV0YWRhdGFSZXNvbHZlci5nZXRWaWV3RGlyZWN0aXZlc01ldGFkYXRhKGNoaWxkQ29tcG9uZW50RGlyLnR5cGUucnVudGltZSk7XG4gICAgdmFyIGNoaWxkVmlld1BpcGVzOiBDb21waWxlUGlwZU1ldGFkYXRhW10gPVxuICAgICAgICB0aGlzLl9ydW50aW1lTWV0YWRhdGFSZXNvbHZlci5nZXRWaWV3UGlwZXNNZXRhZGF0YShjaGlsZENvbXBvbmVudERpci50eXBlLnJ1bnRpbWUpO1xuICAgIHZhciBjaGlsZElzUmVjdXJzaXZlID0gTGlzdFdyYXBwZXIuY29udGFpbnMoY29tcGlsaW5nQ29tcG9uZW50c1BhdGgsIGNoaWxkQ2FjaGVLZXkpO1xuICAgIGNvbXBpbGluZ0NvbXBvbmVudHNQYXRoLnB1c2goY2hpbGRDYWNoZUtleSk7XG4gICAgdGhpcy5fY29tcGlsZUNvbXBvbmVudFJ1bnRpbWUoY2hpbGRDYWNoZUtleSwgY2hpbGRDb21wb25lbnREaXIsIGNoaWxkVmlld0RpcmVjdGl2ZXMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRWaWV3UGlwZXMsIGNvbXBpbGluZ0NvbXBvbmVudHNQYXRoKTtcbiAgICBpZiAoIWNoaWxkSXNSZWN1cnNpdmUpIHtcbiAgICAgIC8vIE9ubHkgd2FpdCBmb3IgYSBjaGlsZCBpZiBpdCBpcyBub3QgYSBjeWNsZVxuICAgICAgY2hpbGRQcm9taXNlcy5wdXNoKHRoaXMuX2NvbXBpbGVkVGVtcGxhdGVEb25lLmdldChjaGlsZENhY2hlS2V5KSk7XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBfY3JlYXRlVmlld0ZhY3RvcnlSdW50aW1lKGNvbXBNZXRhOiBDb21waWxlRGlyZWN0aXZlTWV0YWRhdGEsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXJzZWRUZW1wbGF0ZTogVGVtcGxhdGVBc3RbXSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpcmVjdGl2ZXM6IENvbXBpbGVEaXJlY3RpdmVNZXRhZGF0YVtdLCBzdHlsZXM6IHN0cmluZ1tdLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGlwZXM6IENvbXBpbGVQaXBlTWV0YWRhdGFbXSk6IEZ1bmN0aW9uIHtcbiAgICBpZiAoSVNfREFSVCB8fCAhdGhpcy5fZ2VuQ29uZmlnLnVzZUppdCkge1xuICAgICAgdmFyIGNoYW5nZURldGVjdG9yRmFjdG9yaWVzID0gdGhpcy5fY2RDb21waWxlci5jb21waWxlQ29tcG9uZW50UnVudGltZShcbiAgICAgICAgICBjb21wTWV0YS50eXBlLCBjb21wTWV0YS5jaGFuZ2VEZXRlY3Rpb24sIHBhcnNlZFRlbXBsYXRlKTtcbiAgICAgIHZhciBwcm90b1ZpZXdzID0gdGhpcy5fcHJvdG9WaWV3Q29tcGlsZXIuY29tcGlsZVByb3RvVmlld1J1bnRpbWUoXG4gICAgICAgICAgdGhpcy5fcmVzb2x2ZWRNZXRhZGF0YUNhY2hlLCBjb21wTWV0YSwgcGFyc2VkVGVtcGxhdGUsIHBpcGVzKTtcbiAgICAgIHJldHVybiB0aGlzLl92aWV3Q29tcGlsZXIuY29tcGlsZUNvbXBvbmVudFJ1bnRpbWUoXG4gICAgICAgICAgY29tcE1ldGEsIHBhcnNlZFRlbXBsYXRlLCBzdHlsZXMsIHByb3RvVmlld3MucHJvdG9WaWV3cywgY2hhbmdlRGV0ZWN0b3JGYWN0b3JpZXMsXG4gICAgICAgICAgKGNvbXBNZXRhKSA9PiB0aGlzLl9nZXROZXN0ZWRDb21wb25lbnRWaWV3RmFjdG9yeShjb21wTWV0YSkpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgZGVjbGFyYXRpb25zID0gW107XG4gICAgICB2YXIgdmlld0ZhY3RvcnlFeHByID0gdGhpcy5fY3JlYXRlVmlld0ZhY3RvcnlDb2RlR2VuKCdyZXNvbHZlZE1ldGFkYXRhQ2FjaGUnLCBjb21wTWV0YSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV3IFNvdXJjZUV4cHJlc3Npb24oW10sICdzdHlsZXMnKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFyc2VkVGVtcGxhdGUsIHBpcGVzLCBkZWNsYXJhdGlvbnMpO1xuICAgICAgdmFyIHZhcnM6IHtba2V5OiBzdHJpbmddOiBhbnl9ID1cbiAgICAgICAgICB7J2V4cG9ydHMnOiB7fSwgJ3N0eWxlcyc6IHN0eWxlcywgJ3Jlc29sdmVkTWV0YWRhdGFDYWNoZSc6IHRoaXMuX3Jlc29sdmVkTWV0YWRhdGFDYWNoZX07XG4gICAgICBkaXJlY3RpdmVzLmZvckVhY2goZGlyTWV0YSA9PiB7XG4gICAgICAgIHZhcnNbZGlyTWV0YS50eXBlLm5hbWVdID0gZGlyTWV0YS50eXBlLnJ1bnRpbWU7XG4gICAgICAgIGlmIChkaXJNZXRhLmlzQ29tcG9uZW50ICYmIGRpck1ldGEudHlwZS5ydW50aW1lICE9PSBjb21wTWV0YS50eXBlLnJ1bnRpbWUpIHtcbiAgICAgICAgICB2YXJzW2B2aWV3RmFjdG9yeV8ke2Rpck1ldGEudHlwZS5uYW1lfTBgXSA9IHRoaXMuX2dldE5lc3RlZENvbXBvbmVudFZpZXdGYWN0b3J5KGRpck1ldGEpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIHBpcGVzLmZvckVhY2gocGlwZU1ldGEgPT4gdmFyc1twaXBlTWV0YS50eXBlLm5hbWVdID0gcGlwZU1ldGEudHlwZS5ydW50aW1lKTtcbiAgICAgIHZhciBkZWNsYXJhdGlvbnNXaXRob3V0SW1wb3J0cyA9XG4gICAgICAgICAgU291cmNlTW9kdWxlLmdldFNvdXJjZVdpdGhvdXRJbXBvcnRzKGRlY2xhcmF0aW9ucy5qb2luKCdcXG4nKSk7XG4gICAgICByZXR1cm4gZXZhbEV4cHJlc3Npb24oXG4gICAgICAgICAgYHZpZXdGYWN0b3J5XyR7Y29tcE1ldGEudHlwZS5uYW1lfWAsIHZpZXdGYWN0b3J5RXhwciwgZGVjbGFyYXRpb25zV2l0aG91dEltcG9ydHMsXG4gICAgICAgICAgbWVyZ2VTdHJpbmdNYXBzKFxuICAgICAgICAgICAgICBbdmFycywgQ0hBTkdFX0RFVEVDVElPTl9KSVRfSU1QT1JUUywgUFJPVE9fVklFV19KSVRfSU1QT1JUUywgVklFV19KSVRfSU1QT1JUU10pKTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIF9nZXROZXN0ZWRDb21wb25lbnRWaWV3RmFjdG9yeShjb21wTWV0YTogQ29tcGlsZURpcmVjdGl2ZU1ldGFkYXRhKTogRnVuY3Rpb24ge1xuICAgIHJldHVybiB0aGlzLl9jb21waWxlZFRlbXBsYXRlQ2FjaGUuZ2V0KGNvbXBNZXRhLnR5cGUucnVudGltZSkudmlld0ZhY3Rvcnk7XG4gIH1cblxuICBwcml2YXRlIF9jb21waWxlQ29tcG9uZW50Q29kZUdlbihjb21wTWV0YTogQ29tcGlsZURpcmVjdGl2ZU1ldGFkYXRhLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXJlY3RpdmVzOiBDb21waWxlRGlyZWN0aXZlTWV0YWRhdGFbXSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGlwZXM6IENvbXBpbGVQaXBlTWV0YWRhdGFbXSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0RGVjbGFyYXRpb25zOiBzdHJpbmdbXSk6IHN0cmluZyB7XG4gICAgbGV0IHVuaXF1ZURpcmVjdGl2ZXMgPSA8Q29tcGlsZURpcmVjdGl2ZU1ldGFkYXRhW10+cmVtb3ZlRHVwbGljYXRlcyhkaXJlY3RpdmVzKTtcbiAgICBsZXQgdW5pcVBpcGVzID0gPENvbXBpbGVQaXBlTWV0YWRhdGFbXT5yZW1vdmVEdXBsaWNhdGVzKHBpcGVzKTtcbiAgICB2YXIgc3R5bGVFeHByID0gdGhpcy5fc3R5bGVDb21waWxlci5jb21waWxlQ29tcG9uZW50Q29kZUdlbihjb21wTWV0YS50ZW1wbGF0ZSk7XG4gICAgdmFyIHBhcnNlZFRlbXBsYXRlID0gdGhpcy5fdGVtcGxhdGVQYXJzZXIucGFyc2UoY29tcE1ldGEudGVtcGxhdGUudGVtcGxhdGUsIHVuaXF1ZURpcmVjdGl2ZXMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdW5pcVBpcGVzLCBjb21wTWV0YS50eXBlLm5hbWUpO1xuICAgIHZhciBmaWx0ZXJlZFBpcGVzID0gZmlsdGVyUGlwZXMocGFyc2VkVGVtcGxhdGUsIHVuaXFQaXBlcyk7XG4gICAgcmV0dXJuIHRoaXMuX2NyZWF0ZVZpZXdGYWN0b3J5Q29kZUdlbihcbiAgICAgICAgYCR7TUVUQURBVEFfQ0FDSEVfTU9EVUxFX1JFRn1DT0RFR0VOX1JFU09MVkVEX01FVEFEQVRBX0NBQ0hFYCwgY29tcE1ldGEsIHN0eWxlRXhwcixcbiAgICAgICAgcGFyc2VkVGVtcGxhdGUsIGZpbHRlcmVkUGlwZXMsIHRhcmdldERlY2xhcmF0aW9ucyk7XG4gIH1cblxuICBwcml2YXRlIF9jcmVhdGVWaWV3RmFjdG9yeUNvZGVHZW4ocmVzb2x2ZWRNZXRhZGF0YUNhY2hlRXhwcjogc3RyaW5nLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29tcE1ldGE6IENvbXBpbGVEaXJlY3RpdmVNZXRhZGF0YSwgc3R5bGVFeHByOiBTb3VyY2VFeHByZXNzaW9uLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFyc2VkVGVtcGxhdGU6IFRlbXBsYXRlQXN0W10sIHBpcGVzOiBDb21waWxlUGlwZU1ldGFkYXRhW10sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXREZWNsYXJhdGlvbnM6IHN0cmluZ1tdKTogc3RyaW5nIHtcbiAgICB2YXIgY2hhbmdlRGV0ZWN0b3JzRXhwcnMgPSB0aGlzLl9jZENvbXBpbGVyLmNvbXBpbGVDb21wb25lbnRDb2RlR2VuKFxuICAgICAgICBjb21wTWV0YS50eXBlLCBjb21wTWV0YS5jaGFuZ2VEZXRlY3Rpb24sIHBhcnNlZFRlbXBsYXRlKTtcbiAgICB2YXIgcHJvdG9WaWV3RXhwcnMgPSB0aGlzLl9wcm90b1ZpZXdDb21waWxlci5jb21waWxlUHJvdG9WaWV3Q29kZUdlbihcbiAgICAgICAgbmV3IEV4cHJlc3Npb24ocmVzb2x2ZWRNZXRhZGF0YUNhY2hlRXhwciksIGNvbXBNZXRhLCBwYXJzZWRUZW1wbGF0ZSwgcGlwZXMpO1xuICAgIHZhciB2aWV3RmFjdG9yeUV4cHIgPSB0aGlzLl92aWV3Q29tcGlsZXIuY29tcGlsZUNvbXBvbmVudENvZGVHZW4oXG4gICAgICAgIGNvbXBNZXRhLCBwYXJzZWRUZW1wbGF0ZSwgc3R5bGVFeHByLCBwcm90b1ZpZXdFeHBycy5wcm90b1ZpZXdzLCBjaGFuZ2VEZXRlY3RvcnNFeHBycyxcbiAgICAgICAgY29kZUdlbkNvbXBvbmVudFZpZXdGYWN0b3J5TmFtZSk7XG5cbiAgICBhZGRBbGwoY2hhbmdlRGV0ZWN0b3JzRXhwcnMuZGVjbGFyYXRpb25zLCB0YXJnZXREZWNsYXJhdGlvbnMpO1xuICAgIGFkZEFsbChwcm90b1ZpZXdFeHBycy5kZWNsYXJhdGlvbnMsIHRhcmdldERlY2xhcmF0aW9ucyk7XG4gICAgYWRkQWxsKHZpZXdGYWN0b3J5RXhwci5kZWNsYXJhdGlvbnMsIHRhcmdldERlY2xhcmF0aW9ucyk7XG5cbiAgICByZXR1cm4gdmlld0ZhY3RvcnlFeHByLmV4cHJlc3Npb247XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIE5vcm1hbGl6ZWRDb21wb25lbnRXaXRoVmlld0RpcmVjdGl2ZXMge1xuICBjb25zdHJ1Y3RvcihwdWJsaWMgY29tcG9uZW50OiBDb21waWxlRGlyZWN0aXZlTWV0YWRhdGEsXG4gICAgICAgICAgICAgIHB1YmxpYyBkaXJlY3RpdmVzOiBDb21waWxlRGlyZWN0aXZlTWV0YWRhdGFbXSwgcHVibGljIHBpcGVzOiBDb21waWxlUGlwZU1ldGFkYXRhW10pIHt9XG59XG5cbmNsYXNzIENvbXBpbGVkVGVtcGxhdGUge1xuICB2aWV3RmFjdG9yeTogRnVuY3Rpb24gPSBudWxsO1xuICBpbml0KHZpZXdGYWN0b3J5OiBGdW5jdGlvbikgeyB0aGlzLnZpZXdGYWN0b3J5ID0gdmlld0ZhY3Rvcnk7IH1cbn1cblxuZnVuY3Rpb24gYXNzZXJ0Q29tcG9uZW50KG1ldGE6IENvbXBpbGVEaXJlY3RpdmVNZXRhZGF0YSkge1xuICBpZiAoIW1ldGEuaXNDb21wb25lbnQpIHtcbiAgICB0aHJvdyBuZXcgQmFzZUV4Y2VwdGlvbihgQ291bGQgbm90IGNvbXBpbGUgJyR7bWV0YS50eXBlLm5hbWV9JyBiZWNhdXNlIGl0IGlzIG5vdCBhIGNvbXBvbmVudC5gKTtcbiAgfVxufVxuXG5mdW5jdGlvbiB0ZW1wbGF0ZU1vZHVsZVVybChtb2R1bGVVcmw6IHN0cmluZyk6IHN0cmluZyB7XG4gIHZhciB1cmxXaXRob3V0U3VmZml4ID0gbW9kdWxlVXJsLnN1YnN0cmluZygwLCBtb2R1bGVVcmwubGVuZ3RoIC0gTU9EVUxFX1NVRkZJWC5sZW5ndGgpO1xuICByZXR1cm4gYCR7dXJsV2l0aG91dFN1ZmZpeH0udGVtcGxhdGUke01PRFVMRV9TVUZGSVh9YDtcbn1cblxuXG5mdW5jdGlvbiBjb2RlR2VuSG9zdFZpZXdGYWN0b3J5TmFtZSh0eXBlOiBDb21waWxlVHlwZU1ldGFkYXRhKTogc3RyaW5nIHtcbiAgcmV0dXJuIGBob3N0Vmlld0ZhY3RvcnlfJHt0eXBlLm5hbWV9YDtcbn1cblxuZnVuY3Rpb24gY29kZUdlbkNvbXBvbmVudFZpZXdGYWN0b3J5TmFtZShuZXN0ZWRDb21wVHlwZTogQ29tcGlsZURpcmVjdGl2ZU1ldGFkYXRhKTogc3RyaW5nIHtcbiAgcmV0dXJuIGAke21vZHVsZVJlZih0ZW1wbGF0ZU1vZHVsZVVybChuZXN0ZWRDb21wVHlwZS50eXBlLm1vZHVsZVVybCkpfXZpZXdGYWN0b3J5XyR7bmVzdGVkQ29tcFR5cGUudHlwZS5uYW1lfTBgO1xufVxuXG5mdW5jdGlvbiBtZXJnZVN0cmluZ01hcHMobWFwczogQXJyYXk8e1trZXk6IHN0cmluZ106IGFueX0+KToge1trZXk6IHN0cmluZ106IGFueX0ge1xuICB2YXIgcmVzdWx0ID0ge307XG4gIG1hcHMuZm9yRWFjaChcbiAgICAgIChtYXApID0+IHsgU3RyaW5nTWFwV3JhcHBlci5mb3JFYWNoKG1hcCwgKHZhbHVlLCBrZXkpID0+IHsgcmVzdWx0W2tleV0gPSB2YWx1ZTsgfSk7IH0pO1xuICByZXR1cm4gcmVzdWx0O1xufVxuXG5mdW5jdGlvbiByZW1vdmVEdXBsaWNhdGVzKGl0ZW1zOiBDb21waWxlTWV0YWRhdGFXaXRoVHlwZVtdKTogQ29tcGlsZU1ldGFkYXRhV2l0aFR5cGVbXSB7XG4gIGxldCByZXMgPSBbXTtcbiAgaXRlbXMuZm9yRWFjaChpdGVtID0+IHtcbiAgICBsZXQgaGFzTWF0Y2ggPVxuICAgICAgICByZXMuZmlsdGVyKHIgPT4gci50eXBlLm5hbWUgPT0gaXRlbS50eXBlLm5hbWUgJiYgci50eXBlLm1vZHVsZVVybCA9PSBpdGVtLnR5cGUubW9kdWxlVXJsICYmXG4gICAgICAgICAgICAgICAgICAgICAgICByLnR5cGUucnVudGltZSA9PSBpdGVtLnR5cGUucnVudGltZSlcbiAgICAgICAgICAgIC5sZW5ndGggPiAwO1xuICAgIGlmICghaGFzTWF0Y2gpIHtcbiAgICAgIHJlcy5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiByZXM7XG59XG5cbmNsYXNzIERpcmVjdGl2ZUNvbGxlY3RvciBpbXBsZW1lbnRzIFRlbXBsYXRlQXN0VmlzaXRvciB7XG4gIHN0YXRpYyBmaW5kVXNlZERpcmVjdGl2ZXMocGFyc2VkVGVtcGxhdGU6IFRlbXBsYXRlQXN0W10pOiBEaXJlY3RpdmVDb2xsZWN0b3Ige1xuICAgIHZhciBjb2xsZWN0b3IgPSBuZXcgRGlyZWN0aXZlQ29sbGVjdG9yKCk7XG4gICAgdGVtcGxhdGVWaXNpdEFsbChjb2xsZWN0b3IsIHBhcnNlZFRlbXBsYXRlKTtcbiAgICByZXR1cm4gY29sbGVjdG9yO1xuICB9XG5cbiAgZGlyZWN0aXZlczogQ29tcGlsZURpcmVjdGl2ZU1ldGFkYXRhW10gPSBbXTtcbiAgY29tcG9uZW50czogQ29tcGlsZURpcmVjdGl2ZU1ldGFkYXRhW10gPSBbXTtcblxuICB2aXNpdEJvdW5kVGV4dChhc3Q6IEJvdW5kVGV4dEFzdCwgY29udGV4dDogYW55KTogYW55IHsgcmV0dXJuIG51bGw7IH1cbiAgdmlzaXRUZXh0KGFzdDogVGV4dEFzdCwgY29udGV4dDogYW55KTogYW55IHsgcmV0dXJuIG51bGw7IH1cblxuICB2aXNpdE5nQ29udGVudChhc3Q6IE5nQ29udGVudEFzdCwgY29udGV4dDogYW55KTogYW55IHsgcmV0dXJuIG51bGw7IH1cblxuICB2aXNpdEVsZW1lbnQoYXN0OiBFbGVtZW50QXN0LCBjb250ZXh0OiBhbnkpOiBhbnkge1xuICAgIHRlbXBsYXRlVmlzaXRBbGwodGhpcywgYXN0LmRpcmVjdGl2ZXMpO1xuICAgIHRlbXBsYXRlVmlzaXRBbGwodGhpcywgYXN0LmNoaWxkcmVuKTtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIHZpc2l0RW1iZWRkZWRUZW1wbGF0ZShhc3Q6IEVtYmVkZGVkVGVtcGxhdGVBc3QsIGNvbnRleHQ6IGFueSk6IGFueSB7XG4gICAgdGVtcGxhdGVWaXNpdEFsbCh0aGlzLCBhc3QuZGlyZWN0aXZlcyk7XG4gICAgdGVtcGxhdGVWaXNpdEFsbCh0aGlzLCBhc3QuY2hpbGRyZW4pO1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIHZpc2l0VmFyaWFibGUoYXN0OiBWYXJpYWJsZUFzdCwgY3R4OiBhbnkpOiBhbnkgeyByZXR1cm4gbnVsbDsgfVxuICB2aXNpdEF0dHIoYXN0OiBBdHRyQXN0LCBhdHRyTmFtZUFuZFZhbHVlczoge1trZXk6IHN0cmluZ106IHN0cmluZ30pOiBhbnkgeyByZXR1cm4gbnVsbDsgfVxuICB2aXNpdERpcmVjdGl2ZShhc3Q6IERpcmVjdGl2ZUFzdCwgY3R4OiBhbnkpOiBhbnkge1xuICAgIGlmIChhc3QuZGlyZWN0aXZlLmlzQ29tcG9uZW50KSB7XG4gICAgICB0aGlzLmNvbXBvbmVudHMucHVzaChhc3QuZGlyZWN0aXZlKTtcbiAgICB9XG4gICAgdGhpcy5kaXJlY3RpdmVzLnB1c2goYXN0LmRpcmVjdGl2ZSk7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgdmlzaXRFdmVudChhc3Q6IEJvdW5kRXZlbnRBc3QsIGV2ZW50VGFyZ2V0QW5kTmFtZXM6IE1hcDxzdHJpbmcsIEJvdW5kRXZlbnRBc3Q+KTogYW55IHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICB2aXNpdERpcmVjdGl2ZVByb3BlcnR5KGFzdDogQm91bmREaXJlY3RpdmVQcm9wZXJ0eUFzdCwgY29udGV4dDogYW55KTogYW55IHsgcmV0dXJuIG51bGw7IH1cbiAgdmlzaXRFbGVtZW50UHJvcGVydHkoYXN0OiBCb3VuZEVsZW1lbnRQcm9wZXJ0eUFzdCwgY29udGV4dDogYW55KTogYW55IHsgcmV0dXJuIG51bGw7IH1cbn1cblxuXG5mdW5jdGlvbiBmaWx0ZXJQaXBlcyh0ZW1wbGF0ZTogVGVtcGxhdGVBc3RbXSxcbiAgICAgICAgICAgICAgICAgICAgIGFsbFBpcGVzOiBDb21waWxlUGlwZU1ldGFkYXRhW10pOiBDb21waWxlUGlwZU1ldGFkYXRhW10ge1xuICB2YXIgdmlzaXRvciA9IG5ldyBQaXBlVmlzaXRvcigpO1xuICB0ZW1wbGF0ZVZpc2l0QWxsKHZpc2l0b3IsIHRlbXBsYXRlKTtcbiAgcmV0dXJuIGFsbFBpcGVzLmZpbHRlcigocGlwZU1ldGEpID0+IFNldFdyYXBwZXIuaGFzKHZpc2l0b3IuY29sbGVjdG9yLnBpcGVzLCBwaXBlTWV0YS5uYW1lKSk7XG59XG5cbmNsYXNzIFBpcGVWaXNpdG9yIGltcGxlbWVudHMgVGVtcGxhdGVBc3RWaXNpdG9yIHtcbiAgY29sbGVjdG9yOiBQaXBlQ29sbGVjdG9yID0gbmV3IFBpcGVDb2xsZWN0b3IoKTtcblxuICB2aXNpdEJvdW5kVGV4dChhc3Q6IEJvdW5kVGV4dEFzdCwgY29udGV4dDogYW55KTogYW55IHtcbiAgICBhc3QudmFsdWUudmlzaXQodGhpcy5jb2xsZWN0b3IpO1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIHZpc2l0VGV4dChhc3Q6IFRleHRBc3QsIGNvbnRleHQ6IGFueSk6IGFueSB7IHJldHVybiBudWxsOyB9XG5cbiAgdmlzaXROZ0NvbnRlbnQoYXN0OiBOZ0NvbnRlbnRBc3QsIGNvbnRleHQ6IGFueSk6IGFueSB7IHJldHVybiBudWxsOyB9XG5cbiAgdmlzaXRFbGVtZW50KGFzdDogRWxlbWVudEFzdCwgY29udGV4dDogYW55KTogYW55IHtcbiAgICB0ZW1wbGF0ZVZpc2l0QWxsKHRoaXMsIGFzdC5pbnB1dHMpO1xuICAgIHRlbXBsYXRlVmlzaXRBbGwodGhpcywgYXN0Lm91dHB1dHMpO1xuICAgIHRlbXBsYXRlVmlzaXRBbGwodGhpcywgYXN0LmRpcmVjdGl2ZXMpO1xuICAgIHRlbXBsYXRlVmlzaXRBbGwodGhpcywgYXN0LmNoaWxkcmVuKTtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIHZpc2l0RW1iZWRkZWRUZW1wbGF0ZShhc3Q6IEVtYmVkZGVkVGVtcGxhdGVBc3QsIGNvbnRleHQ6IGFueSk6IGFueSB7XG4gICAgdGVtcGxhdGVWaXNpdEFsbCh0aGlzLCBhc3Qub3V0cHV0cyk7XG4gICAgdGVtcGxhdGVWaXNpdEFsbCh0aGlzLCBhc3QuZGlyZWN0aXZlcyk7XG4gICAgdGVtcGxhdGVWaXNpdEFsbCh0aGlzLCBhc3QuY2hpbGRyZW4pO1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIHZpc2l0VmFyaWFibGUoYXN0OiBWYXJpYWJsZUFzdCwgY3R4OiBhbnkpOiBhbnkgeyByZXR1cm4gbnVsbDsgfVxuICB2aXNpdEF0dHIoYXN0OiBBdHRyQXN0LCBhdHRyTmFtZUFuZFZhbHVlczoge1trZXk6IHN0cmluZ106IHN0cmluZ30pOiBhbnkgeyByZXR1cm4gbnVsbDsgfVxuICB2aXNpdERpcmVjdGl2ZShhc3Q6IERpcmVjdGl2ZUFzdCwgY3R4OiBhbnkpOiBhbnkge1xuICAgIHRlbXBsYXRlVmlzaXRBbGwodGhpcywgYXN0LmlucHV0cyk7XG4gICAgdGVtcGxhdGVWaXNpdEFsbCh0aGlzLCBhc3QuaG9zdEV2ZW50cyk7XG4gICAgdGVtcGxhdGVWaXNpdEFsbCh0aGlzLCBhc3QuaG9zdFByb3BlcnRpZXMpO1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIHZpc2l0RXZlbnQoYXN0OiBCb3VuZEV2ZW50QXN0LCBldmVudFRhcmdldEFuZE5hbWVzOiBNYXA8c3RyaW5nLCBCb3VuZEV2ZW50QXN0Pik6IGFueSB7XG4gICAgYXN0LmhhbmRsZXIudmlzaXQodGhpcy5jb2xsZWN0b3IpO1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIHZpc2l0RGlyZWN0aXZlUHJvcGVydHkoYXN0OiBCb3VuZERpcmVjdGl2ZVByb3BlcnR5QXN0LCBjb250ZXh0OiBhbnkpOiBhbnkge1xuICAgIGFzdC52YWx1ZS52aXNpdCh0aGlzLmNvbGxlY3Rvcik7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgdmlzaXRFbGVtZW50UHJvcGVydHkoYXN0OiBCb3VuZEVsZW1lbnRQcm9wZXJ0eUFzdCwgY29udGV4dDogYW55KTogYW55IHtcbiAgICBhc3QudmFsdWUudmlzaXQodGhpcy5jb2xsZWN0b3IpO1xuICAgIHJldHVybiBudWxsO1xuICB9XG59XG4iXX0=\n\n/***/ },\n\n/***/ 96:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';var __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n\t    return function (target, key) { decorator(target, key, paramIndex); }\r\n\t};\r\n\tvar collection_1 = __webpack_require__(3);\r\n\tvar lang_1 = __webpack_require__(1);\r\n\tvar core_1 = __webpack_require__(9);\r\n\tvar lang_2 = __webpack_require__(1);\r\n\tvar exceptions_1 = __webpack_require__(5);\r\n\tvar change_detection_1 = __webpack_require__(15);\r\n\tvar html_parser_1 = __webpack_require__(90);\r\n\tvar html_tags_1 = __webpack_require__(43);\r\n\tvar parse_util_1 = __webpack_require__(91);\r\n\tvar ast_1 = __webpack_require__(61);\r\n\tvar template_ast_1 = __webpack_require__(32);\r\n\tvar selector_1 = __webpack_require__(143);\r\n\tvar element_schema_registry_1 = __webpack_require__(93);\r\n\tvar template_preparser_1 = __webpack_require__(146);\r\n\tvar style_url_resolver_1 = __webpack_require__(94);\r\n\tvar html_ast_1 = __webpack_require__(89);\r\n\tvar util_1 = __webpack_require__(24);\r\n\t// Group 1 = \"bind-\"\r\n\t// Group 2 = \"var-\" or \"#\"\r\n\t// Group 3 = \"on-\"\r\n\t// Group 4 = \"bindon-\"\r\n\t// Group 5 = the identifier after \"bind-\", \"var-/#\", or \"on-\"\r\n\t// Group 6 = identifier inside [()]\r\n\t// Group 7 = identifier inside []\r\n\t// Group 8 = identifier inside ()\r\n\tvar BIND_NAME_REGEXP = /^(?:(?:(?:(bind-)|(var-|#)|(on-)|(bindon-))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$/g;\r\n\tvar TEMPLATE_ELEMENT = 'template';\r\n\tvar TEMPLATE_ATTR = 'template';\r\n\tvar TEMPLATE_ATTR_PREFIX = '*';\r\n\tvar CLASS_ATTR = 'class';\r\n\tvar PROPERTY_PARTS_SEPARATOR = '.';\r\n\tvar ATTRIBUTE_PREFIX = 'attr';\r\n\tvar CLASS_PREFIX = 'class';\r\n\tvar STYLE_PREFIX = 'style';\r\n\tvar TEXT_CSS_SELECTOR = selector_1.CssSelector.parse('*')[0];\r\n\t/**\r\n\t * Provides an array of {@link TemplateAstVisitor}s which will be used to transform\r\n\t * parsed templates before compilation is invoked, allowing custom expression syntax\r\n\t * and other advanced transformations.\r\n\t *\r\n\t * This is currently an internal-only feature and not meant for general use.\r\n\t */\r\n\texports.TEMPLATE_TRANSFORMS = lang_2.CONST_EXPR(new core_1.OpaqueToken('TemplateTransforms'));\r\n\tvar TemplateParseError = (function (_super) {\r\n\t    __extends(TemplateParseError, _super);\r\n\t    function TemplateParseError(message, location) {\r\n\t        _super.call(this, location, message);\r\n\t    }\r\n\t    return TemplateParseError;\r\n\t})(parse_util_1.ParseError);\r\n\texports.TemplateParseError = TemplateParseError;\r\n\tvar TemplateParser = (function () {\r\n\t    function TemplateParser(_exprParser, _schemaRegistry, _htmlParser, transforms) {\r\n\t        this._exprParser = _exprParser;\r\n\t        this._schemaRegistry = _schemaRegistry;\r\n\t        this._htmlParser = _htmlParser;\r\n\t        this.transforms = transforms;\r\n\t    }\r\n\t    TemplateParser.prototype.parse = function (template, directives, pipes, templateUrl) {\r\n\t        var parseVisitor = new TemplateParseVisitor(directives, pipes, this._exprParser, this._schemaRegistry);\r\n\t        var htmlAstWithErrors = this._htmlParser.parse(template, templateUrl);\r\n\t        var result = html_ast_1.htmlVisitAll(parseVisitor, htmlAstWithErrors.rootNodes, EMPTY_COMPONENT);\r\n\t        var errors = htmlAstWithErrors.errors.concat(parseVisitor.errors);\r\n\t        if (errors.length > 0) {\r\n\t            var errorString = errors.join('\\n');\r\n\t            throw new exceptions_1.BaseException(\"Template parse errors:\\n\" + errorString);\r\n\t        }\r\n\t        if (lang_1.isPresent(this.transforms)) {\r\n\t            this.transforms.forEach(function (transform) { result = template_ast_1.templateVisitAll(transform, result); });\r\n\t        }\r\n\t        return result;\r\n\t    };\r\n\t    TemplateParser = __decorate([\r\n\t        core_1.Injectable(),\r\n\t        __param(3, core_1.Optional()),\r\n\t        __param(3, core_1.Inject(exports.TEMPLATE_TRANSFORMS)), \r\n\t        __metadata('design:paramtypes', [change_detection_1.Parser, element_schema_registry_1.ElementSchemaRegistry, html_parser_1.HtmlParser, Array])\r\n\t    ], TemplateParser);\r\n\t    return TemplateParser;\r\n\t})();\r\n\texports.TemplateParser = TemplateParser;\r\n\tvar TemplateParseVisitor = (function () {\r\n\t    function TemplateParseVisitor(directives, pipes, _exprParser, _schemaRegistry) {\r\n\t        var _this = this;\r\n\t        this._exprParser = _exprParser;\r\n\t        this._schemaRegistry = _schemaRegistry;\r\n\t        this.errors = [];\r\n\t        this.directivesIndex = new Map();\r\n\t        this.ngContentCount = 0;\r\n\t        this.selectorMatcher = new selector_1.SelectorMatcher();\r\n\t        collection_1.ListWrapper.forEachWithIndex(directives, function (directive, index) {\r\n\t            var selector = selector_1.CssSelector.parse(directive.selector);\r\n\t            _this.selectorMatcher.addSelectables(selector, directive);\r\n\t            _this.directivesIndex.set(directive, index);\r\n\t        });\r\n\t        this.pipesByName = new Map();\r\n\t        pipes.forEach(function (pipe) { return _this.pipesByName.set(pipe.name, pipe); });\r\n\t    }\r\n\t    TemplateParseVisitor.prototype._reportError = function (message, sourceSpan) {\r\n\t        this.errors.push(new TemplateParseError(message, sourceSpan.start));\r\n\t    };\r\n\t    TemplateParseVisitor.prototype._parseInterpolation = function (value, sourceSpan) {\r\n\t        var sourceInfo = sourceSpan.start.toString();\r\n\t        try {\r\n\t            var ast = this._exprParser.parseInterpolation(value, sourceInfo);\r\n\t            this._checkPipes(ast, sourceSpan);\r\n\t            return ast;\r\n\t        }\r\n\t        catch (e) {\r\n\t            this._reportError(\"\" + e, sourceSpan);\r\n\t            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\r\n\t        }\r\n\t    };\r\n\t    TemplateParseVisitor.prototype._parseAction = function (value, sourceSpan) {\r\n\t        var sourceInfo = sourceSpan.start.toString();\r\n\t        try {\r\n\t            var ast = this._exprParser.parseAction(value, sourceInfo);\r\n\t            this._checkPipes(ast, sourceSpan);\r\n\t            return ast;\r\n\t        }\r\n\t        catch (e) {\r\n\t            this._reportError(\"\" + e, sourceSpan);\r\n\t            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\r\n\t        }\r\n\t    };\r\n\t    TemplateParseVisitor.prototype._parseBinding = function (value, sourceSpan) {\r\n\t        var sourceInfo = sourceSpan.start.toString();\r\n\t        try {\r\n\t            var ast = this._exprParser.parseBinding(value, sourceInfo);\r\n\t            this._checkPipes(ast, sourceSpan);\r\n\t            return ast;\r\n\t        }\r\n\t        catch (e) {\r\n\t            this._reportError(\"\" + e, sourceSpan);\r\n\t            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\r\n\t        }\r\n\t    };\r\n\t    TemplateParseVisitor.prototype._parseTemplateBindings = function (value, sourceSpan) {\r\n\t        var _this = this;\r\n\t        var sourceInfo = sourceSpan.start.toString();\r\n\t        try {\r\n\t            var bindings = this._exprParser.parseTemplateBindings(value, sourceInfo);\r\n\t            bindings.forEach(function (binding) {\r\n\t                if (lang_1.isPresent(binding.expression)) {\r\n\t                    _this._checkPipes(binding.expression, sourceSpan);\r\n\t                }\r\n\t            });\r\n\t            return bindings;\r\n\t        }\r\n\t        catch (e) {\r\n\t            this._reportError(\"\" + e, sourceSpan);\r\n\t            return [];\r\n\t        }\r\n\t    };\r\n\t    TemplateParseVisitor.prototype._checkPipes = function (ast, sourceSpan) {\r\n\t        var _this = this;\r\n\t        if (lang_1.isPresent(ast)) {\r\n\t            var collector = new PipeCollector();\r\n\t            ast.visit(collector);\r\n\t            collector.pipes.forEach(function (pipeName) {\r\n\t                if (!_this.pipesByName.has(pipeName)) {\r\n\t                    _this._reportError(\"The pipe '\" + pipeName + \"' could not be found\", sourceSpan);\r\n\t                }\r\n\t            });\r\n\t        }\r\n\t    };\r\n\t    TemplateParseVisitor.prototype.visitText = function (ast, component) {\r\n\t        var ngContentIndex = component.findNgContentIndex(TEXT_CSS_SELECTOR);\r\n\t        var expr = this._parseInterpolation(ast.value, ast.sourceSpan);\r\n\t        if (lang_1.isPresent(expr)) {\r\n\t            return new template_ast_1.BoundTextAst(expr, ngContentIndex, ast.sourceSpan);\r\n\t        }\r\n\t        else {\r\n\t            return new template_ast_1.TextAst(ast.value, ngContentIndex, ast.sourceSpan);\r\n\t        }\r\n\t    };\r\n\t    TemplateParseVisitor.prototype.visitAttr = function (ast, contex) {\r\n\t        return new template_ast_1.AttrAst(ast.name, ast.value, ast.sourceSpan);\r\n\t    };\r\n\t    TemplateParseVisitor.prototype.visitElement = function (element, component) {\r\n\t        var _this = this;\r\n\t        var nodeName = element.name;\r\n\t        var preparsedElement = template_preparser_1.preparseElement(element);\r\n\t        if (preparsedElement.type === template_preparser_1.PreparsedElementType.SCRIPT ||\r\n\t            preparsedElement.type === template_preparser_1.PreparsedElementType.STYLE) {\r\n\t            // Skipping <script> for security reasons\r\n\t            // Skipping <style> as we already processed them\r\n\t            // in the StyleCompiler\r\n\t            return null;\r\n\t        }\r\n\t        if (preparsedElement.type === template_preparser_1.PreparsedElementType.STYLESHEET &&\r\n\t            style_url_resolver_1.isStyleUrlResolvable(preparsedElement.hrefAttr)) {\r\n\t            // Skipping stylesheets with either relative urls or package scheme as we already processed\r\n\t            // them in the StyleCompiler\r\n\t            return null;\r\n\t        }\r\n\t        var matchableAttrs = [];\r\n\t        var elementOrDirectiveProps = [];\r\n\t        var vars = [];\r\n\t        var events = [];\r\n\t        var templateElementOrDirectiveProps = [];\r\n\t        var templateVars = [];\r\n\t        var templateMatchableAttrs = [];\r\n\t        var hasInlineTemplates = false;\r\n\t        var attrs = [];\r\n\t        element.attrs.forEach(function (attr) {\r\n\t            var hasBinding = _this._parseAttr(attr, matchableAttrs, elementOrDirectiveProps, events, vars);\r\n\t            var hasTemplateBinding = _this._parseInlineTemplateBinding(attr, templateMatchableAttrs, templateElementOrDirectiveProps, templateVars);\r\n\t            if (!hasBinding && !hasTemplateBinding) {\r\n\t                // don't include the bindings as attributes as well in the AST\r\n\t                attrs.push(_this.visitAttr(attr, null));\r\n\t                matchableAttrs.push([attr.name, attr.value]);\r\n\t            }\r\n\t            if (hasTemplateBinding) {\r\n\t                hasInlineTemplates = true;\r\n\t            }\r\n\t        });\r\n\t        var lcElName = html_tags_1.splitNsName(nodeName.toLowerCase())[1];\r\n\t        var isTemplateElement = lcElName == TEMPLATE_ELEMENT;\r\n\t        var elementCssSelector = createElementCssSelector(nodeName, matchableAttrs);\r\n\t        var directives = this._createDirectiveAsts(element.name, this._parseDirectives(this.selectorMatcher, elementCssSelector), elementOrDirectiveProps, isTemplateElement ? [] : vars, element.sourceSpan);\r\n\t        var elementProps = this._createElementPropertyAsts(element.name, elementOrDirectiveProps, directives);\r\n\t        var children = html_ast_1.htmlVisitAll(preparsedElement.nonBindable ? NON_BINDABLE_VISITOR : this, element.children, Component.create(directives));\r\n\t        var elementNgContentIndex = hasInlineTemplates ? null : component.findNgContentIndex(elementCssSelector);\r\n\t        var parsedElement;\r\n\t        if (preparsedElement.type === template_preparser_1.PreparsedElementType.NG_CONTENT) {\r\n\t            if (lang_1.isPresent(element.children) && element.children.length > 0) {\r\n\t                this._reportError(\"<ng-content> element cannot have content. <ng-content> must be immediately followed by </ng-content>\", element.sourceSpan);\r\n\t            }\r\n\t            parsedElement =\r\n\t                new template_ast_1.NgContentAst(this.ngContentCount++, elementNgContentIndex, element.sourceSpan);\r\n\t        }\r\n\t        else if (isTemplateElement) {\r\n\t            this._assertAllEventsPublishedByDirectives(directives, events);\r\n\t            this._assertNoComponentsNorElementBindingsOnTemplate(directives, elementProps, element.sourceSpan);\r\n\t            parsedElement = new template_ast_1.EmbeddedTemplateAst(attrs, events, vars, directives, children, elementNgContentIndex, element.sourceSpan);\r\n\t        }\r\n\t        else {\r\n\t            this._assertOnlyOneComponent(directives, element.sourceSpan);\r\n\t            var elementExportAsVars = vars.filter(function (varAst) { return varAst.value.length === 0; });\r\n\t            parsedElement =\r\n\t                new template_ast_1.ElementAst(nodeName, attrs, elementProps, events, elementExportAsVars, directives, children, elementNgContentIndex, element.sourceSpan);\r\n\t        }\r\n\t        if (hasInlineTemplates) {\r\n\t            var templateCssSelector = createElementCssSelector(TEMPLATE_ELEMENT, templateMatchableAttrs);\r\n\t            var templateDirectives = this._createDirectiveAsts(element.name, this._parseDirectives(this.selectorMatcher, templateCssSelector), templateElementOrDirectiveProps, [], element.sourceSpan);\r\n\t            var templateElementProps = this._createElementPropertyAsts(element.name, templateElementOrDirectiveProps, templateDirectives);\r\n\t            this._assertNoComponentsNorElementBindingsOnTemplate(templateDirectives, templateElementProps, element.sourceSpan);\r\n\t            parsedElement = new template_ast_1.EmbeddedTemplateAst([], [], templateVars, templateDirectives, [parsedElement], component.findNgContentIndex(templateCssSelector), element.sourceSpan);\r\n\t        }\r\n\t        return parsedElement;\r\n\t    };\r\n\t    TemplateParseVisitor.prototype._parseInlineTemplateBinding = function (attr, targetMatchableAttrs, targetProps, targetVars) {\r\n\t        var templateBindingsSource = null;\r\n\t        if (attr.name == TEMPLATE_ATTR) {\r\n\t            templateBindingsSource = attr.value;\r\n\t        }\r\n\t        else if (attr.name.startsWith(TEMPLATE_ATTR_PREFIX)) {\r\n\t            var key = attr.name.substring(TEMPLATE_ATTR_PREFIX.length); // remove the star\r\n\t            templateBindingsSource = (attr.value.length == 0) ? key : key + ' ' + attr.value;\r\n\t        }\r\n\t        if (lang_1.isPresent(templateBindingsSource)) {\r\n\t            var bindings = this._parseTemplateBindings(templateBindingsSource, attr.sourceSpan);\r\n\t            for (var i = 0; i < bindings.length; i++) {\r\n\t                var binding = bindings[i];\r\n\t                if (binding.keyIsVar) {\r\n\t                    targetVars.push(new template_ast_1.VariableAst(binding.key, binding.name, attr.sourceSpan));\r\n\t                    targetMatchableAttrs.push([binding.key, binding.name]);\r\n\t                }\r\n\t                else if (lang_1.isPresent(binding.expression)) {\r\n\t                    this._parsePropertyAst(binding.key, binding.expression, attr.sourceSpan, targetMatchableAttrs, targetProps);\r\n\t                }\r\n\t                else {\r\n\t                    targetMatchableAttrs.push([binding.key, '']);\r\n\t                    this._parseLiteralAttr(binding.key, null, attr.sourceSpan, targetProps);\r\n\t                }\r\n\t            }\r\n\t            return true;\r\n\t        }\r\n\t        return false;\r\n\t    };\r\n\t    TemplateParseVisitor.prototype._parseAttr = function (attr, targetMatchableAttrs, targetProps, targetEvents, targetVars) {\r\n\t        var attrName = this._normalizeAttributeName(attr.name);\r\n\t        var attrValue = attr.value;\r\n\t        var bindParts = lang_1.RegExpWrapper.firstMatch(BIND_NAME_REGEXP, attrName);\r\n\t        var hasBinding = false;\r\n\t        if (lang_1.isPresent(bindParts)) {\r\n\t            hasBinding = true;\r\n\t            if (lang_1.isPresent(bindParts[1])) {\r\n\t                this._parseProperty(bindParts[5], attrValue, attr.sourceSpan, targetMatchableAttrs, targetProps);\r\n\t            }\r\n\t            else if (lang_1.isPresent(bindParts[2])) {\r\n\t                var identifier = bindParts[5];\r\n\t                this._parseVariable(identifier, attrValue, attr.sourceSpan, targetVars);\r\n\t            }\r\n\t            else if (lang_1.isPresent(bindParts[3])) {\r\n\t                this._parseEvent(bindParts[5], attrValue, attr.sourceSpan, targetMatchableAttrs, targetEvents);\r\n\t            }\r\n\t            else if (lang_1.isPresent(bindParts[4])) {\r\n\t                this._parseProperty(bindParts[5], attrValue, attr.sourceSpan, targetMatchableAttrs, targetProps);\r\n\t                this._parseAssignmentEvent(bindParts[5], attrValue, attr.sourceSpan, targetMatchableAttrs, targetEvents);\r\n\t            }\r\n\t            else if (lang_1.isPresent(bindParts[6])) {\r\n\t                this._parseProperty(bindParts[6], attrValue, attr.sourceSpan, targetMatchableAttrs, targetProps);\r\n\t                this._parseAssignmentEvent(bindParts[6], attrValue, attr.sourceSpan, targetMatchableAttrs, targetEvents);\r\n\t            }\r\n\t            else if (lang_1.isPresent(bindParts[7])) {\r\n\t                this._parseProperty(bindParts[7], attrValue, attr.sourceSpan, targetMatchableAttrs, targetProps);\r\n\t            }\r\n\t            else if (lang_1.isPresent(bindParts[8])) {\r\n\t                this._parseEvent(bindParts[8], attrValue, attr.sourceSpan, targetMatchableAttrs, targetEvents);\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            hasBinding = this._parsePropertyInterpolation(attrName, attrValue, attr.sourceSpan, targetMatchableAttrs, targetProps);\r\n\t        }\r\n\t        if (!hasBinding) {\r\n\t            this._parseLiteralAttr(attrName, attrValue, attr.sourceSpan, targetProps);\r\n\t        }\r\n\t        return hasBinding;\r\n\t    };\r\n\t    TemplateParseVisitor.prototype._normalizeAttributeName = function (attrName) {\r\n\t        return attrName.toLowerCase().startsWith('data-') ? attrName.substring(5) : attrName;\r\n\t    };\r\n\t    TemplateParseVisitor.prototype._parseVariable = function (identifier, value, sourceSpan, targetVars) {\r\n\t        if (identifier.indexOf('-') > -1) {\r\n\t            this._reportError(\"\\\"-\\\" is not allowed in variable names\", sourceSpan);\r\n\t        }\r\n\t        targetVars.push(new template_ast_1.VariableAst(identifier, value, sourceSpan));\r\n\t    };\r\n\t    TemplateParseVisitor.prototype._parseProperty = function (name, expression, sourceSpan, targetMatchableAttrs, targetProps) {\r\n\t        this._parsePropertyAst(name, this._parseBinding(expression, sourceSpan), sourceSpan, targetMatchableAttrs, targetProps);\r\n\t    };\r\n\t    TemplateParseVisitor.prototype._parsePropertyInterpolation = function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\r\n\t        var expr = this._parseInterpolation(value, sourceSpan);\r\n\t        if (lang_1.isPresent(expr)) {\r\n\t            this._parsePropertyAst(name, expr, sourceSpan, targetMatchableAttrs, targetProps);\r\n\t            return true;\r\n\t        }\r\n\t        return false;\r\n\t    };\r\n\t    TemplateParseVisitor.prototype._parsePropertyAst = function (name, ast, sourceSpan, targetMatchableAttrs, targetProps) {\r\n\t        targetMatchableAttrs.push([name, ast.source]);\r\n\t        targetProps.push(new BoundElementOrDirectiveProperty(name, ast, false, sourceSpan));\r\n\t    };\r\n\t    TemplateParseVisitor.prototype._parseAssignmentEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\r\n\t        this._parseEvent(name + \"Change\", expression + \"=$event\", sourceSpan, targetMatchableAttrs, targetEvents);\r\n\t    };\r\n\t    TemplateParseVisitor.prototype._parseEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\r\n\t        // long format: 'target: eventName'\r\n\t        var parts = util_1.splitAtColon(name, [null, name]);\r\n\t        var target = parts[0];\r\n\t        var eventName = parts[1];\r\n\t        targetEvents.push(new template_ast_1.BoundEventAst(eventName, target, this._parseAction(expression, sourceSpan), sourceSpan));\r\n\t        // Don't detect directives for event names for now,\r\n\t        // so don't add the event name to the matchableAttrs\r\n\t    };\r\n\t    TemplateParseVisitor.prototype._parseLiteralAttr = function (name, value, sourceSpan, targetProps) {\r\n\t        targetProps.push(new BoundElementOrDirectiveProperty(name, this._exprParser.wrapLiteralPrimitive(value, ''), true, sourceSpan));\r\n\t    };\r\n\t    TemplateParseVisitor.prototype._parseDirectives = function (selectorMatcher, elementCssSelector) {\r\n\t        var _this = this;\r\n\t        var directives = [];\r\n\t        selectorMatcher.match(elementCssSelector, function (selector, directive) { directives.push(directive); });\r\n\t        // Need to sort the directives so that we get consistent results throughout,\r\n\t        // as selectorMatcher uses Maps inside.\r\n\t        // Also need to make components the first directive in the array\r\n\t        collection_1.ListWrapper.sort(directives, function (dir1, dir2) {\r\n\t            var dir1Comp = dir1.isComponent;\r\n\t            var dir2Comp = dir2.isComponent;\r\n\t            if (dir1Comp && !dir2Comp) {\r\n\t                return -1;\r\n\t            }\r\n\t            else if (!dir1Comp && dir2Comp) {\r\n\t                return 1;\r\n\t            }\r\n\t            else {\r\n\t                return _this.directivesIndex.get(dir1) - _this.directivesIndex.get(dir2);\r\n\t            }\r\n\t        });\r\n\t        return directives;\r\n\t    };\r\n\t    TemplateParseVisitor.prototype._createDirectiveAsts = function (elementName, directives, props, possibleExportAsVars, sourceSpan) {\r\n\t        var _this = this;\r\n\t        var matchedVariables = new Set();\r\n\t        var directiveAsts = directives.map(function (directive) {\r\n\t            var hostProperties = [];\r\n\t            var hostEvents = [];\r\n\t            var directiveProperties = [];\r\n\t            _this._createDirectiveHostPropertyAsts(elementName, directive.hostProperties, sourceSpan, hostProperties);\r\n\t            _this._createDirectiveHostEventAsts(directive.hostListeners, sourceSpan, hostEvents);\r\n\t            _this._createDirectivePropertyAsts(directive.inputs, props, directiveProperties);\r\n\t            var exportAsVars = [];\r\n\t            possibleExportAsVars.forEach(function (varAst) {\r\n\t                if ((varAst.value.length === 0 && directive.isComponent) ||\r\n\t                    (directive.exportAs == varAst.value)) {\r\n\t                    exportAsVars.push(varAst);\r\n\t                    matchedVariables.add(varAst.name);\r\n\t                }\r\n\t            });\r\n\t            return new template_ast_1.DirectiveAst(directive, directiveProperties, hostProperties, hostEvents, exportAsVars, sourceSpan);\r\n\t        });\r\n\t        possibleExportAsVars.forEach(function (varAst) {\r\n\t            if (varAst.value.length > 0 && !collection_1.SetWrapper.has(matchedVariables, varAst.name)) {\r\n\t                _this._reportError(\"There is no directive with \\\"exportAs\\\" set to \\\"\" + varAst.value + \"\\\"\", varAst.sourceSpan);\r\n\t            }\r\n\t        });\r\n\t        return directiveAsts;\r\n\t    };\r\n\t    TemplateParseVisitor.prototype._createDirectiveHostPropertyAsts = function (elementName, hostProps, sourceSpan, targetPropertyAsts) {\r\n\t        var _this = this;\r\n\t        if (lang_1.isPresent(hostProps)) {\r\n\t            collection_1.StringMapWrapper.forEach(hostProps, function (expression, propName) {\r\n\t                var exprAst = _this._parseBinding(expression, sourceSpan);\r\n\t                targetPropertyAsts.push(_this._createElementPropertyAst(elementName, propName, exprAst, sourceSpan));\r\n\t            });\r\n\t        }\r\n\t    };\r\n\t    TemplateParseVisitor.prototype._createDirectiveHostEventAsts = function (hostListeners, sourceSpan, targetEventAsts) {\r\n\t        var _this = this;\r\n\t        if (lang_1.isPresent(hostListeners)) {\r\n\t            collection_1.StringMapWrapper.forEach(hostListeners, function (expression, propName) {\r\n\t                _this._parseEvent(propName, expression, sourceSpan, [], targetEventAsts);\r\n\t            });\r\n\t        }\r\n\t    };\r\n\t    TemplateParseVisitor.prototype._createDirectivePropertyAsts = function (directiveProperties, boundProps, targetBoundDirectiveProps) {\r\n\t        if (lang_1.isPresent(directiveProperties)) {\r\n\t            var boundPropsByName = new Map();\r\n\t            boundProps.forEach(function (boundProp) {\r\n\t                var prevValue = boundPropsByName.get(boundProp.name);\r\n\t                if (lang_1.isBlank(prevValue) || prevValue.isLiteral) {\r\n\t                    // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\r\n\t                    boundPropsByName.set(boundProp.name, boundProp);\r\n\t                }\r\n\t            });\r\n\t            collection_1.StringMapWrapper.forEach(directiveProperties, function (elProp, dirProp) {\r\n\t                var boundProp = boundPropsByName.get(elProp);\r\n\t                // Bindings are optional, so this binding only needs to be set up if an expression is given.\r\n\t                if (lang_1.isPresent(boundProp)) {\r\n\t                    targetBoundDirectiveProps.push(new template_ast_1.BoundDirectivePropertyAst(dirProp, boundProp.name, boundProp.expression, boundProp.sourceSpan));\r\n\t                }\r\n\t            });\r\n\t        }\r\n\t    };\r\n\t    TemplateParseVisitor.prototype._createElementPropertyAsts = function (elementName, props, directives) {\r\n\t        var _this = this;\r\n\t        var boundElementProps = [];\r\n\t        var boundDirectivePropsIndex = new Map();\r\n\t        directives.forEach(function (directive) {\r\n\t            directive.inputs.forEach(function (prop) {\r\n\t                boundDirectivePropsIndex.set(prop.templateName, prop);\r\n\t            });\r\n\t        });\r\n\t        props.forEach(function (prop) {\r\n\t            if (!prop.isLiteral && lang_1.isBlank(boundDirectivePropsIndex.get(prop.name))) {\r\n\t                boundElementProps.push(_this._createElementPropertyAst(elementName, prop.name, prop.expression, prop.sourceSpan));\r\n\t            }\r\n\t        });\r\n\t        return boundElementProps;\r\n\t    };\r\n\t    TemplateParseVisitor.prototype._createElementPropertyAst = function (elementName, name, ast, sourceSpan) {\r\n\t        var unit = null;\r\n\t        var bindingType;\r\n\t        var boundPropertyName;\r\n\t        var parts = name.split(PROPERTY_PARTS_SEPARATOR);\r\n\t        if (parts.length === 1) {\r\n\t            boundPropertyName = this._schemaRegistry.getMappedPropName(parts[0]);\r\n\t            bindingType = template_ast_1.PropertyBindingType.Property;\r\n\t            if (!this._schemaRegistry.hasProperty(elementName, boundPropertyName)) {\r\n\t                this._reportError(\"Can't bind to '\" + boundPropertyName + \"' since it isn't a known native property\", sourceSpan);\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            if (parts[0] == ATTRIBUTE_PREFIX) {\r\n\t                boundPropertyName = parts[1];\r\n\t                bindingType = template_ast_1.PropertyBindingType.Attribute;\r\n\t            }\r\n\t            else if (parts[0] == CLASS_PREFIX) {\r\n\t                boundPropertyName = parts[1];\r\n\t                bindingType = template_ast_1.PropertyBindingType.Class;\r\n\t            }\r\n\t            else if (parts[0] == STYLE_PREFIX) {\r\n\t                unit = parts.length > 2 ? parts[2] : null;\r\n\t                boundPropertyName = parts[1];\r\n\t                bindingType = template_ast_1.PropertyBindingType.Style;\r\n\t            }\r\n\t            else {\r\n\t                this._reportError(\"Invalid property name '\" + name + \"'\", sourceSpan);\r\n\t                bindingType = null;\r\n\t            }\r\n\t        }\r\n\t        return new template_ast_1.BoundElementPropertyAst(boundPropertyName, bindingType, ast, unit, sourceSpan);\r\n\t    };\r\n\t    TemplateParseVisitor.prototype._findComponentDirectiveNames = function (directives) {\r\n\t        var componentTypeNames = [];\r\n\t        directives.forEach(function (directive) {\r\n\t            var typeName = directive.directive.type.name;\r\n\t            if (directive.directive.isComponent) {\r\n\t                componentTypeNames.push(typeName);\r\n\t            }\r\n\t        });\r\n\t        return componentTypeNames;\r\n\t    };\r\n\t    TemplateParseVisitor.prototype._assertOnlyOneComponent = function (directives, sourceSpan) {\r\n\t        var componentTypeNames = this._findComponentDirectiveNames(directives);\r\n\t        if (componentTypeNames.length > 1) {\r\n\t            this._reportError(\"More than one component: \" + componentTypeNames.join(','), sourceSpan);\r\n\t        }\r\n\t    };\r\n\t    TemplateParseVisitor.prototype._assertNoComponentsNorElementBindingsOnTemplate = function (directives, elementProps, sourceSpan) {\r\n\t        var _this = this;\r\n\t        var componentTypeNames = this._findComponentDirectiveNames(directives);\r\n\t        if (componentTypeNames.length > 0) {\r\n\t            this._reportError(\"Components on an embedded template: \" + componentTypeNames.join(','), sourceSpan);\r\n\t        }\r\n\t        elementProps.forEach(function (prop) {\r\n\t            _this._reportError(\"Property binding \" + prop.name + \" not used by any directive on an embedded template\", sourceSpan);\r\n\t        });\r\n\t    };\r\n\t    TemplateParseVisitor.prototype._assertAllEventsPublishedByDirectives = function (directives, events) {\r\n\t        var _this = this;\r\n\t        var allDirectiveEvents = new Set();\r\n\t        directives.forEach(function (directive) {\r\n\t            collection_1.StringMapWrapper.forEach(directive.directive.outputs, function (eventName, _) { allDirectiveEvents.add(eventName); });\r\n\t        });\r\n\t        events.forEach(function (event) {\r\n\t            if (lang_1.isPresent(event.target) || !collection_1.SetWrapper.has(allDirectiveEvents, event.name)) {\r\n\t                _this._reportError(\"Event binding \" + event.fullName + \" not emitted by any directive on an embedded template\", event.sourceSpan);\r\n\t            }\r\n\t        });\r\n\t    };\r\n\t    return TemplateParseVisitor;\r\n\t})();\r\n\tvar NonBindableVisitor = (function () {\r\n\t    function NonBindableVisitor() {\r\n\t    }\r\n\t    NonBindableVisitor.prototype.visitElement = function (ast, component) {\r\n\t        var preparsedElement = template_preparser_1.preparseElement(ast);\r\n\t        if (preparsedElement.type === template_preparser_1.PreparsedElementType.SCRIPT ||\r\n\t            preparsedElement.type === template_preparser_1.PreparsedElementType.STYLE ||\r\n\t            preparsedElement.type === template_preparser_1.PreparsedElementType.STYLESHEET) {\r\n\t            // Skipping <script> for security reasons\r\n\t            // Skipping <style> and stylesheets as we already processed them\r\n\t            // in the StyleCompiler\r\n\t            return null;\r\n\t        }\r\n\t        var attrNameAndValues = ast.attrs.map(function (attrAst) { return [attrAst.name, attrAst.value]; });\r\n\t        var selector = createElementCssSelector(ast.name, attrNameAndValues);\r\n\t        var ngContentIndex = component.findNgContentIndex(selector);\r\n\t        var children = html_ast_1.htmlVisitAll(this, ast.children, EMPTY_COMPONENT);\r\n\t        return new template_ast_1.ElementAst(ast.name, html_ast_1.htmlVisitAll(this, ast.attrs), [], [], [], [], children, ngContentIndex, ast.sourceSpan);\r\n\t    };\r\n\t    NonBindableVisitor.prototype.visitAttr = function (ast, context) {\r\n\t        return new template_ast_1.AttrAst(ast.name, ast.value, ast.sourceSpan);\r\n\t    };\r\n\t    NonBindableVisitor.prototype.visitText = function (ast, component) {\r\n\t        var ngContentIndex = component.findNgContentIndex(TEXT_CSS_SELECTOR);\r\n\t        return new template_ast_1.TextAst(ast.value, ngContentIndex, ast.sourceSpan);\r\n\t    };\r\n\t    return NonBindableVisitor;\r\n\t})();\r\n\tvar BoundElementOrDirectiveProperty = (function () {\r\n\t    function BoundElementOrDirectiveProperty(name, expression, isLiteral, sourceSpan) {\r\n\t        this.name = name;\r\n\t        this.expression = expression;\r\n\t        this.isLiteral = isLiteral;\r\n\t        this.sourceSpan = sourceSpan;\r\n\t    }\r\n\t    return BoundElementOrDirectiveProperty;\r\n\t})();\r\n\tfunction splitClasses(classAttrValue) {\r\n\t    return lang_1.StringWrapper.split(classAttrValue.trim(), /\\s+/g);\r\n\t}\r\n\texports.splitClasses = splitClasses;\r\n\tvar Component = (function () {\r\n\t    function Component(ngContentIndexMatcher, wildcardNgContentIndex) {\r\n\t        this.ngContentIndexMatcher = ngContentIndexMatcher;\r\n\t        this.wildcardNgContentIndex = wildcardNgContentIndex;\r\n\t    }\r\n\t    Component.create = function (directives) {\r\n\t        if (directives.length === 0 || !directives[0].directive.isComponent) {\r\n\t            return EMPTY_COMPONENT;\r\n\t        }\r\n\t        var matcher = new selector_1.SelectorMatcher();\r\n\t        var ngContentSelectors = directives[0].directive.template.ngContentSelectors;\r\n\t        var wildcardNgContentIndex = null;\r\n\t        for (var i = 0; i < ngContentSelectors.length; i++) {\r\n\t            var selector = ngContentSelectors[i];\r\n\t            if (lang_1.StringWrapper.equals(selector, '*')) {\r\n\t                wildcardNgContentIndex = i;\r\n\t            }\r\n\t            else {\r\n\t                matcher.addSelectables(selector_1.CssSelector.parse(ngContentSelectors[i]), i);\r\n\t            }\r\n\t        }\r\n\t        return new Component(matcher, wildcardNgContentIndex);\r\n\t    };\r\n\t    Component.prototype.findNgContentIndex = function (selector) {\r\n\t        var ngContentIndices = [];\r\n\t        this.ngContentIndexMatcher.match(selector, function (selector, ngContentIndex) { ngContentIndices.push(ngContentIndex); });\r\n\t        collection_1.ListWrapper.sort(ngContentIndices);\r\n\t        if (lang_1.isPresent(this.wildcardNgContentIndex)) {\r\n\t            ngContentIndices.push(this.wildcardNgContentIndex);\r\n\t        }\r\n\t        return ngContentIndices.length > 0 ? ngContentIndices[0] : null;\r\n\t    };\r\n\t    return Component;\r\n\t})();\r\n\tfunction createElementCssSelector(elementName, matchableAttrs) {\r\n\t    var cssSelector = new selector_1.CssSelector();\r\n\t    var elNameNoNs = html_tags_1.splitNsName(elementName)[1];\r\n\t    cssSelector.setElement(elNameNoNs);\r\n\t    for (var i = 0; i < matchableAttrs.length; i++) {\r\n\t        var attrName = matchableAttrs[i][0];\r\n\t        var attrNameNoNs = html_tags_1.splitNsName(attrName)[1];\r\n\t        var attrValue = matchableAttrs[i][1];\r\n\t        cssSelector.addAttribute(attrNameNoNs, attrValue);\r\n\t        if (attrName.toLowerCase() == CLASS_ATTR) {\r\n\t            var classes = splitClasses(attrValue);\r\n\t            classes.forEach(function (className) { return cssSelector.addClassName(className); });\r\n\t        }\r\n\t    }\r\n\t    return cssSelector;\r\n\t}\r\n\tvar EMPTY_COMPONENT = new Component(new selector_1.SelectorMatcher(), null);\r\n\tvar NON_BINDABLE_VISITOR = new NonBindableVisitor();\r\n\tvar PipeCollector = (function (_super) {\r\n\t    __extends(PipeCollector, _super);\r\n\t    function PipeCollector() {\r\n\t        _super.apply(this, arguments);\r\n\t        this.pipes = new Set();\r\n\t    }\r\n\t    PipeCollector.prototype.visitPipe = function (ast) {\r\n\t        this.pipes.add(ast.name);\r\n\t        ast.exp.visit(this);\r\n\t        this.visitAll(ast.args);\r\n\t        return null;\r\n\t    };\r\n\t    return PipeCollector;\r\n\t})(ast_1.RecursiveAstVisitor);\r\n\texports.PipeCollector = PipeCollector;\r\n\t//# sourceMappingURL=data:application/json;base64,\n\n/***/ },\n\n/***/ 113:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';var __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n\t    return function (target, key) { decorator(target, key, paramIndex); }\r\n\t};\r\n\tvar di_1 = __webpack_require__(6);\r\n\tvar animation_builder_1 = __webpack_require__(124);\r\n\tvar lang_1 = __webpack_require__(1);\r\n\tvar exceptions_1 = __webpack_require__(5);\r\n\tvar shared_styles_host_1 = __webpack_require__(72);\r\n\tvar event_manager_1 = __webpack_require__(36);\r\n\tvar dom_tokens_1 = __webpack_require__(53);\r\n\tvar metadata_1 = __webpack_require__(66);\r\n\tvar dom_adapter_1 = __webpack_require__(11);\r\n\tvar util_1 = __webpack_require__(177);\r\n\tvar NAMESPACE_URIS = lang_1.CONST_EXPR({ 'xlink': 'http://www.w3.org/1999/xlink', 'svg': 'http://www.w3.org/2000/svg' });\r\n\tvar TEMPLATE_COMMENT_TEXT = 'template bindings={}';\r\n\tvar TEMPLATE_BINDINGS_EXP = /^template bindings=(.*)$/g;\r\n\tvar DomRootRenderer = (function () {\r\n\t    function DomRootRenderer(document, eventManager, sharedStylesHost, animate) {\r\n\t        this.document = document;\r\n\t        this.eventManager = eventManager;\r\n\t        this.sharedStylesHost = sharedStylesHost;\r\n\t        this.animate = animate;\r\n\t        this._registeredComponents = new Map();\r\n\t    }\r\n\t    DomRootRenderer.prototype.renderComponent = function (componentProto) {\r\n\t        var renderer = this._registeredComponents.get(componentProto.id);\r\n\t        if (lang_1.isBlank(renderer)) {\r\n\t            renderer = new DomRenderer(this, componentProto);\r\n\t            this._registeredComponents.set(componentProto.id, renderer);\r\n\t        }\r\n\t        return renderer;\r\n\t    };\r\n\t    return DomRootRenderer;\r\n\t})();\r\n\texports.DomRootRenderer = DomRootRenderer;\r\n\tvar DomRootRenderer_ = (function (_super) {\r\n\t    __extends(DomRootRenderer_, _super);\r\n\t    function DomRootRenderer_(_document, _eventManager, sharedStylesHost, animate) {\r\n\t        _super.call(this, _document, _eventManager, sharedStylesHost, animate);\r\n\t    }\r\n\t    DomRootRenderer_ = __decorate([\r\n\t        di_1.Injectable(),\r\n\t        __param(0, di_1.Inject(dom_tokens_1.DOCUMENT)), \r\n\t        __metadata('design:paramtypes', [Object, event_manager_1.EventManager, shared_styles_host_1.DomSharedStylesHost, animation_builder_1.AnimationBuilder])\r\n\t    ], DomRootRenderer_);\r\n\t    return DomRootRenderer_;\r\n\t})(DomRootRenderer);\r\n\texports.DomRootRenderer_ = DomRootRenderer_;\r\n\tvar DomRenderer = (function () {\r\n\t    function DomRenderer(_rootRenderer, componentProto) {\r\n\t        this._rootRenderer = _rootRenderer;\r\n\t        this.componentProto = componentProto;\r\n\t        this._styles = _flattenStyles(componentProto.id, componentProto.styles, []);\r\n\t        if (componentProto.encapsulation !== metadata_1.ViewEncapsulation.Native) {\r\n\t            this._rootRenderer.sharedStylesHost.addStyles(this._styles);\r\n\t        }\r\n\t        if (this.componentProto.encapsulation === metadata_1.ViewEncapsulation.Emulated) {\r\n\t            this._contentAttr = _shimContentAttribute(componentProto.id);\r\n\t            this._hostAttr = _shimHostAttribute(componentProto.id);\r\n\t        }\r\n\t        else {\r\n\t            this._contentAttr = null;\r\n\t            this._hostAttr = null;\r\n\t        }\r\n\t    }\r\n\t    DomRenderer.prototype.renderComponent = function (componentProto) {\r\n\t        return this._rootRenderer.renderComponent(componentProto);\r\n\t    };\r\n\t    DomRenderer.prototype.selectRootElement = function (selector) {\r\n\t        var el = dom_adapter_1.DOM.querySelector(this._rootRenderer.document, selector);\r\n\t        if (lang_1.isBlank(el)) {\r\n\t            throw new exceptions_1.BaseException(\"The selector \\\"\" + selector + \"\\\" did not match any elements\");\r\n\t        }\r\n\t        dom_adapter_1.DOM.clearNodes(el);\r\n\t        return el;\r\n\t    };\r\n\t    DomRenderer.prototype.createElement = function (parent, name) {\r\n\t        var nsAndName = splitNamespace(name);\r\n\t        var el = lang_1.isPresent(nsAndName[0]) ?\r\n\t            dom_adapter_1.DOM.createElementNS(NAMESPACE_URIS[nsAndName[0]], nsAndName[1]) :\r\n\t            dom_adapter_1.DOM.createElement(nsAndName[1]);\r\n\t        if (lang_1.isPresent(this._contentAttr)) {\r\n\t            dom_adapter_1.DOM.setAttribute(el, this._contentAttr, '');\r\n\t        }\r\n\t        if (lang_1.isPresent(parent)) {\r\n\t            dom_adapter_1.DOM.appendChild(parent, el);\r\n\t        }\r\n\t        return el;\r\n\t    };\r\n\t    DomRenderer.prototype.createViewRoot = function (hostElement) {\r\n\t        var nodesParent;\r\n\t        if (this.componentProto.encapsulation === metadata_1.ViewEncapsulation.Native) {\r\n\t            nodesParent = dom_adapter_1.DOM.createShadowRoot(hostElement);\r\n\t            this._rootRenderer.sharedStylesHost.addHost(nodesParent);\r\n\t            for (var i = 0; i < this._styles.length; i++) {\r\n\t                dom_adapter_1.DOM.appendChild(nodesParent, dom_adapter_1.DOM.createStyleElement(this._styles[i]));\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            if (lang_1.isPresent(this._hostAttr)) {\r\n\t                dom_adapter_1.DOM.setAttribute(hostElement, this._hostAttr, '');\r\n\t            }\r\n\t            nodesParent = hostElement;\r\n\t        }\r\n\t        return nodesParent;\r\n\t    };\r\n\t    DomRenderer.prototype.createTemplateAnchor = function (parentElement) {\r\n\t        var comment = dom_adapter_1.DOM.createComment(TEMPLATE_COMMENT_TEXT);\r\n\t        if (lang_1.isPresent(parentElement)) {\r\n\t            dom_adapter_1.DOM.appendChild(parentElement, comment);\r\n\t        }\r\n\t        return comment;\r\n\t    };\r\n\t    DomRenderer.prototype.createText = function (parentElement, value) {\r\n\t        var node = dom_adapter_1.DOM.createTextNode(value);\r\n\t        if (lang_1.isPresent(parentElement)) {\r\n\t            dom_adapter_1.DOM.appendChild(parentElement, node);\r\n\t        }\r\n\t        return node;\r\n\t    };\r\n\t    DomRenderer.prototype.projectNodes = function (parentElement, nodes) {\r\n\t        if (lang_1.isBlank(parentElement))\r\n\t            return;\r\n\t        appendNodes(parentElement, nodes);\r\n\t    };\r\n\t    DomRenderer.prototype.attachViewAfter = function (node, viewRootNodes) {\r\n\t        moveNodesAfterSibling(node, viewRootNodes);\r\n\t        for (var i = 0; i < viewRootNodes.length; i++)\r\n\t            this.animateNodeEnter(viewRootNodes[i]);\r\n\t    };\r\n\t    DomRenderer.prototype.detachView = function (viewRootNodes) {\r\n\t        for (var i = 0; i < viewRootNodes.length; i++) {\r\n\t            var node = viewRootNodes[i];\r\n\t            dom_adapter_1.DOM.remove(node);\r\n\t            this.animateNodeLeave(node);\r\n\t        }\r\n\t    };\r\n\t    DomRenderer.prototype.destroyView = function (hostElement, viewAllNodes) {\r\n\t        if (this.componentProto.encapsulation === metadata_1.ViewEncapsulation.Native && lang_1.isPresent(hostElement)) {\r\n\t            this._rootRenderer.sharedStylesHost.removeHost(dom_adapter_1.DOM.getShadowRoot(hostElement));\r\n\t        }\r\n\t    };\r\n\t    DomRenderer.prototype.listen = function (renderElement, name, callback) {\r\n\t        return this._rootRenderer.eventManager.addEventListener(renderElement, name, decoratePreventDefault(callback));\r\n\t    };\r\n\t    DomRenderer.prototype.listenGlobal = function (target, name, callback) {\r\n\t        return this._rootRenderer.eventManager.addGlobalEventListener(target, name, decoratePreventDefault(callback));\r\n\t    };\r\n\t    DomRenderer.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\r\n\t        dom_adapter_1.DOM.setProperty(renderElement, propertyName, propertyValue);\r\n\t    };\r\n\t    DomRenderer.prototype.setElementAttribute = function (renderElement, attributeName, attributeValue) {\r\n\t        var attrNs;\r\n\t        var nsAndName = splitNamespace(attributeName);\r\n\t        if (lang_1.isPresent(nsAndName[0])) {\r\n\t            attributeName = nsAndName[0] + ':' + nsAndName[1];\r\n\t            attrNs = NAMESPACE_URIS[nsAndName[0]];\r\n\t        }\r\n\t        if (lang_1.isPresent(attributeValue)) {\r\n\t            if (lang_1.isPresent(attrNs)) {\r\n\t                dom_adapter_1.DOM.setAttributeNS(renderElement, attrNs, attributeName, attributeValue);\r\n\t            }\r\n\t            else {\r\n\t                dom_adapter_1.DOM.setAttribute(renderElement, nsAndName[1], attributeValue);\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            dom_adapter_1.DOM.removeAttribute(renderElement, attributeName);\r\n\t        }\r\n\t    };\r\n\t    DomRenderer.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) {\r\n\t        var dashCasedPropertyName = util_1.camelCaseToDashCase(propertyName);\r\n\t        if (dom_adapter_1.DOM.isCommentNode(renderElement)) {\r\n\t            var existingBindings = lang_1.RegExpWrapper.firstMatch(TEMPLATE_BINDINGS_EXP, lang_1.StringWrapper.replaceAll(dom_adapter_1.DOM.getText(renderElement), /\\n/g, ''));\r\n\t            var parsedBindings = lang_1.Json.parse(existingBindings[1]);\r\n\t            parsedBindings[dashCasedPropertyName] = propertyValue;\r\n\t            dom_adapter_1.DOM.setText(renderElement, lang_1.StringWrapper.replace(TEMPLATE_COMMENT_TEXT, '{}', lang_1.Json.stringify(parsedBindings)));\r\n\t        }\r\n\t        else {\r\n\t            this.setElementAttribute(renderElement, propertyName, propertyValue);\r\n\t        }\r\n\t    };\r\n\t    DomRenderer.prototype.setElementDebugInfo = function (renderElement, info) { };\r\n\t    DomRenderer.prototype.setElementClass = function (renderElement, className, isAdd) {\r\n\t        if (isAdd) {\r\n\t            dom_adapter_1.DOM.addClass(renderElement, className);\r\n\t        }\r\n\t        else {\r\n\t            dom_adapter_1.DOM.removeClass(renderElement, className);\r\n\t        }\r\n\t    };\r\n\t    DomRenderer.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\r\n\t        if (lang_1.isPresent(styleValue)) {\r\n\t            dom_adapter_1.DOM.setStyle(renderElement, styleName, lang_1.stringify(styleValue));\r\n\t        }\r\n\t        else {\r\n\t            dom_adapter_1.DOM.removeStyle(renderElement, styleName);\r\n\t        }\r\n\t    };\r\n\t    DomRenderer.prototype.invokeElementMethod = function (renderElement, methodName, args) {\r\n\t        dom_adapter_1.DOM.invoke(renderElement, methodName, args);\r\n\t    };\r\n\t    DomRenderer.prototype.setText = function (renderNode, text) { dom_adapter_1.DOM.setText(renderNode, text); };\r\n\t    /**\r\n\t     * Performs animations if necessary\r\n\t     * @param node\r\n\t     */\r\n\t    DomRenderer.prototype.animateNodeEnter = function (node) {\r\n\t        if (dom_adapter_1.DOM.isElementNode(node) && dom_adapter_1.DOM.hasClass(node, 'ng-animate')) {\r\n\t            dom_adapter_1.DOM.addClass(node, 'ng-enter');\r\n\t            this._rootRenderer.animate.css()\r\n\t                .addAnimationClass('ng-enter-active')\r\n\t                .start(node)\r\n\t                .onComplete(function () { dom_adapter_1.DOM.removeClass(node, 'ng-enter'); });\r\n\t        }\r\n\t    };\r\n\t    /**\r\n\t     * If animations are necessary, performs animations then removes the element; otherwise, it just\r\n\t     * removes the element.\r\n\t     * @param node\r\n\t     */\r\n\t    DomRenderer.prototype.animateNodeLeave = function (node) {\r\n\t        if (dom_adapter_1.DOM.isElementNode(node) && dom_adapter_1.DOM.hasClass(node, 'ng-animate')) {\r\n\t            dom_adapter_1.DOM.addClass(node, 'ng-leave');\r\n\t            this._rootRenderer.animate.css()\r\n\t                .addAnimationClass('ng-leave-active')\r\n\t                .start(node)\r\n\t                .onComplete(function () {\r\n\t                dom_adapter_1.DOM.removeClass(node, 'ng-leave');\r\n\t                dom_adapter_1.DOM.remove(node);\r\n\t            });\r\n\t        }\r\n\t        else {\r\n\t            dom_adapter_1.DOM.remove(node);\r\n\t        }\r\n\t    };\r\n\t    return DomRenderer;\r\n\t})();\r\n\texports.DomRenderer = DomRenderer;\r\n\tfunction moveNodesAfterSibling(sibling, nodes) {\r\n\t    var parent = dom_adapter_1.DOM.parentElement(sibling);\r\n\t    if (nodes.length > 0 && lang_1.isPresent(parent)) {\r\n\t        var nextSibling = dom_adapter_1.DOM.nextSibling(sibling);\r\n\t        if (lang_1.isPresent(nextSibling)) {\r\n\t            for (var i = 0; i < nodes.length; i++) {\r\n\t                dom_adapter_1.DOM.insertBefore(nextSibling, nodes[i]);\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            for (var i = 0; i < nodes.length; i++) {\r\n\t                dom_adapter_1.DOM.appendChild(parent, nodes[i]);\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t}\r\n\tfunction appendNodes(parent, nodes) {\r\n\t    for (var i = 0; i < nodes.length; i++) {\r\n\t        dom_adapter_1.DOM.appendChild(parent, nodes[i]);\r\n\t    }\r\n\t}\r\n\tfunction decoratePreventDefault(eventHandler) {\r\n\t    return function (event) {\r\n\t        var allowDefaultBehavior = eventHandler(event);\r\n\t        if (allowDefaultBehavior === false) {\r\n\t            // TODO(tbosch): move preventDefault into event plugins...\r\n\t            dom_adapter_1.DOM.preventDefault(event);\r\n\t        }\r\n\t    };\r\n\t}\r\n\tvar COMPONENT_REGEX = /%COMP%/g;\r\n\texports.COMPONENT_VARIABLE = '%COMP%';\r\n\texports.HOST_ATTR = \"_nghost-\" + exports.COMPONENT_VARIABLE;\r\n\texports.CONTENT_ATTR = \"_ngcontent-\" + exports.COMPONENT_VARIABLE;\r\n\tfunction _shimContentAttribute(componentShortId) {\r\n\t    return lang_1.StringWrapper.replaceAll(exports.CONTENT_ATTR, COMPONENT_REGEX, componentShortId);\r\n\t}\r\n\tfunction _shimHostAttribute(componentShortId) {\r\n\t    return lang_1.StringWrapper.replaceAll(exports.HOST_ATTR, COMPONENT_REGEX, componentShortId);\r\n\t}\r\n\tfunction _flattenStyles(compId, styles, target) {\r\n\t    for (var i = 0; i < styles.length; i++) {\r\n\t        var style = styles[i];\r\n\t        if (lang_1.isArray(style)) {\r\n\t            _flattenStyles(compId, style, target);\r\n\t        }\r\n\t        else {\r\n\t            style = lang_1.StringWrapper.replaceAll(style, COMPONENT_REGEX, compId);\r\n\t            target.push(style);\r\n\t        }\r\n\t    }\r\n\t    return target;\r\n\t}\r\n\tvar NS_PREFIX_RE = /^@([^:]+):(.+)/g;\r\n\tfunction splitNamespace(name) {\r\n\t    if (name[0] != '@') {\r\n\t        return [null, name];\r\n\t    }\r\n\t    var match = lang_1.RegExpWrapper.firstMatch(NS_PREFIX_RE, name);\r\n\t    return [match[1], match[2]];\r\n\t}\r\n\t//# sourceMappingURL=data:application/json;base64,\n\n/***/ },\n\n/***/ 122:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';function __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t/**\r\n\t * @module\r\n\t * @description\r\n\t * Starting point to import all compiler APIs.\r\n\t */\r\n\t__export(__webpack_require__(44));\r\n\t__export(__webpack_require__(60));\r\n\t__export(__webpack_require__(206));\r\n\t//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcGlsZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJhbmd1bGFyMi9jb21waWxlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQTs7OztHQUlHO0FBQ0gsaUJBQWMsNkJBQTZCLENBQUMsRUFBQTtBQUM1QyxpQkFBYyxvQkFBb0IsQ0FBQyxFQUFBO0FBQ25DLGlCQUFjLHlCQUF5QixDQUFDLEVBQUEiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBtb2R1bGVcbiAqIEBkZXNjcmlwdGlvblxuICogU3RhcnRpbmcgcG9pbnQgdG8gaW1wb3J0IGFsbCBjb21waWxlciBBUElzLlxuICovXG5leHBvcnQgKiBmcm9tICcuL3NyYy9jb21waWxlci91cmxfcmVzb2x2ZXInO1xuZXhwb3J0ICogZnJvbSAnLi9zcmMvY29tcGlsZXIveGhyJztcbmV4cG9ydCAqIGZyb20gJy4vc3JjL2NvbXBpbGVyL2NvbXBpbGVyJzsiXX0=\n\n/***/ },\n\n/***/ 123:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';function __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t/**\r\n\t * This is a set of classes and objects that can be used both in the browser and on the server.\r\n\t */\r\n\tvar dom_adapter_1 = __webpack_require__(11);\r\n\texports.DOM = dom_adapter_1.DOM;\r\n\texports.setRootDomAdapter = dom_adapter_1.setRootDomAdapter;\r\n\texports.DomAdapter = dom_adapter_1.DomAdapter;\r\n\tvar dom_renderer_1 = __webpack_require__(113);\r\n\texports.DomRenderer = dom_renderer_1.DomRenderer;\r\n\tvar dom_tokens_1 = __webpack_require__(53);\r\n\texports.DOCUMENT = dom_tokens_1.DOCUMENT;\r\n\tvar shared_styles_host_1 = __webpack_require__(72);\r\n\texports.SharedStylesHost = shared_styles_host_1.SharedStylesHost;\r\n\texports.DomSharedStylesHost = shared_styles_host_1.DomSharedStylesHost;\r\n\tvar dom_events_1 = __webpack_require__(176);\r\n\texports.DomEventsPlugin = dom_events_1.DomEventsPlugin;\r\n\tvar event_manager_1 = __webpack_require__(36);\r\n\texports.EVENT_MANAGER_PLUGINS = event_manager_1.EVENT_MANAGER_PLUGINS;\r\n\texports.EventManager = event_manager_1.EventManager;\r\n\texports.EventManagerPlugin = event_manager_1.EventManagerPlugin;\r\n\t__export(__webpack_require__(242));\r\n\t__export(__webpack_require__(243));\r\n\t//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbW9uX2RvbS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImFuZ3VsYXIyL3BsYXRmb3JtL2NvbW1vbl9kb20udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUE7O0dBRUc7QUFDSCw0QkFBaUQsdUNBQXVDLENBQUM7QUFBakYsZ0NBQUc7QUFBRSw0REFBaUI7QUFBRSw4Q0FBeUQ7QUFDekYsNkJBQTBCLHdDQUF3QyxDQUFDO0FBQTNELGlEQUEyRDtBQUNuRSwyQkFBdUIsc0NBQXNDLENBQUM7QUFBdEQseUNBQXNEO0FBQzlELG1DQUFvRCw4Q0FBOEMsQ0FBQztBQUEzRixpRUFBZ0I7QUFBRSx1RUFBeUU7QUFDbkcsMkJBQThCLDZDQUE2QyxDQUFDO0FBQXBFLHVEQUFvRTtBQUM1RSw4QkFJTyxnREFBZ0QsQ0FBQztBQUh0RCxzRUFBcUI7QUFDckIsb0RBQVk7QUFDWixnRUFDc0Q7QUFDeEQsaUJBQWMsb0NBQW9DLENBQUMsRUFBQTtBQUNuRCxpQkFBYywwQ0FBMEMsQ0FBQyxFQUFBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBUaGlzIGlzIGEgc2V0IG9mIGNsYXNzZXMgYW5kIG9iamVjdHMgdGhhdCBjYW4gYmUgdXNlZCBib3RoIGluIHRoZSBicm93c2VyIGFuZCBvbiB0aGUgc2VydmVyLlxuICovXG5leHBvcnQge0RPTSwgc2V0Um9vdERvbUFkYXB0ZXIsIERvbUFkYXB0ZXJ9IGZyb20gJ2FuZ3VsYXIyL3NyYy9wbGF0Zm9ybS9kb20vZG9tX2FkYXB0ZXInO1xuZXhwb3J0IHtEb21SZW5kZXJlcn0gZnJvbSAnYW5ndWxhcjIvc3JjL3BsYXRmb3JtL2RvbS9kb21fcmVuZGVyZXInO1xuZXhwb3J0IHtET0NVTUVOVH0gZnJvbSAnYW5ndWxhcjIvc3JjL3BsYXRmb3JtL2RvbS9kb21fdG9rZW5zJztcbmV4cG9ydCB7U2hhcmVkU3R5bGVzSG9zdCwgRG9tU2hhcmVkU3R5bGVzSG9zdH0gZnJvbSAnYW5ndWxhcjIvc3JjL3BsYXRmb3JtL2RvbS9zaGFyZWRfc3R5bGVzX2hvc3QnO1xuZXhwb3J0IHtEb21FdmVudHNQbHVnaW59IGZyb20gJ2FuZ3VsYXIyL3NyYy9wbGF0Zm9ybS9kb20vZXZlbnRzL2RvbV9ldmVudHMnO1xuZXhwb3J0IHtcbiAgRVZFTlRfTUFOQUdFUl9QTFVHSU5TLFxuICBFdmVudE1hbmFnZXIsXG4gIEV2ZW50TWFuYWdlclBsdWdpblxufSBmcm9tICdhbmd1bGFyMi9zcmMvcGxhdGZvcm0vZG9tL2V2ZW50cy9ldmVudF9tYW5hZ2VyJztcbmV4cG9ydCAqIGZyb20gJ2FuZ3VsYXIyL3NyYy9wbGF0Zm9ybS9kb20vZGVidWcvYnknO1xuZXhwb3J0ICogZnJvbSAnYW5ndWxhcjIvc3JjL3BsYXRmb3JtL2RvbS9kZWJ1Zy9uZ19wcm9iZSc7XG4iXX0=\n\n/***/ },\n\n/***/ 124:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar di_1 = __webpack_require__(6);\r\n\tvar css_animation_builder_1 = __webpack_require__(196);\r\n\tvar browser_details_1 = __webpack_require__(125);\r\n\tvar AnimationBuilder = (function () {\r\n\t    /**\r\n\t     * Used for DI\r\n\t     * @param browserDetails\r\n\t     */\r\n\t    function AnimationBuilder(browserDetails) {\r\n\t        this.browserDetails = browserDetails;\r\n\t    }\r\n\t    /**\r\n\t     * Creates a new CSS Animation\r\n\t     * @returns {CssAnimationBuilder}\r\n\t     */\r\n\t    AnimationBuilder.prototype.css = function () { return new css_animation_builder_1.CssAnimationBuilder(this.browserDetails); };\r\n\t    AnimationBuilder = __decorate([\r\n\t        di_1.Injectable(), \r\n\t        __metadata('design:paramtypes', [browser_details_1.BrowserDetails])\r\n\t    ], AnimationBuilder);\r\n\t    return AnimationBuilder;\r\n\t})();\r\n\texports.AnimationBuilder = AnimationBuilder;\r\n\t//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5pbWF0aW9uX2J1aWxkZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJhbmd1bGFyMi9zcmMvYW5pbWF0ZS9hbmltYXRpb25fYnVpbGRlci50cyJdLCJuYW1lcyI6WyJBbmltYXRpb25CdWlsZGVyIiwiQW5pbWF0aW9uQnVpbGRlci5jb25zdHJ1Y3RvciIsIkFuaW1hdGlvbkJ1aWxkZXIuY3NzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSxtQkFBeUIsc0JBQXNCLENBQUMsQ0FBQTtBQUVoRCxzQ0FBa0MseUJBQXlCLENBQUMsQ0FBQTtBQUM1RCxnQ0FBNkIsbUJBQW1CLENBQUMsQ0FBQTtBQUVqRDtJQUVFQTs7O09BR0dBO0lBQ0hBLDBCQUFtQkEsY0FBOEJBO1FBQTlCQyxtQkFBY0EsR0FBZEEsY0FBY0EsQ0FBZ0JBO0lBQUdBLENBQUNBO0lBRXJERDs7O09BR0dBO0lBQ0hBLDhCQUFHQSxHQUFIQSxjQUE2QkUsTUFBTUEsQ0FBQ0EsSUFBSUEsMkNBQW1CQSxDQUFDQSxJQUFJQSxDQUFDQSxjQUFjQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQTtJQVpyRkY7UUFBQ0EsZUFBVUEsRUFBRUE7O3lCQWFaQTtJQUFEQSx1QkFBQ0E7QUFBREEsQ0FBQ0EsQUFiRCxJQWFDO0FBWlksd0JBQWdCLG1CQVk1QixDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtJbmplY3RhYmxlfSBmcm9tICdhbmd1bGFyMi9zcmMvY29yZS9kaSc7XG5cbmltcG9ydCB7Q3NzQW5pbWF0aW9uQnVpbGRlcn0gZnJvbSAnLi9jc3NfYW5pbWF0aW9uX2J1aWxkZXInO1xuaW1wb3J0IHtCcm93c2VyRGV0YWlsc30gZnJvbSAnLi9icm93c2VyX2RldGFpbHMnO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgQW5pbWF0aW9uQnVpbGRlciB7XG4gIC8qKlxuICAgKiBVc2VkIGZvciBESVxuICAgKiBAcGFyYW0gYnJvd3NlckRldGFpbHNcbiAgICovXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBicm93c2VyRGV0YWlsczogQnJvd3NlckRldGFpbHMpIHt9XG5cbiAgLyoqXG4gICAqIENyZWF0ZXMgYSBuZXcgQ1NTIEFuaW1hdGlvblxuICAgKiBAcmV0dXJucyB7Q3NzQW5pbWF0aW9uQnVpbGRlcn1cbiAgICovXG4gIGNzcygpOiBDc3NBbmltYXRpb25CdWlsZGVyIHsgcmV0dXJuIG5ldyBDc3NBbmltYXRpb25CdWlsZGVyKHRoaXMuYnJvd3NlckRldGFpbHMpOyB9XG59XG4iXX0=\n\n/***/ },\n\n/***/ 125:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar di_1 = __webpack_require__(6);\r\n\tvar math_1 = __webpack_require__(172);\r\n\tvar dom_adapter_1 = __webpack_require__(11);\r\n\tvar BrowserDetails = (function () {\r\n\t    function BrowserDetails() {\r\n\t        this.elapsedTimeIncludesDelay = false;\r\n\t        this.doesElapsedTimeIncludesDelay();\r\n\t    }\r\n\t    /**\r\n\t     * Determines if `event.elapsedTime` includes transition delay in the current browser.  At this\r\n\t     * time, Chrome and Opera seem to be the only browsers that include this.\r\n\t     */\r\n\t    BrowserDetails.prototype.doesElapsedTimeIncludesDelay = function () {\r\n\t        var _this = this;\r\n\t        var div = dom_adapter_1.DOM.createElement('div');\r\n\t        dom_adapter_1.DOM.setAttribute(div, 'style', \"position: absolute; top: -9999px; left: -9999px; width: 1px;\\n      height: 1px; transition: all 1ms linear 1ms;\");\r\n\t        // Firefox requires that we wait for 2 frames for some reason\r\n\t        this.raf(function (timestamp) {\r\n\t            dom_adapter_1.DOM.on(div, 'transitionend', function (event) {\r\n\t                var elapsed = math_1.Math.round(event.elapsedTime * 1000);\r\n\t                _this.elapsedTimeIncludesDelay = elapsed == 2;\r\n\t                dom_adapter_1.DOM.remove(div);\r\n\t            });\r\n\t            dom_adapter_1.DOM.setStyle(div, 'width', '2px');\r\n\t        }, 2);\r\n\t    };\r\n\t    BrowserDetails.prototype.raf = function (callback, frames) {\r\n\t        if (frames === void 0) { frames = 1; }\r\n\t        var queue = new RafQueue(callback, frames);\r\n\t        return function () { return queue.cancel(); };\r\n\t    };\r\n\t    BrowserDetails = __decorate([\r\n\t        di_1.Injectable(), \r\n\t        __metadata('design:paramtypes', [])\r\n\t    ], BrowserDetails);\r\n\t    return BrowserDetails;\r\n\t})();\r\n\texports.BrowserDetails = BrowserDetails;\r\n\tvar RafQueue = (function () {\r\n\t    function RafQueue(callback, frames) {\r\n\t        this.callback = callback;\r\n\t        this.frames = frames;\r\n\t        this._raf();\r\n\t    }\r\n\t    RafQueue.prototype._raf = function () {\r\n\t        var _this = this;\r\n\t        this.currentFrameId = dom_adapter_1.DOM.requestAnimationFrame(function (timestamp) { return _this._nextFrame(timestamp); });\r\n\t    };\r\n\t    RafQueue.prototype._nextFrame = function (timestamp) {\r\n\t        this.frames--;\r\n\t        if (this.frames > 0) {\r\n\t            this._raf();\r\n\t        }\r\n\t        else {\r\n\t            this.callback(timestamp);\r\n\t        }\r\n\t    };\r\n\t    RafQueue.prototype.cancel = function () {\r\n\t        dom_adapter_1.DOM.cancelAnimationFrame(this.currentFrameId);\r\n\t        this.currentFrameId = null;\r\n\t    };\r\n\t    return RafQueue;\r\n\t})();\r\n\t//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnJvd3Nlcl9kZXRhaWxzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYW5ndWxhcjIvc3JjL2FuaW1hdGUvYnJvd3Nlcl9kZXRhaWxzLnRzIl0sIm5hbWVzIjpbIkJyb3dzZXJEZXRhaWxzIiwiQnJvd3NlckRldGFpbHMuY29uc3RydWN0b3IiLCJCcm93c2VyRGV0YWlscy5kb2VzRWxhcHNlZFRpbWVJbmNsdWRlc0RlbGF5IiwiQnJvd3NlckRldGFpbHMucmFmIiwiUmFmUXVldWUiLCJSYWZRdWV1ZS5jb25zdHJ1Y3RvciIsIlJhZlF1ZXVlLl9yYWYiLCJSYWZRdWV1ZS5fbmV4dEZyYW1lIiwiUmFmUXVldWUuY2FuY2VsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSxtQkFBeUIsc0JBQXNCLENBQUMsQ0FBQTtBQUNoRCxxQkFBbUIsMEJBQTBCLENBQUMsQ0FBQTtBQUM5Qyw0QkFBa0IsdUNBQXVDLENBQUMsQ0FBQTtBQUUxRDtJQUlFQTtRQUZBQyw2QkFBd0JBLEdBQUdBLEtBQUtBLENBQUNBO1FBRWpCQSxJQUFJQSxDQUFDQSw0QkFBNEJBLEVBQUVBLENBQUNBO0lBQUNBLENBQUNBO0lBRXRERDs7O09BR0dBO0lBQ0hBLHFEQUE0QkEsR0FBNUJBO1FBQUFFLGlCQWFDQTtRQVpDQSxJQUFJQSxHQUFHQSxHQUFHQSxpQkFBR0EsQ0FBQ0EsYUFBYUEsQ0FBQ0EsS0FBS0EsQ0FBQ0EsQ0FBQ0E7UUFDbkNBLGlCQUFHQSxDQUFDQSxZQUFZQSxDQUFDQSxHQUFHQSxFQUFFQSxPQUFPQSxFQUFFQSxrSEFDZ0JBLENBQUNBLENBQUNBO1FBQ2pEQSw2REFBNkRBO1FBQzdEQSxJQUFJQSxDQUFDQSxHQUFHQSxDQUFDQSxVQUFBQSxTQUFTQTtZQUNoQkEsaUJBQUdBLENBQUNBLEVBQUVBLENBQUNBLEdBQUdBLEVBQUVBLGVBQWVBLEVBQUVBLFVBQUNBLEtBQVVBO2dCQUN0Q0EsSUFBSUEsT0FBT0EsR0FBR0EsV0FBSUEsQ0FBQ0EsS0FBS0EsQ0FBQ0EsS0FBS0EsQ0FBQ0EsV0FBV0EsR0FBR0EsSUFBSUEsQ0FBQ0EsQ0FBQ0E7Z0JBQ25EQSxLQUFJQSxDQUFDQSx3QkFBd0JBLEdBQUdBLE9BQU9BLElBQUlBLENBQUNBLENBQUNBO2dCQUM3Q0EsaUJBQUdBLENBQUNBLE1BQU1BLENBQUNBLEdBQUdBLENBQUNBLENBQUNBO1lBQ2xCQSxDQUFDQSxDQUFDQSxDQUFDQTtZQUNIQSxpQkFBR0EsQ0FBQ0EsUUFBUUEsQ0FBQ0EsR0FBR0EsRUFBRUEsT0FBT0EsRUFBRUEsS0FBS0EsQ0FBQ0EsQ0FBQ0E7UUFDcENBLENBQUNBLEVBQUVBLENBQUNBLENBQUNBLENBQUNBO0lBQ1JBLENBQUNBO0lBRURGLDRCQUFHQSxHQUFIQSxVQUFJQSxRQUFrQkEsRUFBRUEsTUFBa0JBO1FBQWxCRyxzQkFBa0JBLEdBQWxCQSxVQUFrQkE7UUFDeENBLElBQUlBLEtBQUtBLEdBQWFBLElBQUlBLFFBQVFBLENBQUNBLFFBQVFBLEVBQUVBLE1BQU1BLENBQUNBLENBQUNBO1FBQ3JEQSxNQUFNQSxDQUFDQSxjQUFNQSxPQUFBQSxLQUFLQSxDQUFDQSxNQUFNQSxFQUFFQSxFQUFkQSxDQUFjQSxDQUFDQTtJQUM5QkEsQ0FBQ0E7SUE1QkhIO1FBQUNBLGVBQVVBLEVBQUVBOzt1QkE2QlpBO0lBQURBLHFCQUFDQTtBQUFEQSxDQUFDQSxBQTdCRCxJQTZCQztBQTVCWSxzQkFBYyxpQkE0QjFCLENBQUE7QUFFRDtJQUVFSSxrQkFBbUJBLFFBQWtCQSxFQUFTQSxNQUFjQTtRQUF6Q0MsYUFBUUEsR0FBUkEsUUFBUUEsQ0FBVUE7UUFBU0EsV0FBTUEsR0FBTkEsTUFBTUEsQ0FBUUE7UUFBSUEsSUFBSUEsQ0FBQ0EsSUFBSUEsRUFBRUEsQ0FBQ0E7SUFBQ0EsQ0FBQ0E7SUFDdEVELHVCQUFJQSxHQUFaQTtRQUFBRSxpQkFFQ0E7UUFEQ0EsSUFBSUEsQ0FBQ0EsY0FBY0EsR0FBR0EsaUJBQUdBLENBQUNBLHFCQUFxQkEsQ0FBQ0EsVUFBQUEsU0FBU0EsSUFBSUEsT0FBQUEsS0FBSUEsQ0FBQ0EsVUFBVUEsQ0FBQ0EsU0FBU0EsQ0FBQ0EsRUFBMUJBLENBQTBCQSxDQUFDQSxDQUFDQTtJQUMzRkEsQ0FBQ0E7SUFDT0YsNkJBQVVBLEdBQWxCQSxVQUFtQkEsU0FBaUJBO1FBQ2xDRyxJQUFJQSxDQUFDQSxNQUFNQSxFQUFFQSxDQUFDQTtRQUNkQSxFQUFFQSxDQUFDQSxDQUFDQSxJQUFJQSxDQUFDQSxNQUFNQSxHQUFHQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQTtZQUNwQkEsSUFBSUEsQ0FBQ0EsSUFBSUEsRUFBRUEsQ0FBQ0E7UUFDZEEsQ0FBQ0E7UUFBQ0EsSUFBSUEsQ0FBQ0EsQ0FBQ0E7WUFDTkEsSUFBSUEsQ0FBQ0EsUUFBUUEsQ0FBQ0EsU0FBU0EsQ0FBQ0EsQ0FBQ0E7UUFDM0JBLENBQUNBO0lBQ0hBLENBQUNBO0lBQ0RILHlCQUFNQSxHQUFOQTtRQUNFSSxpQkFBR0EsQ0FBQ0Esb0JBQW9CQSxDQUFDQSxJQUFJQSxDQUFDQSxjQUFjQSxDQUFDQSxDQUFDQTtRQUM5Q0EsSUFBSUEsQ0FBQ0EsY0FBY0EsR0FBR0EsSUFBSUEsQ0FBQ0E7SUFDN0JBLENBQUNBO0lBQ0hKLGVBQUNBO0FBQURBLENBQUNBLEFBbEJELElBa0JDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtJbmplY3RhYmxlfSBmcm9tICdhbmd1bGFyMi9zcmMvY29yZS9kaSc7XG5pbXBvcnQge01hdGh9IGZyb20gJ2FuZ3VsYXIyL3NyYy9mYWNhZGUvbWF0aCc7XG5pbXBvcnQge0RPTX0gZnJvbSAnYW5ndWxhcjIvc3JjL3BsYXRmb3JtL2RvbS9kb21fYWRhcHRlcic7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBCcm93c2VyRGV0YWlscyB7XG4gIGVsYXBzZWRUaW1lSW5jbHVkZXNEZWxheSA9IGZhbHNlO1xuXG4gIGNvbnN0cnVjdG9yKCkgeyB0aGlzLmRvZXNFbGFwc2VkVGltZUluY2x1ZGVzRGVsYXkoKTsgfVxuXG4gIC8qKlxuICAgKiBEZXRlcm1pbmVzIGlmIGBldmVudC5lbGFwc2VkVGltZWAgaW5jbHVkZXMgdHJhbnNpdGlvbiBkZWxheSBpbiB0aGUgY3VycmVudCBicm93c2VyLiAgQXQgdGhpc1xuICAgKiB0aW1lLCBDaHJvbWUgYW5kIE9wZXJhIHNlZW0gdG8gYmUgdGhlIG9ubHkgYnJvd3NlcnMgdGhhdCBpbmNsdWRlIHRoaXMuXG4gICAqL1xuICBkb2VzRWxhcHNlZFRpbWVJbmNsdWRlc0RlbGF5KCk6IHZvaWQge1xuICAgIHZhciBkaXYgPSBET00uY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgRE9NLnNldEF0dHJpYnV0ZShkaXYsICdzdHlsZScsIGBwb3NpdGlvbjogYWJzb2x1dGU7IHRvcDogLTk5OTlweDsgbGVmdDogLTk5OTlweDsgd2lkdGg6IDFweDtcbiAgICAgIGhlaWdodDogMXB4OyB0cmFuc2l0aW9uOiBhbGwgMW1zIGxpbmVhciAxbXM7YCk7XG4gICAgLy8gRmlyZWZveCByZXF1aXJlcyB0aGF0IHdlIHdhaXQgZm9yIDIgZnJhbWVzIGZvciBzb21lIHJlYXNvblxuICAgIHRoaXMucmFmKHRpbWVzdGFtcCA9PiB7XG4gICAgICBET00ub24oZGl2LCAndHJhbnNpdGlvbmVuZCcsIChldmVudDogYW55KSA9PiB7XG4gICAgICAgIHZhciBlbGFwc2VkID0gTWF0aC5yb3VuZChldmVudC5lbGFwc2VkVGltZSAqIDEwMDApO1xuICAgICAgICB0aGlzLmVsYXBzZWRUaW1lSW5jbHVkZXNEZWxheSA9IGVsYXBzZWQgPT0gMjtcbiAgICAgICAgRE9NLnJlbW92ZShkaXYpO1xuICAgICAgfSk7XG4gICAgICBET00uc2V0U3R5bGUoZGl2LCAnd2lkdGgnLCAnMnB4Jyk7XG4gICAgfSwgMik7XG4gIH1cblxuICByYWYoY2FsbGJhY2s6IEZ1bmN0aW9uLCBmcmFtZXM6IG51bWJlciA9IDEpOiBGdW5jdGlvbiB7XG4gICAgdmFyIHF1ZXVlOiBSYWZRdWV1ZSA9IG5ldyBSYWZRdWV1ZShjYWxsYmFjaywgZnJhbWVzKTtcbiAgICByZXR1cm4gKCkgPT4gcXVldWUuY2FuY2VsKCk7XG4gIH1cbn1cblxuY2xhc3MgUmFmUXVldWUge1xuICBjdXJyZW50RnJhbWVJZDogbnVtYmVyO1xuICBjb25zdHJ1Y3RvcihwdWJsaWMgY2FsbGJhY2s6IEZ1bmN0aW9uLCBwdWJsaWMgZnJhbWVzOiBudW1iZXIpIHsgdGhpcy5fcmFmKCk7IH1cbiAgcHJpdmF0ZSBfcmFmKCkge1xuICAgIHRoaXMuY3VycmVudEZyYW1lSWQgPSBET00ucmVxdWVzdEFuaW1hdGlvbkZyYW1lKHRpbWVzdGFtcCA9PiB0aGlzLl9uZXh0RnJhbWUodGltZXN0YW1wKSk7XG4gIH1cbiAgcHJpdmF0ZSBfbmV4dEZyYW1lKHRpbWVzdGFtcDogbnVtYmVyKSB7XG4gICAgdGhpcy5mcmFtZXMtLTtcbiAgICBpZiAodGhpcy5mcmFtZXMgPiAwKSB7XG4gICAgICB0aGlzLl9yYWYoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5jYWxsYmFjayh0aW1lc3RhbXApO1xuICAgIH1cbiAgfVxuICBjYW5jZWwoKSB7XG4gICAgRE9NLmNhbmNlbEFuaW1hdGlvbkZyYW1lKHRoaXMuY3VycmVudEZyYW1lSWQpO1xuICAgIHRoaXMuY3VycmVudEZyYW1lSWQgPSBudWxsO1xuICB9XG59XG4iXX0=\n\n/***/ },\n\n/***/ 140:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar source_module_1 = __webpack_require__(31);\r\n\tvar change_detection_jit_generator_1 = __webpack_require__(151);\r\n\tvar abstract_change_detector_1 = __webpack_require__(97);\r\n\tvar change_detection_util_1 = __webpack_require__(33);\r\n\tvar constants_1 = __webpack_require__(20);\r\n\tvar change_definition_factory_1 = __webpack_require__(205);\r\n\tvar lang_1 = __webpack_require__(1);\r\n\tvar change_detection_1 = __webpack_require__(15);\r\n\tvar change_detector_codegen_1 = __webpack_require__(247);\r\n\tvar util_1 = __webpack_require__(24);\r\n\tvar di_1 = __webpack_require__(6);\r\n\tvar ABSTRACT_CHANGE_DETECTOR = \"AbstractChangeDetector\";\r\n\tvar UTIL = \"ChangeDetectionUtil\";\r\n\tvar CHANGE_DETECTOR_STATE = \"ChangeDetectorState\";\r\n\texports.CHANGE_DETECTION_JIT_IMPORTS = lang_1.CONST_EXPR({\r\n\t    'AbstractChangeDetector': abstract_change_detector_1.AbstractChangeDetector,\r\n\t    'ChangeDetectionUtil': change_detection_util_1.ChangeDetectionUtil,\r\n\t    'ChangeDetectorState': constants_1.ChangeDetectorState\r\n\t});\r\n\tvar ABSTRACT_CHANGE_DETECTOR_MODULE = source_module_1.moduleRef(\"package:angular2/src/core/change_detection/abstract_change_detector\" + util_1.MODULE_SUFFIX);\r\n\tvar UTIL_MODULE = source_module_1.moduleRef(\"package:angular2/src/core/change_detection/change_detection_util\" + util_1.MODULE_SUFFIX);\r\n\tvar PREGEN_PROTO_CHANGE_DETECTOR_MODULE = source_module_1.moduleRef(\"package:angular2/src/core/change_detection/pregen_proto_change_detector\" + util_1.MODULE_SUFFIX);\r\n\tvar CONSTANTS_MODULE = source_module_1.moduleRef(\"package:angular2/src/core/change_detection/constants\" + util_1.MODULE_SUFFIX);\r\n\tvar ChangeDetectionCompiler = (function () {\r\n\t    function ChangeDetectionCompiler(_genConfig) {\r\n\t        this._genConfig = _genConfig;\r\n\t    }\r\n\t    ChangeDetectionCompiler.prototype.compileComponentRuntime = function (componentType, strategy, parsedTemplate) {\r\n\t        var _this = this;\r\n\t        var changeDetectorDefinitions = change_definition_factory_1.createChangeDetectorDefinitions(componentType, strategy, this._genConfig, parsedTemplate);\r\n\t        return changeDetectorDefinitions.map(function (definition) {\r\n\t            return _this._createChangeDetectorFactory(definition);\r\n\t        });\r\n\t    };\r\n\t    ChangeDetectionCompiler.prototype._createChangeDetectorFactory = function (definition) {\r\n\t        var proto = new change_detection_1.DynamicProtoChangeDetector(definition);\r\n\t        return function () { return proto.instantiate(); };\r\n\t    };\r\n\t    ChangeDetectionCompiler.prototype.compileComponentCodeGen = function (componentType, strategy, parsedTemplate) {\r\n\t        var changeDetectorDefinitions = change_definition_factory_1.createChangeDetectorDefinitions(componentType, strategy, this._genConfig, parsedTemplate);\r\n\t        var factories = [];\r\n\t        var index = 0;\r\n\t        var sourceParts = changeDetectorDefinitions.map(function (definition) {\r\n\t            var codegen;\r\n\t            var sourcePart;\r\n\t            // TODO(tbosch): move the 2 code generators to the same place, one with .dart and one with .ts\r\n\t            // suffix\r\n\t            // and have the same API for calling them!\r\n\t            if (lang_1.IS_DART) {\r\n\t                codegen = new change_detector_codegen_1.Codegen(PREGEN_PROTO_CHANGE_DETECTOR_MODULE);\r\n\t                var className = \"_\" + definition.id;\r\n\t                var typeRef = (index === 0 && componentType.isHost) ?\r\n\t                    'dynamic' :\r\n\t                    \"\" + source_module_1.moduleRef(componentType.moduleUrl) + componentType.name;\r\n\t                codegen.generate(typeRef, className, definition);\r\n\t                factories.push(className + \".newChangeDetector\");\r\n\t                sourcePart = codegen.toString();\r\n\t            }\r\n\t            else {\r\n\t                codegen = new change_detection_jit_generator_1.ChangeDetectorJITGenerator(definition, \"\" + UTIL_MODULE + UTIL, \"\" + ABSTRACT_CHANGE_DETECTOR_MODULE + ABSTRACT_CHANGE_DETECTOR, \"\" + CONSTANTS_MODULE + CHANGE_DETECTOR_STATE);\r\n\t                factories.push(\"function() { return new \" + codegen.typeName + \"(); }\");\r\n\t                sourcePart = codegen.generateSource();\r\n\t            }\r\n\t            index++;\r\n\t            return sourcePart;\r\n\t        });\r\n\t        return new source_module_1.SourceExpressions(sourceParts, factories);\r\n\t    };\r\n\t    ChangeDetectionCompiler = __decorate([\r\n\t        di_1.Injectable(), \r\n\t        __metadata('design:paramtypes', [change_detection_1.ChangeDetectorGenConfig])\r\n\t    ], ChangeDetectionCompiler);\r\n\t    return ChangeDetectionCompiler;\r\n\t})();\r\n\texports.ChangeDetectionCompiler = ChangeDetectionCompiler;\r\n\t//# sourceMappingURL=data:application/json;base64,\n\n/***/ },\n\n/***/ 141:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';var __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar compiler_1 = __webpack_require__(35);\r\n\tvar view_ref_1 = __webpack_require__(65);\r\n\tvar template_compiler_1 = __webpack_require__(95);\r\n\tvar di_1 = __webpack_require__(6);\r\n\tvar RuntimeCompiler = (function (_super) {\r\n\t    __extends(RuntimeCompiler, _super);\r\n\t    function RuntimeCompiler() {\r\n\t        _super.apply(this, arguments);\r\n\t    }\r\n\t    return RuntimeCompiler;\r\n\t})(compiler_1.Compiler);\r\n\texports.RuntimeCompiler = RuntimeCompiler;\r\n\tvar RuntimeCompiler_ = (function (_super) {\r\n\t    __extends(RuntimeCompiler_, _super);\r\n\t    function RuntimeCompiler_(_templateCompiler) {\r\n\t        _super.call(this);\r\n\t        this._templateCompiler = _templateCompiler;\r\n\t    }\r\n\t    RuntimeCompiler_.prototype.compileInHost = function (componentType) {\r\n\t        return this._templateCompiler.compileHostComponentRuntime(componentType)\r\n\t            .then(function (hostViewFactory) { return new view_ref_1.HostViewFactoryRef_(hostViewFactory); });\r\n\t    };\r\n\t    RuntimeCompiler_.prototype.clearCache = function () {\r\n\t        _super.prototype.clearCache.call(this);\r\n\t        this._templateCompiler.clearCache();\r\n\t    };\r\n\t    RuntimeCompiler_ = __decorate([\r\n\t        di_1.Injectable(), \r\n\t        __metadata('design:paramtypes', [template_compiler_1.TemplateCompiler])\r\n\t    ], RuntimeCompiler_);\r\n\t    return RuntimeCompiler_;\r\n\t})(compiler_1.Compiler_);\r\n\texports.RuntimeCompiler_ = RuntimeCompiler_;\r\n\t//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicnVudGltZV9jb21waWxlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImFuZ3VsYXIyL3NyYy9jb21waWxlci9ydW50aW1lX2NvbXBpbGVyLnRzIl0sIm5hbWVzIjpbIlJ1bnRpbWVDb21waWxlciIsIlJ1bnRpbWVDb21waWxlci5jb25zdHJ1Y3RvciIsIlJ1bnRpbWVDb21waWxlcl8iLCJSdW50aW1lQ29tcGlsZXJfLmNvbnN0cnVjdG9yIiwiUnVudGltZUNvbXBpbGVyXy5jb21waWxlSW5Ib3N0IiwiUnVudGltZUNvbXBpbGVyXy5jbGVhckNhY2hlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFBLHlCQUFrQyxtQ0FBbUMsQ0FBQyxDQUFBO0FBQ3RFLHlCQUFzRCxtQ0FBbUMsQ0FBQyxDQUFBO0FBQzFGLGtDQUErQixxQkFBcUIsQ0FBQyxDQUFBO0FBRXJELG1CQUF5QixzQkFBc0IsQ0FBQyxDQUFBO0FBSWhEO0lBQThDQSxtQ0FBUUE7SUFBdERBO1FBQThDQyw4QkFBUUE7SUFHdERBLENBQUNBO0lBQURELHNCQUFDQTtBQUFEQSxDQUFDQSxBQUhELEVBQThDLG1CQUFRLEVBR3JEO0FBSHFCLHVCQUFlLGtCQUdwQyxDQUFBO0FBRUQ7SUFDc0NFLG9DQUFTQTtJQUM3Q0EsMEJBQW9CQSxpQkFBbUNBO1FBQUlDLGlCQUFPQSxDQUFDQTtRQUEvQ0Esc0JBQWlCQSxHQUFqQkEsaUJBQWlCQSxDQUFrQkE7SUFBYUEsQ0FBQ0E7SUFFckVELHdDQUFhQSxHQUFiQSxVQUFjQSxhQUFtQkE7UUFDL0JFLE1BQU1BLENBQUNBLElBQUlBLENBQUNBLGlCQUFpQkEsQ0FBQ0EsMkJBQTJCQSxDQUFDQSxhQUFhQSxDQUFDQTthQUNuRUEsSUFBSUEsQ0FBQ0EsVUFBQUEsZUFBZUEsSUFBSUEsT0FBQUEsSUFBSUEsOEJBQW1CQSxDQUFDQSxlQUFlQSxDQUFDQSxFQUF4Q0EsQ0FBd0NBLENBQUNBLENBQUNBO0lBQ3pFQSxDQUFDQTtJQUVERixxQ0FBVUEsR0FBVkE7UUFDRUcsZ0JBQUtBLENBQUNBLFVBQVVBLFdBQUVBLENBQUNBO1FBQ25CQSxJQUFJQSxDQUFDQSxpQkFBaUJBLENBQUNBLFVBQVVBLEVBQUVBLENBQUNBO0lBQ3RDQSxDQUFDQTtJQVpISDtRQUFDQSxlQUFVQSxFQUFFQTs7eUJBYVpBO0lBQURBLHVCQUFDQTtBQUFEQSxDQUFDQSxBQWJELEVBQ3NDLG9CQUFTLEVBWTlDO0FBWlksd0JBQWdCLG1CQVk1QixDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21waWxlciwgQ29tcGlsZXJffSBmcm9tICdhbmd1bGFyMi9zcmMvY29yZS9saW5rZXIvY29tcGlsZXInO1xuaW1wb3J0IHtIb3N0Vmlld0ZhY3RvcnlSZWYsIEhvc3RWaWV3RmFjdG9yeVJlZl99IGZyb20gJ2FuZ3VsYXIyL3NyYy9jb3JlL2xpbmtlci92aWV3X3JlZic7XG5pbXBvcnQge1RlbXBsYXRlQ29tcGlsZXJ9IGZyb20gJy4vdGVtcGxhdGVfY29tcGlsZXInO1xuXG5pbXBvcnQge0luamVjdGFibGV9IGZyb20gJ2FuZ3VsYXIyL3NyYy9jb3JlL2RpJztcbmltcG9ydCB7VHlwZX0gZnJvbSAnYW5ndWxhcjIvc3JjL2ZhY2FkZS9sYW5nJztcbmltcG9ydCB7UHJvbWlzZSwgUHJvbWlzZVdyYXBwZXJ9IGZyb20gJ2FuZ3VsYXIyL3NyYy9mYWNhZGUvYXN5bmMnO1xuXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgUnVudGltZUNvbXBpbGVyIGV4dGVuZHMgQ29tcGlsZXIge1xuICBhYnN0cmFjdCBjb21waWxlSW5Ib3N0KGNvbXBvbmVudFR5cGU6IFR5cGUpOiBQcm9taXNlPEhvc3RWaWV3RmFjdG9yeVJlZj47XG4gIGFic3RyYWN0IGNsZWFyQ2FjaGUoKTtcbn1cblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFJ1bnRpbWVDb21waWxlcl8gZXh0ZW5kcyBDb21waWxlcl8gaW1wbGVtZW50cyBSdW50aW1lQ29tcGlsZXIge1xuICBjb25zdHJ1Y3Rvcihwcml2YXRlIF90ZW1wbGF0ZUNvbXBpbGVyOiBUZW1wbGF0ZUNvbXBpbGVyKSB7IHN1cGVyKCk7IH1cblxuICBjb21waWxlSW5Ib3N0KGNvbXBvbmVudFR5cGU6IFR5cGUpOiBQcm9taXNlPEhvc3RWaWV3RmFjdG9yeVJlZl8+IHtcbiAgICByZXR1cm4gdGhpcy5fdGVtcGxhdGVDb21waWxlci5jb21waWxlSG9zdENvbXBvbmVudFJ1bnRpbWUoY29tcG9uZW50VHlwZSlcbiAgICAgICAgLnRoZW4oaG9zdFZpZXdGYWN0b3J5ID0+IG5ldyBIb3N0Vmlld0ZhY3RvcnlSZWZfKGhvc3RWaWV3RmFjdG9yeSkpO1xuICB9XG5cbiAgY2xlYXJDYWNoZSgpIHtcbiAgICBzdXBlci5jbGVhckNhY2hlKCk7XG4gICAgdGhpcy5fdGVtcGxhdGVDb21waWxlci5jbGVhckNhY2hlKCk7XG4gIH1cbn1cbiJdfQ==\n\n/***/ },\n\n/***/ 142:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n\t    return function (target, key) { decorator(target, key, paramIndex); }\r\n\t};\r\n\tvar di_1 = __webpack_require__(6);\r\n\tvar lang_1 = __webpack_require__(1);\r\n\tvar exceptions_1 = __webpack_require__(5);\r\n\tvar cpl = __webpack_require__(59);\r\n\tvar md = __webpack_require__(52);\r\n\tvar directive_resolver_1 = __webpack_require__(62);\r\n\tvar pipe_resolver_1 = __webpack_require__(106);\r\n\tvar view_resolver_1 = __webpack_require__(108);\r\n\tvar directive_lifecycle_reflector_1 = __webpack_require__(226);\r\n\tvar interfaces_1 = __webpack_require__(63);\r\n\tvar reflection_1 = __webpack_require__(14);\r\n\tvar di_2 = __webpack_require__(6);\r\n\tvar platform_directives_and_pipes_1 = __webpack_require__(110);\r\n\tvar util_1 = __webpack_require__(24);\r\n\tvar url_resolver_1 = __webpack_require__(44);\r\n\tvar RuntimeMetadataResolver = (function () {\r\n\t    function RuntimeMetadataResolver(_directiveResolver, _pipeResolver, _viewResolver, _platformDirectives, _platformPipes) {\r\n\t        this._directiveResolver = _directiveResolver;\r\n\t        this._pipeResolver = _pipeResolver;\r\n\t        this._viewResolver = _viewResolver;\r\n\t        this._platformDirectives = _platformDirectives;\r\n\t        this._platformPipes = _platformPipes;\r\n\t        this._directiveCache = new Map();\r\n\t        this._pipeCache = new Map();\r\n\t    }\r\n\t    RuntimeMetadataResolver.prototype.getDirectiveMetadata = function (directiveType) {\r\n\t        var meta = this._directiveCache.get(directiveType);\r\n\t        if (lang_1.isBlank(meta)) {\r\n\t            var dirMeta = this._directiveResolver.resolve(directiveType);\r\n\t            var moduleUrl = null;\r\n\t            var templateMeta = null;\r\n\t            var changeDetectionStrategy = null;\r\n\t            if (dirMeta instanceof md.ComponentMetadata) {\r\n\t                var cmpMeta = dirMeta;\r\n\t                moduleUrl = calcModuleUrl(directiveType, cmpMeta);\r\n\t                var viewMeta = this._viewResolver.resolve(directiveType);\r\n\t                templateMeta = new cpl.CompileTemplateMetadata({\r\n\t                    encapsulation: viewMeta.encapsulation,\r\n\t                    template: viewMeta.template,\r\n\t                    templateUrl: viewMeta.templateUrl,\r\n\t                    styles: viewMeta.styles,\r\n\t                    styleUrls: viewMeta.styleUrls\r\n\t                });\r\n\t                changeDetectionStrategy = cmpMeta.changeDetection;\r\n\t            }\r\n\t            meta = cpl.CompileDirectiveMetadata.create({\r\n\t                selector: dirMeta.selector,\r\n\t                exportAs: dirMeta.exportAs,\r\n\t                isComponent: lang_1.isPresent(templateMeta),\r\n\t                dynamicLoadable: true,\r\n\t                type: new cpl.CompileTypeMetadata({ name: lang_1.stringify(directiveType), moduleUrl: moduleUrl, runtime: directiveType }),\r\n\t                template: templateMeta,\r\n\t                changeDetection: changeDetectionStrategy,\r\n\t                inputs: dirMeta.inputs,\r\n\t                outputs: dirMeta.outputs,\r\n\t                host: dirMeta.host,\r\n\t                lifecycleHooks: interfaces_1.LIFECYCLE_HOOKS_VALUES.filter(function (hook) { return directive_lifecycle_reflector_1.hasLifecycleHook(hook, directiveType); })\r\n\t            });\r\n\t            this._directiveCache.set(directiveType, meta);\r\n\t        }\r\n\t        return meta;\r\n\t    };\r\n\t    RuntimeMetadataResolver.prototype.getPipeMetadata = function (pipeType) {\r\n\t        var meta = this._pipeCache.get(pipeType);\r\n\t        if (lang_1.isBlank(meta)) {\r\n\t            var pipeMeta = this._pipeResolver.resolve(pipeType);\r\n\t            var moduleUrl = reflection_1.reflector.importUri(pipeType);\r\n\t            meta = new cpl.CompilePipeMetadata({\r\n\t                type: new cpl.CompileTypeMetadata({ name: lang_1.stringify(pipeType), moduleUrl: moduleUrl, runtime: pipeType }),\r\n\t                name: pipeMeta.name,\r\n\t                pure: pipeMeta.pure\r\n\t            });\r\n\t            this._pipeCache.set(pipeType, meta);\r\n\t        }\r\n\t        return meta;\r\n\t    };\r\n\t    RuntimeMetadataResolver.prototype.getViewDirectivesMetadata = function (component) {\r\n\t        var _this = this;\r\n\t        var view = this._viewResolver.resolve(component);\r\n\t        var directives = flattenDirectives(view, this._platformDirectives);\r\n\t        for (var i = 0; i < directives.length; i++) {\r\n\t            if (!isValidType(directives[i])) {\r\n\t                throw new exceptions_1.BaseException(\"Unexpected directive value '\" + lang_1.stringify(directives[i]) + \"' on the View of component '\" + lang_1.stringify(component) + \"'\");\r\n\t            }\r\n\t        }\r\n\t        return directives.map(function (type) { return _this.getDirectiveMetadata(type); });\r\n\t    };\r\n\t    RuntimeMetadataResolver.prototype.getViewPipesMetadata = function (component) {\r\n\t        var _this = this;\r\n\t        var view = this._viewResolver.resolve(component);\r\n\t        var pipes = flattenPipes(view, this._platformPipes);\r\n\t        for (var i = 0; i < pipes.length; i++) {\r\n\t            if (!isValidType(pipes[i])) {\r\n\t                throw new exceptions_1.BaseException(\"Unexpected piped value '\" + lang_1.stringify(pipes[i]) + \"' on the View of component '\" + lang_1.stringify(component) + \"'\");\r\n\t            }\r\n\t        }\r\n\t        return pipes.map(function (type) { return _this.getPipeMetadata(type); });\r\n\t    };\r\n\t    RuntimeMetadataResolver = __decorate([\r\n\t        di_2.Injectable(),\r\n\t        __param(3, di_2.Optional()),\r\n\t        __param(3, di_2.Inject(platform_directives_and_pipes_1.PLATFORM_DIRECTIVES)),\r\n\t        __param(4, di_2.Optional()),\r\n\t        __param(4, di_2.Inject(platform_directives_and_pipes_1.PLATFORM_PIPES)), \r\n\t        __metadata('design:paramtypes', [directive_resolver_1.DirectiveResolver, pipe_resolver_1.PipeResolver, view_resolver_1.ViewResolver, Array, Array])\r\n\t    ], RuntimeMetadataResolver);\r\n\t    return RuntimeMetadataResolver;\r\n\t})();\r\n\texports.RuntimeMetadataResolver = RuntimeMetadataResolver;\r\n\tfunction flattenDirectives(view, platformDirectives) {\r\n\t    var directives = [];\r\n\t    if (lang_1.isPresent(platformDirectives)) {\r\n\t        flattenArray(platformDirectives, directives);\r\n\t    }\r\n\t    if (lang_1.isPresent(view.directives)) {\r\n\t        flattenArray(view.directives, directives);\r\n\t    }\r\n\t    return directives;\r\n\t}\r\n\tfunction flattenPipes(view, platformPipes) {\r\n\t    var pipes = [];\r\n\t    if (lang_1.isPresent(platformPipes)) {\r\n\t        flattenArray(platformPipes, pipes);\r\n\t    }\r\n\t    if (lang_1.isPresent(view.pipes)) {\r\n\t        flattenArray(view.pipes, pipes);\r\n\t    }\r\n\t    return pipes;\r\n\t}\r\n\tfunction flattenArray(tree, out) {\r\n\t    for (var i = 0; i < tree.length; i++) {\r\n\t        var item = di_1.resolveForwardRef(tree[i]);\r\n\t        if (lang_1.isArray(item)) {\r\n\t            flattenArray(item, out);\r\n\t        }\r\n\t        else {\r\n\t            out.push(item);\r\n\t        }\r\n\t    }\r\n\t}\r\n\tfunction isValidType(value) {\r\n\t    return lang_1.isPresent(value) && (value instanceof lang_1.Type);\r\n\t}\r\n\tfunction calcModuleUrl(type, cmpMetadata) {\r\n\t    var moduleId = cmpMetadata.moduleId;\r\n\t    if (lang_1.isPresent(moduleId)) {\r\n\t        var scheme = url_resolver_1.getUrlScheme(moduleId);\r\n\t        return lang_1.isPresent(scheme) && scheme.length > 0 ? moduleId :\r\n\t            \"package:\" + moduleId + util_1.MODULE_SUFFIX;\r\n\t    }\r\n\t    else {\r\n\t        return reflection_1.reflector.importUri(type);\r\n\t    }\r\n\t}\r\n\t//# sourceMappingURL=data:application/json;base64,\n\n/***/ },\n\n/***/ 143:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';var collection_1 = __webpack_require__(3);\r\n\tvar lang_1 = __webpack_require__(1);\r\n\tvar exceptions_1 = __webpack_require__(5);\r\n\tvar _EMPTY_ATTR_VALUE = '';\r\n\t// TODO: Can't use `const` here as\r\n\t// in Dart this is not transpiled into `final` yet...\r\n\tvar _SELECTOR_REGEXP = lang_1.RegExpWrapper.create('(\\\\:not\\\\()|' +\r\n\t    '([-\\\\w]+)|' +\r\n\t    '(?:\\\\.([-\\\\w]+))|' +\r\n\t    '(?:\\\\[([-\\\\w*]+)(?:=([^\\\\]]*))?\\\\])|' +\r\n\t    '(\\\\))|' +\r\n\t    '(\\\\s*,\\\\s*)'); // \",\"\r\n\t/**\r\n\t * A css selector contains an element name,\r\n\t * css classes and attribute/value pairs with the purpose\r\n\t * of selecting subsets out of them.\r\n\t */\r\n\tvar CssSelector = (function () {\r\n\t    function CssSelector() {\r\n\t        this.element = null;\r\n\t        this.classNames = [];\r\n\t        this.attrs = [];\r\n\t        this.notSelectors = [];\r\n\t    }\r\n\t    CssSelector.parse = function (selector) {\r\n\t        var results = [];\r\n\t        var _addResult = function (res, cssSel) {\r\n\t            if (cssSel.notSelectors.length > 0 && lang_1.isBlank(cssSel.element) &&\r\n\t                collection_1.ListWrapper.isEmpty(cssSel.classNames) && collection_1.ListWrapper.isEmpty(cssSel.attrs)) {\r\n\t                cssSel.element = \"*\";\r\n\t            }\r\n\t            res.push(cssSel);\r\n\t        };\r\n\t        var cssSelector = new CssSelector();\r\n\t        var matcher = lang_1.RegExpWrapper.matcher(_SELECTOR_REGEXP, selector);\r\n\t        var match;\r\n\t        var current = cssSelector;\r\n\t        var inNot = false;\r\n\t        while (lang_1.isPresent(match = lang_1.RegExpMatcherWrapper.next(matcher))) {\r\n\t            if (lang_1.isPresent(match[1])) {\r\n\t                if (inNot) {\r\n\t                    throw new exceptions_1.BaseException('Nesting :not is not allowed in a selector');\r\n\t                }\r\n\t                inNot = true;\r\n\t                current = new CssSelector();\r\n\t                cssSelector.notSelectors.push(current);\r\n\t            }\r\n\t            if (lang_1.isPresent(match[2])) {\r\n\t                current.setElement(match[2]);\r\n\t            }\r\n\t            if (lang_1.isPresent(match[3])) {\r\n\t                current.addClassName(match[3]);\r\n\t            }\r\n\t            if (lang_1.isPresent(match[4])) {\r\n\t                current.addAttribute(match[4], match[5]);\r\n\t            }\r\n\t            if (lang_1.isPresent(match[6])) {\r\n\t                inNot = false;\r\n\t                current = cssSelector;\r\n\t            }\r\n\t            if (lang_1.isPresent(match[7])) {\r\n\t                if (inNot) {\r\n\t                    throw new exceptions_1.BaseException('Multiple selectors in :not are not supported');\r\n\t                }\r\n\t                _addResult(results, cssSelector);\r\n\t                cssSelector = current = new CssSelector();\r\n\t            }\r\n\t        }\r\n\t        _addResult(results, cssSelector);\r\n\t        return results;\r\n\t    };\r\n\t    CssSelector.prototype.isElementSelector = function () {\r\n\t        return lang_1.isPresent(this.element) && collection_1.ListWrapper.isEmpty(this.classNames) &&\r\n\t            collection_1.ListWrapper.isEmpty(this.attrs) && this.notSelectors.length === 0;\r\n\t    };\r\n\t    CssSelector.prototype.setElement = function (element) {\r\n\t        if (element === void 0) { element = null; }\r\n\t        this.element = element;\r\n\t    };\r\n\t    /** Gets a template string for an element that matches the selector. */\r\n\t    CssSelector.prototype.getMatchingElementTemplate = function () {\r\n\t        var tagName = lang_1.isPresent(this.element) ? this.element : 'div';\r\n\t        var classAttr = this.classNames.length > 0 ? \" class=\\\"\" + this.classNames.join(' ') + \"\\\"\" : '';\r\n\t        var attrs = '';\r\n\t        for (var i = 0; i < this.attrs.length; i += 2) {\r\n\t            var attrName = this.attrs[i];\r\n\t            var attrValue = this.attrs[i + 1] !== '' ? \"=\\\"\" + this.attrs[i + 1] + \"\\\"\" : '';\r\n\t            attrs += \" \" + attrName + attrValue;\r\n\t        }\r\n\t        return \"<\" + tagName + classAttr + attrs + \"></\" + tagName + \">\";\r\n\t    };\r\n\t    CssSelector.prototype.addAttribute = function (name, value) {\r\n\t        if (value === void 0) { value = _EMPTY_ATTR_VALUE; }\r\n\t        this.attrs.push(name);\r\n\t        if (lang_1.isPresent(value)) {\r\n\t            value = value.toLowerCase();\r\n\t        }\r\n\t        else {\r\n\t            value = _EMPTY_ATTR_VALUE;\r\n\t        }\r\n\t        this.attrs.push(value);\r\n\t    };\r\n\t    CssSelector.prototype.addClassName = function (name) { this.classNames.push(name.toLowerCase()); };\r\n\t    CssSelector.prototype.toString = function () {\r\n\t        var res = '';\r\n\t        if (lang_1.isPresent(this.element)) {\r\n\t            res += this.element;\r\n\t        }\r\n\t        if (lang_1.isPresent(this.classNames)) {\r\n\t            for (var i = 0; i < this.classNames.length; i++) {\r\n\t                res += '.' + this.classNames[i];\r\n\t            }\r\n\t        }\r\n\t        if (lang_1.isPresent(this.attrs)) {\r\n\t            for (var i = 0; i < this.attrs.length;) {\r\n\t                var attrName = this.attrs[i++];\r\n\t                var attrValue = this.attrs[i++];\r\n\t                res += '[' + attrName;\r\n\t                if (attrValue.length > 0) {\r\n\t                    res += '=' + attrValue;\r\n\t                }\r\n\t                res += ']';\r\n\t            }\r\n\t        }\r\n\t        this.notSelectors.forEach(function (notSelector) { return res += \":not(\" + notSelector + \")\"; });\r\n\t        return res;\r\n\t    };\r\n\t    return CssSelector;\r\n\t})();\r\n\texports.CssSelector = CssSelector;\r\n\t/**\r\n\t * Reads a list of CssSelectors and allows to calculate which ones\r\n\t * are contained in a given CssSelector.\r\n\t */\r\n\tvar SelectorMatcher = (function () {\r\n\t    function SelectorMatcher() {\r\n\t        this._elementMap = new collection_1.Map();\r\n\t        this._elementPartialMap = new collection_1.Map();\r\n\t        this._classMap = new collection_1.Map();\r\n\t        this._classPartialMap = new collection_1.Map();\r\n\t        this._attrValueMap = new collection_1.Map();\r\n\t        this._attrValuePartialMap = new collection_1.Map();\r\n\t        this._listContexts = [];\r\n\t    }\r\n\t    SelectorMatcher.createNotMatcher = function (notSelectors) {\r\n\t        var notMatcher = new SelectorMatcher();\r\n\t        notMatcher.addSelectables(notSelectors, null);\r\n\t        return notMatcher;\r\n\t    };\r\n\t    SelectorMatcher.prototype.addSelectables = function (cssSelectors, callbackCtxt) {\r\n\t        var listContext = null;\r\n\t        if (cssSelectors.length > 1) {\r\n\t            listContext = new SelectorListContext(cssSelectors);\r\n\t            this._listContexts.push(listContext);\r\n\t        }\r\n\t        for (var i = 0; i < cssSelectors.length; i++) {\r\n\t            this._addSelectable(cssSelectors[i], callbackCtxt, listContext);\r\n\t        }\r\n\t    };\r\n\t    /**\r\n\t     * Add an object that can be found later on by calling `match`.\r\n\t     * @param cssSelector A css selector\r\n\t     * @param callbackCtxt An opaque object that will be given to the callback of the `match` function\r\n\t     */\r\n\t    SelectorMatcher.prototype._addSelectable = function (cssSelector, callbackCtxt, listContext) {\r\n\t        var matcher = this;\r\n\t        var element = cssSelector.element;\r\n\t        var classNames = cssSelector.classNames;\r\n\t        var attrs = cssSelector.attrs;\r\n\t        var selectable = new SelectorContext(cssSelector, callbackCtxt, listContext);\r\n\t        if (lang_1.isPresent(element)) {\r\n\t            var isTerminal = attrs.length === 0 && classNames.length === 0;\r\n\t            if (isTerminal) {\r\n\t                this._addTerminal(matcher._elementMap, element, selectable);\r\n\t            }\r\n\t            else {\r\n\t                matcher = this._addPartial(matcher._elementPartialMap, element);\r\n\t            }\r\n\t        }\r\n\t        if (lang_1.isPresent(classNames)) {\r\n\t            for (var index = 0; index < classNames.length; index++) {\r\n\t                var isTerminal = attrs.length === 0 && index === classNames.length - 1;\r\n\t                var className = classNames[index];\r\n\t                if (isTerminal) {\r\n\t                    this._addTerminal(matcher._classMap, className, selectable);\r\n\t                }\r\n\t                else {\r\n\t                    matcher = this._addPartial(matcher._classPartialMap, className);\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        if (lang_1.isPresent(attrs)) {\r\n\t            for (var index = 0; index < attrs.length;) {\r\n\t                var isTerminal = index === attrs.length - 2;\r\n\t                var attrName = attrs[index++];\r\n\t                var attrValue = attrs[index++];\r\n\t                if (isTerminal) {\r\n\t                    var terminalMap = matcher._attrValueMap;\r\n\t                    var terminalValuesMap = terminalMap.get(attrName);\r\n\t                    if (lang_1.isBlank(terminalValuesMap)) {\r\n\t                        terminalValuesMap = new collection_1.Map();\r\n\t                        terminalMap.set(attrName, terminalValuesMap);\r\n\t                    }\r\n\t                    this._addTerminal(terminalValuesMap, attrValue, selectable);\r\n\t                }\r\n\t                else {\r\n\t                    var parttialMap = matcher._attrValuePartialMap;\r\n\t                    var partialValuesMap = parttialMap.get(attrName);\r\n\t                    if (lang_1.isBlank(partialValuesMap)) {\r\n\t                        partialValuesMap = new collection_1.Map();\r\n\t                        parttialMap.set(attrName, partialValuesMap);\r\n\t                    }\r\n\t                    matcher = this._addPartial(partialValuesMap, attrValue);\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    SelectorMatcher.prototype._addTerminal = function (map, name, selectable) {\r\n\t        var terminalList = map.get(name);\r\n\t        if (lang_1.isBlank(terminalList)) {\r\n\t            terminalList = [];\r\n\t            map.set(name, terminalList);\r\n\t        }\r\n\t        terminalList.push(selectable);\r\n\t    };\r\n\t    SelectorMatcher.prototype._addPartial = function (map, name) {\r\n\t        var matcher = map.get(name);\r\n\t        if (lang_1.isBlank(matcher)) {\r\n\t            matcher = new SelectorMatcher();\r\n\t            map.set(name, matcher);\r\n\t        }\r\n\t        return matcher;\r\n\t    };\r\n\t    /**\r\n\t     * Find the objects that have been added via `addSelectable`\r\n\t     * whose css selector is contained in the given css selector.\r\n\t     * @param cssSelector A css selector\r\n\t     * @param matchedCallback This callback will be called with the object handed into `addSelectable`\r\n\t     * @return boolean true if a match was found\r\n\t    */\r\n\t    SelectorMatcher.prototype.match = function (cssSelector, matchedCallback) {\r\n\t        var result = false;\r\n\t        var element = cssSelector.element;\r\n\t        var classNames = cssSelector.classNames;\r\n\t        var attrs = cssSelector.attrs;\r\n\t        for (var i = 0; i < this._listContexts.length; i++) {\r\n\t            this._listContexts[i].alreadyMatched = false;\r\n\t        }\r\n\t        result = this._matchTerminal(this._elementMap, element, cssSelector, matchedCallback) || result;\r\n\t        result = this._matchPartial(this._elementPartialMap, element, cssSelector, matchedCallback) ||\r\n\t            result;\r\n\t        if (lang_1.isPresent(classNames)) {\r\n\t            for (var index = 0; index < classNames.length; index++) {\r\n\t                var className = classNames[index];\r\n\t                result =\r\n\t                    this._matchTerminal(this._classMap, className, cssSelector, matchedCallback) || result;\r\n\t                result =\r\n\t                    this._matchPartial(this._classPartialMap, className, cssSelector, matchedCallback) ||\r\n\t                        result;\r\n\t            }\r\n\t        }\r\n\t        if (lang_1.isPresent(attrs)) {\r\n\t            for (var index = 0; index < attrs.length;) {\r\n\t                var attrName = attrs[index++];\r\n\t                var attrValue = attrs[index++];\r\n\t                var terminalValuesMap = this._attrValueMap.get(attrName);\r\n\t                if (!lang_1.StringWrapper.equals(attrValue, _EMPTY_ATTR_VALUE)) {\r\n\t                    result = this._matchTerminal(terminalValuesMap, _EMPTY_ATTR_VALUE, cssSelector, matchedCallback) ||\r\n\t                        result;\r\n\t                }\r\n\t                result = this._matchTerminal(terminalValuesMap, attrValue, cssSelector, matchedCallback) ||\r\n\t                    result;\r\n\t                var partialValuesMap = this._attrValuePartialMap.get(attrName);\r\n\t                if (!lang_1.StringWrapper.equals(attrValue, _EMPTY_ATTR_VALUE)) {\r\n\t                    result = this._matchPartial(partialValuesMap, _EMPTY_ATTR_VALUE, cssSelector, matchedCallback) ||\r\n\t                        result;\r\n\t                }\r\n\t                result =\r\n\t                    this._matchPartial(partialValuesMap, attrValue, cssSelector, matchedCallback) || result;\r\n\t            }\r\n\t        }\r\n\t        return result;\r\n\t    };\r\n\t    /** @internal */\r\n\t    SelectorMatcher.prototype._matchTerminal = function (map, name, cssSelector, matchedCallback) {\r\n\t        if (lang_1.isBlank(map) || lang_1.isBlank(name)) {\r\n\t            return false;\r\n\t        }\r\n\t        var selectables = map.get(name);\r\n\t        var starSelectables = map.get(\"*\");\r\n\t        if (lang_1.isPresent(starSelectables)) {\r\n\t            selectables = selectables.concat(starSelectables);\r\n\t        }\r\n\t        if (lang_1.isBlank(selectables)) {\r\n\t            return false;\r\n\t        }\r\n\t        var selectable;\r\n\t        var result = false;\r\n\t        for (var index = 0; index < selectables.length; index++) {\r\n\t            selectable = selectables[index];\r\n\t            result = selectable.finalize(cssSelector, matchedCallback) || result;\r\n\t        }\r\n\t        return result;\r\n\t    };\r\n\t    /** @internal */\r\n\t    SelectorMatcher.prototype._matchPartial = function (map, name, cssSelector, matchedCallback /*: (c: CssSelector, a: any) => void*/) {\r\n\t        if (lang_1.isBlank(map) || lang_1.isBlank(name)) {\r\n\t            return false;\r\n\t        }\r\n\t        var nestedSelector = map.get(name);\r\n\t        if (lang_1.isBlank(nestedSelector)) {\r\n\t            return false;\r\n\t        }\r\n\t        // TODO(perf): get rid of recursion and measure again\r\n\t        // TODO(perf): don't pass the whole selector into the recursion,\r\n\t        // but only the not processed parts\r\n\t        return nestedSelector.match(cssSelector, matchedCallback);\r\n\t    };\r\n\t    return SelectorMatcher;\r\n\t})();\r\n\texports.SelectorMatcher = SelectorMatcher;\r\n\tvar SelectorListContext = (function () {\r\n\t    function SelectorListContext(selectors) {\r\n\t        this.selectors = selectors;\r\n\t        this.alreadyMatched = false;\r\n\t    }\r\n\t    return SelectorListContext;\r\n\t})();\r\n\texports.SelectorListContext = SelectorListContext;\r\n\t// Store context to pass back selector and context when a selector is matched\r\n\tvar SelectorContext = (function () {\r\n\t    function SelectorContext(selector, cbContext, listContext) {\r\n\t        this.selector = selector;\r\n\t        this.cbContext = cbContext;\r\n\t        this.listContext = listContext;\r\n\t        this.notSelectors = selector.notSelectors;\r\n\t    }\r\n\t    SelectorContext.prototype.finalize = function (cssSelector, callback) {\r\n\t        var result = true;\r\n\t        if (this.notSelectors.length > 0 &&\r\n\t            (lang_1.isBlank(this.listContext) || !this.listContext.alreadyMatched)) {\r\n\t            var notMatcher = SelectorMatcher.createNotMatcher(this.notSelectors);\r\n\t            result = !notMatcher.match(cssSelector, null);\r\n\t        }\r\n\t        if (result && lang_1.isPresent(callback) &&\r\n\t            (lang_1.isBlank(this.listContext) || !this.listContext.alreadyMatched)) {\r\n\t            if (lang_1.isPresent(this.listContext)) {\r\n\t                this.listContext.alreadyMatched = true;\r\n\t            }\r\n\t            callback(this.selector, this.cbContext);\r\n\t        }\r\n\t        return result;\r\n\t    };\r\n\t    return SelectorContext;\r\n\t})();\r\n\texports.SelectorContext = SelectorContext;\r\n\t//# sourceMappingURL=data:application/json;base64,\n\n/***/ },\n\n/***/ 144:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar source_module_1 = __webpack_require__(31);\r\n\tvar view_1 = __webpack_require__(25);\r\n\tvar xhr_1 = __webpack_require__(60);\r\n\tvar lang_1 = __webpack_require__(1);\r\n\tvar async_1 = __webpack_require__(10);\r\n\tvar shadow_css_1 = __webpack_require__(209);\r\n\tvar url_resolver_1 = __webpack_require__(44);\r\n\tvar style_url_resolver_1 = __webpack_require__(94);\r\n\tvar util_1 = __webpack_require__(24);\r\n\tvar di_1 = __webpack_require__(6);\r\n\tvar COMPONENT_VARIABLE = '%COMP%';\r\n\tvar HOST_ATTR = \"_nghost-\" + COMPONENT_VARIABLE;\r\n\tvar CONTENT_ATTR = \"_ngcontent-\" + COMPONENT_VARIABLE;\r\n\tvar StyleCompiler = (function () {\r\n\t    function StyleCompiler(_xhr, _urlResolver) {\r\n\t        this._xhr = _xhr;\r\n\t        this._urlResolver = _urlResolver;\r\n\t        this._styleCache = new Map();\r\n\t        this._shadowCss = new shadow_css_1.ShadowCss();\r\n\t    }\r\n\t    StyleCompiler.prototype.compileComponentRuntime = function (template) {\r\n\t        var styles = template.styles;\r\n\t        var styleAbsUrls = template.styleUrls;\r\n\t        return this._loadStyles(styles, styleAbsUrls, template.encapsulation === view_1.ViewEncapsulation.Emulated);\r\n\t    };\r\n\t    StyleCompiler.prototype.compileComponentCodeGen = function (template) {\r\n\t        var shim = template.encapsulation === view_1.ViewEncapsulation.Emulated;\r\n\t        return this._styleCodeGen(template.styles, template.styleUrls, shim);\r\n\t    };\r\n\t    StyleCompiler.prototype.compileStylesheetCodeGen = function (stylesheetUrl, cssText) {\r\n\t        var styleWithImports = style_url_resolver_1.extractStyleUrls(this._urlResolver, stylesheetUrl, cssText);\r\n\t        return [\r\n\t            this._styleModule(stylesheetUrl, false, this._styleCodeGen([styleWithImports.style], styleWithImports.styleUrls, false)),\r\n\t            this._styleModule(stylesheetUrl, true, this._styleCodeGen([styleWithImports.style], styleWithImports.styleUrls, true))\r\n\t        ];\r\n\t    };\r\n\t    StyleCompiler.prototype.clearCache = function () { this._styleCache.clear(); };\r\n\t    StyleCompiler.prototype._loadStyles = function (plainStyles, absUrls, encapsulate) {\r\n\t        var _this = this;\r\n\t        var promises = absUrls.map(function (absUrl) {\r\n\t            var cacheKey = \"\" + absUrl + (encapsulate ? '.shim' : '');\r\n\t            var result = _this._styleCache.get(cacheKey);\r\n\t            if (lang_1.isBlank(result)) {\r\n\t                result = _this._xhr.get(absUrl).then(function (style) {\r\n\t                    var styleWithImports = style_url_resolver_1.extractStyleUrls(_this._urlResolver, absUrl, style);\r\n\t                    return _this._loadStyles([styleWithImports.style], styleWithImports.styleUrls, encapsulate);\r\n\t                });\r\n\t                _this._styleCache.set(cacheKey, result);\r\n\t            }\r\n\t            return result;\r\n\t        });\r\n\t        return async_1.PromiseWrapper.all(promises).then(function (nestedStyles) {\r\n\t            var result = plainStyles.map(function (plainStyle) { return _this._shimIfNeeded(plainStyle, encapsulate); });\r\n\t            nestedStyles.forEach(function (styles) { return result.push(styles); });\r\n\t            return result;\r\n\t        });\r\n\t    };\r\n\t    StyleCompiler.prototype._styleCodeGen = function (plainStyles, absUrls, shim) {\r\n\t        var _this = this;\r\n\t        var arrayPrefix = lang_1.IS_DART ? \"const\" : '';\r\n\t        var styleExpressions = plainStyles.map(function (plainStyle) { return util_1.escapeSingleQuoteString(_this._shimIfNeeded(plainStyle, shim)); });\r\n\t        for (var i = 0; i < absUrls.length; i++) {\r\n\t            var moduleUrl = this._createModuleUrl(absUrls[i], shim);\r\n\t            styleExpressions.push(source_module_1.moduleRef(moduleUrl) + \"STYLES\");\r\n\t        }\r\n\t        var expressionSource = arrayPrefix + \" [\" + styleExpressions.join(',') + \"]\";\r\n\t        return new source_module_1.SourceExpression([], expressionSource);\r\n\t    };\r\n\t    StyleCompiler.prototype._styleModule = function (stylesheetUrl, shim, expression) {\r\n\t        var moduleSource = \"\\n      \" + expression.declarations.join('\\n') + \"\\n      \" + util_1.codeGenExportVariable('STYLES') + expression.expression + \";\\n    \";\r\n\t        return new source_module_1.SourceModule(this._createModuleUrl(stylesheetUrl, shim), moduleSource);\r\n\t    };\r\n\t    StyleCompiler.prototype._shimIfNeeded = function (style, shim) {\r\n\t        return shim ? this._shadowCss.shimCssText(style, CONTENT_ATTR, HOST_ATTR) : style;\r\n\t    };\r\n\t    StyleCompiler.prototype._createModuleUrl = function (stylesheetUrl, shim) {\r\n\t        return shim ? stylesheetUrl + \".shim\" + util_1.MODULE_SUFFIX : \"\" + stylesheetUrl + util_1.MODULE_SUFFIX;\r\n\t    };\r\n\t    StyleCompiler = __decorate([\r\n\t        di_1.Injectable(), \r\n\t        __metadata('design:paramtypes', [xhr_1.XHR, url_resolver_1.UrlResolver])\r\n\t    ], StyleCompiler);\r\n\t    return StyleCompiler;\r\n\t})();\r\n\texports.StyleCompiler = StyleCompiler;\r\n\t//# sourceMappingURL=data:application/json;base64,\n\n/***/ },\n\n/***/ 145:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar directive_metadata_1 = __webpack_require__(59);\r\n\tvar lang_1 = __webpack_require__(1);\r\n\tvar exceptions_1 = __webpack_require__(5);\r\n\tvar async_1 = __webpack_require__(10);\r\n\tvar xhr_1 = __webpack_require__(60);\r\n\tvar url_resolver_1 = __webpack_require__(44);\r\n\tvar style_url_resolver_1 = __webpack_require__(94);\r\n\tvar di_1 = __webpack_require__(6);\r\n\tvar view_1 = __webpack_require__(25);\r\n\tvar html_ast_1 = __webpack_require__(89);\r\n\tvar html_parser_1 = __webpack_require__(90);\r\n\tvar template_preparser_1 = __webpack_require__(146);\r\n\tvar TemplateNormalizer = (function () {\r\n\t    function TemplateNormalizer(_xhr, _urlResolver, _htmlParser) {\r\n\t        this._xhr = _xhr;\r\n\t        this._urlResolver = _urlResolver;\r\n\t        this._htmlParser = _htmlParser;\r\n\t    }\r\n\t    TemplateNormalizer.prototype.normalizeTemplate = function (directiveType, template) {\r\n\t        var _this = this;\r\n\t        if (lang_1.isPresent(template.template)) {\r\n\t            return async_1.PromiseWrapper.resolve(this.normalizeLoadedTemplate(directiveType, template, template.template, directiveType.moduleUrl));\r\n\t        }\r\n\t        else if (lang_1.isPresent(template.templateUrl)) {\r\n\t            var sourceAbsUrl = this._urlResolver.resolve(directiveType.moduleUrl, template.templateUrl);\r\n\t            return this._xhr.get(sourceAbsUrl)\r\n\t                .then(function (templateContent) { return _this.normalizeLoadedTemplate(directiveType, template, templateContent, sourceAbsUrl); });\r\n\t        }\r\n\t        else {\r\n\t            throw new exceptions_1.BaseException(\"No template specified for component \" + directiveType.name);\r\n\t        }\r\n\t    };\r\n\t    TemplateNormalizer.prototype.normalizeLoadedTemplate = function (directiveType, templateMeta, template, templateAbsUrl) {\r\n\t        var _this = this;\r\n\t        var rootNodesAndErrors = this._htmlParser.parse(template, directiveType.name);\r\n\t        if (rootNodesAndErrors.errors.length > 0) {\r\n\t            var errorString = rootNodesAndErrors.errors.join('\\n');\r\n\t            throw new exceptions_1.BaseException(\"Template parse errors:\\n\" + errorString);\r\n\t        }\r\n\t        var visitor = new TemplatePreparseVisitor();\r\n\t        html_ast_1.htmlVisitAll(visitor, rootNodesAndErrors.rootNodes);\r\n\t        var allStyles = templateMeta.styles.concat(visitor.styles);\r\n\t        var allStyleAbsUrls = visitor.styleUrls.filter(style_url_resolver_1.isStyleUrlResolvable)\r\n\t            .map(function (url) { return _this._urlResolver.resolve(templateAbsUrl, url); })\r\n\t            .concat(templateMeta.styleUrls.filter(style_url_resolver_1.isStyleUrlResolvable)\r\n\t            .map(function (url) { return _this._urlResolver.resolve(directiveType.moduleUrl, url); }));\r\n\t        var allResolvedStyles = allStyles.map(function (style) {\r\n\t            var styleWithImports = style_url_resolver_1.extractStyleUrls(_this._urlResolver, templateAbsUrl, style);\r\n\t            styleWithImports.styleUrls.forEach(function (styleUrl) { return allStyleAbsUrls.push(styleUrl); });\r\n\t            return styleWithImports.style;\r\n\t        });\r\n\t        var encapsulation = templateMeta.encapsulation;\r\n\t        if (encapsulation === view_1.ViewEncapsulation.Emulated && allResolvedStyles.length === 0 &&\r\n\t            allStyleAbsUrls.length === 0) {\r\n\t            encapsulation = view_1.ViewEncapsulation.None;\r\n\t        }\r\n\t        return new directive_metadata_1.CompileTemplateMetadata({\r\n\t            encapsulation: encapsulation,\r\n\t            template: template,\r\n\t            templateUrl: templateAbsUrl,\r\n\t            styles: allResolvedStyles,\r\n\t            styleUrls: allStyleAbsUrls,\r\n\t            ngContentSelectors: visitor.ngContentSelectors\r\n\t        });\r\n\t    };\r\n\t    TemplateNormalizer = __decorate([\r\n\t        di_1.Injectable(), \r\n\t        __metadata('design:paramtypes', [xhr_1.XHR, url_resolver_1.UrlResolver, html_parser_1.HtmlParser])\r\n\t    ], TemplateNormalizer);\r\n\t    return TemplateNormalizer;\r\n\t})();\r\n\texports.TemplateNormalizer = TemplateNormalizer;\r\n\tvar TemplatePreparseVisitor = (function () {\r\n\t    function TemplatePreparseVisitor() {\r\n\t        this.ngContentSelectors = [];\r\n\t        this.styles = [];\r\n\t        this.styleUrls = [];\r\n\t        this.ngNonBindableStackCount = 0;\r\n\t    }\r\n\t    TemplatePreparseVisitor.prototype.visitElement = function (ast, context) {\r\n\t        var preparsedElement = template_preparser_1.preparseElement(ast);\r\n\t        switch (preparsedElement.type) {\r\n\t            case template_preparser_1.PreparsedElementType.NG_CONTENT:\r\n\t                if (this.ngNonBindableStackCount === 0) {\r\n\t                    this.ngContentSelectors.push(preparsedElement.selectAttr);\r\n\t                }\r\n\t                break;\r\n\t            case template_preparser_1.PreparsedElementType.STYLE:\r\n\t                var textContent = '';\r\n\t                ast.children.forEach(function (child) {\r\n\t                    if (child instanceof html_ast_1.HtmlTextAst) {\r\n\t                        textContent += child.value;\r\n\t                    }\r\n\t                });\r\n\t                this.styles.push(textContent);\r\n\t                break;\r\n\t            case template_preparser_1.PreparsedElementType.STYLESHEET:\r\n\t                this.styleUrls.push(preparsedElement.hrefAttr);\r\n\t                break;\r\n\t            default:\r\n\t                // DDC reports this as error. See:\r\n\t                // https://github.com/dart-lang/dev_compiler/issues/428\r\n\t                break;\r\n\t        }\r\n\t        if (preparsedElement.nonBindable) {\r\n\t            this.ngNonBindableStackCount++;\r\n\t        }\r\n\t        html_ast_1.htmlVisitAll(this, ast.children);\r\n\t        if (preparsedElement.nonBindable) {\r\n\t            this.ngNonBindableStackCount--;\r\n\t        }\r\n\t        return null;\r\n\t    };\r\n\t    TemplatePreparseVisitor.prototype.visitAttr = function (ast, context) { return null; };\r\n\t    TemplatePreparseVisitor.prototype.visitText = function (ast, context) { return null; };\r\n\t    return TemplatePreparseVisitor;\r\n\t})();\r\n\t//# sourceMappingURL=data:application/json;base64,\n\n/***/ },\n\n/***/ 146:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';var lang_1 = __webpack_require__(1);\r\n\tvar html_tags_1 = __webpack_require__(43);\r\n\tvar NG_CONTENT_SELECT_ATTR = 'select';\r\n\tvar NG_CONTENT_ELEMENT = 'ng-content';\r\n\tvar LINK_ELEMENT = 'link';\r\n\tvar LINK_STYLE_REL_ATTR = 'rel';\r\n\tvar LINK_STYLE_HREF_ATTR = 'href';\r\n\tvar LINK_STYLE_REL_VALUE = 'stylesheet';\r\n\tvar STYLE_ELEMENT = 'style';\r\n\tvar SCRIPT_ELEMENT = 'script';\r\n\tvar NG_NON_BINDABLE_ATTR = 'ngNonBindable';\r\n\tfunction preparseElement(ast) {\r\n\t    var selectAttr = null;\r\n\t    var hrefAttr = null;\r\n\t    var relAttr = null;\r\n\t    var nonBindable = false;\r\n\t    ast.attrs.forEach(function (attr) {\r\n\t        var lcAttrName = attr.name.toLowerCase();\r\n\t        if (lcAttrName == NG_CONTENT_SELECT_ATTR) {\r\n\t            selectAttr = attr.value;\r\n\t        }\r\n\t        else if (lcAttrName == LINK_STYLE_HREF_ATTR) {\r\n\t            hrefAttr = attr.value;\r\n\t        }\r\n\t        else if (lcAttrName == LINK_STYLE_REL_ATTR) {\r\n\t            relAttr = attr.value;\r\n\t        }\r\n\t        else if (attr.name == NG_NON_BINDABLE_ATTR) {\r\n\t            nonBindable = true;\r\n\t        }\r\n\t    });\r\n\t    selectAttr = normalizeNgContentSelect(selectAttr);\r\n\t    var nodeName = ast.name.toLowerCase();\r\n\t    var type = PreparsedElementType.OTHER;\r\n\t    if (html_tags_1.splitNsName(nodeName)[1] == NG_CONTENT_ELEMENT) {\r\n\t        type = PreparsedElementType.NG_CONTENT;\r\n\t    }\r\n\t    else if (nodeName == STYLE_ELEMENT) {\r\n\t        type = PreparsedElementType.STYLE;\r\n\t    }\r\n\t    else if (nodeName == SCRIPT_ELEMENT) {\r\n\t        type = PreparsedElementType.SCRIPT;\r\n\t    }\r\n\t    else if (nodeName == LINK_ELEMENT && relAttr == LINK_STYLE_REL_VALUE) {\r\n\t        type = PreparsedElementType.STYLESHEET;\r\n\t    }\r\n\t    return new PreparsedElement(type, selectAttr, hrefAttr, nonBindable);\r\n\t}\r\n\texports.preparseElement = preparseElement;\r\n\t(function (PreparsedElementType) {\r\n\t    PreparsedElementType[PreparsedElementType[\"NG_CONTENT\"] = 0] = \"NG_CONTENT\";\r\n\t    PreparsedElementType[PreparsedElementType[\"STYLE\"] = 1] = \"STYLE\";\r\n\t    PreparsedElementType[PreparsedElementType[\"STYLESHEET\"] = 2] = \"STYLESHEET\";\r\n\t    PreparsedElementType[PreparsedElementType[\"SCRIPT\"] = 3] = \"SCRIPT\";\r\n\t    PreparsedElementType[PreparsedElementType[\"OTHER\"] = 4] = \"OTHER\";\r\n\t})(exports.PreparsedElementType || (exports.PreparsedElementType = {}));\r\n\tvar PreparsedElementType = exports.PreparsedElementType;\r\n\tvar PreparsedElement = (function () {\r\n\t    function PreparsedElement(type, selectAttr, hrefAttr, nonBindable) {\r\n\t        this.type = type;\r\n\t        this.selectAttr = selectAttr;\r\n\t        this.hrefAttr = hrefAttr;\r\n\t        this.nonBindable = nonBindable;\r\n\t    }\r\n\t    return PreparsedElement;\r\n\t})();\r\n\texports.PreparsedElement = PreparsedElement;\r\n\tfunction normalizeNgContentSelect(selectAttr) {\r\n\t    if (lang_1.isBlank(selectAttr) || selectAttr.length === 0) {\r\n\t        return '*';\r\n\t    }\r\n\t    return selectAttr;\r\n\t}\r\n\t//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVtcGxhdGVfcHJlcGFyc2VyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYW5ndWxhcjIvc3JjL2NvbXBpbGVyL3RlbXBsYXRlX3ByZXBhcnNlci50cyJdLCJuYW1lcyI6WyJwcmVwYXJzZUVsZW1lbnQiLCJQcmVwYXJzZWRFbGVtZW50VHlwZSIsIlByZXBhcnNlZEVsZW1lbnQiLCJQcmVwYXJzZWRFbGVtZW50LmNvbnN0cnVjdG9yIiwibm9ybWFsaXplTmdDb250ZW50U2VsZWN0Il0sIm1hcHBpbmdzIjoiQUFDQSxxQkFBaUMsMEJBQTBCLENBQUMsQ0FBQTtBQUM1RCwwQkFBMEIsYUFBYSxDQUFDLENBQUE7QUFFeEMsSUFBTSxzQkFBc0IsR0FBRyxRQUFRLENBQUM7QUFDeEMsSUFBTSxrQkFBa0IsR0FBRyxZQUFZLENBQUM7QUFDeEMsSUFBTSxZQUFZLEdBQUcsTUFBTSxDQUFDO0FBQzVCLElBQU0sbUJBQW1CLEdBQUcsS0FBSyxDQUFDO0FBQ2xDLElBQU0sb0JBQW9CLEdBQUcsTUFBTSxDQUFDO0FBQ3BDLElBQU0sb0JBQW9CLEdBQUcsWUFBWSxDQUFDO0FBQzFDLElBQU0sYUFBYSxHQUFHLE9BQU8sQ0FBQztBQUM5QixJQUFNLGNBQWMsR0FBRyxRQUFRLENBQUM7QUFDaEMsSUFBTSxvQkFBb0IsR0FBRyxlQUFlLENBQUM7QUFFN0MseUJBQWdDLEdBQW1CO0lBQ2pEQSxJQUFJQSxVQUFVQSxHQUFHQSxJQUFJQSxDQUFDQTtJQUN0QkEsSUFBSUEsUUFBUUEsR0FBR0EsSUFBSUEsQ0FBQ0E7SUFDcEJBLElBQUlBLE9BQU9BLEdBQUdBLElBQUlBLENBQUNBO0lBQ25CQSxJQUFJQSxXQUFXQSxHQUFHQSxLQUFLQSxDQUFDQTtJQUN4QkEsR0FBR0EsQ0FBQ0EsS0FBS0EsQ0FBQ0EsT0FBT0EsQ0FBQ0EsVUFBQUEsSUFBSUE7UUFDcEJBLElBQUlBLFVBQVVBLEdBQUdBLElBQUlBLENBQUNBLElBQUlBLENBQUNBLFdBQVdBLEVBQUVBLENBQUNBO1FBQ3pD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QkFBQ0E7QUFBREEsQ0FBQ0EsQUFIRCxJQUdDO0FBSFksd0JBQWdCLG1CQUc1QixDQUFBO0FBR0Qsa0NBQWtDLFVBQWtCO0lBQ2xERSxFQUFFQSxDQUFDQSxDQUFDQSxjQUFPQSxDQUFDQSxVQUFVQSxDQUFDQSxJQUFJQSxVQUFVQSxDQUFDQSxNQUFNQSxLQUFLQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQTtRQUNuREEsTUFBTUEsQ0FBQ0EsR0FBR0EsQ0FBQ0E7SUFDYkEsQ0FBQ0E7SUFDREEsTUFBTUEsQ0FBQ0EsVUFBVUEsQ0FBQ0E7QUFDcEJBLENBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtIdG1sRWxlbWVudEFzdH0gZnJvbSAnLi9odG1sX2FzdCc7XG5pbXBvcnQge2lzQmxhbmssIGlzUHJlc2VudH0gZnJvbSAnYW5ndWxhcjIvc3JjL2ZhY2FkZS9sYW5nJztcbmltcG9ydCB7c3BsaXROc05hbWV9IGZyb20gJy4vaHRtbF90YWdzJztcblxuY29uc3QgTkdfQ09OVEVOVF9TRUxFQ1RfQVRUUiA9ICdzZWxlY3QnO1xuY29uc3QgTkdfQ09OVEVOVF9FTEVNRU5UID0gJ25nLWNvbnRlbnQnO1xuY29uc3QgTElOS19FTEVNRU5UID0gJ2xpbmsnO1xuY29uc3QgTElOS19TVFlMRV9SRUxfQVRUUiA9ICdyZWwnO1xuY29uc3QgTElOS19TVFlMRV9IUkVGX0FUVFIgPSAnaHJlZic7XG5jb25zdCBMSU5LX1NUWUxFX1JFTF9WQUxVRSA9ICdzdHlsZXNoZWV0JztcbmNvbnN0IFNUWUxFX0VMRU1FTlQgPSAnc3R5bGUnO1xuY29uc3QgU0NSSVBUX0VMRU1FTlQgPSAnc2NyaXB0JztcbmNvbnN0IE5HX05PTl9CSU5EQUJMRV9BVFRSID0gJ25nTm9uQmluZGFibGUnO1xuXG5leHBvcnQgZnVuY3Rpb24gcHJlcGFyc2VFbGVtZW50KGFzdDogSHRtbEVsZW1lbnRBc3QpOiBQcmVwYXJzZWRFbGVtZW50IHtcbiAgdmFyIHNlbGVjdEF0dHIgPSBudWxsO1xuICB2YXIgaHJlZkF0dHIgPSBudWxsO1xuICB2YXIgcmVsQXR0ciA9IG51bGw7XG4gIHZhciBub25CaW5kYWJsZSA9IGZhbHNlO1xuICBhc3QuYXR0cnMuZm9yRWFjaChhdHRyID0+IHtcbiAgICBsZXQgbGNBdHRyTmFtZSA9IGF0dHIubmFtZS50b0xvd2VyQ2FzZSgpO1xuICAgIGlmIChsY0F0dHJOYW1lID09IE5HX0NPTlRFTlRfU0VMRUNUX0FUVFIpIHtcbiAgICAgIHNlbGVjdEF0dHIgPSBhdHRyLnZhbHVlO1xuICAgIH0gZWxzZSBpZiAobGNBdHRyTmFtZSA9PSBMSU5LX1NUWUxFX0hSRUZfQVRUUikge1xuICAgICAgaHJlZkF0dHIgPSBhdHRyLnZhbHVlO1xuICAgIH0gZWxzZSBpZiAobGNBdHRyTmFtZSA9PSBMSU5LX1NUWUxFX1JFTF9BVFRSKSB7XG4gICAgICByZWxBdHRyID0gYXR0ci52YWx1ZTtcbiAgICB9IGVsc2UgaWYgKGF0dHIubmFtZSA9PSBOR19OT05fQklOREFCTEVfQVRUUikge1xuICAgICAgbm9uQmluZGFibGUgPSB0cnVlO1xuICAgIH1cbiAgfSk7XG4gIHNlbGVjdEF0dHIgPSBub3JtYWxpemVOZ0NvbnRlbnRTZWxlY3Qoc2VsZWN0QXR0cik7XG4gIHZhciBub2RlTmFtZSA9IGFzdC5uYW1lLnRvTG93ZXJDYXNlKCk7XG4gIHZhciB0eXBlID0gUHJlcGFyc2VkRWxlbWVudFR5cGUuT1RIRVI7XG4gIGlmIChzcGxpdE5zTmFtZShub2RlTmFtZSlbMV0gPT0gTkdfQ09OVEVOVF9FTEVNRU5UKSB7XG4gICAgdHlwZSA9IFByZXBhcnNlZEVsZW1lbnRUeXBlLk5HX0NPTlRFTlQ7XG4gIH0gZWxzZSBpZiAobm9kZU5hbWUgPT0gU1RZTEVfRUxFTUVOVCkge1xuICAgIHR5cGUgPSBQcmVwYXJzZWRFbGVtZW50VHlwZS5TVFlMRTtcbiAgfSBlbHNlIGlmIChub2RlTmFtZSA9PSBTQ1JJUFRfRUxFTUVOVCkge1xuICAgIHR5cGUgPSBQcmVwYXJzZWRFbGVtZW50VHlwZS5TQ1JJUFQ7XG4gIH0gZWxzZSBpZiAobm9kZU5hbWUgPT0gTElOS19FTEVNRU5UICYmIHJlbEF0dHIgPT0gTElOS19TVFlMRV9SRUxfVkFMVUUpIHtcbiAgICB0eXBlID0gUHJlcGFyc2VkRWxlbWVudFR5cGUuU1RZTEVTSEVFVDtcbiAgfVxuICByZXR1cm4gbmV3IFByZXBhcnNlZEVsZW1lbnQodHlwZSwgc2VsZWN0QXR0ciwgaHJlZkF0dHIsIG5vbkJpbmRhYmxlKTtcbn1cblxuZXhwb3J0IGVudW0gUHJlcGFyc2VkRWxlbWVudFR5cGUge1xuICBOR19DT05URU5ULFxuICBTVFlMRSxcbiAgU1RZTEVTSEVFVCxcbiAgU0NSSVBULFxuICBPVEhFUlxufVxuXG5leHBvcnQgY2xhc3MgUHJlcGFyc2VkRWxlbWVudCB7XG4gIGNvbnN0cnVjdG9yKHB1YmxpYyB0eXBlOiBQcmVwYXJzZWRFbGVtZW50VHlwZSwgcHVibGljIHNlbGVjdEF0dHI6IHN0cmluZywgcHVibGljIGhyZWZBdHRyOiBzdHJpbmcsXG4gICAgICAgICAgICAgIHB1YmxpYyBub25CaW5kYWJsZTogYm9vbGVhbikge31cbn1cblxuXG5mdW5jdGlvbiBub3JtYWxpemVOZ0NvbnRlbnRTZWxlY3Qoc2VsZWN0QXR0cjogc3RyaW5nKTogc3RyaW5nIHtcbiAgaWYgKGlzQmxhbmsoc2VsZWN0QXR0cikgfHwgc2VsZWN0QXR0ci5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gJyonO1xuICB9XG4gIHJldHVybiBzZWxlY3RBdHRyO1xufVxuIl19\n\n/***/ },\n\n/***/ 147:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar lang_1 = __webpack_require__(1);\r\n\tvar collection_1 = __webpack_require__(3);\r\n\tvar template_ast_1 = __webpack_require__(32);\r\n\tvar source_module_1 = __webpack_require__(31);\r\n\tvar view_1 = __webpack_require__(50);\r\n\tvar view_type_1 = __webpack_require__(51);\r\n\tvar element_1 = __webpack_require__(49);\r\n\tvar view_2 = __webpack_require__(25);\r\n\tvar util_1 = __webpack_require__(24);\r\n\tvar di_1 = __webpack_require__(6);\r\n\tvar proto_view_compiler_1 = __webpack_require__(92);\r\n\texports.VIEW_JIT_IMPORTS = lang_1.CONST_EXPR({\r\n\t    'AppView': view_1.AppView,\r\n\t    'AppElement': element_1.AppElement,\r\n\t    'flattenNestedViewRenderNodes': view_1.flattenNestedViewRenderNodes,\r\n\t    'checkSlotCount': view_1.checkSlotCount\r\n\t});\r\n\tvar ViewCompiler = (function () {\r\n\t    function ViewCompiler() {\r\n\t    }\r\n\t    ViewCompiler.prototype.compileComponentRuntime = function (component, template, styles, protoViews, changeDetectorFactories, componentViewFactory) {\r\n\t        var viewFactory = new RuntimeViewFactory(component, styles, protoViews, changeDetectorFactories, componentViewFactory);\r\n\t        return viewFactory.createViewFactory(template, 0, []);\r\n\t    };\r\n\t    ViewCompiler.prototype.compileComponentCodeGen = function (component, template, styles, protoViews, changeDetectorFactoryExpressions, componentViewFactory) {\r\n\t        var viewFactory = new CodeGenViewFactory(component, styles, protoViews, changeDetectorFactoryExpressions, componentViewFactory);\r\n\t        var targetStatements = [];\r\n\t        var viewFactoryExpression = viewFactory.createViewFactory(template, 0, targetStatements);\r\n\t        return new source_module_1.SourceExpression(targetStatements.map(function (stmt) { return stmt.statement; }), viewFactoryExpression.expression);\r\n\t    };\r\n\t    ViewCompiler = __decorate([\r\n\t        di_1.Injectable(), \r\n\t        __metadata('design:paramtypes', [])\r\n\t    ], ViewCompiler);\r\n\t    return ViewCompiler;\r\n\t})();\r\n\texports.ViewCompiler = ViewCompiler;\r\n\tvar CodeGenViewFactory = (function () {\r\n\t    function CodeGenViewFactory(component, styles, protoViews, changeDetectorExpressions, componentViewFactory) {\r\n\t        this.component = component;\r\n\t        this.styles = styles;\r\n\t        this.protoViews = protoViews;\r\n\t        this.changeDetectorExpressions = changeDetectorExpressions;\r\n\t        this.componentViewFactory = componentViewFactory;\r\n\t        this._nextVarId = 0;\r\n\t    }\r\n\t    CodeGenViewFactory.prototype._nextVar = function (prefix) {\r\n\t        return \"\" + prefix + this._nextVarId++ + \"_\" + this.component.type.name;\r\n\t    };\r\n\t    CodeGenViewFactory.prototype._nextRenderVar = function () { return this._nextVar('render'); };\r\n\t    CodeGenViewFactory.prototype._nextAppVar = function () { return this._nextVar('app'); };\r\n\t    CodeGenViewFactory.prototype._nextDisposableVar = function () {\r\n\t        return \"disposable\" + this._nextVarId++ + \"_\" + this.component.type.name;\r\n\t    };\r\n\t    CodeGenViewFactory.prototype.createText = function (renderer, parent, text, targetStatements) {\r\n\t        var varName = this._nextRenderVar();\r\n\t        var statement = \"var \" + varName + \" = \" + renderer.expression + \".createText(\" + (lang_1.isPresent(parent) ? parent.expression : null) + \", \" + util_1.escapeSingleQuoteString(text) + \");\";\r\n\t        targetStatements.push(new util_1.Statement(statement));\r\n\t        return new util_1.Expression(varName);\r\n\t    };\r\n\t    CodeGenViewFactory.prototype.createElement = function (renderer, parentRenderNode, name, rootSelector, targetStatements) {\r\n\t        var varName = this._nextRenderVar();\r\n\t        var valueExpr;\r\n\t        if (lang_1.isPresent(rootSelector)) {\r\n\t            valueExpr = rootSelector.expression + \" == null ?\\n        \" + renderer.expression + \".createElement(\" + (lang_1.isPresent(parentRenderNode) ? parentRenderNode.expression : null) + \", \" + util_1.escapeSingleQuoteString(name) + \") :\\n        \" + renderer.expression + \".selectRootElement(\" + rootSelector.expression + \");\";\r\n\t        }\r\n\t        else {\r\n\t            valueExpr =\r\n\t                renderer.expression + \".createElement(\" + (lang_1.isPresent(parentRenderNode) ? parentRenderNode.expression : null) + \", \" + util_1.escapeSingleQuoteString(name) + \")\";\r\n\t        }\r\n\t        var statement = \"var \" + varName + \" = \" + valueExpr + \";\";\r\n\t        targetStatements.push(new util_1.Statement(statement));\r\n\t        return new util_1.Expression(varName);\r\n\t    };\r\n\t    CodeGenViewFactory.prototype.createTemplateAnchor = function (renderer, parentRenderNode, targetStatements) {\r\n\t        var varName = this._nextRenderVar();\r\n\t        var valueExpr = renderer.expression + \".createTemplateAnchor(\" + (lang_1.isPresent(parentRenderNode) ? parentRenderNode.expression : null) + \");\";\r\n\t        targetStatements.push(new util_1.Statement(\"var \" + varName + \" = \" + valueExpr));\r\n\t        return new util_1.Expression(varName);\r\n\t    };\r\n\t    CodeGenViewFactory.prototype.createGlobalEventListener = function (renderer, appView, boundElementIndex, eventAst, targetStatements) {\r\n\t        var disposableVar = this._nextDisposableVar();\r\n\t        var eventHandlerExpr = codeGenEventHandler(appView, boundElementIndex, eventAst.fullName);\r\n\t        targetStatements.push(new util_1.Statement(\"var \" + disposableVar + \" = \" + renderer.expression + \".listenGlobal(\" + util_1.escapeValue(eventAst.target) + \", \" + util_1.escapeValue(eventAst.name) + \", \" + eventHandlerExpr + \");\"));\r\n\t        return new util_1.Expression(disposableVar);\r\n\t    };\r\n\t    CodeGenViewFactory.prototype.createElementEventListener = function (renderer, appView, boundElementIndex, renderNode, eventAst, targetStatements) {\r\n\t        var disposableVar = this._nextDisposableVar();\r\n\t        var eventHandlerExpr = codeGenEventHandler(appView, boundElementIndex, eventAst.fullName);\r\n\t        targetStatements.push(new util_1.Statement(\"var \" + disposableVar + \" = \" + renderer.expression + \".listen(\" + renderNode.expression + \", \" + util_1.escapeValue(eventAst.name) + \", \" + eventHandlerExpr + \");\"));\r\n\t        return new util_1.Expression(disposableVar);\r\n\t    };\r\n\t    CodeGenViewFactory.prototype.setElementAttribute = function (renderer, renderNode, attrName, attrValue, targetStatements) {\r\n\t        targetStatements.push(new util_1.Statement(renderer.expression + \".setElementAttribute(\" + renderNode.expression + \", \" + util_1.escapeSingleQuoteString(attrName) + \", \" + util_1.escapeSingleQuoteString(attrValue) + \");\"));\r\n\t    };\r\n\t    CodeGenViewFactory.prototype.createAppElement = function (appProtoEl, appView, renderNode, parentAppEl, embeddedViewFactory, targetStatements) {\r\n\t        var appVar = this._nextAppVar();\r\n\t        var varValue = \"new \" + proto_view_compiler_1.APP_EL_MODULE_REF + \"AppElement(\" + appProtoEl.expression + \", \" + appView.expression + \",\\n      \" + (lang_1.isPresent(parentAppEl) ? parentAppEl.expression : null) + \", \" + renderNode.expression + \", \" + (lang_1.isPresent(embeddedViewFactory) ? embeddedViewFactory.expression : null) + \")\";\r\n\t        targetStatements.push(new util_1.Statement(\"var \" + appVar + \" = \" + varValue + \";\"));\r\n\t        return new util_1.Expression(appVar);\r\n\t    };\r\n\t    CodeGenViewFactory.prototype.createAndSetComponentView = function (renderer, viewManager, view, appEl, component, contentNodesByNgContentIndex, targetStatements) {\r\n\t        var codeGenContentNodes;\r\n\t        if (this.component.type.isHost) {\r\n\t            codeGenContentNodes = view.expression + \".projectableNodes\";\r\n\t        }\r\n\t        else {\r\n\t            codeGenContentNodes =\r\n\t                \"[\" + contentNodesByNgContentIndex.map(function (nodes) { return util_1.codeGenFlatArray(nodes); }).join(',') + \"]\";\r\n\t        }\r\n\t        targetStatements.push(new util_1.Statement(this.componentViewFactory(component) + \"(\" + renderer.expression + \", \" + viewManager.expression + \", \" + appEl.expression + \", \" + codeGenContentNodes + \", null, null, null);\"));\r\n\t    };\r\n\t    CodeGenViewFactory.prototype.getProjectedNodes = function (projectableNodes, ngContentIndex) {\r\n\t        return new util_1.Expression(projectableNodes.expression + \"[\" + ngContentIndex + \"]\", true);\r\n\t    };\r\n\t    CodeGenViewFactory.prototype.appendProjectedNodes = function (renderer, parent, nodes, targetStatements) {\r\n\t        targetStatements.push(new util_1.Statement(renderer.expression + \".projectNodes(\" + parent.expression + \", \" + proto_view_compiler_1.APP_VIEW_MODULE_REF + \"flattenNestedViewRenderNodes(\" + nodes.expression + \"));\"));\r\n\t    };\r\n\t    CodeGenViewFactory.prototype.createViewFactory = function (asts, embeddedTemplateIndex, targetStatements) {\r\n\t        var compileProtoView = this.protoViews[embeddedTemplateIndex];\r\n\t        var isHostView = this.component.type.isHost;\r\n\t        var isComponentView = embeddedTemplateIndex === 0 && !isHostView;\r\n\t        var visitor = new ViewBuilderVisitor(new util_1.Expression('renderer'), new util_1.Expression('viewManager'), new util_1.Expression('projectableNodes'), isHostView ? new util_1.Expression('rootSelector') : null, new util_1.Expression('view'), compileProtoView, targetStatements, this);\r\n\t        template_ast_1.templateVisitAll(visitor, asts, new ParentElement(isComponentView ? new util_1.Expression('parentRenderNode') : null, null, null));\r\n\t        var appProtoView = compileProtoView.protoView.expression;\r\n\t        var viewFactoryName = codeGenViewFactoryName(this.component, embeddedTemplateIndex);\r\n\t        var changeDetectorFactory = this.changeDetectorExpressions.expressions[embeddedTemplateIndex];\r\n\t        var factoryArgs = [\r\n\t            'parentRenderer',\r\n\t            'viewManager',\r\n\t            'containerEl',\r\n\t            'projectableNodes',\r\n\t            'rootSelector',\r\n\t            'dynamicallyCreatedProviders',\r\n\t            'rootInjector'\r\n\t        ];\r\n\t        var initRendererStmts = [];\r\n\t        var rendererExpr = \"parentRenderer\";\r\n\t        if (embeddedTemplateIndex === 0) {\r\n\t            var renderCompTypeVar = this._nextVar('renderType');\r\n\t            targetStatements.push(new util_1.Statement(\"var \" + renderCompTypeVar + \" = null;\"));\r\n\t            var stylesVar = this._nextVar('styles');\r\n\t            targetStatements.push(new util_1.Statement(util_1.CONST_VAR + \" \" + stylesVar + \" = \" + this.styles.expression + \";\"));\r\n\t            var encapsulation = this.component.template.encapsulation;\r\n\t            initRendererStmts.push(\"if (\" + renderCompTypeVar + \" == null) {\\n        \" + renderCompTypeVar + \" = viewManager.createRenderComponentType(\" + codeGenViewEncapsulation(encapsulation) + \", \" + stylesVar + \");\\n      }\");\r\n\t            rendererExpr = \"parentRenderer.renderComponent(\" + renderCompTypeVar + \")\";\r\n\t        }\r\n\t        var statement = \"\\n\" + util_1.codeGenFnHeader(factoryArgs, viewFactoryName) + \"{\\n  \" + initRendererStmts.join('\\n') + \"\\n  var renderer = \" + rendererExpr + \";\\n  var view = new \" + proto_view_compiler_1.APP_VIEW_MODULE_REF + \"AppView(\\n    \" + appProtoView + \", renderer, viewManager,\\n    projectableNodes,\\n    containerEl,\\n    dynamicallyCreatedProviders, rootInjector,\\n    \" + changeDetectorFactory + \"()\\n  );\\n  \" + proto_view_compiler_1.APP_VIEW_MODULE_REF + \"checkSlotCount(\" + util_1.escapeValue(this.component.type.name) + \", \" + this.component.template.ngContentSelectors.length + \", projectableNodes);\\n  \" + (isComponentView ? 'var parentRenderNode = renderer.createViewRoot(view.containerAppElement.nativeElement);' : '') + \"\\n  \" + visitor.renderStmts.map(function (stmt) { return stmt.statement; }).join('\\n') + \"\\n  \" + visitor.appStmts.map(function (stmt) { return stmt.statement; }).join('\\n') + \"\\n\\n  view.init(\" + util_1.codeGenFlatArray(visitor.rootNodesOrAppElements) + \", \" + util_1.codeGenArray(visitor.renderNodes) + \", \" + util_1.codeGenArray(visitor.appDisposables) + \",\\n            \" + util_1.codeGenArray(visitor.appElements) + \");\\n  return view;\\n}\";\r\n\t        targetStatements.push(new util_1.Statement(statement));\r\n\t        return new util_1.Expression(viewFactoryName);\r\n\t    };\r\n\t    return CodeGenViewFactory;\r\n\t})();\r\n\tvar RuntimeViewFactory = (function () {\r\n\t    function RuntimeViewFactory(component, styles, protoViews, changeDetectorFactories, componentViewFactory) {\r\n\t        this.component = component;\r\n\t        this.styles = styles;\r\n\t        this.protoViews = protoViews;\r\n\t        this.changeDetectorFactories = changeDetectorFactories;\r\n\t        this.componentViewFactory = componentViewFactory;\r\n\t    }\r\n\t    RuntimeViewFactory.prototype.createText = function (renderer, parent, text, targetStatements) {\r\n\t        return renderer.createText(parent, text);\r\n\t    };\r\n\t    RuntimeViewFactory.prototype.createElement = function (renderer, parent, name, rootSelector, targetStatements) {\r\n\t        var el;\r\n\t        if (lang_1.isPresent(rootSelector)) {\r\n\t            el = renderer.selectRootElement(rootSelector);\r\n\t        }\r\n\t        else {\r\n\t            el = renderer.createElement(parent, name);\r\n\t        }\r\n\t        return el;\r\n\t    };\r\n\t    RuntimeViewFactory.prototype.createTemplateAnchor = function (renderer, parent, targetStatements) {\r\n\t        return renderer.createTemplateAnchor(parent);\r\n\t    };\r\n\t    RuntimeViewFactory.prototype.createGlobalEventListener = function (renderer, appView, boundElementIndex, eventAst, targetStatements) {\r\n\t        return renderer.listenGlobal(eventAst.target, eventAst.name, function (event) { return appView.triggerEventHandlers(eventAst.fullName, event, boundElementIndex); });\r\n\t    };\r\n\t    RuntimeViewFactory.prototype.createElementEventListener = function (renderer, appView, boundElementIndex, renderNode, eventAst, targetStatements) {\r\n\t        return renderer.listen(renderNode, eventAst.name, function (event) { return appView.triggerEventHandlers(eventAst.fullName, event, boundElementIndex); });\r\n\t    };\r\n\t    RuntimeViewFactory.prototype.setElementAttribute = function (renderer, renderNode, attrName, attrValue, targetStatements) {\r\n\t        renderer.setElementAttribute(renderNode, attrName, attrValue);\r\n\t    };\r\n\t    RuntimeViewFactory.prototype.createAppElement = function (appProtoEl, appView, renderNode, parentAppEl, embeddedViewFactory, targetStatements) {\r\n\t        return new element_1.AppElement(appProtoEl, appView, parentAppEl, renderNode, embeddedViewFactory);\r\n\t    };\r\n\t    RuntimeViewFactory.prototype.createAndSetComponentView = function (renderer, viewManager, appView, appEl, component, contentNodesByNgContentIndex, targetStatements) {\r\n\t        var flattenedContentNodes;\r\n\t        if (this.component.type.isHost) {\r\n\t            flattenedContentNodes = appView.projectableNodes;\r\n\t        }\r\n\t        else {\r\n\t            flattenedContentNodes = collection_1.ListWrapper.createFixedSize(contentNodesByNgContentIndex.length);\r\n\t            for (var i = 0; i < contentNodesByNgContentIndex.length; i++) {\r\n\t                flattenedContentNodes[i] = util_1.flattenArray(contentNodesByNgContentIndex[i], []);\r\n\t            }\r\n\t        }\r\n\t        this.componentViewFactory(component)(renderer, viewManager, appEl, flattenedContentNodes);\r\n\t    };\r\n\t    RuntimeViewFactory.prototype.getProjectedNodes = function (projectableNodes, ngContentIndex) {\r\n\t        return projectableNodes[ngContentIndex];\r\n\t    };\r\n\t    RuntimeViewFactory.prototype.appendProjectedNodes = function (renderer, parent, nodes, targetStatements) {\r\n\t        renderer.projectNodes(parent, view_1.flattenNestedViewRenderNodes(nodes));\r\n\t    };\r\n\t    RuntimeViewFactory.prototype.createViewFactory = function (asts, embeddedTemplateIndex, targetStatements) {\r\n\t        var _this = this;\r\n\t        var compileProtoView = this.protoViews[embeddedTemplateIndex];\r\n\t        var isComponentView = compileProtoView.protoView.type === view_type_1.ViewType.COMPONENT;\r\n\t        var renderComponentType = null;\r\n\t        return function (parentRenderer, viewManager, containerEl, projectableNodes, rootSelector, dynamicallyCreatedProviders, rootInjector) {\r\n\t            if (rootSelector === void 0) { rootSelector = null; }\r\n\t            if (dynamicallyCreatedProviders === void 0) { dynamicallyCreatedProviders = null; }\r\n\t            if (rootInjector === void 0) { rootInjector = null; }\r\n\t            view_1.checkSlotCount(_this.component.type.name, _this.component.template.ngContentSelectors.length, projectableNodes);\r\n\t            var renderer;\r\n\t            if (embeddedTemplateIndex === 0) {\r\n\t                if (lang_1.isBlank(renderComponentType)) {\r\n\t                    renderComponentType = viewManager.createRenderComponentType(_this.component.template.encapsulation, _this.styles);\r\n\t                }\r\n\t                renderer = parentRenderer.renderComponent(renderComponentType);\r\n\t            }\r\n\t            else {\r\n\t                renderer = parentRenderer;\r\n\t            }\r\n\t            var changeDetector = _this.changeDetectorFactories[embeddedTemplateIndex]();\r\n\t            var view = new view_1.AppView(compileProtoView.protoView, renderer, viewManager, projectableNodes, containerEl, dynamicallyCreatedProviders, rootInjector, changeDetector);\r\n\t            var visitor = new ViewBuilderVisitor(renderer, viewManager, projectableNodes, rootSelector, view, compileProtoView, [], _this);\r\n\t            var parentRenderNode = isComponentView ? renderer.createViewRoot(containerEl.nativeElement) : null;\r\n\t            template_ast_1.templateVisitAll(visitor, asts, new ParentElement(parentRenderNode, null, null));\r\n\t            view.init(util_1.flattenArray(visitor.rootNodesOrAppElements, []), visitor.renderNodes, visitor.appDisposables, visitor.appElements);\r\n\t            return view;\r\n\t        };\r\n\t    };\r\n\t    return RuntimeViewFactory;\r\n\t})();\r\n\tvar ParentElement = (function () {\r\n\t    function ParentElement(renderNode, appEl, component) {\r\n\t        this.renderNode = renderNode;\r\n\t        this.appEl = appEl;\r\n\t        this.component = component;\r\n\t        if (lang_1.isPresent(component)) {\r\n\t            this.contentNodesByNgContentIndex =\r\n\t                collection_1.ListWrapper.createFixedSize(component.template.ngContentSelectors.length);\r\n\t            for (var i = 0; i < this.contentNodesByNgContentIndex.length; i++) {\r\n\t                this.contentNodesByNgContentIndex[i] = [];\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            this.contentNodesByNgContentIndex = null;\r\n\t        }\r\n\t    }\r\n\t    ParentElement.prototype.addContentNode = function (ngContentIndex, nodeExpr) {\r\n\t        this.contentNodesByNgContentIndex[ngContentIndex].push(nodeExpr);\r\n\t    };\r\n\t    return ParentElement;\r\n\t})();\r\n\tvar ViewBuilderVisitor = (function () {\r\n\t    function ViewBuilderVisitor(renderer, viewManager, projectableNodes, rootSelector, view, protoView, targetStatements, factory) {\r\n\t        this.renderer = renderer;\r\n\t        this.viewManager = viewManager;\r\n\t        this.projectableNodes = projectableNodes;\r\n\t        this.rootSelector = rootSelector;\r\n\t        this.view = view;\r\n\t        this.protoView = protoView;\r\n\t        this.targetStatements = targetStatements;\r\n\t        this.factory = factory;\r\n\t        this.renderStmts = [];\r\n\t        this.renderNodes = [];\r\n\t        this.appStmts = [];\r\n\t        this.appElements = [];\r\n\t        this.appDisposables = [];\r\n\t        this.rootNodesOrAppElements = [];\r\n\t        this.elementCount = 0;\r\n\t    }\r\n\t    ViewBuilderVisitor.prototype._addRenderNode = function (renderNode, appEl, ngContentIndex, parent) {\r\n\t        this.renderNodes.push(renderNode);\r\n\t        if (lang_1.isPresent(parent.component)) {\r\n\t            if (lang_1.isPresent(ngContentIndex)) {\r\n\t                parent.addContentNode(ngContentIndex, lang_1.isPresent(appEl) ? appEl : renderNode);\r\n\t            }\r\n\t        }\r\n\t        else if (lang_1.isBlank(parent.renderNode)) {\r\n\t            this.rootNodesOrAppElements.push(lang_1.isPresent(appEl) ? appEl : renderNode);\r\n\t        }\r\n\t    };\r\n\t    ViewBuilderVisitor.prototype._getParentRenderNode = function (ngContentIndex, parent) {\r\n\t        return lang_1.isPresent(parent.component) &&\r\n\t            parent.component.template.encapsulation !== view_2.ViewEncapsulation.Native ?\r\n\t            null :\r\n\t            parent.renderNode;\r\n\t    };\r\n\t    ViewBuilderVisitor.prototype.visitBoundText = function (ast, parent) {\r\n\t        return this._visitText('', ast.ngContentIndex, parent);\r\n\t    };\r\n\t    ViewBuilderVisitor.prototype.visitText = function (ast, parent) {\r\n\t        return this._visitText(ast.value, ast.ngContentIndex, parent);\r\n\t    };\r\n\t    ViewBuilderVisitor.prototype._visitText = function (value, ngContentIndex, parent) {\r\n\t        var renderNode = this.factory.createText(this.renderer, this._getParentRenderNode(ngContentIndex, parent), value, this.renderStmts);\r\n\t        this._addRenderNode(renderNode, null, ngContentIndex, parent);\r\n\t        return null;\r\n\t    };\r\n\t    ViewBuilderVisitor.prototype.visitNgContent = function (ast, parent) {\r\n\t        var nodesExpression = this.factory.getProjectedNodes(this.projectableNodes, ast.index);\r\n\t        if (lang_1.isPresent(parent.component)) {\r\n\t            if (lang_1.isPresent(ast.ngContentIndex)) {\r\n\t                parent.addContentNode(ast.ngContentIndex, nodesExpression);\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            if (lang_1.isPresent(parent.renderNode)) {\r\n\t                this.factory.appendProjectedNodes(this.renderer, parent.renderNode, nodesExpression, this.renderStmts);\r\n\t            }\r\n\t            else {\r\n\t                this.rootNodesOrAppElements.push(nodesExpression);\r\n\t            }\r\n\t        }\r\n\t        return null;\r\n\t    };\r\n\t    ViewBuilderVisitor.prototype.visitElement = function (ast, parent) {\r\n\t        var _this = this;\r\n\t        var renderNode = this.factory.createElement(this.renderer, this._getParentRenderNode(ast.ngContentIndex, parent), ast.name, this.rootSelector, this.renderStmts);\r\n\t        var component = ast.getComponent();\r\n\t        var elementIndex = this.elementCount++;\r\n\t        var protoEl = this.protoView.protoElements[elementIndex];\r\n\t        protoEl.renderEvents.forEach(function (eventAst) {\r\n\t            var disposable;\r\n\t            if (lang_1.isPresent(eventAst.target)) {\r\n\t                disposable = _this.factory.createGlobalEventListener(_this.renderer, _this.view, protoEl.boundElementIndex, eventAst, _this.renderStmts);\r\n\t            }\r\n\t            else {\r\n\t                disposable = _this.factory.createElementEventListener(_this.renderer, _this.view, protoEl.boundElementIndex, renderNode, eventAst, _this.renderStmts);\r\n\t            }\r\n\t            _this.appDisposables.push(disposable);\r\n\t        });\r\n\t        for (var i = 0; i < protoEl.attrNameAndValues.length; i++) {\r\n\t            var attrName = protoEl.attrNameAndValues[i][0];\r\n\t            var attrValue = protoEl.attrNameAndValues[i][1];\r\n\t            this.factory.setElementAttribute(this.renderer, renderNode, attrName, attrValue, this.renderStmts);\r\n\t        }\r\n\t        var appEl = null;\r\n\t        if (lang_1.isPresent(protoEl.appProtoEl)) {\r\n\t            appEl = this.factory.createAppElement(protoEl.appProtoEl, this.view, renderNode, parent.appEl, null, this.appStmts);\r\n\t            this.appElements.push(appEl);\r\n\t        }\r\n\t        this._addRenderNode(renderNode, appEl, ast.ngContentIndex, parent);\r\n\t        var newParent = new ParentElement(renderNode, lang_1.isPresent(appEl) ? appEl : parent.appEl, component);\r\n\t        template_ast_1.templateVisitAll(this, ast.children, newParent);\r\n\t        if (lang_1.isPresent(appEl) && lang_1.isPresent(component)) {\r\n\t            this.factory.createAndSetComponentView(this.renderer, this.viewManager, this.view, appEl, component, newParent.contentNodesByNgContentIndex, this.appStmts);\r\n\t        }\r\n\t        return null;\r\n\t    };\r\n\t    ViewBuilderVisitor.prototype.visitEmbeddedTemplate = function (ast, parent) {\r\n\t        var renderNode = this.factory.createTemplateAnchor(this.renderer, this._getParentRenderNode(ast.ngContentIndex, parent), this.renderStmts);\r\n\t        var elementIndex = this.elementCount++;\r\n\t        var protoEl = this.protoView.protoElements[elementIndex];\r\n\t        var embeddedViewFactory = this.factory.createViewFactory(ast.children, protoEl.embeddedTemplateIndex, this.targetStatements);\r\n\t        var appEl = this.factory.createAppElement(protoEl.appProtoEl, this.view, renderNode, parent.appEl, embeddedViewFactory, this.appStmts);\r\n\t        this._addRenderNode(renderNode, appEl, ast.ngContentIndex, parent);\r\n\t        this.appElements.push(appEl);\r\n\t        return null;\r\n\t    };\r\n\t    ViewBuilderVisitor.prototype.visitVariable = function (ast, ctx) { return null; };\r\n\t    ViewBuilderVisitor.prototype.visitAttr = function (ast, ctx) { return null; };\r\n\t    ViewBuilderVisitor.prototype.visitDirective = function (ast, ctx) { return null; };\r\n\t    ViewBuilderVisitor.prototype.visitEvent = function (ast, ctx) { return null; };\r\n\t    ViewBuilderVisitor.prototype.visitDirectiveProperty = function (ast, context) { return null; };\r\n\t    ViewBuilderVisitor.prototype.visitElementProperty = function (ast, context) { return null; };\r\n\t    return ViewBuilderVisitor;\r\n\t})();\r\n\tfunction codeGenEventHandler(view, boundElementIndex, eventName) {\r\n\t    return util_1.codeGenValueFn(['event'], view.expression + \".triggerEventHandlers(\" + util_1.escapeValue(eventName) + \", event, \" + boundElementIndex + \")\");\r\n\t}\r\n\tfunction codeGenViewFactoryName(component, embeddedTemplateIndex) {\r\n\t    return \"viewFactory_\" + component.type.name + embeddedTemplateIndex;\r\n\t}\r\n\tfunction codeGenViewEncapsulation(value) {\r\n\t    if (lang_1.IS_DART) {\r\n\t        return \"\" + proto_view_compiler_1.METADATA_MODULE_REF + value;\r\n\t    }\r\n\t    else {\r\n\t        return \"\" + value;\r\n\t    }\r\n\t}\r\n\t//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmlld19jb21waWxlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImFuZ3VsYXIyL3NyYy9jb21waWxlci92aWV3X2NvbXBpbGVyLnRzIl0sIm5hbWVzIjpbIlZpZXdDb21waWxlciIsIlZpZXdDb21waWxlci5jb25zdHJ1Y3RvciIsIlZpZXdDb21waWxlci5jb21waWxlQ29tcG9uZW50UnVudGltZSIsIlZpZXdDb21waWxlci5jb21waWxlQ29tcG9uZW50Q29kZUdlbiIsIkNvZGVHZW5WaWV3RmFjdG9yeSIsIkNvZGVHZW5WaWV3RmFjdG9yeS5jb25zdHJ1Y3RvciIsIkNvZGVHZW5WaWV3RmFjdG9yeS5fbmV4dFZhciIsIkNvZGVHZW5WaWV3RmFjdG9yeS5fbmV4dFJlbmRlclZhciIsIkNvZGVHZW5WaWV3RmFjdG9yeS5fbmV4dEFwcFZhciIsIkNvZGVHZW5WaWV3RmFjdG9yeS5fbmV4dERpc3Bvc2FibGVWYXIiLCJDb2RlR2VuVmlld0ZhY3RvcnkuY3JlYXRlVGV4dCIsIkNvZGVHZW5WaWV3RmFjdG9yeS5jcmVhdGVFbGVtZW50IiwiQ29kZUdlblZpZXdGYWN0b3J5LmNyZWF0ZVRlbXBsYXRlQW5jaG9yIiwiQ29kZUdlblZpZXdGYWN0b3J5LmNyZWF0ZUdsb2JhbEV2ZW50TGlzdGVuZXIiLCJDb2RlR2VuVmlld0ZhY3RvcnkuY3JlYXRlRWxlbWVudEV2ZW50TGlzdGVuZXIiLCJDb2RlR2VuVmlld0ZhY3Rvcnkuc2V0RWxlbWVudEF0dHJpYnV0ZSIsIkNvZGVHZW5WaWV3RmFjdG9yeS5jcmVhdGVBcHBFbGVtZW50IiwiQ29kZUdlblZpZXdGYWN0b3J5LmNyZWF0ZUFuZFNldENvbXBvbmVudFZpZXciLCJDb2RlR2VuVmlld0ZhY3RvcnkuZ2V0UHJvamVjdGVkTm9kZXMiLCJDb2RlR2VuVmlld0ZhY3RvcnkuYXBwZW5kUHJvamVjdGVkTm9kZXMiLCJDb2RlR2VuVmlld0ZhY3RvcnkuY3JlYXRlVmlld0ZhY3RvcnkiLCJSdW50aW1lVmlld0ZhY3RvcnkiLCJSdW50aW1lVmlld0ZhY3RvcnkuY29uc3RydWN0b3IiLCJSdW50aW1lVmlld0ZhY3RvcnkuY3JlYXRlVGV4dCIsIlJ1bnRpbWVWaWV3RmFjdG9yeS5jcmVhdGVFbGVtZW50IiwiUnVudGltZVZpZXdGYWN0b3J5LmNyZWF0ZVRlbXBsYXRlQW5jaG9yIiwiUnVudGltZVZpZXdGYWN0b3J5LmNyZWF0ZUdsb2JhbEV2ZW50TGlzdGVuZXIiLCJSdW50aW1lVmlld0ZhY3RvcnkuY3JlYXRlRWxlbWVudEV2ZW50TGlzdGVuZXIiLCJSdW50aW1lVmlld0ZhY3Rvcnkuc2V0RWxlbWVudEF0dHJpYnV0ZSIsIlJ1bnRpbWVWaWV3RmFjdG9yeS5jcmVhdGVBcHBFbGVtZW50IiwiUnVudGltZVZpZXdGYWN0b3J5LmNyZWF0ZUFuZFNldENvbXBvbmVudFZpZXciLCJSdW50aW1lVmlld0ZhY3RvcnkuZ2V0UHJvamVjdGVkTm9kZXMiLCJSdW50aW1lVmlld0ZhY3RvcnkuYXBwZW5kUHJvamVjdGVkTm9kZXMiLCJSdW50aW1lVmlld0ZhY3RvcnkuY3JlYXRlVmlld0ZhY3RvcnkiLCJQYXJlbnRFbGVtZW50IiwiUGFyZW50RWxlbWVudC5jb25zdHJ1Y3RvciIsIlBhcmVudEVsZW1lbnQuYWRkQ29udGVudE5vZGUiLCJWaWV3QnVpbGRlclZpc2l0b3IiLCJWaWV3QnVpbGRlclZpc2l0b3IuY29uc3RydWN0b3IiLCJWaWV3QnVpbGRlclZpc2l0b3IuX2FkZFJlbmRlck5vZGUiLCJWaWV3QnVpbGRlclZpc2l0b3IuX2dldFBhcmVudFJlbmRlck5vZGUiLCJWaWV3QnVpbGRlclZpc2l0b3IudmlzaXRCb3VuZFRleHQiLCJWaWV3QnVpbGRlclZpc2l0b3IudmlzaXRUZXh0IiwiVmlld0J1aWxkZXJWaXNpdG9yLl92aXNpdFRleHQiLCJWaWV3QnVpbGRlclZpc2l0b3IudmlzaXROZ0NvbnRlbnQiLCJWaWV3QnVpbGRlclZpc2l0b3IudmlzaXRFbGVtZW50IiwiVmlld0J1aWxkZXJWaXNpdG9yLnZpc2l0RW1iZWRkZWRUZW1wbGF0ZSIsIlZpZXdCdWlsZGVyVmlzaXRvci52aXNpdFZhcmlhYmxlIiwiVmlld0J1aWxkZXJWaXNpdG9yLnZpc2l0QXR0ciIsIlZpZXdCdWlsZGVyVmlzaXRvci52aXNpdERpcmVjdGl2ZSIsIlZpZXdCdWlsZGVyVmlzaXRvci52aXNpdEV2ZW50IiwiVmlld0J1aWxkZXJWaXNpdG9yLnZpc2l0RGlyZWN0aXZlUHJvcGVydHkiLCJWaWV3QnVpbGRlclZpc2l0b3IudmlzaXRFbGVtZW50UHJvcGVydHkiLCJjb2RlR2VuRXZlbnRIYW5kbGVyIiwiY29kZUdlblZpZXdGYWN0b3J5TmFtZSIsImNvZGVHZW5WaWV3RW5jYXBzdWxhdGlvbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEscUJBUU8sMEJBQTBCLENBQUMsQ0FBQTtBQUNsQywyQkFBd0QsZ0NBQWdDLENBQUMsQ0FBQTtBQUN6Riw2QkFlTyxnQkFBZ0IsQ0FBQyxDQUFBO0FBRXhCLDhCQUE2RCxpQkFBaUIsQ0FBQyxDQUFBO0FBQy9FLHFCQUtPLCtCQUErQixDQUFDLENBQUE7QUFDdkMsMEJBQXVCLG9DQUFvQyxDQUFDLENBQUE7QUFFNUQsd0JBQTBDLGtDQUFrQyxDQUFDLENBQUE7QUFFN0UscUJBQWdDLGlDQUFpQyxDQUFDLENBQUE7QUFDbEUscUJBYU8sUUFBUSxDQUFDLENBQUE7QUFDaEIsbUJBQXFELHNCQUFzQixDQUFDLENBQUE7QUFFNUUsb0NBTU8sdUJBQXVCLENBQUMsQ0FBQTtBQUVsQix3QkFBZ0IsR0FBRyxpQkFBVSxDQUFDO0lBQ3pDLFNBQVMsRUFBRSxjQUFPO0lBQ2xCLFlBQVksRUFBRSxvQkFBVTtJQUN4Qiw4QkFBOEIsRUFBRSxtQ0FBNEI7SUFDNUQsZ0JBQWdCLEVBQUUscUJBQWM7Q0FDakMsQ0FBQyxDQUFDO0FBR0g7SUFFRUE7SUFBZUMsQ0FBQ0E7SUFFaEJELDhDQUF1QkEsR0FBdkJBLFVBQXdCQSxTQUFtQ0EsRUFBRUEsUUFBdUJBLEVBQzVEQSxNQUE2QkEsRUFDN0JBLFVBQTZEQSxFQUM3REEsdUJBQW1DQSxFQUNuQ0Es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LElBQUlBLEdBQUdBLHFCQUF1QkEsQ0FBQ0E7QUFDdEVBLENBQUNBO0FBRUQsa0NBQWtDLEtBQXdCO0lBQ3hEQyxFQUFFQSxDQUFDQSxDQUFDQSxjQUFPQSxDQUFDQSxDQUFDQSxDQUFDQTtRQUNaQSxNQUFNQSxDQUFDQSxLQUFHQSx5Q0FBbUJBLEdBQUdBLEtBQU9BLENBQUNBO0lBQzFDQSxDQUFDQTtJQUFDQSxJQUFJQSxDQUFDQSxDQUFDQTtRQUNOQSxNQUFNQSxDQUFDQSxLQUFHQSxLQUFPQSxDQUFDQTtJQUNwQkEsQ0FBQ0E7QUFDSEEsQ0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBpc1ByZXNlbnQsXG4gIGlzQmxhbmssXG4gIFR5cGUsXG4gIGlzU3RyaW5nLFxuICBTdHJpbmdXcmFwcGVyLFxuICBJU19EQVJULFxuICBDT05TVF9FWFBSXG59IGZyb20gJ2FuZ3VsYXIyL3NyYy9mYWNhZGUvbGFuZyc7XG5pbXBvcnQge1NldFdyYXBwZXIsIFN0cmluZ01hcFdyYXBwZXIsIExpc3RXcmFwcGVyfSBmcm9tICdhbmd1bGFyMi9zcmMvZmFjYWRlL2NvbGxlY3Rpb24nO1xuaW1wb3J0IHtcbiAgVGVtcGxhdGVBc3QsXG4gIFRlbXBsYXRlQXN0VmlzaXRvcixcbiAgTmdDb250ZW50QXN0LFxuICBFbWJlZGRlZFRlbXBsYXRlQXN0LFxuICBFbGVtZW50QXN0LFxuICBWYXJpYWJsZUFzdCxcbiAgQm91bmRFdmVudEFzdCxcbiAgQm91bmRFbGVtZW50UHJvcGVydHlBc3QsXG4gIEF0dHJBc3QsXG4gIEJvdW5kVGV4dEFzdCxcbiAgVGV4dEFzdCxcbiAgRGlyZWN0aXZlQXN0LFxuICBCb3VuZERpcmVjdGl2ZVByb3BlcnR5QXN0LFxuICB0ZW1wbGF0ZVZpc2l0QWxsXG59IGZyb20gJy4vdGVtcGxhdGVfYXN0JztcbmltcG9ydCB7Q29tcGlsZVR5cGVNZXRhZGF0YSwgQ29tcGlsZURpcmVjdGl2ZU1ldGFkYXRhfSBmcm9tICcuL2RpcmVjdGl2ZV9tZXRhZGF0YSc7XG5pbXBvcnQge1NvdXJjZUV4cHJlc3Npb25zLCBTb3VyY2VFeHByZXNzaW9uLCBtb2R1bGVSZWZ9IGZyb20gJy4vc291cmNlX21vZHVsZSc7XG5pbXBvcnQge1xuICBBcHBQcm90b1ZpZXcsXG4gIEFwcFZpZXcsXG4gIGZsYXR0ZW5OZXN0ZWRWaWV3UmVuZGVyTm9kZXMsXG4gIGNoZWNrU2xvdENvdW50XG59IGZyb20gJ2FuZ3VsYXIyL3NyYy9jb3JlL2xpbmtlci92aWV3JztcbmltcG9ydCB7Vmlld1R5cGV9IGZyb20gJ2FuZ3VsYXIyL3NyYy9jb3JlL2xpbmtlci92aWV3X3R5cGUnO1xuaW1wb3J0IHtBcHBWaWV3TWFuYWdlcl99IGZyb20gJ2FuZ3VsYXIyL3NyYy9jb3JlL2xpbmtlci92aWV3X21hbmFnZXInO1xuaW1wb3J0IHtBcHBQcm90b0VsZW1lbnQsIEFwcEVsZW1lbnR9IGZyb20gJ2FuZ3VsYXIyL3NyYy9jb3JlL2xpbmtlci9lbGVtZW50JztcbmltcG9ydCB7UmVuZGVyZXIsIFBhcmVudFJlbmRlcmVyfSBmcm9tICdhbmd1bGFyMi9zcmMvY29yZS9yZW5kZXIvYXBpJztcbmltcG9ydCB7Vmlld0VuY2Fwc3VsYXRpb259IGZyb20gJ2FuZ3VsYXIyL3NyYy9jb3JlL21ldGFkYXRhL3ZpZXcnO1xuaW1wb3J0IHtcbiAgZXNjYXBlU2luZ2xlUXVvdGVTdHJpbmcsXG4gIGNvZGVHZW5Db25zdENvbnN0cnVjdG9yQ2FsbCxcbiAgY29kZUdlblZhbHVlRm4sXG4gIGNvZGVHZW5GbkhlYWRlcixcbiAgTU9EVUxFX1NVRkZJWCxcbiAgU3RhdGVtZW50LFxuICBlc2NhcGVWYWx1ZSxcbiAgY29kZUdlbkFycmF5LFxuICBjb2RlR2VuRmxhdEFycmF5LFxuICBFeHByZXNzaW9uLFxuICBmbGF0dGVuQXJyYXksXG4gIENPTlNUX1ZBUlxufSBmcm9tICcuL3V0aWwnO1xuaW1wb3J0IHtSZXNvbHZlZFByb3ZpZGVyLCBJbmplY3RhYmxlLCBJbmplY3Rvcn0gZnJvbSAnYW5ndWxhcjIvc3JjL2NvcmUvZGknO1xuXG5pbXBvcnQge1xuICBBUFBfVklFV19NT0RVTEVfUkVGLFxuICBBUFBfRUxfTU9EVUxFX1JFRixcbiAgTUVUQURBVEFfTU9EVUxFX1JFRixcbiAgQ29tcGlsZVByb3RvVmlldyxcbiAgQ29tcGlsZVByb3RvRWxlbWVudFxufSBmcm9tICcuL3Byb3RvX3ZpZXdfY29tcGlsZXInO1xuXG5leHBvcnQgY29uc3QgVklFV19KSVRfSU1QT1JUUyA9IENPTlNUX0VYUFIoe1xuICAnQXBwVmlldyc6IEFwcFZpZXcsXG4gICdBcHBFbGVtZW50JzogQXBwRWxlbWVudCxcbiAgJ2ZsYXR0ZW5OZXN0ZWRWaWV3UmVuZGVyTm9kZXMnOiBmbGF0dGVuTmVzdGVkVmlld1JlbmRlck5vZGVzLFxuICAnY2hlY2tTbG90Q291bnQnOiBjaGVja1Nsb3RDb3VudFxufSk7XG5cblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFZpZXdDb21waWxlciB7XG4gIGNvbnN0cnVjdG9yKCkge31cblxuICBjb21waWxlQ29tcG9uZW50UnVudGltZShjb21wb25lbnQ6IENvbXBpbGVEaXJlY3RpdmVNZXRhZGF0YSwgdGVtcGxhdGU6IFRlbXBsYXRlQXN0W10sXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlczogQXJyYXk8c3RyaW5nIHwgYW55W10+LFxuICAgICAgICAgICAgICAgICAgICAgICAgICBwcm90b1ZpZXdzOiBDb21waWxlUHJvdG9WaWV3PEFwcFByb3RvVmlldywgQXBwUHJvdG9FbGVtZW50PltdLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBjaGFuZ2VEZXRlY3RvckZhY3RvcmllczogRnVuY3Rpb25bXSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY29tcG9uZW50Vmlld0ZhY3Rvcnk6IEZ1bmN0aW9uKTogRnVuY3Rpb24ge1xuICAgIHZhciB2aWV3RmFjdG9yeSA9IG5ldyBSdW50aW1lVmlld0ZhY3RvcnkoY29tcG9uZW50LCBzdHlsZXMsIHByb3RvVmlld3MsIGNoYW5nZURldGVjdG9yRmFjdG9yaWVzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29tcG9uZW50Vmlld0ZhY3RvcnkpO1xuICAgIHJldHVybiB2aWV3RmFjdG9yeS5jcmVhdGVWaWV3RmFjdG9yeSh0ZW1wbGF0ZSwgMCwgW10pO1xuICB9XG5cbiAgY29tcGlsZUNvbXBvbmVudENvZGVHZW4oY29tcG9uZW50OiBDb21waWxlRGlyZWN0aXZlTWV0YWRhdGEsIHRlbXBsYXRlOiBUZW1wbGF0ZUFzdFtdLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZXM6IFNvdXJjZUV4cHJlc3Npb24sXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHByb3RvVmlld3M6IENvbXBpbGVQcm90b1ZpZXc8RXhwcmVzc2lvbiwgRXhwcmVzc2lvbj5bXSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY2hhbmdlRGV0ZWN0b3JGYWN0b3J5RXhwcmVzc2lvbnM6IFNvdXJjZUV4cHJlc3Npb25zLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBjb21wb25lbnRWaWV3RmFjdG9yeTogRnVuY3Rpb24pOiBTb3VyY2VFeHByZXNzaW9uIHtcbiAgICB2YXIgdmlld0ZhY3RvcnkgPSBuZXcgQ29kZUdlblZpZXdGYWN0b3J5KFxuICAgICAgICBjb21wb25lbnQsIHN0eWxlcywgcHJvdG9WaWV3cywgY2hhbmdlRGV0ZWN0b3JGYWN0b3J5RXhwcmVzc2lvbnMsIGNvbXBvbmVudFZpZXdGYWN0b3J5KTtcbiAgICB2YXIgdGFyZ2V0U3RhdGVtZW50czogU3RhdGVtZW50W10gPSBbXTtcbiAgICB2YXIgdmlld0ZhY3RvcnlFeHByZXNzaW9uID0gdmlld0ZhY3RvcnkuY3JlYXRlVmlld0ZhY3RvcnkodGVtcGxhdGUsIDAsIHRhcmdldFN0YXRlbWVudHMpO1xuICAgIHJldHVybiBuZXcgU291cmNlRXhwcmVzc2lvbih0YXJnZXRTdGF0ZW1lbnRzLm1hcChzdG10ID0+IHN0bXQuc3RhdGVtZW50KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmlld0ZhY3RvcnlFeHByZXNzaW9uLmV4cHJlc3Npb24pO1xuICB9XG59XG5cbmludGVyZmFjZSBWaWV3RmFjdG9yeTxFWFBSRVNTSU9OLCBTVEFURU1FTlQ+IHtcbiAgY3JlYXRlVGV4dChyZW5kZXJlcjogRVhQUkVTU0lPTiwgcGFyZW50OiBFWFBSRVNTSU9OLCB0ZXh0OiBzdHJpbmcsXG4gICAgICAgICAgICAgdGFyZ2V0U3RhdGVtZW50czogU1RBVEVNRU5UW10pOiBFWFBSRVNTSU9OO1xuXG4gIGNyZWF0ZUVsZW1lbnQocmVuZGVyZXI6IEVYUFJFU1NJT04sIHBhcmVudDogRVhQUkVTU0lPTiwgbmFtZTogc3RyaW5nLCByb290U2VsZWN0b3I6IEVYUFJFU1NJT04sXG4gICAgICAgICAgICAgICAgdGFyZ2V0U3RhdGVtZW50czogU1RBVEVNRU5UW10pOiBFWFBSRVNTSU9OO1xuXG4gIGNyZWF0ZVRlbXBsYXRlQW5jaG9yKHJlbmRlcmVyOiBFWFBSRVNTSU9OLCBwYXJlbnQ6IEVYUFJFU1NJT04sXG4gICAgICAgICAgICAgICAgICAgICAgIHRhcmdldFN0YXRlbWVudHM6IFNUQVRFTUVOVFtdKTogRVhQUkVTU0lPTjtcblxuICBjcmVhdGVHbG9iYWxFdmVudExpc3RlbmVyKHJlbmRlcmVyOiBFWFBSRVNTSU9OLCB2aWV3OiBFWFBSRVNTSU9OLCBib3VuZEVsZW1lbnRJbmRleDogbnVtYmVyLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50QXN0OiBCb3VuZEV2ZW50QXN0LCB0YXJnZXRTdGF0ZW1lbnRzOiBTVEFURU1FTlRbXSk6IEVYUFJFU1NJT047XG5cbiAgY3JlYXRlRWxlbWVudEV2ZW50TGlzdGVuZXIocmVuZGVyZXI6IEVYUFJFU1NJT04sIHZpZXc6IEVYUFJFU1NJT04sIGJvdW5kRWxlbWVudEluZGV4OiBudW1iZXIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlbmRlck5vZGU6IEVYUFJFU1NJT04sIGV2ZW50QXN0OiBCb3VuZEV2ZW50QXN0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXRTdGF0ZW1lbnRzOiBTVEFURU1FTlRbXSk6IEVYUFJFU1NJT047XG5cbiAgc2V0RWxlbWVudEF0dHJpYnV0ZShyZW5kZXJlcjogRVhQUkVTU0lPTiwgcmVuZGVyTm9kZTogRVhQUkVTU0lPTiwgYXR0ck5hbWU6IHN0cmluZyxcbiAgICAgICAgICAgICAgICAgICAgICBhdHRyVmFsdWU6IHN0cmluZywgdGFyZ2V0U3RhdGVtZW50czogU1RBVEVNRU5UW10pO1xuXG4gIGNyZWF0ZUFwcEVsZW1lbnQoYXBwUHJvdG9FbDogRVhQUkVTU0lPTiwgdmlldzogRVhQUkVTU0lPTiwgcmVuZGVyTm9kZTogRVhQUkVTU0lPTixcbiAgICAgICAgICAgICAgICAgICBwYXJlbnRBcHBFbDogRVhQUkVTU0lPTiwgZW1iZWRkZWRWaWV3RmFjdG9yeTogRVhQUkVTU0lPTixcbiAgICAgICAgICAgICAgICAgICB0YXJnZXRTdGF0ZW1lbnRzOiBTVEFURU1FTlRbXSk6IEVYUFJFU1NJT047XG5cbiAgY3JlYXRlQW5kU2V0Q29tcG9uZW50VmlldyhyZW5kZXJlcjogRVhQUkVTU0lPTiwgdmlld01hbmFnZXI6IEVYUFJFU1NJT04sIHZpZXc6IEVYUFJFU1NJT04sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYXBwRWw6IEVYUFJFU1NJT04sIGNvbXBvbmVudDogQ29tcGlsZURpcmVjdGl2ZU1ldGFkYXRhLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnROb2Rlc0J5TmdDb250ZW50SW5kZXg6IEVYUFJFU1NJT05bXVtdLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldFN0YXRlbWVudHM6IFNUQVRFTUVOVFtdKTtcblxuICBnZXRQcm9qZWN0ZWROb2Rlcyhwcm9qZWN0YWJsZU5vZGVzOiBFWFBSRVNTSU9OLCBuZ0NvbnRlbnRJbmRleDogbnVtYmVyKTogRVhQUkVTU0lPTjtcblxuICBhcHBlbmRQcm9qZWN0ZWROb2RlcyhyZW5kZXJlcjogRVhQUkVTU0lPTiwgcGFyZW50OiBFWFBSRVNTSU9OLCBub2RlczogRVhQUkVTU0lPTixcbiAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0U3RhdGVtZW50czogU1RBVEVNRU5UW10pO1xuXG4gIGNyZWF0ZVZpZXdGYWN0b3J5KGFzdHM6IFRlbXBsYXRlQXN0W10sIGVtYmVkZGVkVGVtcGxhdGVJbmRleDogbnVtYmVyLFxuICAgICAgICAgICAgICAgICAgICB0YXJnZXRTdGF0ZW1lbnRzOiBTVEFURU1FTlRbXSk6IEVYUFJFU1NJT047XG59XG5cbmNsYXNzIENvZGVHZW5WaWV3RmFjdG9yeSBpbXBsZW1lbnRzIFZpZXdGYWN0b3J5PEV4cHJlc3Npb24sIFN0YXRlbWVudD4ge1xuICBwcml2YXRlIF9uZXh0VmFySWQ6IG51bWJlciA9IDA7XG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBjb21wb25lbnQ6IENvbXBpbGVEaXJlY3RpdmVNZXRhZGF0YSwgcHVibGljIHN0eWxlczogU291cmNlRXhwcmVzc2lvbixcbiAgICAgICAgICAgICAgcHVibGljIHByb3RvVmlld3M6IENvbXBpbGVQcm90b1ZpZXc8RXhwcmVzc2lvbiwgRXhwcmVzc2lvbj5bXSxcbiAgICAgICAgICAgICAgcHVibGljIGNoYW5nZURldGVjdG9yRXhwcmVzc2lvbnM6IFNvdXJjZUV4cHJlc3Npb25zLFxuICAgICAgICAgICAgICBwdWJsaWMgY29tcG9uZW50Vmlld0ZhY3Rvcnk6IEZ1bmN0aW9uKSB7fVxuXG4gIHByaXZhdGUgX25leHRWYXIocHJlZml4OiBzdHJpbmcpOiBzdHJpbmcge1xuICAgIHJldHVybiBgJHtwcmVmaXh9JHt0aGlzLl9uZXh0VmFySWQrK31fJHt0aGlzLmNvbXBvbmVudC50eXBlLm5hbWV9YDtcbiAgfVxuXG4gIHByaXZhdGUgX25leHRSZW5kZXJWYXIoKTogc3RyaW5nIHsgcmV0dXJuIHRoaXMuX25leHRWYXIoJ3JlbmRlcicpOyB9XG5cbiAgcHJpdmF0ZSBfbmV4dEFwcFZhcigpOiBzdHJpbmcgeyByZXR1cm4gdGhpcy5fbmV4dFZhcignYXBwJyk7IH1cblxuICBwcml2YXRlIF9uZXh0RGlzcG9zYWJsZVZhcigpOiBzdHJpbmcge1xuICAgIHJldHVybiBgZGlzcG9zYWJsZSR7dGhpcy5fbmV4dFZhcklkKyt9XyR7dGhpcy5jb21wb25lbnQudHlwZS5uYW1lfWA7XG4gIH1cblxuICBjcmVhdGVUZXh0KHJlbmRlcmVyOiBFeHByZXNzaW9uLCBwYXJlbnQ6IEV4cHJlc3Npb24sIHRleHQ6IHN0cmluZyxcbiAgICAgICAgICAgICB0YXJnZXRTdGF0ZW1lbnRzOiBTdGF0ZW1lbnRbXSk6IEV4cHJlc3Npb24ge1xuICAgIHZhciB2YXJOYW1lID0gdGhpcy5fbmV4dFJlbmRlclZhcigpO1xuICAgIHZhciBzdGF0ZW1lbnQgPVxuICAgICAgICBgdmFyICR7dmFyTmFtZX0gPSAke3JlbmRlcmVyLmV4cHJlc3Npb259LmNyZWF0ZVRleHQoJHtpc1ByZXNlbnQocGFyZW50KSA/IHBhcmVudC5leHByZXNzaW9uIDogbnVsbH0sICR7ZXNjYXBlU2luZ2xlUXVvdGVTdHJpbmcodGV4dCl9KTtgO1xuICAgIHRhcmdldFN0YXRlbWVudHMucHVzaChuZXcgU3RhdGVtZW50KHN0YXRlbWVudCkpO1xuICAgIHJldHVybiBuZXcgRXhwcmVzc2lvbih2YXJOYW1lKTtcbiAgfVxuXG4gIGNyZWF0ZUVsZW1lbnQocmVuZGVyZXI6IEV4cHJlc3Npb24sIHBhcmVudFJlbmRlck5vZGU6IEV4cHJlc3Npb24sIG5hbWU6IHN0cmluZyxcbiAgICAgICAgICAgICAgICByb290U2VsZWN0b3I6IEV4cHJlc3Npb24sIHRhcmdldFN0YXRlbWVudHM6IFN0YXRlbWVudFtdKTogRXhwcmVzc2lvbiB7XG4gICAgdmFyIHZhck5hbWUgPSB0aGlzLl9uZXh0UmVuZGVyVmFyKCk7XG4gICAgdmFyIHZhbHVlRXhwcjtcbiAgICBpZiAoaXNQcmVzZW50KHJvb3RTZWxlY3RvcikpIHtcbiAgICAgIHZhbHVlRXhwciA9IGAke3Jvb3RTZWxlY3Rvci5leHByZXNzaW9ufSA9PSBudWxsID9cbiAgICAgICAgJHtyZW5kZXJlci5leHByZXNzaW9ufS5jcmVhdGVFbGVtZW50KCR7aXNQcmVzZW50KHBhcmVudFJlbmRlck5vZGUpID8gcGFyZW50UmVuZGVyTm9kZS5leHByZXNzaW9uIDogbnVsbH0sICR7ZXNjYXBlU2luZ2xlUXVvdGVTdHJpbmcobmFtZSl9KSA6XG4gICAgICAgICR7cmVuZGVyZXIuZXhwcmVzc2lvbn0uc2VsZWN0Um9vdEVsZW1lbnQoJHtyb290U2VsZWN0b3IuZXhwcmVzc2lvbn0pO2A7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhbHVlRXhwciA9XG4gICAgICAgICAgYCR7cmVuZGVyZXIuZXhwcmVzc2lvbn0uY3JlYXRlRWxlbWVudCgke2lzUHJlc2VudChwYXJlbnRSZW5kZXJOb2RlKSA/IHBhcmVudFJlbmRlck5vZGUuZXhwcmVzc2lvbiA6IG51bGx9LCAke2VzY2FwZVNpbmdsZVF1b3RlU3RyaW5nKG5hbWUpfSlgO1xuICAgIH1cbiAgICB2YXIgc3RhdGVtZW50ID0gYHZhciAke3Zhck5hbWV9ID0gJHt2YWx1ZUV4cHJ9O2A7XG4gICAgdGFyZ2V0U3RhdGVtZW50cy5wdXNoKG5ldyBTdGF0ZW1lbnQoc3RhdGVtZW50KSk7XG4gICAgcmV0dXJuIG5ldyBFeHByZXNzaW9uKHZhck5hbWUpO1xuICB9XG5cbiAgY3JlYXRlVGVtcGxhdGVBbmNob3IocmVuZGVyZXI6IEV4cHJlc3Npb24sIHBhcmVudFJlbmRlck5vZGU6IEV4cHJlc3Npb24sXG4gICAgICAgICAgICAgICAgICAgICAgIHRhcmdldFN0YXRlbWVudHM6IFN0YXRlbWVudFtdKTogRXhwcmVzc2lvbiB7XG4gICAgdmFyIHZhck5hbWUgPSB0aGlzLl9uZXh0UmVuZGVyVmFyKCk7XG4gICAgdmFyIHZhbHVlRXhwciA9XG4gICAgICAgIGAke3JlbmRlcmVyLmV4cHJlc3Npb259LmNyZWF0ZVRlbXBsYXRlQW5jaG9yKCR7aXNQcmVzZW50KHBhcmVudFJlbmRlck5vZGUpID8gcGFyZW50UmVuZGVyTm9kZS5leHByZXNzaW9uIDogbnVsbH0pO2A7XG4gICAgdGFyZ2V0U3RhdGVtZW50cy5wdXNoKG5ldyBTdGF0ZW1lbnQoYHZhciAke3Zhck5hbWV9ID0gJHt2YWx1ZUV4cHJ9YCkpO1xuICAgIHJldHVybiBuZXcgRXhwcmVzc2lvbih2YXJOYW1lKTtcbiAgfVxuXG4gIGNyZWF0ZUdsb2JhbEV2ZW50TGlzdGVuZXIocmVuZGVyZXI6IEV4cHJlc3Npb24sIGFwcFZpZXc6IEV4cHJlc3Npb24sIGJvdW5kRWxlbWVudEluZGV4OiBudW1iZXIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZXZlbnRBc3Q6IEJvdW5kRXZlbnRBc3QsIHRhcmdldFN0YXRlbWVudHM6IFN0YXRlbWVudFtdKTogRXhwcmVzc2lvbiB7XG4gICAgdmFyIGRpc3Bvc2FibGVWYXIgPSB0aGlzLl9uZXh0RGlzcG9zYWJsZVZhcigpO1xuICAgIHZhciBldmVudEhhbmRsZXJFeHByID0gY29kZUdlbkV2ZW50SGFuZGxlcihhcHBWaWV3LCBib3VuZEVsZW1lbnRJbmRleCwgZXZlbnRBc3QuZnVsbE5hbWUpO1xuICAgIHRhcmdldFN0YXRlbWVudHMucHVzaChuZXcgU3RhdGVtZW50KFxuICAgICAgICBgdmFyICR7ZGlzcG9zYWJsZVZhcn0gPSAke3JlbmRlcmVyLmV4cHJlc3Npb259Lmxpc3Rlbkdsb2JhbCgke2VzY2FwZVZhbHVlKGV2ZW50QXN0LnRhcmdldCl9LCAke2VzY2FwZVZhbHVlKGV2ZW50QXN0Lm5hbWUpfSwgJHtldmVudEhhbmRsZXJFeHByfSk7YCkpO1xuICAgIHJldHVybiBuZXcgRXhwcmVzc2lvbihkaXNwb3NhYmxlVmFyKTtcbiAgfVxuXG4gIGNyZWF0ZUVsZW1lbnRFdmVudExpc3RlbmVyKHJlbmRlcmVyOiBFeHByZXNzaW9uLCBhcHBWaWV3OiBFeHByZXNzaW9uLCBib3VuZEVsZW1lbnRJbmRleDogbnVtYmVyLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZW5kZXJOb2RlOiBFeHByZXNzaW9uLCBldmVudEFzdDogQm91bmRFdmVudEFzdCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0U3RhdGVtZW50czogU3RhdGVtZW50W10pIHtcbiAgICB2YXIgZGlzcG9zYWJsZVZhciA9IHRoaXMuX25leHREaXNwb3NhYmxlVmFyKCk7XG4gICAgdmFyIGV2ZW50SGFuZGxlckV4cHIgPSBjb2RlR2VuRXZlbnRIYW5kbGVyKGFwcFZpZXcsIGJvdW5kRWxlbWVudEluZGV4LCBldmVudEFzdC5mdWxsTmFtZSk7XG4gICAgdGFyZ2V0U3RhdGVtZW50cy5wdXNoKG5ldyBTdGF0ZW1lbnQoXG4gICAgICAgIGB2YXIgJHtkaXNwb3NhYmxlVmFyfSA9ICR7cmVuZGVyZXIuZXhwcmVzc2lvbn0ubGlzdGVuKCR7cmVuZGVyTm9kZS5leHByZXNzaW9ufSwgJHtlc2NhcGVWYWx1ZShldmVudEFzdC5uYW1lKX0sICR7ZXZlbnRIYW5kbGVyRXhwcn0pO2ApKTtcbiAgICByZXR1cm4gbmV3IEV4cHJlc3Npb24oZGlzcG9zYWJsZVZhcik7XG4gIH1cblxuICBzZXRFbGVtZW50QXR0cmlidXRlKHJlbmRlcmVyOiBFeHByZXNzaW9uLCByZW5kZXJOb2RlOiBFeHByZXNzaW9uLCBhdHRyTmFtZTogc3RyaW5nLFxuICAgICAgICAgICAgICAgICAgICAgIGF0dHJWYWx1ZTogc3RyaW5nLCB0YXJnZXRTdGF0ZW1lbnRzOiBTdGF0ZW1lbnRbXSkge1xuICAgIHRhcmdldFN0YXRlbWVudHMucHVzaChuZXcgU3RhdGVtZW50KFxuICAgICAgICBgJHtyZW5kZXJlci5leHByZXNzaW9ufS5zZXRFbGVtZW50QXR0cmlidXRlKCR7cmVuZGVyTm9kZS5leHByZXNzaW9ufSwgJHtlc2NhcGVTaW5nbGVRdW90ZVN0cmluZyhhdHRyTmFtZSl9LCAke2VzY2FwZVNpbmdsZVF1b3RlU3RyaW5nKGF0dHJWYWx1ZSl9KTtgKSk7XG4gIH1cblxuICBjcmVhdGVBcHBFbGVtZW50KGFwcFByb3RvRWw6IEV4cHJlc3Npb24sIGFwcFZpZXc6IEV4cHJlc3Npb24sIHJlbmRlck5vZGU6IEV4cHJlc3Npb24sXG4gICAgICAgICAgICAgICAgICAgcGFyZW50QXBwRWw6IEV4cHJlc3Npb24sIGVtYmVkZGVkVmlld0ZhY3Rvcnk6IEV4cHJlc3Npb24sXG4gICAgICAgICAgICAgICAgICAgdGFyZ2V0U3RhdGVtZW50czogU3RhdGVtZW50W10pOiBFeHByZXNzaW9uIHtcbiAgICB2YXIgYXBwVmFyID0gdGhpcy5fbmV4dEFwcFZhcigpO1xuICAgIHZhciB2YXJWYWx1ZSA9XG4gICAgICAgIGBuZXcgJHtBUFBfRUxfTU9EVUxFX1JFRn1BcHBFbGVtZW50KCR7YXBwUHJvdG9FbC5leHByZXNzaW9ufSwgJHthcHBWaWV3LmV4cHJlc3Npb259LFxuICAgICAgJHtpc1ByZXNlbnQocGFyZW50QXBwRWwpID8gcGFyZW50QXBwRWwuZXhwcmVzc2lvbiA6IG51bGx9LCAke3JlbmRlck5vZGUuZXhwcmVzc2lvbn0sICR7aXNQcmVzZW50KGVtYmVkZGVkVmlld0ZhY3RvcnkpID8gZW1iZWRkZWRWaWV3RmFjdG9yeS5leHByZXNzaW9uIDogbnVsbH0pYDtcbiAgICB0YXJnZXRTdGF0ZW1lbnRzLnB1c2gobmV3IFN0YXRlbWVudChgdmFyICR7YXBwVmFyfSA9ICR7dmFyVmFsdWV9O2ApKTtcbiAgICByZXR1cm4gbmV3IEV4cHJlc3Npb24oYXBwVmFyKTtcbiAgfVxuXG4gIGNyZWF0ZUFuZFNldENvbXBvbmVudFZpZXcocmVuZGVyZXI6IEV4cHJlc3Npb24sIHZpZXdNYW5hZ2VyOiBFeHByZXNzaW9uLCB2aWV3OiBFeHByZXNzaW9uLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFwcEVsOiBFeHByZXNzaW9uLCBjb21wb25lbnQ6IENvbXBpbGVEaXJlY3RpdmVNZXRhZGF0YSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50Tm9kZXNCeU5nQ29udGVudEluZGV4OiBFeHByZXNzaW9uW11bXSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXRTdGF0ZW1lbnRzOiBTdGF0ZW1lbnRbXSkge1xuICAgIHZhciBjb2RlR2VuQ29udGVudE5vZGVzO1xuICAgIGlmICh0aGlzLmNvbXBvbmVudC50eXBlLmlzSG9zdCkge1xuICAgICAgY29kZUdlbkNvbnRlbnROb2RlcyA9IGAke3ZpZXcuZXhwcmVzc2lvbn0ucHJvamVjdGFibGVOb2Rlc2A7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvZGVHZW5Db250ZW50Tm9kZXMgPVxuICAgICAgICAgIGBbJHtjb250ZW50Tm9kZXNCeU5nQ29udGVudEluZGV4Lm1hcCggbm9kZXMgPT4gY29kZUdlbkZsYXRBcnJheShub2RlcykgKS5qb2luKCcsJyl9XWA7XG4gICAgfVxuICAgIHRhcmdldFN0YXRlbWVudHMucHVzaChuZXcgU3RhdGVtZW50KFxuICAgICAgICBgJHt0aGlzLmNvbXBvbmVudFZpZXdGYWN0b3J5KGNvbXBvbmVudCl9KCR7cmVuZGVyZXIuZXhwcmVzc2lvbn0sICR7dmlld01hbmFnZXIuZXhwcmVzc2lvbn0sICR7YXBwRWwuZXhwcmVzc2lvbn0sICR7Y29kZUdlbkNvbnRlbnROb2Rlc30sIG51bGwsIG51bGwsIG51bGwpO2ApKTtcbiAgfVxuXG4gIGdldFByb2plY3RlZE5vZGVzKHByb2plY3RhYmxlTm9kZXM6IEV4cHJlc3Npb24sIG5nQ29udGVudEluZGV4OiBudW1iZXIpOiBFeHByZXNzaW9uIHtcbiAgICByZXR1cm4gbmV3IEV4cHJlc3Npb24oYCR7cHJvamVjdGFibGVOb2Rlcy5leHByZXNzaW9ufVske25nQ29udGVudEluZGV4fV1gLCB0cnVlKTtcbiAgfVxuXG4gIGFwcGVuZFByb2plY3RlZE5vZGVzKHJlbmRlcmVyOiBFeHByZXNzaW9uLCBwYXJlbnQ6IEV4cHJlc3Npb24sIG5vZGVzOiBFeHByZXNzaW9uLFxuICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXRTdGF0ZW1lbnRzOiBTdGF0ZW1lbnRbXSkge1xuICAgIHRhcmdldFN0YXRlbWVudHMucHVzaChuZXcgU3RhdGVtZW50KFxuICAgICAgICBgJHtyZW5kZXJlci5leHByZXNzaW9ufS5wcm9qZWN0Tm9kZXMoJHtwYXJlbnQuZXhwcmVzc2lvbn0sICR7QVBQX1ZJRVdfTU9EVUxFX1JFRn1mbGF0dGVuTmVzdGVkVmlld1JlbmRlck5vZGVzKCR7bm9kZXMuZXhwcmVzc2lvbn0pKTtgKSk7XG4gIH1cblxuICBjcmVhdGVWaWV3RmFjdG9yeShhc3RzOiBUZW1wbGF0ZUFzdFtdLCBlbWJlZGRlZFRlbXBsYXRlSW5kZXg6IG51bWJlcixcbiAgICAgICAgICAgICAgICAgICAgdGFyZ2V0U3RhdGVtZW50czogU3RhdGVtZW50W10pOiBFeHByZXNzaW9uIHtcbiAgICB2YXIgY29tcGlsZVByb3RvVmlldyA9IHRoaXMucHJvdG9WaWV3c1tlbWJlZGRlZFRlbXBsYXRlSW5kZXhdO1xuICAgIHZhciBpc0hvc3RWaWV3ID0gdGhpcy5jb21wb25lbnQudHlwZS5pc0hvc3Q7XG4gICAgdmFyIGlzQ29tcG9uZW50VmlldyA9IGVtYmVkZGVkVGVtcGxhdGVJbmRleCA9PT0gMCAmJiAhaXNIb3N0VmlldztcbiAgICB2YXIgdmlzaXRvciA9IG5ldyBWaWV3QnVpbGRlclZpc2l0b3I8RXhwcmVzc2lvbiwgU3RhdGVtZW50PihcbiAgICAgICAgbmV3IEV4cHJlc3Npb24oJ3JlbmRlcmVyJyksIG5ldyBFeHByZXNzaW9uKCd2aWV3TWFuYWdlcicpLFxuICAgICAgICBuZXcgRXhwcmVzc2lvbigncHJvamVjdGFibGVOb2RlcycpLCBpc0hvc3RWaWV3ID8gbmV3IEV4cHJlc3Npb24oJ3Jvb3RTZWxlY3RvcicpIDogbnVsbCxcbiAgICAgICAgbmV3IEV4cHJlc3Npb24oJ3ZpZXcnKSwgY29tcGlsZVByb3RvVmlldywgdGFyZ2V0U3RhdGVtZW50cywgdGhpcyk7XG5cbiAgICB0ZW1wbGF0ZVZpc2l0QWxsKFxuICAgICAgICB2aXNpdG9yLCBhc3RzLFxuICAgICAgICBuZXcgUGFyZW50RWxlbWVudChpc0NvbXBvbmVudFZpZXcgPyBuZXcgRXhwcmVzc2lvbigncGFyZW50UmVuZGVyTm9kZScpIDogbnVsbCwgbnVsbCwgbnVsbCkpO1xuXG4gICAgdmFyIGFwcFByb3RvVmlldyA9IGNvbXBpbGVQcm90b1ZpZXcucHJvdG9WaWV3LmV4cHJlc3Npb247XG4gICAgdmFyIHZpZXdGYWN0b3J5TmFtZSA9IGNvZGVHZW5WaWV3RmFjdG9yeU5hbWUodGhpcy5jb21wb25lbnQsIGVtYmVkZGVkVGVtcGxhdGVJbmRleCk7XG4gICAgdmFyIGNoYW5nZURldGVjdG9yRmFjdG9yeSA9IHRoaXMuY2hhbmdlRGV0ZWN0b3JFeHByZXNzaW9ucy5leHByZXNzaW9uc1tlbWJlZGRlZFRlbXBsYXRlSW5kZXhdO1xuICAgIHZhciBmYWN0b3J5QXJncyA9IFtcbiAgICAgICdwYXJlbnRSZW5kZXJlcicsXG4gICAgICAndmlld01hbmFnZXInLFxuICAgICAgJ2NvbnRhaW5lckVsJyxcbiAgICAgICdwcm9qZWN0YWJsZU5vZGVzJyxcbiAgICAgICdyb290U2VsZWN0b3InLFxuICAgICAgJ2R5bmFtaWNhbGx5Q3JlYXRlZFByb3ZpZGVycycsXG4gICAgICAncm9vdEluamVjdG9yJ1xuICAgIF07XG4gICAgdmFyIGluaXRSZW5kZXJlclN0bXRzID0gW107XG4gICAgdmFyIHJlbmRlcmVyRXhwciA9IGBwYXJlbnRSZW5kZXJlcmA7XG4gICAgaWYgKGVtYmVkZGVkVGVtcGxhdGVJbmRleCA9PT0gMCkge1xuICAgICAgdmFyIHJlbmRlckNvbXBUeXBlVmFyID0gdGhpcy5fbmV4dFZhcigncmVuZGVyVHlwZScpO1xuICAgICAgdGFyZ2V0U3RhdGVtZW50cy5wdXNoKG5ldyBTdGF0ZW1lbnQoYHZhciAke3JlbmRlckNvbXBUeXBlVmFyfSA9IG51bGw7YCkpO1xuICAgICAgdmFyIHN0eWxlc1ZhciA9IHRoaXMuX25leHRWYXIoJ3N0eWxlcycpO1xuICAgICAgdGFyZ2V0U3RhdGVtZW50cy5wdXNoKFxuICAgICAgICAgIG5ldyBTdGF0ZW1lbnQoYCR7Q09OU1RfVkFSfSAke3N0eWxlc1Zhcn0gPSAke3RoaXMuc3R5bGVzLmV4cHJlc3Npb259O2ApKTtcbiAgICAgIHZhciBlbmNhcHN1bGF0aW9uID0gdGhpcy5jb21wb25lbnQudGVtcGxhdGUuZW5jYXBzdWxhdGlvbjtcbiAgICAgIGluaXRSZW5kZXJlclN0bXRzLnB1c2goYGlmICgke3JlbmRlckNvbXBUeXBlVmFyfSA9PSBudWxsKSB7XG4gICAgICAgICR7cmVuZGVyQ29tcFR5cGVWYXJ9ID0gdmlld01hbmFnZXIuY3JlYXRlUmVuZGVyQ29tcG9uZW50VHlwZSgke2NvZGVHZW5WaWV3RW5jYXBzdWxhdGlvbihlbmNhcHN1bGF0aW9uKX0sICR7c3R5bGVzVmFyfSk7XG4gICAgICB9YCk7XG4gICAgICByZW5kZXJlckV4cHIgPSBgcGFyZW50UmVuZGVyZXIucmVuZGVyQ29tcG9uZW50KCR7cmVuZGVyQ29tcFR5cGVWYXJ9KWA7XG4gICAgfVxuICAgIHZhciBzdGF0ZW1lbnQgPSBgXG4ke2NvZGVHZW5GbkhlYWRlcihmYWN0b3J5QXJncywgdmlld0ZhY3RvcnlOYW1lKX17XG4gICR7aW5pdFJlbmRlcmVyU3RtdHMuam9pbignXFxuJyl9XG4gIHZhciByZW5kZXJlciA9ICR7cmVuZGVyZXJFeHByfTtcbiAgdmFyIHZpZXcgPSBuZXcgJHtBUFBfVklFV19NT0RVTEVfUkVGfUFwcFZpZXcoXG4gICAgJHthcHBQcm90b1ZpZXd9LCByZW5kZXJlciwgdmlld01hbmFnZXIsXG4gICAgcHJvamVjdGFibGVOb2RlcyxcbiAgICBjb250YWluZXJFbCxcbiAgICBkeW5hbWljYWxseUNyZWF0ZWRQcm92aWRlcnMsIHJvb3RJbmplY3RvcixcbiAgICAke2NoYW5nZURldGVjdG9yRmFjdG9yeX0oKVxuICApO1xuICAke0FQUF9WSUVXX01PRFVMRV9SRUZ9Y2hlY2tTbG90Q291bnQoJHtlc2NhcGVWYWx1ZSh0aGlzLmNvbXBvbmVudC50eXBlLm5hbWUpfSwgJHt0aGlzLmNvbXBvbmVudC50ZW1wbGF0ZS5uZ0NvbnRlbnRTZWxlY3RvcnMubGVuZ3RofSwgcHJvamVjdGFibGVOb2Rlcyk7XG4gICR7aXNDb21wb25lbnRWaWV3ID8gJ3ZhciBwYXJlbnRSZW5kZXJOb2RlID0gcmVuZGVyZXIuY3JlYXRlVmlld1Jvb3Qodmlldy5jb250YWluZXJBcHBFbGVtZW50Lm5hdGl2ZUVsZW1lbnQpOycgOiAnJ31cbiAgJHt2aXNpdG9yLnJlbmRlclN0bXRzLm1hcChzdG10ID0+IHN0bXQuc3RhdGVtZW50KS5qb2luKCdcXG4nKX1cbiAgJHt2aXNpdG9yLmFwcFN0bXRzLm1hcChzdG10ID0+IHN0bXQuc3RhdGVtZW50KS5qb2luKCdcXG4nKX1cblxuICB2aWV3LmluaXQoJHtjb2RlR2VuRmxhdEFycmF5KHZpc2l0b3Iucm9vdE5vZGVzT3JBcHBFbGVtZW50cyl9LCAke2NvZGVHZW5BcnJheSh2aXNpdG9yLnJlbmRlck5vZGVzKX0sICR7Y29kZUdlbkFycmF5KHZpc2l0b3IuYXBwRGlzcG9zYWJsZXMpfSxcbiAgICAgICAgICAgICR7Y29kZUdlbkFycmF5KHZpc2l0b3IuYXBwRWxlbWVudHMpfSk7XG4gIHJldHVybiB2aWV3O1xufWA7XG4gICAgdGFyZ2V0U3RhdGVtZW50cy5wdXNoKG5ldyBTdGF0ZW1lbnQoc3RhdGVtZW50KSk7XG4gICAgcmV0dXJuIG5ldyBFeHByZXNzaW9uKHZpZXdGYWN0b3J5TmFtZSk7XG4gIH1cbn1cblxuY2xhc3MgUnVudGltZVZpZXdGYWN0b3J5IGltcGxlbWVudHMgVmlld0ZhY3Rvcnk8YW55LCBhbnk+IHtcbiAgY29uc3RydWN0b3IocHVibGljIGNvbXBvbmVudDogQ29tcGlsZURpcmVjdGl2ZU1ldGFkYXRhLCBwdWJsaWMgc3R5bGVzOiBBcnJheTxzdHJpbmcgfCBhbnlbXT4sXG4gICAgICAgICAgICAgIHB1YmxpYyBwcm90b1ZpZXdzOiBDb21waWxlUHJvdG9WaWV3PEFwcFByb3RvVmlldywgQXBwUHJvdG9FbGVtZW50PltdLFxuICAgICAgICAgICAgICBwdWJsaWMgY2hhbmdlRGV0ZWN0b3JGYWN0b3JpZXM6IEZ1bmN0aW9uW10sIHB1YmxpYyBjb21wb25lbnRWaWV3RmFjdG9yeTogRnVuY3Rpb24pIHt9XG5cbiAgY3JlYXRlVGV4dChyZW5kZXJlcjogUmVuZGVyZXIsIHBhcmVudDogYW55LCB0ZXh0OiBzdHJpbmcsIHRhcmdldFN0YXRlbWVudHM6IGFueVtdKTogYW55IHtcbiAgICByZXR1cm4gcmVuZGVyZXIuY3JlYXRlVGV4dChwYXJlbnQsIHRleHQpO1xuICB9XG5cbiAgY3JlYXRlRWxlbWVudChyZW5kZXJlcjogUmVuZGVyZXIsIHBhcmVudDogYW55LCBuYW1lOiBzdHJpbmcsIHJvb3RTZWxlY3Rvcjogc3RyaW5nLFxuICAgICAgICAgICAgICAgIHRhcmdldFN0YXRlbWVudHM6IGFueVtdKTogYW55IHtcbiAgICB2YXIgZWw7XG4gICAgaWYgKGlzUHJlc2VudChyb290U2VsZWN0b3IpKSB7XG4gICAgICBlbCA9IHJlbmRlcmVyLnNlbGVjdFJvb3RFbGVtZW50KHJvb3RTZWxlY3Rvcik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGVsID0gcmVuZGVyZXIuY3JlYXRlRWxlbWVudChwYXJlbnQsIG5hbWUpO1xuICAgIH1cbiAgICByZXR1cm4gZWw7XG4gIH1cblxuICBjcmVhdGVUZW1wbGF0ZUFuY2hvcihyZW5kZXJlcjogUmVuZGVyZXIsIHBhcmVudDogYW55LCB0YXJnZXRTdGF0ZW1lbnRzOiBhbnlbXSk6IGFueSB7XG4gICAgcmV0dXJuIHJlbmRlcmVyLmNyZWF0ZVRlbXBsYXRlQW5jaG9yKHBhcmVudCk7XG4gIH1cblxuICBjcmVhdGVHbG9iYWxFdmVudExpc3RlbmVyKHJlbmRlcmVyOiBSZW5kZXJlciwgYXBwVmlldzogQXBwVmlldywgYm91bmRFbGVtZW50SW5kZXg6IG51bWJlcixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBldmVudEFzdDogQm91bmRFdmVudEFzdCwgdGFyZ2V0U3RhdGVtZW50czogYW55W10pOiBhbnkge1xuICAgIHJldHVybiByZW5kZXJlci5saXN0ZW5HbG9iYWwoXG4gICAgICAgIGV2ZW50QXN0LnRhcmdldCwgZXZlbnRBc3QubmFtZSxcbiAgICAgICAgKGV2ZW50KSA9PiBhcHBWaWV3LnRyaWdnZXJFdmVudEhhbmRsZXJzKGV2ZW50QXN0LmZ1bGxOYW1lLCBldmVudCwgYm91bmRFbGVtZW50SW5kZXgpKTtcbiAgfVxuXG4gIGNyZWF0ZUVsZW1lbnRFdmVudExpc3RlbmVyKHJlbmRlcmVyOiBSZW5kZXJlciwgYXBwVmlldzogQXBwVmlldywgYm91bmRFbGVtZW50SW5kZXg6IG51bWJlcixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVuZGVyTm9kZTogYW55LCBldmVudEFzdDogQm91bmRFdmVudEFzdCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0U3RhdGVtZW50czogYW55W10pOiBhbnkge1xuICAgIHJldHVybiByZW5kZXJlci5saXN0ZW4oXG4gICAgICAgIHJlbmRlck5vZGUsIGV2ZW50QXN0Lm5hbWUsXG4gICAgICAgIChldmVudCkgPT4gYXBwVmlldy50cmlnZ2VyRXZlbnRIYW5kbGVycyhldmVudEFzdC5mdWxsTmFtZSwgZXZlbnQsIGJvdW5kRWxlbWVudEluZGV4KSk7XG4gIH1cblxuICBzZXRFbGVtZW50QXR0cmlidXRlKHJlbmRlcmVyOiBSZW5kZXJlciwgcmVuZGVyTm9kZTogYW55LCBhdHRyTmFtZTogc3RyaW5nLCBhdHRyVmFsdWU6IHN0cmluZyxcbiAgICAgICAgICAgICAgICAgICAgICB0YXJnZXRTdGF0ZW1lbnRzOiBhbnlbXSkge1xuICAgIHJlbmRlcmVyLnNldEVsZW1lbnRBdHRyaWJ1dGUocmVuZGVyTm9kZSwgYXR0ck5hbWUsIGF0dHJWYWx1ZSk7XG4gIH1cblxuICBjcmVhdGVBcHBFbGVtZW50KGFwcFByb3RvRWw6IEFwcFByb3RvRWxlbWVudCwgYXBwVmlldzogQXBwVmlldywgcmVuZGVyTm9kZTogYW55LFxuICAgICAgICAgICAgICAgICAgIHBhcmVudEFwcEVsOiBBcHBFbGVtZW50LCBlbWJlZGRlZFZpZXdGYWN0b3J5OiBGdW5jdGlvbixcbiAgICAgICAgICAgICAgICAgICB0YXJnZXRTdGF0ZW1lbnRzOiBhbnlbXSk6IGFueSB7XG4gICAgcmV0dXJuIG5ldyBBcHBFbGVtZW50KGFwcFByb3RvRWwsIGFwcFZpZXcsIHBhcmVudEFwcEVsLCByZW5kZXJOb2RlLCBlbWJlZGRlZFZpZXdGYWN0b3J5KTtcbiAgfVxuXG4gIGNyZWF0ZUFuZFNldENvbXBvbmVudFZpZXcocmVuZGVyZXI6IFJlbmRlcmVyLCB2aWV3TWFuYWdlcjogQXBwVmlld01hbmFnZXJfLCBhcHBWaWV3OiBBcHBWaWV3LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFwcEVsOiBBcHBFbGVtZW50LCBjb21wb25lbnQ6IENvbXBpbGVEaXJlY3RpdmVNZXRhZGF0YSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50Tm9kZXNCeU5nQ29udGVudEluZGV4OiBBcnJheTxBcnJheTxhbnkgfCBhbnlbXT4+LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldFN0YXRlbWVudHM6IGFueVtdKSB7XG4gICAgdmFyIGZsYXR0ZW5lZENvbnRlbnROb2RlcztcbiAgICBpZiAodGhpcy5jb21wb25lbnQudHlwZS5pc0hvc3QpIHtcbiAgICAgIGZsYXR0ZW5lZENvbnRlbnROb2RlcyA9IGFwcFZpZXcucHJvamVjdGFibGVOb2RlcztcbiAgICB9IGVsc2Uge1xuICAgICAgZmxhdHRlbmVkQ29udGVudE5vZGVzID0gTGlzdFdyYXBwZXIuY3JlYXRlRml4ZWRTaXplKGNvbnRlbnROb2Rlc0J5TmdDb250ZW50SW5kZXgubGVuZ3RoKTtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY29udGVudE5vZGVzQnlOZ0NvbnRlbnRJbmRleC5sZW5ndGg7IGkrKykge1xuICAgICAgICBmbGF0dGVuZWRDb250ZW50Tm9kZXNbaV0gPSBmbGF0dGVuQXJyYXkoY29udGVudE5vZGVzQnlOZ0NvbnRlbnRJbmRleFtpXSwgW10pO1xuICAgICAgfVxuICAgIH1cbiAgICB0aGlzLmNvbXBvbmVudFZpZXdGYWN0b3J5KGNvbXBvbmVudCkocmVuZGVyZXIsIHZpZXdNYW5hZ2VyLCBhcHBFbCwgZmxhdHRlbmVkQ29udGVudE5vZGVzKTtcbiAgfVxuXG4gIGdldFByb2plY3RlZE5vZGVzKHByb2plY3RhYmxlTm9kZXM6IGFueVtdW10sIG5nQ29udGVudEluZGV4OiBudW1iZXIpOiBhbnlbXSB7XG4gICAgcmV0dXJuIHByb2plY3RhYmxlTm9kZXNbbmdDb250ZW50SW5kZXhdO1xuICB9XG5cbiAgYXBwZW5kUHJvamVjdGVkTm9kZXMocmVuZGVyZXI6IFJlbmRlcmVyLCBwYXJlbnQ6IGFueSwgbm9kZXM6IGFueVtdLCB0YXJnZXRTdGF0ZW1lbnRzOiBhbnlbXSkge1xuICAgIHJlbmRlcmVyLnByb2plY3ROb2RlcyhwYXJlbnQsIGZsYXR0ZW5OZXN0ZWRWaWV3UmVuZGVyTm9kZXMobm9kZXMpKTtcbiAgfVxuXG4gIGNyZWF0ZVZpZXdGYWN0b3J5KGFzdHM6IFRlbXBsYXRlQXN0W10sIGVtYmVkZGVkVGVtcGxhdGVJbmRleDogbnVtYmVyLFxuICAgICAgICAgICAgICAgICAgICB0YXJnZXRTdGF0ZW1lbnRzOiBhbnlbXSk6IEZ1bmN0aW9uIHtcbiAgICB2YXIgY29tcGlsZVByb3RvVmlldyA9IHRoaXMucHJvdG9WaWV3c1tlbWJlZGRlZFRlbXBsYXRlSW5kZXhdO1xuICAgIHZhciBpc0NvbXBvbmVudFZpZXcgPSBjb21waWxlUHJvdG9WaWV3LnByb3RvVmlldy50eXBlID09PSBWaWV3VHlwZS5DT01QT05FTlQ7XG4gICAgdmFyIHJlbmRlckNvbXBvbmVudFR5cGUgPSBudWxsO1xuICAgIHJldHVybiAocGFyZW50UmVuZGVyZXI6IFBhcmVudFJlbmRlcmVyLCB2aWV3TWFuYWdlcjogQXBwVmlld01hbmFnZXJfLCBjb250YWluZXJFbDogQXBwRWxlbWVudCxcbiAgICAgICAgICAgIHByb2plY3RhYmxlTm9kZXM6IGFueVtdW10sIHJvb3RTZWxlY3Rvcjogc3RyaW5nID0gbnVsbCxcbiAgICAgICAgICAgIGR5bmFtaWNhbGx5Q3JlYXRlZFByb3ZpZGVyczogUmVzb2x2ZWRQcm92aWRlcltdID0gbnVsbCxcbiAgICAgICAgICAgIHJvb3RJbmplY3RvcjogSW5qZWN0b3IgPSBudWxsKSA9PiB7XG4gICAgICBjaGVja1Nsb3RDb3VudCh0aGlzLmNvbXBvbmVudC50eXBlLm5hbWUsIHRoaXMuY29tcG9uZW50LnRlbXBsYXRlLm5nQ29udGVudFNlbGVjdG9ycy5sZW5ndGgsXG4gICAgICAgICAgICAgICAgICAgICBwcm9qZWN0YWJsZU5vZGVzKTtcbiAgICAgIHZhciByZW5kZXJlcjtcbiAgICAgIGlmIChlbWJlZGRlZFRlbXBsYXRlSW5kZXggPT09IDApIHtcbiAgICAgICAgaWYgKGlzQmxhbmsocmVuZGVyQ29tcG9uZW50VHlwZSkpIHtcbiAgICAgICAgICByZW5kZXJDb21wb25lbnRUeXBlID0gdmlld01hbmFnZXIuY3JlYXRlUmVuZGVyQ29tcG9uZW50VHlwZShcbiAgICAgICAgICAgICAgdGhpcy5jb21wb25lbnQudGVtcGxhdGUuZW5jYXBzdWxhdGlvbiwgdGhpcy5zdHlsZXMpO1xuICAgICAgICB9XG4gICAgICAgIHJlbmRlcmVyID0gcGFyZW50UmVuZGVyZXIucmVuZGVyQ29tcG9uZW50KHJlbmRlckNvbXBvbmVudFR5cGUpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmVuZGVyZXIgPSA8UmVuZGVyZXI+cGFyZW50UmVuZGVyZXI7XG4gICAgICB9XG4gICAgICB2YXIgY2hhbmdlRGV0ZWN0b3IgPSB0aGlzLmNoYW5nZURldGVjdG9yRmFjdG9yaWVzW2VtYmVkZGVkVGVtcGxhdGVJbmRleF0oKTtcbiAgICAgIHZhciB2aWV3ID1cbiAgICAgICAgICBuZXcgQXBwVmlldyhjb21waWxlUHJvdG9WaWV3LnByb3RvVmlldywgcmVuZGVyZXIsIHZpZXdNYW5hZ2VyLCBwcm9qZWN0YWJsZU5vZGVzLFxuICAgICAgICAgICAgICAgICAgICAgIGNvbnRhaW5lckVsLCBkeW5hbWljYWxseUNyZWF0ZWRQcm92aWRlcnMsIHJvb3RJbmplY3RvciwgY2hhbmdlRGV0ZWN0b3IpO1xuICAgICAgdmFyIHZpc2l0b3IgPSBuZXcgVmlld0J1aWxkZXJWaXNpdG9yPGFueSwgYW55PihcbiAgICAgICAgICByZW5kZXJlciwgdmlld01hbmFnZXIsIHByb2plY3RhYmxlTm9kZXMsIHJvb3RTZWxlY3RvciwgdmlldywgY29tcGlsZVByb3RvVmlldywgW10sIHRoaXMpO1xuICAgICAgdmFyIHBhcmVudFJlbmRlck5vZGUgPVxuICAgICAgICAgIGlzQ29tcG9uZW50VmlldyA/IHJlbmRlcmVyLmNyZWF0ZVZpZXdSb290KGNvbnRhaW5lckVsLm5hdGl2ZUVsZW1lbnQpIDogbnVsbDtcbiAgICAgIHRlbXBsYXRlVmlzaXRBbGwodmlzaXRvciwgYXN0cywgbmV3IFBhcmVudEVsZW1lbnQocGFyZW50UmVuZGVyTm9kZSwgbnVsbCwgbnVsbCkpO1xuICAgICAgdmlldy5pbml0KGZsYXR0ZW5BcnJheSh2aXNpdG9yLnJvb3ROb2Rlc09yQXBwRWxlbWVudHMsIFtdKSwgdmlzaXRvci5yZW5kZXJOb2RlcyxcbiAgICAgICAgICAgICAgICB2aXNpdG9yLmFwcERpc3Bvc2FibGVzLCB2aXNpdG9yLmFwcEVsZW1lbnRzKTtcbiAgICAgIHJldHVybiB2aWV3O1xuICAgIH07XG4gIH1cbn1cblxuY2xhc3MgUGFyZW50RWxlbWVudDxFWFBSRVNTSU9OPiB7XG4gIHB1YmxpYyBjb250ZW50Tm9kZXNCeU5nQ29udGVudEluZGV4OiBBcnJheTxFWFBSRVNTSU9OPltdO1xuXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyByZW5kZXJOb2RlOiBFWFBSRVNTSU9OLCBwdWJsaWMgYXBwRWw6IEVYUFJFU1NJT04sXG4gICAgICAgICAgICAgIHB1YmxpYyBjb21wb25lbnQ6IENvbXBpbGVEaXJlY3RpdmVNZXRhZGF0YSkge1xuICAgIGlmIChpc1ByZXNlbnQoY29tcG9uZW50KSkge1xuICAgICAgdGhpcy5jb250ZW50Tm9kZXNCeU5nQ29udGVudEluZGV4ID1cbiAgICAgICAgICBMaXN0V3JhcHBlci5jcmVhdGVGaXhlZFNpemUoY29tcG9uZW50LnRlbXBsYXRlLm5nQ29udGVudFNlbGVjdG9ycy5sZW5ndGgpO1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmNvbnRlbnROb2Rlc0J5TmdDb250ZW50SW5kZXgubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdGhpcy5jb250ZW50Tm9kZXNCeU5nQ29udGVudEluZGV4W2ldID0gW107XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuY29udGVudE5vZGVzQnlOZ0NvbnRlbnRJbmRleCA9IG51bGw7XG4gICAgfVxuICB9XG5cbiAgYWRkQ29udGVudE5vZGUobmdDb250ZW50SW5kZXg6IG51bWJlciwgbm9kZUV4cHI6IEVYUFJFU1NJT04pIHtcbiAgICB0aGlzLmNvbnRlbnROb2Rlc0J5TmdDb250ZW50SW5kZXhbbmdDb250ZW50SW5kZXhdLnB1c2gobm9kZUV4cHIpO1xuICB9XG59XG5cbmNsYXNzIFZpZXdCdWlsZGVyVmlzaXRvcjxFWFBSRVNTSU9OLCBTVEFURU1FTlQ+IGltcGxlbWVudHMgVGVtcGxhdGVBc3RWaXNpdG9yIHtcbiAgcmVuZGVyU3RtdHM6IEFycmF5PFNUQVRFTUVOVD4gPSBbXTtcbiAgcmVuZGVyTm9kZXM6IEVYUFJFU1NJT05bXSA9IFtdO1xuICBhcHBTdG10czogQXJyYXk8U1RBVEVNRU5UPiA9IFtdO1xuICBhcHBFbGVtZW50czogRVhQUkVTU0lPTltdID0gW107XG4gIGFwcERpc3Bvc2FibGVzOiBFWFBSRVNTSU9OW10gPSBbXTtcblxuICByb290Tm9kZXNPckFwcEVsZW1lbnRzOiBFWFBSRVNTSU9OW10gPSBbXTtcblxuICBlbGVtZW50Q291bnQ6IG51bWJlciA9IDA7XG5cbiAgY29uc3RydWN0b3IocHVibGljIHJlbmRlcmVyOiBFWFBSRVNTSU9OLCBwdWJsaWMgdmlld01hbmFnZXI6IEVYUFJFU1NJT04sXG4gICAgICAgICAgICAgIHB1YmxpYyBwcm9qZWN0YWJsZU5vZGVzOiBFWFBSRVNTSU9OLCBwdWJsaWMgcm9vdFNlbGVjdG9yOiBFWFBSRVNTSU9OLFxuICAgICAgICAgICAgICBwdWJsaWMgdmlldzogRVhQUkVTU0lPTiwgcHVibGljIHByb3RvVmlldzogQ29tcGlsZVByb3RvVmlldzxFWFBSRVNTSU9OLCBFWFBSRVNTSU9OPixcbiAgICAgICAgICAgICAgcHVibGljIHRhcmdldFN0YXRlbWVudHM6IFNUQVRFTUVOVFtdLFxuICAgICAgICAgICAgICBwdWJsaWMgZmFjdG9yeTogVmlld0ZhY3Rvcnk8RVhQUkVTU0lPTiwgU1RBVEVNRU5UPikge31cblxuICBwcml2YXRlIF9hZGRSZW5kZXJOb2RlKHJlbmRlck5vZGU6IEVYUFJFU1NJT04sIGFwcEVsOiBFWFBSRVNTSU9OLCBuZ0NvbnRlbnRJbmRleDogbnVtYmVyLFxuICAgICAgICAgICAgICAgICAgICAgICAgIHBhcmVudDogUGFyZW50RWxlbWVudDxFWFBSRVNTSU9OPikge1xuICAgIHRoaXMucmVuZGVyTm9kZXMucHVzaChyZW5kZXJOb2RlKTtcbiAgICBpZiAoaXNQcmVzZW50KHBhcmVudC5jb21wb25lbnQpKSB7XG4gICAgICBpZiAoaXNQcmVzZW50KG5nQ29udGVudEluZGV4KSkge1xuICAgICAgICBwYXJlbnQuYWRkQ29udGVudE5vZGUobmdDb250ZW50SW5kZXgsIGlzUHJlc2VudChhcHBFbCkgPyBhcHBFbCA6IHJlbmRlck5vZGUpO1xuICAgICAgfVxuICAgIH0gZWxzZSBpZiAoaXNCbGFuayhwYXJlbnQucmVuZGVyTm9kZSkpIHtcbiAgICAgIHRoaXMucm9vdE5vZGVzT3JBcHBFbGVtZW50cy5wdXNoKGlzUHJlc2VudChhcHBFbCkgPyBhcHBFbCA6IHJlbmRlck5vZGUpO1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgX2dldFBhcmVudFJlbmRlck5vZGUobmdDb250ZW50SW5kZXg6IG51bWJlcixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXJlbnQ6IFBhcmVudEVsZW1lbnQ8RVhQUkVTU0lPTj4pOiBFWFBSRVNTSU9OIHtcbiAgICByZXR1cm4gaXNQcmVzZW50KHBhcmVudC5jb21wb25lbnQpICYmXG4gICAgICAgICAgICAgICAgICAgcGFyZW50LmNvbXBvbmVudC50ZW1wbGF0ZS5lbmNhcHN1bGF0aW9uICE9PSBWaWV3RW5jYXBzdWxhdGlvbi5OYXRpdmUgP1xuICAgICAgICAgICAgICAgbnVsbCA6XG4gICAgICAgICAgICAgICBwYXJlbnQucmVuZGVyTm9kZTtcbiAgfVxuXG4gIHZpc2l0Qm91bmRUZXh0KGFzdDogQm91bmRUZXh0QXN0LCBwYXJlbnQ6IFBhcmVudEVsZW1lbnQ8RVhQUkVTU0lPTj4pOiBhbnkge1xuICAgIHJldHVybiB0aGlzLl92aXNpdFRleHQoJycsIGFzdC5uZ0NvbnRlbnRJbmRleCwgcGFyZW50KTtcbiAgfVxuICB2aXNpdFRleHQoYXN0OiBUZXh0QXN0LCBwYXJlbnQ6IFBhcmVudEVsZW1lbnQ8RVhQUkVTU0lPTj4pOiBhbnkge1xuICAgIHJldHVybiB0aGlzLl92aXNpdFRleHQoYXN0LnZhbHVlLCBhc3QubmdDb250ZW50SW5kZXgsIHBhcmVudCk7XG4gIH1cbiAgcHJpdmF0ZSBfdmlzaXRUZXh0KHZhbHVlOiBzdHJpbmcsIG5nQ29udGVudEluZGV4OiBudW1iZXIsIHBhcmVudDogUGFyZW50RWxlbWVudDxFWFBSRVNTSU9OPikge1xuICAgIHZhciByZW5kZXJOb2RlID0gdGhpcy5mYWN0b3J5LmNyZWF0ZVRleHQoXG4gICAgICAgIHRoaXMucmVuZGVyZXIsIHRoaXMuX2dldFBhcmVudFJlbmRlck5vZGUobmdDb250ZW50SW5kZXgsIHBhcmVudCksIHZhbHVlLCB0aGlzLnJlbmRlclN0bXRzKTtcbiAgICB0aGlzLl9hZGRSZW5kZXJOb2RlKHJlbmRlck5vZGUsIG51bGwsIG5nQ29udGVudEluZGV4LCBwYXJlbnQpO1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgdmlzaXROZ0NvbnRlbnQoYXN0OiBOZ0NvbnRlbnRBc3QsIHBhcmVudDogUGFyZW50RWxlbWVudDxFWFBSRVNTSU9OPik6IGFueSB7XG4gICAgdmFyIG5vZGVzRXhwcmVzc2lvbiA9IHRoaXMuZmFjdG9yeS5nZXRQcm9qZWN0ZWROb2Rlcyh0aGlzLnByb2plY3RhYmxlTm9kZXMsIGFzdC5pbmRleCk7XG4gICAgaWYgKGlzUHJlc2VudChwYXJlbnQuY29tcG9uZW50KSkge1xuICAgICAgaWYgKGlzUHJlc2VudChhc3QubmdDb250ZW50SW5kZXgpKSB7XG4gICAgICAgIHBhcmVudC5hZGRDb250ZW50Tm9kZShhc3QubmdDb250ZW50SW5kZXgsIG5vZGVzRXhwcmVzc2lvbik7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChpc1ByZXNlbnQocGFyZW50LnJlbmRlck5vZGUpKSB7XG4gICAgICAgIHRoaXMuZmFjdG9yeS5hcHBlbmRQcm9qZWN0ZWROb2Rlcyh0aGlzLnJlbmRlcmVyLCBwYXJlbnQucmVuZGVyTm9kZSwgbm9kZXNFeHByZXNzaW9uLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5yZW5kZXJTdG10cyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLnJvb3ROb2Rlc09yQXBwRWxlbWVudHMucHVzaChub2Rlc0V4cHJlc3Npb24pO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIHZpc2l0RWxlbWVudChhc3Q6IEVsZW1lbnRBc3QsIHBhcmVudDogUGFyZW50RWxlbWVudDxFWFBSRVNTSU9OPik6IGFueSB7XG4gICAgdmFyIHJlbmRlck5vZGUgPSB0aGlzLmZhY3RvcnkuY3JlYXRlRWxlbWVudChcbiAgICAgICAgdGhpcy5yZW5kZXJlciwgdGhpcy5fZ2V0UGFyZW50UmVuZGVyTm9kZShhc3QubmdDb250ZW50SW5kZXgsIHBhcmVudCksIGFzdC5uYW1lLFxuICAgICAgICB0aGlzLnJvb3RTZWxlY3RvciwgdGhpcy5yZW5kZXJTdG10cyk7XG5cbiAgICB2YXIgY29tcG9uZW50ID0gYXN0LmdldENvbXBvbmVudCgpO1xuICAgIHZhciBlbGVtZW50SW5kZXggPSB0aGlzLmVsZW1lbnRDb3VudCsrO1xuICAgIHZhciBwcm90b0VsID0gdGhpcy5wcm90b1ZpZXcucHJvdG9FbGVtZW50c1tlbGVtZW50SW5kZXhdO1xuXG4gICAgcHJvdG9FbC5yZW5kZXJFdmVudHMuZm9yRWFjaCgoZXZlbnRBc3QpID0+IHtcbiAgICAgIHZhciBkaXNwb3NhYmxlO1xuICAgICAgaWYgKGlzUHJlc2VudChldmVudEFzdC50YXJnZXQpKSB7XG4gICAgICAgIGRpc3Bvc2FibGUgPSB0aGlzLmZhY3RvcnkuY3JlYXRlR2xvYmFsRXZlbnRMaXN0ZW5lcihcbiAgICAgICAgICAgIHRoaXMucmVuZGVyZXIsIHRoaXMudmlldywgcHJvdG9FbC5ib3VuZEVsZW1lbnRJbmRleCwgZXZlbnRBc3QsIHRoaXMucmVuZGVyU3RtdHMpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZGlzcG9zYWJsZSA9IHRoaXMuZmFjdG9yeS5jcmVhdGVFbGVtZW50RXZlbnRMaXN0ZW5lcih0aGlzLnJlbmRlcmVyLCB0aGlzLnZpZXcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvdG9FbC5ib3VuZEVsZW1lbnRJbmRleCwgcmVuZGVyTm9kZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBldmVudEFzdCwgdGhpcy5yZW5kZXJTdG10cyk7XG4gICAgICB9XG4gICAgICB0aGlzLmFwcERpc3Bvc2FibGVzLnB1c2goZGlzcG9zYWJsZSk7XG4gICAgfSk7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm90b0VsLmF0dHJOYW1lQW5kVmFsdWVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgYXR0ck5hbWUgPSBwcm90b0VsLmF0dHJOYW1lQW5kVmFsdWVzW2ldWzBdO1xuICAgICAgdmFyIGF0dHJWYWx1ZSA9IHByb3RvRWwuYXR0ck5hbWVBbmRWYWx1ZXNbaV1bMV07XG4gICAgICB0aGlzLmZhY3Rvcnkuc2V0RWxlbWVudEF0dHJpYnV0ZSh0aGlzLnJlbmRlcmVyLCByZW5kZXJOb2RlLCBhdHRyTmFtZSwgYXR0clZhbHVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5yZW5kZXJTdG10cyk7XG4gICAgfVxuICAgIHZhciBhcHBFbCA9IG51bGw7XG4gICAgaWYgKGlzUHJlc2VudChwcm90b0VsLmFwcFByb3RvRWwpKSB7XG4gICAgICBhcHBFbCA9IHRoaXMuZmFjdG9yeS5jcmVhdGVBcHBFbGVtZW50KHByb3RvRWwuYXBwUHJvdG9FbCwgdGhpcy52aWV3LCByZW5kZXJOb2RlLCBwYXJlbnQuYXBwRWwsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG51bGwsIHRoaXMuYXBwU3RtdHMpO1xuICAgICAgdGhpcy5hcHBFbGVtZW50cy5wdXNoKGFwcEVsKTtcbiAgICB9XG4gICAgdGhpcy5fYWRkUmVuZGVyTm9kZShyZW5kZXJOb2RlLCBhcHBFbCwgYXN0Lm5nQ29udGVudEluZGV4LCBwYXJlbnQpO1xuXG4gICAgdmFyIG5ld1BhcmVudCA9IG5ldyBQYXJlbnRFbGVtZW50PEVYUFJFU1NJT04+KFxuICAgICAgICByZW5kZXJOb2RlLCBpc1ByZXNlbnQoYXBwRWwpID8gYXBwRWwgOiBwYXJlbnQuYXBwRWwsIGNvbXBvbmVudCk7XG4gICAgdGVtcGxhdGVWaXNpdEFsbCh0aGlzLCBhc3QuY2hpbGRyZW4sIG5ld1BhcmVudCk7XG4gICAgaWYgKGlzUHJlc2VudChhcHBFbCkgJiYgaXNQcmVzZW50KGNvbXBvbmVudCkpIHtcbiAgICAgIHRoaXMuZmFjdG9yeS5jcmVhdGVBbmRTZXRDb21wb25lbnRWaWV3KHRoaXMucmVuZGVyZXIsIHRoaXMudmlld01hbmFnZXIsIHRoaXMudmlldywgYXBwRWwsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb21wb25lbnQsIG5ld1BhcmVudC5jb250ZW50Tm9kZXNCeU5nQ29udGVudEluZGV4LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5hcHBTdG10cyk7XG4gICAgfVxuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgdmlzaXRFbWJlZGRlZFRlbXBsYXRlKGFzdDogRW1iZWRkZWRUZW1wbGF0ZUFzdCwgcGFyZW50OiBQYXJlbnRFbGVtZW50PEVYUFJFU1NJT04+KTogYW55IHtcbiAgICB2YXIgcmVuZGVyTm9kZSA9IHRoaXMuZmFjdG9yeS5jcmVhdGVUZW1wbGF0ZUFuY2hvcihcbiAgICAgICAgdGhpcy5yZW5kZXJlciwgdGhpcy5fZ2V0UGFyZW50UmVuZGVyTm9kZShhc3QubmdDb250ZW50SW5kZXgsIHBhcmVudCksIHRoaXMucmVuZGVyU3RtdHMpO1xuXG4gICAgdmFyIGVsZW1lbnRJbmRleCA9IHRoaXMuZWxlbWVudENvdW50Kys7XG4gICAgdmFyIHByb3RvRWwgPSB0aGlzLnByb3RvVmlldy5wcm90b0VsZW1lbnRzW2VsZW1lbnRJbmRleF07XG4gICAgdmFyIGVtYmVkZGVkVmlld0ZhY3RvcnkgPSB0aGlzLmZhY3RvcnkuY3JlYXRlVmlld0ZhY3RvcnkoXG4gICAgICAgIGFzdC5jaGlsZHJlbiwgcHJvdG9FbC5lbWJlZGRlZFRlbXBsYXRlSW5kZXgsIHRoaXMudGFyZ2V0U3RhdGVtZW50cyk7XG5cbiAgICB2YXIgYXBwRWwgPSB0aGlzLmZhY3RvcnkuY3JlYXRlQXBwRWxlbWVudChwcm90b0VsLmFwcFByb3RvRWwsIHRoaXMudmlldywgcmVuZGVyTm9kZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXJlbnQuYXBwRWwsIGVtYmVkZGVkVmlld0ZhY3RvcnksIHRoaXMuYXBwU3RtdHMpO1xuICAgIHRoaXMuX2FkZFJlbmRlck5vZGUocmVuZGVyTm9kZSwgYXBwRWwsIGFzdC5uZ0NvbnRlbnRJbmRleCwgcGFyZW50KTtcbiAgICB0aGlzLmFwcEVsZW1lbnRzLnB1c2goYXBwRWwpO1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgdmlzaXRWYXJpYWJsZShhc3Q6IFZhcmlhYmxlQXN0LCBjdHg6IGFueSk6IGFueSB7IHJldHVybiBudWxsOyB9XG4gIHZpc2l0QXR0cihhc3Q6IEF0dHJBc3QsIGN0eDogYW55KTogYW55IHsgcmV0dXJuIG51bGw7IH1cbiAgdmlzaXREaXJlY3RpdmUoYXN0OiBEaXJlY3RpdmVBc3QsIGN0eDogYW55KTogYW55IHsgcmV0dXJuIG51bGw7IH1cbiAgdmlzaXRFdmVudChhc3Q6IEJvdW5kRXZlbnRBc3QsIGN0eDogYW55KTogYW55IHsgcmV0dXJuIG51bGw7IH1cbiAgdmlzaXREaXJlY3RpdmVQcm9wZXJ0eShhc3Q6IEJvdW5kRGlyZWN0aXZlUHJvcGVydHlBc3QsIGNvbnRleHQ6IGFueSk6IGFueSB7IHJldHVybiBudWxsOyB9XG4gIHZpc2l0RWxlbWVudFByb3BlcnR5KGFzdDogQm91bmRFbGVtZW50UHJvcGVydHlBc3QsIGNvbnRleHQ6IGFueSk6IGFueSB7IHJldHVybiBudWxsOyB9XG59XG5cblxuZnVuY3Rpb24gY29kZUdlbkV2ZW50SGFuZGxlcih2aWV3OiBFeHByZXNzaW9uLCBib3VuZEVsZW1lbnRJbmRleDogbnVtYmVyLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICBldmVudE5hbWU6IHN0cmluZyk6IHN0cmluZyB7XG4gIHJldHVybiBjb2RlR2VuVmFsdWVGbihcbiAgICAgIFsnZXZlbnQnXSxcbiAgICAgIGAke3ZpZXcuZXhwcmVzc2lvbn0udHJpZ2dlckV2ZW50SGFuZGxlcnMoJHtlc2NhcGVWYWx1ZShldmVudE5hbWUpfSwgZXZlbnQsICR7Ym91bmRFbGVtZW50SW5kZXh9KWApO1xufVxuXG5mdW5jdGlvbiBjb2RlR2VuVmlld0ZhY3RvcnlOYW1lKGNvbXBvbmVudDogQ29tcGlsZURpcmVjdGl2ZU1ldGFkYXRhLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbWJlZGRlZFRlbXBsYXRlSW5kZXg6IG51bWJlcik6IHN0cmluZyB7XG4gIHJldHVybiBgdmlld0ZhY3RvcnlfJHtjb21wb25lbnQudHlwZS5uYW1lfSR7ZW1iZWRkZWRUZW1wbGF0ZUluZGV4fWA7XG59XG5cbmZ1bmN0aW9uIGNvZGVHZW5WaWV3RW5jYXBzdWxhdGlvbih2YWx1ZTogVmlld0VuY2Fwc3VsYXRpb24pOiBzdHJpbmcge1xuICBpZiAoSVNfREFSVCkge1xuICAgIHJldHVybiBgJHtNRVRBREFUQV9NT0RVTEVfUkVGfSR7dmFsdWV9YDtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gYCR7dmFsdWV9YDtcbiAgfVxufVxuIl19\n\n/***/ },\n\n/***/ 172:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';var lang_1 = __webpack_require__(1);\r\n\texports.Math = lang_1.global.Math;\r\n\texports.NaN = typeof exports.NaN;\r\n\t//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWF0aC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImFuZ3VsYXIyL3NyYy9mYWNhZGUvbWF0aC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxxQkFBcUIsMEJBQTBCLENBQUMsQ0FBQTtBQUVyQyxZQUFJLEdBQUcsYUFBTSxDQUFDLElBQUksQ0FBQztBQUNuQixXQUFHLEdBQUcsT0FBTyxXQUFHLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2dsb2JhbH0gZnJvbSAnYW5ndWxhcjIvc3JjL2ZhY2FkZS9sYW5nJztcblxuZXhwb3J0IHZhciBNYXRoID0gZ2xvYmFsLk1hdGg7XG5leHBvcnQgdmFyIE5hTiA9IHR5cGVvZiBOYU47XG4iXX0=\n\n/***/ },\n\n/***/ 173:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';var __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar collection_1 = __webpack_require__(3);\r\n\tvar lang_1 = __webpack_require__(1);\r\n\tvar dom_adapter_1 = __webpack_require__(11);\r\n\tvar generic_browser_adapter_1 = __webpack_require__(237);\r\n\tvar _attrToPropMap = {\r\n\t    'class': 'className',\r\n\t    'innerHtml': 'innerHTML',\r\n\t    'readonly': 'readOnly',\r\n\t    'tabindex': 'tabIndex'\r\n\t};\r\n\tvar DOM_KEY_LOCATION_NUMPAD = 3;\r\n\t// Map to convert some key or keyIdentifier values to what will be returned by getEventKey\r\n\tvar _keyMap = {\r\n\t    // The following values are here for cross-browser compatibility and to match the W3C standard\r\n\t    // cf http://www.w3.org/TR/DOM-Level-3-Events-key/\r\n\t    '\\b': 'Backspace',\r\n\t    '\\t': 'Tab',\r\n\t    '\\x7F': 'Delete',\r\n\t    '\\x1B': 'Escape',\r\n\t    'Del': 'Delete',\r\n\t    'Esc': 'Escape',\r\n\t    'Left': 'ArrowLeft',\r\n\t    'Right': 'ArrowRight',\r\n\t    'Up': 'ArrowUp',\r\n\t    'Down': 'ArrowDown',\r\n\t    'Menu': 'ContextMenu',\r\n\t    'Scroll': 'ScrollLock',\r\n\t    'Win': 'OS'\r\n\t};\r\n\t// There is a bug in Chrome for numeric keypad keys:\r\n\t// https://code.google.com/p/chromium/issues/detail?id=155654\r\n\t// 1, 2, 3 ... are reported as A, B, C ...\r\n\tvar _chromeNumKeyPadMap = {\r\n\t    'A': '1',\r\n\t    'B': '2',\r\n\t    'C': '3',\r\n\t    'D': '4',\r\n\t    'E': '5',\r\n\t    'F': '6',\r\n\t    'G': '7',\r\n\t    'H': '8',\r\n\t    'I': '9',\r\n\t    'J': '*',\r\n\t    'K': '+',\r\n\t    'M': '-',\r\n\t    'N': '.',\r\n\t    'O': '/',\r\n\t    '\\x60': '0',\r\n\t    '\\x90': 'NumLock'\r\n\t};\r\n\t/**\r\n\t * A `DomAdapter` powered by full browser DOM APIs.\r\n\t */\r\n\t/* tslint:disable:requireParameterType */\r\n\tvar BrowserDomAdapter = (function (_super) {\r\n\t    __extends(BrowserDomAdapter, _super);\r\n\t    function BrowserDomAdapter() {\r\n\t        _super.apply(this, arguments);\r\n\t    }\r\n\t    BrowserDomAdapter.prototype.parse = function (templateHtml) { throw new Error(\"parse not implemented\"); };\r\n\t    BrowserDomAdapter.makeCurrent = function () { dom_adapter_1.setRootDomAdapter(new BrowserDomAdapter()); };\r\n\t    BrowserDomAdapter.prototype.hasProperty = function (element, name) { return name in element; };\r\n\t    BrowserDomAdapter.prototype.setProperty = function (el, name, value) { el[name] = value; };\r\n\t    BrowserDomAdapter.prototype.getProperty = function (el, name) { return el[name]; };\r\n\t    BrowserDomAdapter.prototype.invoke = function (el, methodName, args) {\r\n\t        el[methodName].apply(el, args);\r\n\t    };\r\n\t    // TODO(tbosch): move this into a separate environment class once we have it\r\n\t    BrowserDomAdapter.prototype.logError = function (error) {\r\n\t        if (window.console.error) {\r\n\t            window.console.error(error);\r\n\t        }\r\n\t        else {\r\n\t            window.console.log(error);\r\n\t        }\r\n\t    };\r\n\t    BrowserDomAdapter.prototype.log = function (error) { window.console.log(error); };\r\n\t    BrowserDomAdapter.prototype.logGroup = function (error) {\r\n\t        if (window.console.group) {\r\n\t            window.console.group(error);\r\n\t            this.logError(error);\r\n\t        }\r\n\t        else {\r\n\t            window.console.log(error);\r\n\t        }\r\n\t    };\r\n\t    BrowserDomAdapter.prototype.logGroupEnd = function () {\r\n\t        if (window.console.groupEnd) {\r\n\t            window.console.groupEnd();\r\n\t        }\r\n\t    };\r\n\t    Object.defineProperty(BrowserDomAdapter.prototype, \"attrToPropMap\", {\r\n\t        get: function () { return _attrToPropMap; },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    BrowserDomAdapter.prototype.query = function (selector) { return document.querySelector(selector); };\r\n\t    BrowserDomAdapter.prototype.querySelector = function (el, selector) { return el.querySelector(selector); };\r\n\t    BrowserDomAdapter.prototype.querySelectorAll = function (el, selector) { return el.querySelectorAll(selector); };\r\n\t    BrowserDomAdapter.prototype.on = function (el, evt, listener) { el.addEventListener(evt, listener, false); };\r\n\t    BrowserDomAdapter.prototype.onAndCancel = function (el, evt, listener) {\r\n\t        el.addEventListener(evt, listener, false);\r\n\t        // Needed to follow Dart's subscription semantic, until fix of\r\n\t        // https://code.google.com/p/dart/issues/detail?id=17406\r\n\t        return function () { el.removeEventListener(evt, listener, false); };\r\n\t    };\r\n\t    BrowserDomAdapter.prototype.dispatchEvent = function (el, evt) { el.dispatchEvent(evt); };\r\n\t    BrowserDomAdapter.prototype.createMouseEvent = function (eventType) {\r\n\t        var evt = document.createEvent('MouseEvent');\r\n\t        evt.initEvent(eventType, true, true);\r\n\t        return evt;\r\n\t    };\r\n\t    BrowserDomAdapter.prototype.createEvent = function (eventType) {\r\n\t        var evt = document.createEvent('Event');\r\n\t        evt.initEvent(eventType, true, true);\r\n\t        return evt;\r\n\t    };\r\n\t    BrowserDomAdapter.prototype.preventDefault = function (evt) {\r\n\t        evt.preventDefault();\r\n\t        evt.returnValue = false;\r\n\t    };\r\n\t    BrowserDomAdapter.prototype.isPrevented = function (evt) {\r\n\t        return evt.defaultPrevented || lang_1.isPresent(evt.returnValue) && !evt.returnValue;\r\n\t    };\r\n\t    BrowserDomAdapter.prototype.getInnerHTML = function (el) { return el.innerHTML; };\r\n\t    BrowserDomAdapter.prototype.getOuterHTML = function (el) { return el.outerHTML; };\r\n\t    BrowserDomAdapter.prototype.nodeName = function (node) { return node.nodeName; };\r\n\t    BrowserDomAdapter.prototype.nodeValue = function (node) { return node.nodeValue; };\r\n\t    BrowserDomAdapter.prototype.type = function (node) { return node.type; };\r\n\t    BrowserDomAdapter.prototype.content = function (node) {\r\n\t        if (this.hasProperty(node, \"content\")) {\r\n\t            return node.content;\r\n\t        }\r\n\t        else {\r\n\t            return node;\r\n\t        }\r\n\t    };\r\n\t    BrowserDomAdapter.prototype.firstChild = function (el) { return el.firstChild; };\r\n\t    BrowserDomAdapter.prototype.nextSibling = function (el) { return el.nextSibling; };\r\n\t    BrowserDomAdapter.prototype.parentElement = function (el) { return el.parentNode; };\r\n\t    BrowserDomAdapter.prototype.childNodes = function (el) { return el.childNodes; };\r\n\t    BrowserDomAdapter.prototype.childNodesAsList = function (el) {\r\n\t        var childNodes = el.childNodes;\r\n\t        var res = collection_1.ListWrapper.createFixedSize(childNodes.length);\r\n\t        for (var i = 0; i < childNodes.length; i++) {\r\n\t            res[i] = childNodes[i];\r\n\t        }\r\n\t        return res;\r\n\t    };\r\n\t    BrowserDomAdapter.prototype.clearNodes = function (el) {\r\n\t        while (el.firstChild) {\r\n\t            el.removeChild(el.firstChild);\r\n\t        }\r\n\t    };\r\n\t    BrowserDomAdapter.prototype.appendChild = function (el, node) { el.appendChild(node); };\r\n\t    BrowserDomAdapter.prototype.removeChild = function (el, node) { el.removeChild(node); };\r\n\t    BrowserDomAdapter.prototype.replaceChild = function (el, newChild, oldChild) { el.replaceChild(newChild, oldChild); };\r\n\t    BrowserDomAdapter.prototype.remove = function (node) {\r\n\t        if (node.parentNode) {\r\n\t            node.parentNode.removeChild(node);\r\n\t        }\r\n\t        return node;\r\n\t    };\r\n\t    BrowserDomAdapter.prototype.insertBefore = function (el, node) { el.parentNode.insertBefore(node, el); };\r\n\t    BrowserDomAdapter.prototype.insertAllBefore = function (el, nodes) { nodes.forEach(function (n) { return el.parentNode.insertBefore(n, el); }); };\r\n\t    BrowserDomAdapter.prototype.insertAfter = function (el, node) { el.parentNode.insertBefore(node, el.nextSibling); };\r\n\t    BrowserDomAdapter.prototype.setInnerHTML = function (el, value) { el.innerHTML = value; };\r\n\t    BrowserDomAdapter.prototype.getText = function (el) { return el.textContent; };\r\n\t    // TODO(vicb): removed Element type because it does not support StyleElement\r\n\t    BrowserDomAdapter.prototype.setText = function (el, value) { el.textContent = value; };\r\n\t    BrowserDomAdapter.prototype.getValue = function (el) { return el.value; };\r\n\t    BrowserDomAdapter.prototype.setValue = function (el, value) { el.value = value; };\r\n\t    BrowserDomAdapter.prototype.getChecked = function (el) { return el.checked; };\r\n\t    BrowserDomAdapter.prototype.setChecked = function (el, value) { el.checked = value; };\r\n\t    BrowserDomAdapter.prototype.createComment = function (text) { return document.createComment(text); };\r\n\t    BrowserDomAdapter.prototype.createTemplate = function (html) {\r\n\t        var t = document.createElement('template');\r\n\t        t.innerHTML = html;\r\n\t        return t;\r\n\t    };\r\n\t    BrowserDomAdapter.prototype.createElement = function (tagName, doc) {\r\n\t        if (doc === void 0) { doc = document; }\r\n\t        return doc.createElement(tagName);\r\n\t    };\r\n\t    BrowserDomAdapter.prototype.createElementNS = function (ns, tagName, doc) {\r\n\t        if (doc === void 0) { doc = document; }\r\n\t        return doc.createElementNS(ns, tagName);\r\n\t    };\r\n\t    BrowserDomAdapter.prototype.createTextNode = function (text, doc) {\r\n\t        if (doc === void 0) { doc = document; }\r\n\t        return doc.createTextNode(text);\r\n\t    };\r\n\t    BrowserDomAdapter.prototype.createScriptTag = function (attrName, attrValue, doc) {\r\n\t        if (doc === void 0) { doc = document; }\r\n\t        var el = doc.createElement('SCRIPT');\r\n\t        el.setAttribute(attrName, attrValue);\r\n\t        return el;\r\n\t    };\r\n\t    BrowserDomAdapter.prototype.createStyleElement = function (css, doc) {\r\n\t        if (doc === void 0) { doc = document; }\r\n\t        var style = doc.createElement('style');\r\n\t        this.appendChild(style, this.createTextNode(css));\r\n\t        return style;\r\n\t    };\r\n\t    BrowserDomAdapter.prototype.createShadowRoot = function (el) { return el.createShadowRoot(); };\r\n\t    BrowserDomAdapter.prototype.getShadowRoot = function (el) { return el.shadowRoot; };\r\n\t    BrowserDomAdapter.prototype.getHost = function (el) { return el.host; };\r\n\t    BrowserDomAdapter.prototype.clone = function (node) { return node.cloneNode(true); };\r\n\t    BrowserDomAdapter.prototype.getElementsByClassName = function (element, name) {\r\n\t        return element.getElementsByClassName(name);\r\n\t    };\r\n\t    BrowserDomAdapter.prototype.getElementsByTagName = function (element, name) {\r\n\t        return element.getElementsByTagName(name);\r\n\t    };\r\n\t    BrowserDomAdapter.prototype.classList = function (element) { return Array.prototype.slice.call(element.classList, 0); };\r\n\t    BrowserDomAdapter.prototype.addClass = function (element, className) { element.classList.add(className); };\r\n\t    BrowserDomAdapter.prototype.removeClass = function (element, className) { element.classList.remove(className); };\r\n\t    BrowserDomAdapter.prototype.hasClass = function (element, className) { return element.classList.contains(className); };\r\n\t    BrowserDomAdapter.prototype.setStyle = function (element, styleName, styleValue) {\r\n\t        element.style[styleName] = styleValue;\r\n\t    };\r\n\t    BrowserDomAdapter.prototype.removeStyle = function (element, stylename) { element.style[stylename] = null; };\r\n\t    BrowserDomAdapter.prototype.getStyle = function (element, stylename) { return element.style[stylename]; };\r\n\t    BrowserDomAdapter.prototype.hasStyle = function (element, styleName, styleValue) {\r\n\t        if (styleValue === void 0) { styleValue = null; }\r\n\t        var value = this.getStyle(element, styleName) || '';\r\n\t        return styleValue ? value == styleValue : value.length > 0;\r\n\t    };\r\n\t    BrowserDomAdapter.prototype.tagName = function (element) { return element.tagName; };\r\n\t    BrowserDomAdapter.prototype.attributeMap = function (element) {\r\n\t        var res = new Map();\r\n\t        var elAttrs = element.attributes;\r\n\t        for (var i = 0; i < elAttrs.length; i++) {\r\n\t            var attrib = elAttrs[i];\r\n\t            res.set(attrib.name, attrib.value);\r\n\t        }\r\n\t        return res;\r\n\t    };\r\n\t    BrowserDomAdapter.prototype.hasAttribute = function (element, attribute) { return element.hasAttribute(attribute); };\r\n\t    BrowserDomAdapter.prototype.getAttribute = function (element, attribute) { return element.getAttribute(attribute); };\r\n\t    BrowserDomAdapter.prototype.setAttribute = function (element, name, value) { element.setAttribute(name, value); };\r\n\t    BrowserDomAdapter.prototype.setAttributeNS = function (element, ns, name, value) {\r\n\t        element.setAttributeNS(ns, name, value);\r\n\t    };\r\n\t    BrowserDomAdapter.prototype.removeAttribute = function (element, attribute) { element.removeAttribute(attribute); };\r\n\t    BrowserDomAdapter.prototype.templateAwareRoot = function (el) { return this.isTemplateElement(el) ? this.content(el) : el; };\r\n\t    BrowserDomAdapter.prototype.createHtmlDocument = function () {\r\n\t        return document.implementation.createHTMLDocument('fakeTitle');\r\n\t    };\r\n\t    BrowserDomAdapter.prototype.defaultDoc = function () { return document; };\r\n\t    BrowserDomAdapter.prototype.getBoundingClientRect = function (el) {\r\n\t        try {\r\n\t            return el.getBoundingClientRect();\r\n\t        }\r\n\t        catch (e) {\r\n\t            return { top: 0, bottom: 0, left: 0, right: 0, width: 0, height: 0 };\r\n\t        }\r\n\t    };\r\n\t    BrowserDomAdapter.prototype.getTitle = function () { return document.title; };\r\n\t    BrowserDomAdapter.prototype.setTitle = function (newTitle) { document.title = newTitle || ''; };\r\n\t    BrowserDomAdapter.prototype.elementMatches = function (n, selector) {\r\n\t        var matches = false;\r\n\t        if (n instanceof HTMLElement) {\r\n\t            if (n.matches) {\r\n\t                matches = n.matches(selector);\r\n\t            }\r\n\t            else if (n.msMatchesSelector) {\r\n\t                matches = n.msMatchesSelector(selector);\r\n\t            }\r\n\t            else if (n.webkitMatchesSelector) {\r\n\t                matches = n.webkitMatchesSelector(selector);\r\n\t            }\r\n\t        }\r\n\t        return matches;\r\n\t    };\r\n\t    BrowserDomAdapter.prototype.isTemplateElement = function (el) {\r\n\t        return el instanceof HTMLElement && el.nodeName == \"TEMPLATE\";\r\n\t    };\r\n\t    BrowserDomAdapter.prototype.isTextNode = function (node) { return node.nodeType === Node.TEXT_NODE; };\r\n\t    BrowserDomAdapter.prototype.isCommentNode = function (node) { return node.nodeType === Node.COMMENT_NODE; };\r\n\t    BrowserDomAdapter.prototype.isElementNode = function (node) { return node.nodeType === Node.ELEMENT_NODE; };\r\n\t    BrowserDomAdapter.prototype.hasShadowRoot = function (node) { return node instanceof HTMLElement && lang_1.isPresent(node.shadowRoot); };\r\n\t    BrowserDomAdapter.prototype.isShadowRoot = function (node) { return node instanceof DocumentFragment; };\r\n\t    BrowserDomAdapter.prototype.importIntoDoc = function (node) {\r\n\t        var toImport = node;\r\n\t        if (this.isTemplateElement(node)) {\r\n\t            toImport = this.content(node);\r\n\t        }\r\n\t        return document.importNode(toImport, true);\r\n\t    };\r\n\t    BrowserDomAdapter.prototype.adoptNode = function (node) { return document.adoptNode(node); };\r\n\t    BrowserDomAdapter.prototype.getHref = function (el) { return el.href; };\r\n\t    BrowserDomAdapter.prototype.getEventKey = function (event) {\r\n\t        var key = event.key;\r\n\t        if (lang_1.isBlank(key)) {\r\n\t            key = event.keyIdentifier;\r\n\t            // keyIdentifier is defined in the old draft of DOM Level 3 Events implemented by Chrome and\r\n\t            // Safari\r\n\t            // cf\r\n\t            // http://www.w3.org/TR/2007/WD-DOM-Level-3-Events-20071221/events.html#Events-KeyboardEvents-Interfaces\r\n\t            if (lang_1.isBlank(key)) {\r\n\t                return 'Unidentified';\r\n\t            }\r\n\t            if (key.startsWith('U+')) {\r\n\t                key = String.fromCharCode(parseInt(key.substring(2), 16));\r\n\t                if (event.location === DOM_KEY_LOCATION_NUMPAD && _chromeNumKeyPadMap.hasOwnProperty(key)) {\r\n\t                    // There is a bug in Chrome for numeric keypad keys:\r\n\t                    // https://code.google.com/p/chromium/issues/detail?id=155654\r\n\t                    // 1, 2, 3 ... are reported as A, B, C ...\r\n\t                    key = _chromeNumKeyPadMap[key];\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        if (_keyMap.hasOwnProperty(key)) {\r\n\t            key = _keyMap[key];\r\n\t        }\r\n\t        return key;\r\n\t    };\r\n\t    BrowserDomAdapter.prototype.getGlobalEventTarget = function (target) {\r\n\t        if (target == \"window\") {\r\n\t            return window;\r\n\t        }\r\n\t        else if (target == \"document\") {\r\n\t            return document;\r\n\t        }\r\n\t        else if (target == \"body\") {\r\n\t            return document.body;\r\n\t        }\r\n\t    };\r\n\t    BrowserDomAdapter.prototype.getHistory = function () { return window.history; };\r\n\t    BrowserDomAdapter.prototype.getLocation = function () { return window.location; };\r\n\t    BrowserDomAdapter.prototype.getBaseHref = function () {\r\n\t        var href = getBaseElementHref();\r\n\t        if (lang_1.isBlank(href)) {\r\n\t            return null;\r\n\t        }\r\n\t        return relativePath(href);\r\n\t    };\r\n\t    BrowserDomAdapter.prototype.resetBaseElement = function () { baseElement = null; };\r\n\t    BrowserDomAdapter.prototype.getUserAgent = function () { return window.navigator.userAgent; };\r\n\t    BrowserDomAdapter.prototype.setData = function (element, name, value) {\r\n\t        this.setAttribute(element, 'data-' + name, value);\r\n\t    };\r\n\t    BrowserDomAdapter.prototype.getData = function (element, name) { return this.getAttribute(element, 'data-' + name); };\r\n\t    BrowserDomAdapter.prototype.getComputedStyle = function (element) { return getComputedStyle(element); };\r\n\t    // TODO(tbosch): move this into a separate environment class once we have it\r\n\t    BrowserDomAdapter.prototype.setGlobalVar = function (path, value) { lang_1.setValueOnPath(lang_1.global, path, value); };\r\n\t    BrowserDomAdapter.prototype.requestAnimationFrame = function (callback) { return window.requestAnimationFrame(callback); };\r\n\t    BrowserDomAdapter.prototype.cancelAnimationFrame = function (id) { window.cancelAnimationFrame(id); };\r\n\t    BrowserDomAdapter.prototype.performanceNow = function () {\r\n\t        // performance.now() is not available in all browsers, see\r\n\t        // http://caniuse.com/#search=performance.now\r\n\t        if (lang_1.isPresent(window.performance) && lang_1.isPresent(window.performance.now)) {\r\n\t            return window.performance.now();\r\n\t        }\r\n\t        else {\r\n\t            return lang_1.DateWrapper.toMillis(lang_1.DateWrapper.now());\r\n\t        }\r\n\t    };\r\n\t    return BrowserDomAdapter;\r\n\t})(generic_browser_adapter_1.GenericBrowserDomAdapter);\r\n\texports.BrowserDomAdapter = BrowserDomAdapter;\r\n\tvar baseElement = null;\r\n\tfunction getBaseElementHref() {\r\n\t    if (lang_1.isBlank(baseElement)) {\r\n\t        baseElement = document.querySelector('base');\r\n\t        if (lang_1.isBlank(baseElement)) {\r\n\t            return null;\r\n\t        }\r\n\t    }\r\n\t    return baseElement.getAttribute('href');\r\n\t}\r\n\t// based on urlUtils.js in AngularJS 1\r\n\tvar urlParsingNode = null;\r\n\tfunction relativePath(url) {\r\n\t    if (lang_1.isBlank(urlParsingNode)) {\r\n\t        urlParsingNode = document.createElement(\"a\");\r\n\t    }\r\n\t    urlParsingNode.setAttribute('href', url);\r\n\t    return (urlParsingNode.pathname.charAt(0) === '/') ? urlParsingNode.pathname :\r\n\t        '/' + urlParsingNode.pathname;\r\n\t}\r\n\t//# sourceMappingURL=data:application/json;base64,\n\n/***/ },\n\n/***/ 174:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';var __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar promise_1 = __webpack_require__(71);\r\n\tvar lang_1 = __webpack_require__(1);\r\n\tvar xhr_1 = __webpack_require__(60);\r\n\tvar XHRImpl = (function (_super) {\r\n\t    __extends(XHRImpl, _super);\r\n\t    function XHRImpl() {\r\n\t        _super.apply(this, arguments);\r\n\t    }\r\n\t    XHRImpl.prototype.get = function (url) {\r\n\t        var completer = promise_1.PromiseWrapper.completer();\r\n\t        var xhr = new XMLHttpRequest();\r\n\t        xhr.open('GET', url, true);\r\n\t        xhr.responseType = 'text';\r\n\t        xhr.onload = function () {\r\n\t            // responseText is the old-school way of retrieving response (supported by IE8 & 9)\r\n\t            // response/responseType properties were introduced in XHR Level2 spec (supported by IE10)\r\n\t            var response = lang_1.isPresent(xhr.response) ? xhr.response : xhr.responseText;\r\n\t            // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\r\n\t            var status = xhr.status === 1223 ? 204 : xhr.status;\r\n\t            // fix status code when it is 0 (0 status is undocumented).\r\n\t            // Occurs when accessing file resources or on Android 4.1 stock browser\r\n\t            // while retrieving files from application cache.\r\n\t            if (status === 0) {\r\n\t                status = response ? 200 : 0;\r\n\t            }\r\n\t            if (200 <= status && status <= 300) {\r\n\t                completer.resolve(response);\r\n\t            }\r\n\t            else {\r\n\t                completer.reject(\"Failed to load \" + url, null);\r\n\t            }\r\n\t        };\r\n\t        xhr.onerror = function () { completer.reject(\"Failed to load \" + url, null); };\r\n\t        xhr.send();\r\n\t        return completer.promise;\r\n\t    };\r\n\t    return XHRImpl;\r\n\t})(xhr_1.XHR);\r\n\texports.XHRImpl = XHRImpl;\r\n\t//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoieGhyX2ltcGwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJhbmd1bGFyMi9zcmMvcGxhdGZvcm0vYnJvd3Nlci94aHJfaW1wbC50cyJdLCJuYW1lcyI6WyJYSFJJbXBsIiwiWEhSSW1wbC5jb25zdHJ1Y3RvciIsIlhIUkltcGwuZ2V0Il0sIm1hcHBpbmdzIjoiOzs7OztBQUFBLHdCQUF3RCw2QkFBNkIsQ0FBQyxDQUFBO0FBQ3RGLHFCQUF3QiwwQkFBMEIsQ0FBQyxDQUFBO0FBQ25ELG9CQUFrQiwyQkFBMkIsQ0FBQyxDQUFBO0FBRTlDO0lBQTZCQSwyQkFBR0E7SUFBaENBO1FBQTZCQyw4QkFBR0E7SUFrQ2hDQSxDQUFDQTtJQWpDQ0QscUJBQUdBLEdBQUhBLFVBQUlBLEdBQVdBO1FBQ2JFLElBQUlBLFNBQVNBLEdBQStCQSx3QkFBY0EsQ0FBQ0EsU0FBU0EsRUFBRUEsQ0FBQ0E7UUFDdkVBLElBQUlBLEdBQUdBLEdBQUdBLElBQUlBLGNBQWNBLEVBQUVBLENBQUNBO1FBQy9CQSxHQUFHQSxDQUFDQSxJQUFJQSxDQUFDQSxLQUFLQSxFQUFFQSxHQUFHQSxFQUFFQSxJQUFJQSxDQUFDQSxDQUFDQTtRQUMzQkEsR0FBR0EsQ0FBQ0EsWUFBWUEsR0FBR0EsTUFBTUEsQ0FBQ0E7UUFFMUJBLEdBQUdBLENBQUNBLE1BQU1BLEdBQUdBO1lBQ1gsbUZBQW1GO1lBQ25GLDBGQUEwRjtZQUMxRixJQUFJLFFBQVEsR0FBRyxnQkFBUyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsR0FBRyxHQUFHLENBQUMsUUFBUSxHQUFHLEdBQUcsQ0FBQyxZQUFZLENBQUM7WUFFekUseURBQXlEO1lBQ3pELElBQUksTUFBTSxHQUFHLEdBQUcsQ0FBQyxNQUFNLEtBQUssSUFBSSxHQUFHLEdBQUcsR0FBRyxHQUFHLENBQUMsTUFBTSxDQUFDO1lBRXBELDJEQUEyRDtZQUMzRCx1RUFBdUU7WUFDdkUsaURBQWlEO1lBQ2pELEVBQUUsQ0FBQyxDQUFDLE1BQU0sS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUNqQixNQUFNLEdBQUcsUUFBUSxHQUFHLEdBQUcsR0FBRyxDQUFDLENBQUM7WUFDOUIsQ0FBQztZQUVELEVBQUUsQ0FBQyxDQUFDLEdBQUcsSUFBSSxNQUFNLElBQUksTUFBTSxJQUFJLEdBQUcsQ0FBQyxDQUFDLENBQUM7Z0JBQ25DLFNBQVMsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7WUFDOUIsQ0FBQztZQUFDLElBQUksQ0FBQyxDQUFDO2dCQUNOLFNBQVMsQ0FBQyxNQUFNLENBQUMsb0JBQWtCLEdBQUssRUFBRSxJQUFJLENBQUMsQ0FBQztZQUNsRCxDQUFDO1FBQ0gsQ0FBQyxDQUFDQTtRQUVGQSxHQUFHQSxDQUFDQSxPQUFPQSxHQUFHQSxjQUFhLFNBQVMsQ0FBQyxNQUFNLENBQUMsb0JBQWtCLEdBQUssRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQ0E7UUFFOUVBLEdBQUdBLENBQUNBLElBQUlBLEVBQUVBLENBQUNBO1FBQ1hBLE1BQU1BLENBQUNBLFNBQVNBLENBQUNBLE9BQU9BLENBQUNBO0lBQzNCQSxDQUFDQTtJQUNIRixjQUFDQTtBQUFEQSxDQUFDQSxBQWxDRCxFQUE2QixTQUFHLEVBa0MvQjtBQWxDWSxlQUFPLFVBa0NuQixDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtQcm9taXNlLCBQcm9taXNlV3JhcHBlciwgUHJvbWlzZUNvbXBsZXRlcn0gZnJvbSAnYW5ndWxhcjIvc3JjL2ZhY2FkZS9wcm9taXNlJztcbmltcG9ydCB7aXNQcmVzZW50fSBmcm9tICdhbmd1bGFyMi9zcmMvZmFjYWRlL2xhbmcnO1xuaW1wb3J0IHtYSFJ9IGZyb20gJ2FuZ3VsYXIyL3NyYy9jb21waWxlci94aHInO1xuXG5leHBvcnQgY2xhc3MgWEhSSW1wbCBleHRlbmRzIFhIUiB7XG4gIGdldCh1cmw6IHN0cmluZyk6IFByb21pc2U8c3RyaW5nPiB7XG4gICAgdmFyIGNvbXBsZXRlcjogUHJvbWlzZUNvbXBsZXRlciA8IHN0cmluZyA+PSBQcm9taXNlV3JhcHBlci5jb21wbGV0ZXIoKTtcbiAgICB2YXIgeGhyID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XG4gICAgeGhyLm9wZW4oJ0dFVCcsIHVybCwgdHJ1ZSk7XG4gICAgeGhyLnJlc3BvbnNlVHlwZSA9ICd0ZXh0JztcblxuICAgIHhoci5vbmxvYWQgPSBmdW5jdGlvbigpIHtcbiAgICAgIC8vIHJlc3BvbnNlVGV4dCBpcyB0aGUgb2xkLXNjaG9vbCB3YXkgb2YgcmV0cmlldmluZyByZXNwb25zZSAoc3VwcG9ydGVkIGJ5IElFOCAmIDkpXG4gICAgICAvLyByZXNwb25zZS9yZXNwb25zZVR5cGUgcHJvcGVydGllcyB3ZXJlIGludHJvZHVjZWQgaW4gWEhSIExldmVsMiBzcGVjIChzdXBwb3J0ZWQgYnkgSUUxMClcbiAgICAgIHZhciByZXNwb25zZSA9IGlzUHJlc2VudCh4aHIucmVzcG9uc2UpID8geGhyLnJlc3BvbnNlIDogeGhyLnJlc3BvbnNlVGV4dDtcblxuICAgICAgLy8gbm9ybWFsaXplIElFOSBidWcgKGh0dHA6Ly9idWdzLmpxdWVyeS5jb20vdGlja2V0LzE0NTApXG4gICAgICB2YXIgc3RhdHVzID0geGhyLnN0YXR1cyA9PT0gMTIyMyA/IDIwNCA6IHhoci5zdGF0dXM7XG5cbiAgICAgIC8vIGZpeCBzdGF0dXMgY29kZSB3aGVuIGl0IGlzIDAgKDAgc3RhdHVzIGlzIHVuZG9jdW1lbnRlZCkuXG4gICAgICAvLyBPY2N1cnMgd2hlbiBhY2Nlc3NpbmcgZmlsZSByZXNvdXJjZXMgb3Igb24gQW5kcm9pZCA0LjEgc3RvY2sgYnJvd3NlclxuICAgICAgLy8gd2hpbGUgcmV0cmlldmluZyBmaWxlcyBmcm9tIGFwcGxpY2F0aW9uIGNhY2hlLlxuICAgICAgaWYgKHN0YXR1cyA9PT0gMCkge1xuICAgICAgICBzdGF0dXMgPSByZXNwb25zZSA/IDIwMCA6IDA7XG4gICAgICB9XG5cbiAgICAgIGlmICgyMDAgPD0gc3RhdHVzICYmIHN0YXR1cyA8PSAzMDApIHtcbiAgICAgICAgY29tcGxldGVyLnJlc29sdmUocmVzcG9uc2UpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29tcGxldGVyLnJlamVjdChgRmFpbGVkIHRvIGxvYWQgJHt1cmx9YCwgbnVsbCk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIHhoci5vbmVycm9yID0gZnVuY3Rpb24oKSB7IGNvbXBsZXRlci5yZWplY3QoYEZhaWxlZCB0byBsb2FkICR7dXJsfWAsIG51bGwpOyB9O1xuXG4gICAgeGhyLnNlbmQoKTtcbiAgICByZXR1cm4gY29tcGxldGVyLnByb21pc2U7XG4gIH1cbn1cbiJdfQ==\n\n/***/ },\n\n/***/ 175:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';var lang_1 = __webpack_require__(1);\r\n\tvar di_1 = __webpack_require__(6);\r\n\tvar core_1 = __webpack_require__(9);\r\n\tvar common_1 = __webpack_require__(121);\r\n\tvar testability_1 = __webpack_require__(69);\r\n\tvar dom_adapter_1 = __webpack_require__(11);\r\n\tvar dom_events_1 = __webpack_require__(176);\r\n\tvar key_events_1 = __webpack_require__(246);\r\n\tvar hammer_gestures_1 = __webpack_require__(245);\r\n\tvar dom_tokens_1 = __webpack_require__(53);\r\n\tvar dom_renderer_1 = __webpack_require__(113);\r\n\tvar shared_styles_host_1 = __webpack_require__(72);\r\n\tvar shared_styles_host_2 = __webpack_require__(72);\r\n\tvar browser_details_1 = __webpack_require__(125);\r\n\tvar animation_builder_1 = __webpack_require__(124);\r\n\tvar browser_adapter_1 = __webpack_require__(173);\r\n\tvar testability_2 = __webpack_require__(238);\r\n\tvar wtf_init_1 = __webpack_require__(230);\r\n\tvar event_manager_1 = __webpack_require__(36);\r\n\tvar common_dom_1 = __webpack_require__(123);\r\n\tvar dom_tokens_2 = __webpack_require__(53);\r\n\texports.DOCUMENT = dom_tokens_2.DOCUMENT;\r\n\tvar title_1 = __webpack_require__(239);\r\n\texports.Title = title_1.Title;\r\n\tvar common_dom_2 = __webpack_require__(123);\r\n\texports.ELEMENT_PROBE_PROVIDERS = common_dom_2.ELEMENT_PROBE_PROVIDERS;\r\n\texports.ELEMENT_PROBE_PROVIDERS_PROD_MODE = common_dom_2.ELEMENT_PROBE_PROVIDERS_PROD_MODE;\r\n\texports.inspectNativeElement = common_dom_2.inspectNativeElement;\r\n\texports.By = common_dom_2.By;\r\n\tvar browser_adapter_2 = __webpack_require__(173);\r\n\texports.BrowserDomAdapter = browser_adapter_2.BrowserDomAdapter;\r\n\tvar tools_1 = __webpack_require__(241);\r\n\texports.enableDebugTools = tools_1.enableDebugTools;\r\n\texports.disableDebugTools = tools_1.disableDebugTools;\r\n\t/**\r\n\t * A set of providers to initialize the Angular platform in a web browser.\r\n\t *\r\n\t * Used automatically by `bootstrap`, or can be passed to {@link platform}.\r\n\t */\r\n\texports.BROWSER_PROVIDERS = lang_1.CONST_EXPR([\r\n\t    core_1.PLATFORM_COMMON_PROVIDERS,\r\n\t    new di_1.Provider(core_1.PLATFORM_INITIALIZER, { useValue: initDomAdapter, multi: true }),\r\n\t]);\r\n\tfunction _exceptionHandler() {\r\n\t    // !IS_DART is required because we must rethrow exceptions in JS,\r\n\t    // but must not rethrow exceptions in Dart\r\n\t    return new core_1.ExceptionHandler(dom_adapter_1.DOM, !lang_1.IS_DART);\r\n\t}\r\n\tfunction _document() {\r\n\t    return dom_adapter_1.DOM.defaultDoc();\r\n\t}\r\n\t/**\r\n\t * A set of providers to initialize an Angular application in a web browser.\r\n\t *\r\n\t * Used automatically by `bootstrap`, or can be passed to {@link PlatformRef.application}.\r\n\t */\r\n\texports.BROWSER_APP_COMMON_PROVIDERS = lang_1.CONST_EXPR([\r\n\t    core_1.APPLICATION_COMMON_PROVIDERS,\r\n\t    common_1.FORM_PROVIDERS,\r\n\t    new di_1.Provider(core_1.PLATFORM_PIPES, { useValue: common_1.COMMON_PIPES, multi: true }),\r\n\t    new di_1.Provider(core_1.PLATFORM_DIRECTIVES, { useValue: common_1.COMMON_DIRECTIVES, multi: true }),\r\n\t    new di_1.Provider(core_1.ExceptionHandler, { useFactory: _exceptionHandler, deps: [] }),\r\n\t    new di_1.Provider(dom_tokens_1.DOCUMENT, { useFactory: _document, deps: [] }),\r\n\t    new di_1.Provider(event_manager_1.EVENT_MANAGER_PLUGINS, { useClass: dom_events_1.DomEventsPlugin, multi: true }),\r\n\t    new di_1.Provider(event_manager_1.EVENT_MANAGER_PLUGINS, { useClass: key_events_1.KeyEventsPlugin, multi: true }),\r\n\t    new di_1.Provider(event_manager_1.EVENT_MANAGER_PLUGINS, { useClass: hammer_gestures_1.HammerGesturesPlugin, multi: true }),\r\n\t    new di_1.Provider(dom_renderer_1.DomRootRenderer, { useClass: dom_renderer_1.DomRootRenderer_ }),\r\n\t    new di_1.Provider(core_1.RootRenderer, { useExisting: dom_renderer_1.DomRootRenderer }),\r\n\t    new di_1.Provider(shared_styles_host_2.SharedStylesHost, { useExisting: shared_styles_host_1.DomSharedStylesHost }),\r\n\t    shared_styles_host_1.DomSharedStylesHost,\r\n\t    testability_1.Testability,\r\n\t    browser_details_1.BrowserDetails,\r\n\t    animation_builder_1.AnimationBuilder,\r\n\t    event_manager_1.EventManager,\r\n\t    common_dom_1.ELEMENT_PROBE_PROVIDERS\r\n\t]);\r\n\tfunction initDomAdapter() {\r\n\t    browser_adapter_1.BrowserDomAdapter.makeCurrent();\r\n\t    wtf_init_1.wtfInit();\r\n\t    testability_2.BrowserGetTestability.init();\r\n\t}\r\n\texports.initDomAdapter = initDomAdapter;\r\n\t//# sourceMappingURL=data:application/json;base64,\n\n/***/ },\n\n/***/ 176:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';var __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar dom_adapter_1 = __webpack_require__(11);\r\n\tvar core_1 = __webpack_require__(9);\r\n\tvar event_manager_1 = __webpack_require__(36);\r\n\tvar DomEventsPlugin = (function (_super) {\r\n\t    __extends(DomEventsPlugin, _super);\r\n\t    function DomEventsPlugin() {\r\n\t        _super.apply(this, arguments);\r\n\t    }\r\n\t    // This plugin should come last in the list of plugins, because it accepts all\r\n\t    // events.\r\n\t    DomEventsPlugin.prototype.supports = function (eventName) { return true; };\r\n\t    DomEventsPlugin.prototype.addEventListener = function (element, eventName, handler) {\r\n\t        var zone = this.manager.getZone();\r\n\t        var outsideHandler = function (event) { return zone.run(function () { return handler(event); }); };\r\n\t        return this.manager.getZone().runOutsideAngular(function () { return dom_adapter_1.DOM.onAndCancel(element, eventName, outsideHandler); });\r\n\t    };\r\n\t    DomEventsPlugin.prototype.addGlobalEventListener = function (target, eventName, handler) {\r\n\t        var element = dom_adapter_1.DOM.getGlobalEventTarget(target);\r\n\t        var zone = this.manager.getZone();\r\n\t        var outsideHandler = function (event) { return zone.run(function () { return handler(event); }); };\r\n\t        return this.manager.getZone().runOutsideAngular(function () { return dom_adapter_1.DOM.onAndCancel(element, eventName, outsideHandler); });\r\n\t    };\r\n\t    DomEventsPlugin = __decorate([\r\n\t        core_1.Injectable(), \r\n\t        __metadata('design:paramtypes', [])\r\n\t    ], DomEventsPlugin);\r\n\t    return DomEventsPlugin;\r\n\t})(event_manager_1.EventManagerPlugin);\r\n\texports.DomEventsPlugin = DomEventsPlugin;\r\n\t//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZG9tX2V2ZW50cy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImFuZ3VsYXIyL3NyYy9wbGF0Zm9ybS9kb20vZXZlbnRzL2RvbV9ldmVudHMudHMiXSwibmFtZXMiOlsiRG9tRXZlbnRzUGx1Z2luIiwiRG9tRXZlbnRzUGx1Z2luLmNvbnN0cnVjdG9yIiwiRG9tRXZlbnRzUGx1Z2luLnN1cHBvcnRzIiwiRG9tRXZlbnRzUGx1Z2luLmFkZEV2ZW50TGlzdGVuZXIiLCJEb21FdmVudHNQbHVnaW4uYWRkR2xvYmFsRXZlbnRMaXN0ZW5lciJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBQSw0QkFBa0IsdUNBQXVDLENBQUMsQ0FBQTtBQUMxRCxxQkFBeUIsZUFBZSxDQUFDLENBQUE7QUFDekMsOEJBQStDLGlCQUFpQixDQUFDLENBQUE7QUFFakU7SUFDcUNBLG1DQUFrQkE7SUFEdkRBO1FBQ3FDQyw4QkFBa0JBO0lBbUJ2REEsQ0FBQ0E7SUFsQkNELDhFQUE4RUE7SUFDOUVBLFVBQVVBO0lBQ1ZBLGtDQUFRQSxHQUFSQSxVQUFTQSxTQUFpQkEsSUFBYUUsTUFBTUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7SUFFckRGLDBDQUFnQkEsR0FBaEJBLFVBQWlCQSxPQUFvQkEsRUFBRUEsU0FBaUJBLEVBQUVBLE9BQWlCQTtRQUN6RUcsSUFBSUEsSUFBSUEsR0FBR0EsSUFBSUEsQ0FBQ0EsT0FBT0EsQ0FBQ0EsT0FBT0EsRUFBRUEsQ0FBQ0E7UUFDbENBLElBQUlBLGNBQWNBLEdBQUdBLFVBQUNBLEtBQUtBLElBQUtBLE9BQUFBLElBQUlBLENBQUNBLEdBQUdBLENBQUNBLGNBQU1BLE9BQUFBLE9BQU9BLENBQUNBLEtBQUtBLENBQUNBLEVBQWRBLENBQWNBLENBQUNBLEVBQTlCQSxDQUE4QkEsQ0FBQ0E7UUFDL0RBLE1BQU1BLENBQUNBLElBQUlBLENBQUNBLE9BQU9BLENBQUNBLE9BQU9BLEVBQUVBLENBQUNBLGlCQUFpQkEsQ0FDM0NBLGNBQU1BLE9BQUFBLGlCQUFHQSxDQUFDQSxXQUFXQSxDQUFDQSxPQUFPQSxFQUFFQSxTQUFTQSxFQUFFQSxjQUFjQSxDQUFDQSxFQUFuREEsQ0FBbURBLENBQUNBLENBQUNBO0lBQ2pFQSxDQUFDQTtJQUVESCxnREFBc0JBLEdBQXRCQSxVQUF1QkEsTUFBY0EsRUFBRUEsU0FBaUJBLEVBQUVBLE9BQWlCQTtRQUN6RUksSUFBSUEsT0FBT0EsR0FBR0EsaUJBQUdBLENBQUNBLG9CQUFvQkEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsQ0FBQ0E7UUFDL0NBLElBQUlBLElBQUlBLEdBQUdBLElBQUlBLENBQUNBLE9BQU9BLENBQUNBLE9BQU9BLEVBQUVBLENBQUNBO1FBQ2xDQSxJQUFJQSxjQUFjQSxHQUFHQSxVQUFDQSxLQUFLQSxJQUFLQSxPQUFBQSxJQUFJQSxDQUFDQSxHQUFHQSxDQUFDQSxjQUFNQSxPQUFBQSxPQUFPQSxDQUFDQSxLQUFLQSxDQUFDQSxFQUFkQSxDQUFjQSxDQUFDQSxFQUE5QkEsQ0FBOEJBLENBQUNBO1FBQy9EQSxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQSxPQUFPQSxDQUFDQSxPQUFPQSxFQUFFQSxDQUFDQSxpQkFBaUJBLENBQzNDQSxjQUFNQSxPQUFBQSxpQkFBR0EsQ0FBQ0EsV0FBV0EsQ0FBQ0EsT0FBT0EsRUFBRUEsU0FBU0EsRUFBRUEsY0FBY0EsQ0FBQ0EsRUFBbkRBLENBQW1EQSxDQUFDQSxDQUFDQTtJQUNqRUEsQ0FBQ0E7SUFuQkhKO1FBQUNBLGlCQUFVQSxFQUFFQTs7d0JBb0JaQTtJQUFEQSxzQkFBQ0E7QUFBREEsQ0FBQ0EsQUFwQkQsRUFDcUMsa0NBQWtCLEVBbUJ0RDtBQW5CWSx1QkFBZSxrQkFtQjNCLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0RPTX0gZnJvbSAnYW5ndWxhcjIvc3JjL3BsYXRmb3JtL2RvbS9kb21fYWRhcHRlcic7XG5pbXBvcnQge0luamVjdGFibGV9IGZyb20gJ2FuZ3VsYXIyL2NvcmUnO1xuaW1wb3J0IHtFdmVudE1hbmFnZXJQbHVnaW4sIEV2ZW50TWFuYWdlcn0gZnJvbSAnLi9ldmVudF9tYW5hZ2VyJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIERvbUV2ZW50c1BsdWdpbiBleHRlbmRzIEV2ZW50TWFuYWdlclBsdWdpbiB7XG4gIC8vIFRoaXMgcGx1Z2luIHNob3VsZCBjb21lIGxhc3QgaW4gdGhlIGxpc3Qgb2YgcGx1Z2lucywgYmVjYXVzZSBpdCBhY2NlcHRzIGFsbFxuICAvLyBldmVudHMuXG4gIHN1cHBvcnRzKGV2ZW50TmFtZTogc3RyaW5nKTogYm9vbGVhbiB7IHJldHVybiB0cnVlOyB9XG5cbiAgYWRkRXZlbnRMaXN0ZW5lcihlbGVtZW50OiBIVE1MRWxlbWVudCwgZXZlbnROYW1lOiBzdHJpbmcsIGhhbmRsZXI6IEZ1bmN0aW9uKTogRnVuY3Rpb24ge1xuICAgIHZhciB6b25lID0gdGhpcy5tYW5hZ2VyLmdldFpvbmUoKTtcbiAgICB2YXIgb3V0c2lkZUhhbmRsZXIgPSAoZXZlbnQpID0+IHpvbmUucnVuKCgpID0+IGhhbmRsZXIoZXZlbnQpKTtcbiAgICByZXR1cm4gdGhpcy5tYW5hZ2VyLmdldFpvbmUoKS5ydW5PdXRzaWRlQW5ndWxhcihcbiAgICAgICAgKCkgPT4gRE9NLm9uQW5kQ2FuY2VsKGVsZW1lbnQsIGV2ZW50TmFtZSwgb3V0c2lkZUhhbmRsZXIpKTtcbiAgfVxuXG4gIGFkZEdsb2JhbEV2ZW50TGlzdGVuZXIodGFyZ2V0OiBzdHJpbmcsIGV2ZW50TmFtZTogc3RyaW5nLCBoYW5kbGVyOiBGdW5jdGlvbik6IEZ1bmN0aW9uIHtcbiAgICB2YXIgZWxlbWVudCA9IERPTS5nZXRHbG9iYWxFdmVudFRhcmdldCh0YXJnZXQpO1xuICAgIHZhciB6b25lID0gdGhpcy5tYW5hZ2VyLmdldFpvbmUoKTtcbiAgICB2YXIgb3V0c2lkZUhhbmRsZXIgPSAoZXZlbnQpID0+IHpvbmUucnVuKCgpID0+IGhhbmRsZXIoZXZlbnQpKTtcbiAgICByZXR1cm4gdGhpcy5tYW5hZ2VyLmdldFpvbmUoKS5ydW5PdXRzaWRlQW5ndWxhcihcbiAgICAgICAgKCkgPT4gRE9NLm9uQW5kQ2FuY2VsKGVsZW1lbnQsIGV2ZW50TmFtZSwgb3V0c2lkZUhhbmRsZXIpKTtcbiAgfVxufVxuIl19\n\n/***/ },\n\n/***/ 177:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';var lang_1 = __webpack_require__(1);\r\n\tvar CAMEL_CASE_REGEXP = /([A-Z])/g;\r\n\tvar DASH_CASE_REGEXP = /-([a-z])/g;\r\n\tfunction camelCaseToDashCase(input) {\r\n\t    return lang_1.StringWrapper.replaceAllMapped(input, CAMEL_CASE_REGEXP, function (m) { return '-' + m[1].toLowerCase(); });\r\n\t}\r\n\texports.camelCaseToDashCase = camelCaseToDashCase;\r\n\tfunction dashCaseToCamelCase(input) {\r\n\t    return lang_1.StringWrapper.replaceAllMapped(input, DASH_CASE_REGEXP, function (m) { return m[1].toUpperCase(); });\r\n\t}\r\n\texports.dashCaseToCamelCase = dashCaseToCamelCase;\r\n\t//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImFuZ3VsYXIyL3NyYy9wbGF0Zm9ybS9kb20vdXRpbC50cyJdLCJuYW1lcyI6WyJjYW1lbENhc2VUb0Rhc2hDYXNlIiwiZGFzaENhc2VUb0NhbWVsQ2FzZSJdLCJtYXBwaW5ncyI6IkFBQUEscUJBQTRCLDBCQUEwQixDQUFDLENBQUE7QUFFdkQsSUFBSSxpQkFBaUIsR0FBRyxVQUFVLENBQUM7QUFDbkMsSUFBSSxnQkFBZ0IsR0FBRyxXQUFXLENBQUM7QUFHbkMsNkJBQW9DLEtBQWE7SUFDL0NBLE1BQU1BLENBQUNBLG9CQUFhQSxDQUFDQSxnQkFBZ0JBLENBQUNBLEtBQUtBLEVBQUVBLGlCQUFpQkEsRUFDeEJBLFVBQUNBLENBQUNBLElBQU9BLE1BQU1BLENBQUNBLEdBQUdBLEdBQUdBLENBQUNBLENBQUNBLENBQUNBLENBQUNBLENBQUNBLFdBQVdBLEVBQUVBLENBQUNBLENBQUNBLENBQUNBLENBQUNBLENBQUNBO0FBQ3JGQSxDQUFDQTtBQUhlLDJCQUFtQixzQkFHbEMsQ0FBQTtBQUVELDZCQUFvQyxLQUFhO0lBQy9DQyxNQUFNQSxDQUFDQSxvQkFBYUEsQ0FBQ0EsZ0JBQWdCQSxDQUFDQSxLQUFLQSxFQUFFQSxnQkFBZ0JBLEVBQ3ZCQSxVQUFDQSxDQUFDQSxJQUFPQSxNQUFNQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQSxXQUFXQSxFQUFFQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQTtBQUMvRUEsQ0FBQ0E7QUFIZSwyQkFBbUIsc0JBR2xDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1N0cmluZ1dyYXBwZXJ9IGZyb20gJ2FuZ3VsYXIyL3NyYy9mYWNhZGUvbGFuZyc7XG5cbnZhciBDQU1FTF9DQVNFX1JFR0VYUCA9IC8oW0EtWl0pL2c7XG52YXIgREFTSF9DQVNFX1JFR0VYUCA9IC8tKFthLXpdKS9nO1xuXG5cbmV4cG9ydCBmdW5jdGlvbiBjYW1lbENhc2VUb0Rhc2hDYXNlKGlucHV0OiBzdHJpbmcpOiBzdHJpbmcge1xuICByZXR1cm4gU3RyaW5nV3JhcHBlci5yZXBsYWNlQWxsTWFwcGVkKGlucHV0LCBDQU1FTF9DQVNFX1JFR0VYUCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAobSkgPT4geyByZXR1cm4gJy0nICsgbVsxXS50b0xvd2VyQ2FzZSgpOyB9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGRhc2hDYXNlVG9DYW1lbENhc2UoaW5wdXQ6IHN0cmluZyk6IHN0cmluZyB7XG4gIHJldHVybiBTdHJpbmdXcmFwcGVyLnJlcGxhY2VBbGxNYXBwZWQoaW5wdXQsIERBU0hfQ0FTRV9SRUdFWFAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKG0pID0+IHsgcmV0dXJuIG1bMV0udG9VcHBlckNhc2UoKTsgfSk7XG59XG4iXX0=\n\n/***/ },\n\n/***/ 194:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';var angular_entrypoint_1 = __webpack_require__(210);\r\n\texports.AngularEntrypoint = angular_entrypoint_1.AngularEntrypoint;\r\n\tvar browser_common_1 = __webpack_require__(175);\r\n\texports.BROWSER_PROVIDERS = browser_common_1.BROWSER_PROVIDERS;\r\n\texports.ELEMENT_PROBE_PROVIDERS = browser_common_1.ELEMENT_PROBE_PROVIDERS;\r\n\texports.ELEMENT_PROBE_PROVIDERS_PROD_MODE = browser_common_1.ELEMENT_PROBE_PROVIDERS_PROD_MODE;\r\n\texports.inspectNativeElement = browser_common_1.inspectNativeElement;\r\n\texports.BrowserDomAdapter = browser_common_1.BrowserDomAdapter;\r\n\texports.By = browser_common_1.By;\r\n\texports.Title = browser_common_1.Title;\r\n\texports.DOCUMENT = browser_common_1.DOCUMENT;\r\n\texports.enableDebugTools = browser_common_1.enableDebugTools;\r\n\texports.disableDebugTools = browser_common_1.disableDebugTools;\r\n\tvar lang_1 = __webpack_require__(1);\r\n\tvar browser_common_2 = __webpack_require__(175);\r\n\tvar compiler_1 = __webpack_require__(122);\r\n\tvar core_1 = __webpack_require__(9);\r\n\tvar reflection_capabilities_1 = __webpack_require__(169);\r\n\tvar xhr_impl_1 = __webpack_require__(174);\r\n\tvar compiler_2 = __webpack_require__(122);\r\n\tvar di_1 = __webpack_require__(6);\r\n\t/**\r\n\t * An array of providers that should be passed into `application()` when bootstrapping a component.\r\n\t */\r\n\texports.BROWSER_APP_PROVIDERS = lang_1.CONST_EXPR([\r\n\t    browser_common_2.BROWSER_APP_COMMON_PROVIDERS,\r\n\t    compiler_1.COMPILER_PROVIDERS,\r\n\t    new di_1.Provider(compiler_2.XHR, { useClass: xhr_impl_1.XHRImpl }),\r\n\t]);\r\n\t/**\r\n\t * Bootstrapping for Angular applications.\r\n\t *\r\n\t * You instantiate an Angular application by explicitly specifying a component to use\r\n\t * as the root component for your application via the `bootstrap()` method.\r\n\t *\r\n\t * ## Simple Example\r\n\t *\r\n\t * Assuming this `index.html`:\r\n\t *\r\n\t * ```html\r\n\t * <html>\r\n\t *   <!-- load Angular script tags here. -->\r\n\t *   <body>\r\n\t *     <my-app>loading...</my-app>\r\n\t *   </body>\r\n\t * </html>\r\n\t * ```\r\n\t *\r\n\t * An application is bootstrapped inside an existing browser DOM, typically `index.html`.\r\n\t * Unlike Angular 1, Angular 2 does not compile/process providers in `index.html`. This is\r\n\t * mainly for security reasons, as well as architectural changes in Angular 2. This means\r\n\t * that `index.html` can safely be processed using server-side technologies such as\r\n\t * providers. Bindings can thus use double-curly `{{ syntax }}` without collision from\r\n\t * Angular 2 component double-curly `{{ syntax }}`.\r\n\t *\r\n\t * We can use this script code:\r\n\t *\r\n\t * {@example core/ts/bootstrap/bootstrap.ts region='bootstrap'}\r\n\t *\r\n\t * When the app developer invokes `bootstrap()` with the root component `MyApp` as its\r\n\t * argument, Angular performs the following tasks:\r\n\t *\r\n\t *  1. It uses the component's `selector` property to locate the DOM element which needs\r\n\t *     to be upgraded into the angular component.\r\n\t *  2. It creates a new child injector (from the platform injector). Optionally, you can\r\n\t *     also override the injector configuration for an app by invoking `bootstrap` with the\r\n\t *     `componentInjectableBindings` argument.\r\n\t *  3. It creates a new `Zone` and connects it to the angular application's change detection\r\n\t *     domain instance.\r\n\t *  4. It creates an emulated or shadow DOM on the selected component's host element and loads the\r\n\t *     template into it.\r\n\t *  5. It instantiates the specified component.\r\n\t *  6. Finally, Angular performs change detection to apply the initial data providers for the\r\n\t *     application.\r\n\t *\r\n\t *\r\n\t * ## Bootstrapping Multiple Applications\r\n\t *\r\n\t * When working within a browser window, there are many singleton resources: cookies, title,\r\n\t * location, and others. Angular services that represent these resources must likewise be\r\n\t * shared across all Angular applications that occupy the same browser window. For this\r\n\t * reason, Angular creates exactly one global platform object which stores all shared\r\n\t * services, and each angular application injector has the platform injector as its parent.\r\n\t *\r\n\t * Each application has its own private injector as well. When there are multiple\r\n\t * applications on a page, Angular treats each application injector's services as private\r\n\t * to that application.\r\n\t *\r\n\t * ## API\r\n\t *\r\n\t * - `appComponentType`: The root component which should act as the application. This is\r\n\t *   a reference to a `Type` which is annotated with `@Component(...)`.\r\n\t * - `customProviders`: An additional set of providers that can be added to the\r\n\t *   app injector to override default injection behavior.\r\n\t *\r\n\t * Returns a `Promise` of {@link ComponentRef}.\r\n\t */\r\n\tfunction bootstrap(appComponentType, customProviders) {\r\n\t    core_1.reflector.reflectionCapabilities = new reflection_capabilities_1.ReflectionCapabilities();\r\n\t    var appProviders = lang_1.isPresent(customProviders) ? [exports.BROWSER_APP_PROVIDERS, customProviders] : exports.BROWSER_APP_PROVIDERS;\r\n\t    return core_1.platform(browser_common_2.BROWSER_PROVIDERS).application(appProviders).bootstrap(appComponentType);\r\n\t}\r\n\texports.bootstrap = bootstrap;\r\n\t//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnJvd3Nlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImFuZ3VsYXIyL3BsYXRmb3JtL2Jyb3dzZXIudHMiXSwibmFtZXMiOlsiYm9vdHN0cmFwIl0sIm1hcHBpbmdzIjoiQUFBQSxtQ0FBZ0Msc0NBQXNDLENBQUM7QUFBL0QsbUVBQStEO0FBQ3ZFLCtCQVdPLHNDQUFzQyxDQUFDO0FBVjVDLCtEQUFpQjtBQUNqQiwyRUFBdUI7QUFDdkIsK0ZBQWlDO0FBQ2pDLHFFQUFvQjtBQUNwQiwrREFBaUI7QUFDakIsaUNBQUU7QUFDRix1Q0FBSztBQUNMLDZDQUFRO0FBQ1IsNkRBQWdCO0FBQ2hCLCtEQUM0QztBQUU5QyxxQkFBMEMsMEJBQTBCLENBQUMsQ0FBQTtBQUVyRSwrQkFHTyxzQ0FBc0MsQ0FBQyxDQUFBO0FBQzlDLHlCQUFpQyxtQkFBbUIsQ0FBQyxDQUFBO0FBQ3JELHFCQUFnRCxlQUFlLENBQUMsQ0FBQTtBQUNoRSx3Q0FBcUMsc0RBQXNELENBQUMsQ0FBQTtBQUM1Rix5QkFBc0Isd0NBQXdDLENBQUMsQ0FBQTtBQUMvRCx5QkFBa0IsbUJBQW1CLENBQUMsQ0FBQTtBQUN0QyxtQkFBdUIsc0JBQXNCLENBQUMsQ0FBQTtBQUU5Qzs7R0FFRztBQUNVLDZCQUFxQixHQUEyQyxpQkFBVSxDQUFDO0lBQ3RGLDZDQUE0QjtJQUM1Qiw2QkFBa0I7SUFDbEIsSUFBSSxhQUFRLENBQUMsY0FBRyxFQUFFLEVBQUMsUUFBUSxFQUFFLGtCQUFPLEVBQUMsQ0FBQztDQUN2QyxDQUFDLENBQUM7QUFFSDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQW1FRztBQUNILG1CQUNJLGdCQUFzQixFQUN0QixlQUF3RDtJQUMxREEsZ0JBQVNBLENBQUNBLHNCQUFzQkEsR0FBR0EsSUFBSUEsZ0RBQXNCQSxFQUFFQSxDQUFDQTtJQUNoRUEsSUFBSUEsWUFBWUEsR0FDWkEsZ0JBQVNBLENBQUNBLGVBQWVBLENBQUNBLEdBQUdBLENBQUNBLDZCQUFxQkEsRUFBRUEsZUFBZUEsQ0FBQ0EsR0FBR0EsNkJBQXFCQSxDQUFDQTtJQUNsR0EsTUFBTUEsQ0FBQ0EsZUFBUUEsQ0FBQ0Esa0NBQWlCQSxDQUFDQSxDQUFDQSxXQUFXQSxDQUFDQSxZQUFZQSxDQUFDQSxDQUFDQSxTQUFTQSxDQUFDQSxnQkFBZ0JBLENBQUNBLENBQUNBO0FBQzNGQSxDQUFDQTtBQVBlLGlCQUFTLFlBT3hCLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge0FuZ3VsYXJFbnRyeXBvaW50fSBmcm9tICdhbmd1bGFyMi9zcmMvY29yZS9hbmd1bGFyX2VudHJ5cG9pbnQnO1xuZXhwb3J0IHtcbiAgQlJPV1NFUl9QUk9WSURFUlMsXG4gIEVMRU1FTlRfUFJPQkVfUFJPVklERVJTLFxuICBFTEVNRU5UX1BST0JFX1BST1ZJREVSU19QUk9EX01PREUsXG4gIGluc3BlY3ROYXRpdmVFbGVtZW50LFxuICBCcm93c2VyRG9tQWRhcHRlcixcbiAgQnksXG4gIFRpdGxlLFxuICBET0NVTUVOVCxcbiAgZW5hYmxlRGVidWdUb29scyxcbiAgZGlzYWJsZURlYnVnVG9vbHNcbn0gZnJvbSAnYW5ndWxhcjIvc3JjL3BsYXRmb3JtL2Jyb3dzZXJfY29tbW9uJztcblxuaW1wb3J0IHtUeXBlLCBpc1ByZXNlbnQsIENPTlNUX0VYUFJ9IGZyb20gJ2FuZ3VsYXIyL3NyYy9mYWNhZGUvbGFuZyc7XG5pbXBvcnQge1Byb21pc2V9IGZyb20gJ2FuZ3VsYXIyL3NyYy9mYWNhZGUvcHJvbWlzZSc7XG5pbXBvcnQge1xuICBCUk9XU0VSX1BST1ZJREVSUyxcbiAgQlJPV1NFUl9BUFBfQ09NTU9OX1BST1ZJREVSU1xufSBmcm9tICdhbmd1bGFyMi9zcmMvcGxhdGZvcm0vYnJvd3Nlcl9jb21tb24nO1xuaW1wb3J0IHtDT01QSUxFUl9QUk9WSURFUlN9IGZyb20gJ2FuZ3VsYXIyL2NvbXBpbGVyJztcbmltcG9ydCB7Q29tcG9uZW50UmVmLCBwbGF0Zm9ybSwgcmVmbGVjdG9yfSBmcm9tICdhbmd1bGFyMi9jb3JlJztcbmltcG9ydCB7UmVmbGVjdGlvbkNhcGFiaWxpdGllc30gZnJvbSAnYW5ndWxhcjIvc3JjL2NvcmUvcmVmbGVjdGlvbi9yZWZsZWN0aW9uX2NhcGFiaWxpdGllcyc7XG5pbXBvcnQge1hIUkltcGx9IGZyb20gXCJhbmd1bGFyMi9zcmMvcGxhdGZvcm0vYnJvd3Nlci94aHJfaW1wbFwiO1xuaW1wb3J0IHtYSFJ9IGZyb20gJ2FuZ3VsYXIyL2NvbXBpbGVyJztcbmltcG9ydCB7UHJvdmlkZXJ9IGZyb20gJ2FuZ3VsYXIyL3NyYy9jb3JlL2RpJztcblxuLyoqXG4gKiBBbiBhcnJheSBvZiBwcm92aWRlcnMgdGhhdCBzaG91bGQgYmUgcGFzc2VkIGludG8gYGFwcGxpY2F0aW9uKClgIHdoZW4gYm9vdHN0cmFwcGluZyBhIGNvbXBvbmVudC5cbiAqL1xuZXhwb3J0IGNvbnN0IEJST1dTRVJfQVBQX1BST1ZJREVSUzogQXJyYXk8YW55IC8qVHlwZSB8IFByb3ZpZGVyIHwgYW55W10qLz4gPSBDT05TVF9FWFBSKFtcbiAgQlJPV1NFUl9BUFBfQ09NTU9OX1BST1ZJREVSUyxcbiAgQ09NUElMRVJfUFJPVklERVJTLFxuICBuZXcgUHJvdmlkZXIoWEhSLCB7dXNlQ2xhc3M6IFhIUkltcGx9KSxcbl0pO1xuXG4vKipcbiAqIEJvb3RzdHJhcHBpbmcgZm9yIEFuZ3VsYXIgYXBwbGljYXRpb25zLlxuICpcbiAqIFlvdSBpbnN0YW50aWF0ZSBhbiBBbmd1bGFyIGFwcGxpY2F0aW9uIGJ5IGV4cGxpY2l0bHkgc3BlY2lmeWluZyBhIGNvbXBvbmVudCB0byB1c2VcbiAqIGFzIHRoZSByb290IGNvbXBvbmVudCBmb3IgeW91ciBhcHBsaWNhdGlvbiB2aWEgdGhlIGBib290c3RyYXAoKWAgbWV0aG9kLlxuICpcbiAqICMjIFNpbXBsZSBFeGFtcGxlXG4gKlxuICogQXNzdW1pbmcgdGhpcyBgaW5kZXguaHRtbGA6XG4gKlxuICogYGBgaHRtbFxuICogPGh0bWw+XG4gKiAgIDwhLS0gbG9hZCBBbmd1bGFyIHNjcmlwdCB0YWdzIGhlcmUuIC0tPlxuICogICA8Ym9keT5cbiAqICAgICA8bXktYXBwPmxvYWRpbmcuLi48L215LWFwcD5cbiAqICAgPC9ib2R5PlxuICogPC9odG1sPlxuICogYGBgXG4gKlxuICogQW4gYXBwbGljYXRpb24gaXMgYm9vdHN0cmFwcGVkIGluc2lkZSBhbiBleGlzdGluZyBicm93c2VyIERPTSwgdHlwaWNhbGx5IGBpbmRleC5odG1sYC5cbiAqIFVubGlrZSBBbmd1bGFyIDEsIEFuZ3VsYXIgMiBkb2VzIG5vdCBjb21waWxlL3Byb2Nlc3MgcHJvdmlkZXJzIGluIGBpbmRleC5odG1sYC4gVGhpcyBpc1xuICogbWFpbmx5IGZvciBzZWN1cml0eSByZWFzb25zLCBhcyB3ZWxsIGFzIGFyY2hpdGVjdHVyYWwgY2hhbmdlcyBpbiBBbmd1bGFyIDIuIFRoaXMgbWVhbnNcbiAqIHRoYXQgYGluZGV4Lmh0bWxgIGNhbiBzYWZlbHkgYmUgcHJvY2Vzc2VkIHVzaW5nIHNlcnZlci1zaWRlIHRlY2hub2xvZ2llcyBzdWNoIGFzXG4gKiBwcm92aWRlcnMuIEJpbmRpbmdzIGNhbiB0aHVzIHVzZSBkb3VibGUtY3VybHkgYHt7IHN5bnRheCB9fWAgd2l0aG91dCBjb2xsaXNpb24gZnJvbVxuICogQW5ndWxhciAyIGNvbXBvbmVudCBkb3VibGUtY3VybHkgYHt7IHN5bnRheCB9fWAuXG4gKlxuICogV2UgY2FuIHVzZSB0aGlzIHNjcmlwdCBjb2RlOlxuICpcbiAqIHtAZXhhbXBsZSBjb3JlL3RzL2Jvb3RzdHJhcC9ib290c3RyYXAudHMgcmVnaW9uPSdib290c3RyYXAnfVxuICpcbiAqIFdoZW4gdGhlIGFwcCBkZXZlbG9wZXIgaW52b2tlcyBgYm9vdHN0cmFwKClgIHdpdGggdGhlIHJvb3QgY29tcG9uZW50IGBNeUFwcGAgYXMgaXRzXG4gKiBhcmd1bWVudCwgQW5ndWxhciBwZXJmb3JtcyB0aGUgZm9sbG93aW5nIHRhc2tzOlxuICpcbiAqICAxLiBJdCB1c2VzIHRoZSBjb21wb25lbnQncyBgc2VsZWN0b3JgIHByb3BlcnR5IHRvIGxvY2F0ZSB0aGUgRE9NIGVsZW1lbnQgd2hpY2ggbmVlZHNcbiAqICAgICB0byBiZSB1cGdyYWRlZCBpbnRvIHRoZSBhbmd1bGFyIGNvbXBvbmVudC5cbiAqICAyLiBJdCBjcmVhdGVzIGEgbmV3IGNoaWxkIGluamVjdG9yIChmcm9tIHRoZSBwbGF0Zm9ybSBpbmplY3RvcikuIE9wdGlvbmFsbHksIHlvdSBjYW5cbiAqICAgICBhbHNvIG92ZXJyaWRlIHRoZSBpbmplY3RvciBjb25maWd1cmF0aW9uIGZvciBhbiBhcHAgYnkgaW52b2tpbmcgYGJvb3RzdHJhcGAgd2l0aCB0aGVcbiAqICAgICBgY29tcG9uZW50SW5qZWN0YWJsZUJpbmRpbmdzYCBhcmd1bWVudC5cbiAqICAzLiBJdCBjcmVhdGVzIGEgbmV3IGBab25lYCBhbmQgY29ubmVjdHMgaXQgdG8gdGhlIGFuZ3VsYXIgYXBwbGljYXRpb24ncyBjaGFuZ2UgZGV0ZWN0aW9uXG4gKiAgICAgZG9tYWluIGluc3RhbmNlLlxuICogIDQuIEl0IGNyZWF0ZXMgYW4gZW11bGF0ZWQgb3Igc2hhZG93IERPTSBvbiB0aGUgc2VsZWN0ZWQgY29tcG9uZW50J3MgaG9zdCBlbGVtZW50IGFuZCBsb2FkcyB0aGVcbiAqICAgICB0ZW1wbGF0ZSBpbnRvIGl0LlxuICogIDUuIEl0IGluc3RhbnRpYXRlcyB0aGUgc3BlY2lmaWVkIGNvbXBvbmVudC5cbiAqICA2LiBGaW5hbGx5LCBBbmd1bGFyIHBlcmZvcm1zIGNoYW5nZSBkZXRlY3Rpb24gdG8gYXBwbHkgdGhlIGluaXRpYWwgZGF0YSBwcm92aWRlcnMgZm9yIHRoZVxuICogICAgIGFwcGxpY2F0aW9uLlxuICpcbiAqXG4gKiAjIyBCb290c3RyYXBwaW5nIE11bHRpcGxlIEFwcGxpY2F0aW9uc1xuICpcbiAqIFdoZW4gd29ya2luZyB3aXRoaW4gYSBicm93c2VyIHdpbmRvdywgdGhlcmUgYXJlIG1hbnkgc2luZ2xldG9uIHJlc291cmNlczogY29va2llcywgdGl0bGUsXG4gKiBsb2NhdGlvbiwgYW5kIG90aGVycy4gQW5ndWxhciBzZXJ2aWNlcyB0aGF0IHJlcHJlc2VudCB0aGVzZSByZXNvdXJjZXMgbXVzdCBsaWtld2lzZSBiZVxuICogc2hhcmVkIGFjcm9zcyBhbGwgQW5ndWxhciBhcHBsaWNhdGlvbnMgdGhhdCBvY2N1cHkgdGhlIHNhbWUgYnJvd3NlciB3aW5kb3cuIEZvciB0aGlzXG4gKiByZWFzb24sIEFuZ3VsYXIgY3JlYXRlcyBleGFjdGx5IG9uZSBnbG9iYWwgcGxhdGZvcm0gb2JqZWN0IHdoaWNoIHN0b3JlcyBhbGwgc2hhcmVkXG4gKiBzZXJ2aWNlcywgYW5kIGVhY2ggYW5ndWxhciBhcHBsaWNhdGlvbiBpbmplY3RvciBoYXMgdGhlIHBsYXRmb3JtIGluamVjdG9yIGFzIGl0cyBwYXJlbnQuXG4gKlxuICogRWFjaCBhcHBsaWNhdGlvbiBoYXMgaXRzIG93biBwcml2YXRlIGluamVjdG9yIGFzIHdlbGwuIFdoZW4gdGhlcmUgYXJlIG11bHRpcGxlXG4gKiBhcHBsaWNhdGlvbnMgb24gYSBwYWdlLCBBbmd1bGFyIHRyZWF0cyBlYWNoIGFwcGxpY2F0aW9uIGluamVjdG9yJ3Mgc2VydmljZXMgYXMgcHJpdmF0ZVxuICogdG8gdGhhdCBhcHBsaWNhdGlvbi5cbiAqXG4gKiAjIyBBUElcbiAqXG4gKiAtIGBhcHBDb21wb25lbnRUeXBlYDogVGhlIHJvb3QgY29tcG9uZW50IHdoaWNoIHNob3VsZCBhY3QgYXMgdGhlIGFwcGxpY2F0aW9uLiBUaGlzIGlzXG4gKiAgIGEgcmVmZXJlbmNlIHRvIGEgYFR5cGVgIHdoaWNoIGlzIGFubm90YXRlZCB3aXRoIGBAQ29tcG9uZW50KC4uLilgLlxuICogLSBgY3VzdG9tUHJvdmlkZXJzYDogQW4gYWRkaXRpb25hbCBzZXQgb2YgcHJvdmlkZXJzIHRoYXQgY2FuIGJlIGFkZGVkIHRvIHRoZVxuICogICBhcHAgaW5qZWN0b3IgdG8gb3ZlcnJpZGUgZGVmYXVsdCBpbmplY3Rpb24gYmVoYXZpb3IuXG4gKlxuICogUmV0dXJucyBhIGBQcm9taXNlYCBvZiB7QGxpbmsgQ29tcG9uZW50UmVmfS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGJvb3RzdHJhcChcbiAgICBhcHBDb21wb25lbnRUeXBlOiBUeXBlLFxuICAgIGN1c3RvbVByb3ZpZGVycz86IEFycmF5PGFueSAvKlR5cGUgfCBQcm92aWRlciB8IGFueVtdKi8+KTogUHJvbWlzZTxDb21wb25lbnRSZWY+IHtcbiAgcmVmbGVjdG9yLnJlZmxlY3Rpb25DYXBhYmlsaXRpZXMgPSBuZXcgUmVmbGVjdGlvbkNhcGFiaWxpdGllcygpO1xuICBsZXQgYXBwUHJvdmlkZXJzID1cbiAgICAgIGlzUHJlc2VudChjdXN0b21Qcm92aWRlcnMpID8gW0JST1dTRVJfQVBQX1BST1ZJREVSUywgY3VzdG9tUHJvdmlkZXJzXSA6IEJST1dTRVJfQVBQX1BST1ZJREVSUztcbiAgcmV0dXJuIHBsYXRmb3JtKEJST1dTRVJfUFJPVklERVJTKS5hcHBsaWNhdGlvbihhcHBQcm92aWRlcnMpLmJvb3RzdHJhcChhcHBDb21wb25lbnRUeXBlKTtcbn1cbiJdfQ==\n\n/***/ },\n\n/***/ 195:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';var lang_1 = __webpack_require__(1);\r\n\tvar math_1 = __webpack_require__(172);\r\n\tvar util_1 = __webpack_require__(177);\r\n\tvar collection_1 = __webpack_require__(3);\r\n\tvar dom_adapter_1 = __webpack_require__(11);\r\n\tvar Animation = (function () {\r\n\t    /**\r\n\t     * Stores the start time and starts the animation\r\n\t     * @param element\r\n\t     * @param data\r\n\t     * @param browserDetails\r\n\t     */\r\n\t    function Animation(element, data, browserDetails) {\r\n\t        var _this = this;\r\n\t        this.element = element;\r\n\t        this.data = data;\r\n\t        this.browserDetails = browserDetails;\r\n\t        /** functions to be called upon completion */\r\n\t        this.callbacks = [];\r\n\t        /** functions for removing event listeners */\r\n\t        this.eventClearFunctions = [];\r\n\t        /** flag used to track whether or not the animation has finished */\r\n\t        this.completed = false;\r\n\t        this._stringPrefix = '';\r\n\t        this.startTime = lang_1.DateWrapper.toMillis(lang_1.DateWrapper.now());\r\n\t        this._stringPrefix = dom_adapter_1.DOM.getAnimationPrefix();\r\n\t        this.setup();\r\n\t        this.wait(function (timestamp) { return _this.start(); });\r\n\t    }\r\n\t    Object.defineProperty(Animation.prototype, \"totalTime\", {\r\n\t        /** total amount of time that the animation should take including delay */\r\n\t        get: function () {\r\n\t            var delay = this.computedDelay != null ? this.computedDelay : 0;\r\n\t            var duration = this.computedDuration != null ? this.computedDuration : 0;\r\n\t            return delay + duration;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Animation.prototype.wait = function (callback) {\r\n\t        // Firefox requires 2 frames for some reason\r\n\t        this.browserDetails.raf(callback, 2);\r\n\t    };\r\n\t    /**\r\n\t     * Sets up the initial styles before the animation is started\r\n\t     */\r\n\t    Animation.prototype.setup = function () {\r\n\t        if (this.data.fromStyles != null)\r\n\t            this.applyStyles(this.data.fromStyles);\r\n\t        if (this.data.duration != null)\r\n\t            this.applyStyles({ 'transitionDuration': this.data.duration.toString() + 'ms' });\r\n\t        if (this.data.delay != null)\r\n\t            this.applyStyles({ 'transitionDelay': this.data.delay.toString() + 'ms' });\r\n\t    };\r\n\t    /**\r\n\t     * After the initial setup has occurred, this method adds the animation styles\r\n\t     */\r\n\t    Animation.prototype.start = function () {\r\n\t        this.addClasses(this.data.classesToAdd);\r\n\t        this.addClasses(this.data.animationClasses);\r\n\t        this.removeClasses(this.data.classesToRemove);\r\n\t        if (this.data.toStyles != null)\r\n\t            this.applyStyles(this.data.toStyles);\r\n\t        var computedStyles = dom_adapter_1.DOM.getComputedStyle(this.element);\r\n\t        this.computedDelay =\r\n\t            math_1.Math.max(this.parseDurationString(computedStyles.getPropertyValue(this._stringPrefix + 'transition-delay')), this.parseDurationString(this.element.style.getPropertyValue(this._stringPrefix + 'transition-delay')));\r\n\t        this.computedDuration = math_1.Math.max(this.parseDurationString(computedStyles.getPropertyValue(this._stringPrefix + 'transition-duration')), this.parseDurationString(this.element.style.getPropertyValue(this._stringPrefix + 'transition-duration')));\r\n\t        this.addEvents();\r\n\t    };\r\n\t    /**\r\n\t     * Applies the provided styles to the element\r\n\t     * @param styles\r\n\t     */\r\n\t    Animation.prototype.applyStyles = function (styles) {\r\n\t        var _this = this;\r\n\t        collection_1.StringMapWrapper.forEach(styles, function (value, key) {\r\n\t            var dashCaseKey = util_1.camelCaseToDashCase(key);\r\n\t            if (lang_1.isPresent(dom_adapter_1.DOM.getStyle(_this.element, dashCaseKey))) {\r\n\t                dom_adapter_1.DOM.setStyle(_this.element, dashCaseKey, value.toString());\r\n\t            }\r\n\t            else {\r\n\t                dom_adapter_1.DOM.setStyle(_this.element, _this._stringPrefix + dashCaseKey, value.toString());\r\n\t            }\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * Adds the provided classes to the element\r\n\t     * @param classes\r\n\t     */\r\n\t    Animation.prototype.addClasses = function (classes) {\r\n\t        for (var i = 0, len = classes.length; i < len; i++)\r\n\t            dom_adapter_1.DOM.addClass(this.element, classes[i]);\r\n\t    };\r\n\t    /**\r\n\t     * Removes the provided classes from the element\r\n\t     * @param classes\r\n\t     */\r\n\t    Animation.prototype.removeClasses = function (classes) {\r\n\t        for (var i = 0, len = classes.length; i < len; i++)\r\n\t            dom_adapter_1.DOM.removeClass(this.element, classes[i]);\r\n\t    };\r\n\t    /**\r\n\t     * Adds events to track when animations have finished\r\n\t     */\r\n\t    Animation.prototype.addEvents = function () {\r\n\t        var _this = this;\r\n\t        if (this.totalTime > 0) {\r\n\t            this.eventClearFunctions.push(dom_adapter_1.DOM.onAndCancel(this.element, dom_adapter_1.DOM.getTransitionEnd(), function (event) { return _this.handleAnimationEvent(event); }));\r\n\t        }\r\n\t        else {\r\n\t            this.handleAnimationCompleted();\r\n\t        }\r\n\t    };\r\n\t    Animation.prototype.handleAnimationEvent = function (event) {\r\n\t        var elapsedTime = math_1.Math.round(event.elapsedTime * 1000);\r\n\t        if (!this.browserDetails.elapsedTimeIncludesDelay)\r\n\t            elapsedTime += this.computedDelay;\r\n\t        event.stopPropagation();\r\n\t        if (elapsedTime >= this.totalTime)\r\n\t            this.handleAnimationCompleted();\r\n\t    };\r\n\t    /**\r\n\t     * Runs all animation callbacks and removes temporary classes\r\n\t     */\r\n\t    Animation.prototype.handleAnimationCompleted = function () {\r\n\t        this.removeClasses(this.data.animationClasses);\r\n\t        this.callbacks.forEach(function (callback) { return callback(); });\r\n\t        this.callbacks = [];\r\n\t        this.eventClearFunctions.forEach(function (fn) { return fn(); });\r\n\t        this.eventClearFunctions = [];\r\n\t        this.completed = true;\r\n\t    };\r\n\t    /**\r\n\t     * Adds animation callbacks to be called upon completion\r\n\t     * @param callback\r\n\t     * @returns {Animation}\r\n\t     */\r\n\t    Animation.prototype.onComplete = function (callback) {\r\n\t        if (this.completed) {\r\n\t            callback();\r\n\t        }\r\n\t        else {\r\n\t            this.callbacks.push(callback);\r\n\t        }\r\n\t        return this;\r\n\t    };\r\n\t    /**\r\n\t     * Converts the duration string to the number of milliseconds\r\n\t     * @param duration\r\n\t     * @returns {number}\r\n\t     */\r\n\t    Animation.prototype.parseDurationString = function (duration) {\r\n\t        var maxValue = 0;\r\n\t        // duration must have at least 2 characters to be valid. (number + type)\r\n\t        if (duration == null || duration.length < 2) {\r\n\t            return maxValue;\r\n\t        }\r\n\t        else if (duration.substring(duration.length - 2) == 'ms') {\r\n\t            var value = lang_1.NumberWrapper.parseInt(this.stripLetters(duration), 10);\r\n\t            if (value > maxValue)\r\n\t                maxValue = value;\r\n\t        }\r\n\t        else if (duration.substring(duration.length - 1) == 's') {\r\n\t            var ms = lang_1.NumberWrapper.parseFloat(this.stripLetters(duration)) * 1000;\r\n\t            var value = math_1.Math.floor(ms);\r\n\t            if (value > maxValue)\r\n\t                maxValue = value;\r\n\t        }\r\n\t        return maxValue;\r\n\t    };\r\n\t    /**\r\n\t     * Strips the letters from the duration string\r\n\t     * @param str\r\n\t     * @returns {string}\r\n\t     */\r\n\t    Animation.prototype.stripLetters = function (str) {\r\n\t        return lang_1.StringWrapper.replaceAll(str, lang_1.RegExpWrapper.create('[^0-9]+$', ''), '');\r\n\t    };\r\n\t    return Animation;\r\n\t})();\r\n\texports.Animation = Animation;\r\n\t//# sourceMappingURL=data:application/json;base64,\n\n/***/ },\n\n/***/ 196:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';var css_animation_options_1 = __webpack_require__(197);\r\n\tvar animation_1 = __webpack_require__(195);\r\n\tvar CssAnimationBuilder = (function () {\r\n\t    /**\r\n\t     * Accepts public properties for CssAnimationBuilder\r\n\t     */\r\n\t    function CssAnimationBuilder(browserDetails) {\r\n\t        this.browserDetails = browserDetails;\r\n\t        /** @type {CssAnimationOptions} */\r\n\t        this.data = new css_animation_options_1.CssAnimationOptions();\r\n\t    }\r\n\t    /**\r\n\t     * Adds a temporary class that will be removed at the end of the animation\r\n\t     * @param className\r\n\t     */\r\n\t    CssAnimationBuilder.prototype.addAnimationClass = function (className) {\r\n\t        this.data.animationClasses.push(className);\r\n\t        return this;\r\n\t    };\r\n\t    /**\r\n\t     * Adds a class that will remain on the element after the animation has finished\r\n\t     * @param className\r\n\t     */\r\n\t    CssAnimationBuilder.prototype.addClass = function (className) {\r\n\t        this.data.classesToAdd.push(className);\r\n\t        return this;\r\n\t    };\r\n\t    /**\r\n\t     * Removes a class from the element\r\n\t     * @param className\r\n\t     */\r\n\t    CssAnimationBuilder.prototype.removeClass = function (className) {\r\n\t        this.data.classesToRemove.push(className);\r\n\t        return this;\r\n\t    };\r\n\t    /**\r\n\t     * Sets the animation duration (and overrides any defined through CSS)\r\n\t     * @param duration\r\n\t     */\r\n\t    CssAnimationBuilder.prototype.setDuration = function (duration) {\r\n\t        this.data.duration = duration;\r\n\t        return this;\r\n\t    };\r\n\t    /**\r\n\t     * Sets the animation delay (and overrides any defined through CSS)\r\n\t     * @param delay\r\n\t     */\r\n\t    CssAnimationBuilder.prototype.setDelay = function (delay) {\r\n\t        this.data.delay = delay;\r\n\t        return this;\r\n\t    };\r\n\t    /**\r\n\t     * Sets styles for both the initial state and the destination state\r\n\t     * @param from\r\n\t     * @param to\r\n\t     */\r\n\t    CssAnimationBuilder.prototype.setStyles = function (from, to) {\r\n\t        return this.setFromStyles(from).setToStyles(to);\r\n\t    };\r\n\t    /**\r\n\t     * Sets the initial styles for the animation\r\n\t     * @param from\r\n\t     */\r\n\t    CssAnimationBuilder.prototype.setFromStyles = function (from) {\r\n\t        this.data.fromStyles = from;\r\n\t        return this;\r\n\t    };\r\n\t    /**\r\n\t     * Sets the destination styles for the animation\r\n\t     * @param to\r\n\t     */\r\n\t    CssAnimationBuilder.prototype.setToStyles = function (to) {\r\n\t        this.data.toStyles = to;\r\n\t        return this;\r\n\t    };\r\n\t    /**\r\n\t     * Starts the animation and returns a promise\r\n\t     * @param element\r\n\t     */\r\n\t    CssAnimationBuilder.prototype.start = function (element) {\r\n\t        return new animation_1.Animation(element, this.data, this.browserDetails);\r\n\t    };\r\n\t    return CssAnimationBuilder;\r\n\t})();\r\n\texports.CssAnimationBuilder = CssAnimationBuilder;\r\n\t//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3NzX2FuaW1hdGlvbl9idWlsZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYW5ndWxhcjIvc3JjL2FuaW1hdGUvY3NzX2FuaW1hdGlvbl9idWlsZGVyLnRzIl0sIm5hbWVzIjpbIkNzc0FuaW1hdGlvbkJ1aWxkZXIiLCJDc3NBbmltYXRpb25CdWlsZGVyLmNvbnN0cnVjdG9yIiwiQ3NzQW5pbWF0aW9uQnVpbGRlci5hZGRBbmltYXRpb25DbGFzcyIsIkNzc0FuaW1hdGlvbkJ1aWxkZXIuYWRkQ2xhc3MiLCJDc3NBbmltYXRpb25CdWlsZGVyLnJlbW92ZUNsYXNzIiwiQ3NzQW5pbWF0aW9uQnVpbGRlci5zZXREdXJhdGlvbiIsIkNzc0FuaW1hdGlvbkJ1aWxkZXIuc2V0RGVsYXkiLCJDc3NBbmltYXRpb25CdWlsZGVyLnNldFN0eWxlcyIsIkNzc0FuaW1hdGlvbkJ1aWxkZXIuc2V0RnJvbVN0eWxlcyIsIkNzc0FuaW1hdGlvbkJ1aWxkZXIuc2V0VG9TdHlsZXMiLCJDc3NBbmltYXRpb25CdWlsZGVyLnN0YXJ0Il0sIm1hcHBpbmdzIjoiQUFBQSxzQ0FBa0MseUJBQXlCLENBQUMsQ0FBQTtBQUM1RCwwQkFBd0IsYUFBYSxDQUFDLENBQUE7QUFHdEM7SUFJRUE7O09BRUdBO0lBQ0hBLDZCQUFtQkEsY0FBOEJBO1FBQTlCQyxtQkFBY0EsR0FBZEEsY0FBY0EsQ0FBZ0JBO1FBTmpEQSxrQ0FBa0NBO1FBQ2xDQSxTQUFJQSxHQUF3QkEsSUFBSUEsMkNBQW1CQSxFQUFFQSxDQUFDQTtJQUtGQSxDQUFDQTtJQUVyREQ7OztPQUdHQTtJQUNIQSwrQ0FBaUJBLEdBQWpCQSxVQUFrQkEsU0FBaUJBO1FBQ2pDRSxJQUFJQSxDQUFDQSxJQUFJQSxDQUFDQSxnQkFBZ0JBLENBQUNBLElBQUlBLENBQUNBLFNBQVNBLENBQUNBLENBQUNBO1FBQzNDQSxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQTtJQUNkQSxDQUFDQTtJQUVERjs7O09BR0dBO0lBQ0hBLHNDQUFRQSxHQUFSQSxVQUFTQSxTQUFpQkE7UUFDeEJHLElBQUlBLENBQUNBLElBQUlBLENBQUNBLFlBQVlBLENBQUNBLElBQUlBLENBQUNBLFNBQVNBLENBQUNBLENBQUNBO1FBQ3ZDQSxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQTtJQUNkQSxDQUFDQTtJQUVESDs7O09BR0dBO0lBQ0hBLHlDQUFXQSxHQUFYQSxVQUFZQSxTQUFpQkE7UUFDM0JJLElBQUlBLENBQUNBLElBQUlBLENBQUNBLGVBQWVBLENBQUNBLElBQUlBLENBQUNBLFNBQVNBLENBQUNBLENBQUNBO1FBQzFDQSxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQTtJQUNkQSxDQUFDQTtJQUVESjs7O09BR0dBO0lBQ0hBLHlDQUFXQSxHQUFYQSxVQUFZQSxRQUFnQkE7UUFDMUJLLElBQUlBLENBQUNBLElBQUlBLENBQUNBLFFBQVFBLEdBQUdBLFFBQVFBLENBQUNBO1FBQzlCQSxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQTtJQUNkQSxDQUFDQTtJQUVETDs7O09BR0dBO0lBQ0hBLHNDQUFRQSxHQUFSQSxVQUFTQSxLQUFhQTtRQUNwQk0sSUFBSUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsS0FBS0EsR0FBR0EsS0FBS0EsQ0FBQ0E7UUFDeEJBLE1BQU1BLENBQUNBLElBQUlBLENBQUNBO0lBQ2RBLENBQUNBO0lBRUROOzs7O09BSUdBO0lBQ0hBLHVDQUFTQSxHQUFUQSxVQUFVQSxJQUEwQkEsRUFBRUEsRUFBd0JBO1FBQzVETyxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQSxhQUFhQSxDQUFDQSxJQUFJQSxDQUFDQSxDQUFDQSxXQUFXQSxDQUFDQSxFQUFFQSxDQUFDQSxDQUFDQTtJQUNsREEsQ0FBQ0E7SUFFRFA7OztPQUdHQTtJQUNIQSwyQ0FBYUEsR0FBYkEsVUFBY0EsSUFBMEJBO1FBQ3RDUSxJQUFJQSxDQUFDQSxJQUFJQSxDQUFDQSxVQUFVQSxHQUFHQSxJQUFJQSxDQUFDQTtRQUM1QkEsTUFBTUEsQ0FBQ0EsSUFBSUEsQ0FBQ0E7SUFDZEEsQ0FBQ0E7SUFFRFI7OztPQUdHQTtJQUNIQSx5Q0FBV0EsR0FBWEEsVUFBWUEsRUFBd0JBO1FBQ2xDUyxJQUFJQSxDQUFDQSxJQUFJQSxDQUFDQSxRQUFRQSxHQUFHQSxFQUFFQSxDQUFDQTtRQUN4QkEsTUFBTUEsQ0FBQ0EsSUFBSUEsQ0FBQ0E7SUFDZEEsQ0FBQ0E7SUFFRFQ7OztPQUdHQTtJQUNIQSxtQ0FBS0EsR0FBTEEsVUFBTUEsT0FBb0JBO1FBQ3hCVSxNQUFNQSxDQUFDQSxJQUFJQSxxQkFBU0EsQ0FBQ0EsT0FBT0EsRUFBRUEsSUFBSUEsQ0FBQ0EsSUFBSUEsRUFBRUEsSUFBSUEsQ0FBQ0EsY0FBY0EsQ0FBQ0EsQ0FBQ0E7SUFDaEVBLENBQUNBO0lBQ0hWLDBCQUFDQTtBQUFEQSxDQUFDQSxBQXhGRCxJQXdGQztBQXhGWSwyQkFBbUIsc0JBd0YvQixDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDc3NBbmltYXRpb25PcHRpb25zfSBmcm9tICcuL2Nzc19hbmltYXRpb25fb3B0aW9ucyc7XG5pbXBvcnQge0FuaW1hdGlvbn0gZnJvbSAnLi9hbmltYXRpb24nO1xuaW1wb3J0IHtCcm93c2VyRGV0YWlsc30gZnJvbSAnLi9icm93c2VyX2RldGFpbHMnO1xuXG5leHBvcnQgY2xhc3MgQ3NzQW5pbWF0aW9uQnVpbGRlciB7XG4gIC8qKiBAdHlwZSB7Q3NzQW5pbWF0aW9uT3B0aW9uc30gKi9cbiAgZGF0YTogQ3NzQW5pbWF0aW9uT3B0aW9ucyA9IG5ldyBDc3NBbmltYXRpb25PcHRpb25zKCk7XG5cbiAgLyoqXG4gICAqIEFjY2VwdHMgcHVibGljIHByb3BlcnRpZXMgZm9yIENzc0FuaW1hdGlvbkJ1aWxkZXJcbiAgICovXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBicm93c2VyRGV0YWlsczogQnJvd3NlckRldGFpbHMpIHt9XG5cbiAgLyoqXG4gICAqIEFkZHMgYSB0ZW1wb3JhcnkgY2xhc3MgdGhhdCB3aWxsIGJlIHJlbW92ZWQgYXQgdGhlIGVuZCBvZiB0aGUgYW5pbWF0aW9uXG4gICAqIEBwYXJhbSBjbGFzc05hbWVcbiAgICovXG4gIGFkZEFuaW1hdGlvbkNsYXNzKGNsYXNzTmFtZTogc3RyaW5nKTogQ3NzQW5pbWF0aW9uQnVpbGRlciB7XG4gICAgdGhpcy5kYXRhLmFuaW1hdGlvbkNsYXNzZXMucHVzaChjbGFzc05hbWUpO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgLyoqXG4gICAqIEFkZHMgYSBjbGFzcyB0aGF0IHdpbGwgcmVtYWluIG9uIHRoZSBlbGVtZW50IGFmdGVyIHRoZSBhbmltYXRpb24gaGFzIGZpbmlzaGVkXG4gICAqIEBwYXJhbSBjbGFzc05hbWVcbiAgICovXG4gIGFkZENsYXNzKGNsYXNzTmFtZTogc3RyaW5nKTogQ3NzQW5pbWF0aW9uQnVpbGRlciB7XG4gICAgdGhpcy5kYXRhLmNsYXNzZXNUb0FkZC5wdXNoKGNsYXNzTmFtZSk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICAvKipcbiAgICogUmVtb3ZlcyBhIGNsYXNzIGZyb20gdGhlIGVsZW1lbnRcbiAgICogQHBhcmFtIGNsYXNzTmFtZVxuICAgKi9cbiAgcmVtb3ZlQ2xhc3MoY2xhc3NOYW1lOiBzdHJpbmcpOiBDc3NBbmltYXRpb25CdWlsZGVyIHtcbiAgICB0aGlzLmRhdGEuY2xhc3Nlc1RvUmVtb3ZlLnB1c2goY2xhc3NOYW1lKTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIC8qKlxuICAgKiBTZXRzIHRoZSBhbmltYXRpb24gZHVyYXRpb24gKGFuZCBvdmVycmlkZXMgYW55IGRlZmluZWQgdGhyb3VnaCBDU1MpXG4gICAqIEBwYXJhbSBkdXJhdGlvblxuICAgKi9cbiAgc2V0RHVyYXRpb24oZHVyYXRpb246IG51bWJlcik6IENzc0FuaW1hdGlvbkJ1aWxkZXIge1xuICAgIHRoaXMuZGF0YS5kdXJhdGlvbiA9IGR1cmF0aW9uO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgLyoqXG4gICAqIFNldHMgdGhlIGFuaW1hdGlvbiBkZWxheSAoYW5kIG92ZXJyaWRlcyBhbnkgZGVmaW5lZCB0aHJvdWdoIENTUylcbiAgICogQHBhcmFtIGRlbGF5XG4gICAqL1xuICBzZXREZWxheShkZWxheTogbnVtYmVyKTogQ3NzQW5pbWF0aW9uQnVpbGRlciB7XG4gICAgdGhpcy5kYXRhLmRlbGF5ID0gZGVsYXk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICAvKipcbiAgICogU2V0cyBzdHlsZXMgZm9yIGJvdGggdGhlIGluaXRpYWwgc3RhdGUgYW5kIHRoZSBkZXN0aW5hdGlvbiBzdGF0ZVxuICAgKiBAcGFyYW0gZnJvbVxuICAgKiBAcGFyYW0gdG9cbiAgICovXG4gIHNldFN0eWxlcyhmcm9tOiB7W2tleTogc3RyaW5nXTogYW55fSwgdG86IHtba2V5OiBzdHJpbmddOiBhbnl9KTogQ3NzQW5pbWF0aW9uQnVpbGRlciB7XG4gICAgcmV0dXJuIHRoaXMuc2V0RnJvbVN0eWxlcyhmcm9tKS5zZXRUb1N0eWxlcyh0byk7XG4gIH1cblxuICAvKipcbiAgICogU2V0cyB0aGUgaW5pdGlhbCBzdHlsZXMgZm9yIHRoZSBhbmltYXRpb25cbiAgICogQHBhcmFtIGZyb21cbiAgICovXG4gIHNldEZyb21TdHlsZXMoZnJvbToge1trZXk6IHN0cmluZ106IGFueX0pOiBDc3NBbmltYXRpb25CdWlsZGVyIHtcbiAgICB0aGlzLmRhdGEuZnJvbVN0eWxlcyA9IGZyb207XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICAvKipcbiAgICogU2V0cyB0aGUgZGVzdGluYXRpb24gc3R5bGVzIGZvciB0aGUgYW5pbWF0aW9uXG4gICAqIEBwYXJhbSB0b1xuICAgKi9cbiAgc2V0VG9TdHlsZXModG86IHtba2V5OiBzdHJpbmddOiBhbnl9KTogQ3NzQW5pbWF0aW9uQnVpbGRlciB7XG4gICAgdGhpcy5kYXRhLnRvU3R5bGVzID0gdG87XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICAvKipcbiAgICogU3RhcnRzIHRoZSBhbmltYXRpb24gYW5kIHJldHVybnMgYSBwcm9taXNlXG4gICAqIEBwYXJhbSBlbGVtZW50XG4gICAqL1xuICBzdGFydChlbGVtZW50OiBIVE1MRWxlbWVudCk6IEFuaW1hdGlvbiB7XG4gICAgcmV0dXJuIG5ldyBBbmltYXRpb24oZWxlbWVudCwgdGhpcy5kYXRhLCB0aGlzLmJyb3dzZXJEZXRhaWxzKTtcbiAgfVxufVxuIl19\n\n/***/ },\n\n/***/ 197:\n/***/ function(module, exports) {\n\n\t'use strict';var CssAnimationOptions = (function () {\r\n\t    function CssAnimationOptions() {\r\n\t        /** classes to be added to the element */\r\n\t        this.classesToAdd = [];\r\n\t        /** classes to be removed from the element */\r\n\t        this.classesToRemove = [];\r\n\t        /** classes to be added for the duration of the animation */\r\n\t        this.animationClasses = [];\r\n\t    }\r\n\t    return CssAnimationOptions;\r\n\t})();\r\n\texports.CssAnimationOptions = CssAnimationOptions;\r\n\t//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3NzX2FuaW1hdGlvbl9vcHRpb25zLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYW5ndWxhcjIvc3JjL2FuaW1hdGUvY3NzX2FuaW1hdGlvbl9vcHRpb25zLnRzIl0sIm5hbWVzIjpbIkNzc0FuaW1hdGlvbk9wdGlvbnMiLCJDc3NBbmltYXRpb25PcHRpb25zLmNvbnN0cnVjdG9yIl0sIm1hcHBpbmdzIjoiQUFBQTtJQUFBQTtRQU9FQyx5Q0FBeUNBO1FBQ3pDQSxpQkFBWUEsR0FBYUEsRUFBRUEsQ0FBQ0E7UUFFNUJBLDZDQUE2Q0E7UUFDN0NBLG9CQUFlQSxHQUFhQSxFQUFFQSxDQUFDQTtRQUUvQkEsNERBQTREQTtRQUM1REEscUJBQWdCQSxHQUFhQSxFQUFFQSxDQUFDQTtJQU9sQ0EsQ0FBQ0E7SUFBREQsMEJBQUNBO0FBQURBLENBQUNBLEFBckJELElBcUJDO0FBckJZLDJCQUFtQixzQkFxQi9CLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgQ3NzQW5pbWF0aW9uT3B0aW9ucyB7XG4gIC8qKiBpbml0aWFsIHN0eWxlcyBmb3IgdGhlIGVsZW1lbnQgKi9cbiAgZnJvbVN0eWxlczoge1trZXk6IHN0cmluZ106IGFueX07XG5cbiAgLyoqIGRlc3RpbmF0aW9uIHN0eWxlcyBmb3IgdGhlIGVsZW1lbnQgKi9cbiAgdG9TdHlsZXM6IHtba2V5OiBzdHJpbmddOiBhbnl9O1xuXG4gIC8qKiBjbGFzc2VzIHRvIGJlIGFkZGVkIHRvIHRoZSBlbGVtZW50ICovXG4gIGNsYXNzZXNUb0FkZDogc3RyaW5nW10gPSBbXTtcblxuICAvKiogY2xhc3NlcyB0byBiZSByZW1vdmVkIGZyb20gdGhlIGVsZW1lbnQgKi9cbiAgY2xhc3Nlc1RvUmVtb3ZlOiBzdHJpbmdbXSA9IFtdO1xuXG4gIC8qKiBjbGFzc2VzIHRvIGJlIGFkZGVkIGZvciB0aGUgZHVyYXRpb24gb2YgdGhlIGFuaW1hdGlvbiAqL1xuICBhbmltYXRpb25DbGFzc2VzOiBzdHJpbmdbXSA9IFtdO1xuXG4gIC8qKiBvdmVycmlkZSB0aGUgZHVyYXRpb24gb2YgdGhlIGFuaW1hdGlvbiAoaW4gbWlsbGlzZWNvbmRzKSAqL1xuICBkdXJhdGlvbjogbnVtYmVyO1xuXG4gIC8qKiBvdmVycmlkZSB0aGUgdHJhbnNpdGlvbiBkZWxheSAoaW4gbWlsbGlzZWNvbmRzKSAqL1xuICBkZWxheTogbnVtYmVyO1xufVxuIl19\n\n/***/ },\n\n/***/ 205:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';var collection_1 = __webpack_require__(3);\r\n\tvar lang_1 = __webpack_require__(1);\r\n\tvar reflection_1 = __webpack_require__(14);\r\n\tvar change_detection_1 = __webpack_require__(15);\r\n\tvar template_ast_1 = __webpack_require__(32);\r\n\tvar interfaces_1 = __webpack_require__(63);\r\n\tfunction createChangeDetectorDefinitions(componentType, componentStrategy, genConfig, parsedTemplate) {\r\n\t    var pvVisitors = [];\r\n\t    var visitor = new ProtoViewVisitor(null, pvVisitors, componentStrategy);\r\n\t    template_ast_1.templateVisitAll(visitor, parsedTemplate);\r\n\t    return createChangeDefinitions(pvVisitors, componentType, genConfig);\r\n\t}\r\n\texports.createChangeDetectorDefinitions = createChangeDetectorDefinitions;\r\n\tvar ProtoViewVisitor = (function () {\r\n\t    function ProtoViewVisitor(parent, allVisitors, strategy) {\r\n\t        this.parent = parent;\r\n\t        this.allVisitors = allVisitors;\r\n\t        this.strategy = strategy;\r\n\t        this.nodeCount = 0;\r\n\t        this.boundElementCount = 0;\r\n\t        this.variableNames = [];\r\n\t        this.bindingRecords = [];\r\n\t        this.eventRecords = [];\r\n\t        this.directiveRecords = [];\r\n\t        this.viewIndex = allVisitors.length;\r\n\t        allVisitors.push(this);\r\n\t    }\r\n\t    ProtoViewVisitor.prototype.visitEmbeddedTemplate = function (ast, context) {\r\n\t        this.nodeCount++;\r\n\t        this.boundElementCount++;\r\n\t        template_ast_1.templateVisitAll(this, ast.outputs);\r\n\t        for (var i = 0; i < ast.directives.length; i++) {\r\n\t            ast.directives[i].visit(this, i);\r\n\t        }\r\n\t        var childVisitor = new ProtoViewVisitor(this, this.allVisitors, change_detection_1.ChangeDetectionStrategy.Default);\r\n\t        // Attention: variables present on an embedded template count towards\r\n\t        // the embedded template and not the template anchor!\r\n\t        template_ast_1.templateVisitAll(childVisitor, ast.vars);\r\n\t        template_ast_1.templateVisitAll(childVisitor, ast.children);\r\n\t        return null;\r\n\t    };\r\n\t    ProtoViewVisitor.prototype.visitElement = function (ast, context) {\r\n\t        this.nodeCount++;\r\n\t        if (ast.isBound()) {\r\n\t            this.boundElementCount++;\r\n\t        }\r\n\t        template_ast_1.templateVisitAll(this, ast.inputs, null);\r\n\t        template_ast_1.templateVisitAll(this, ast.outputs);\r\n\t        template_ast_1.templateVisitAll(this, ast.exportAsVars);\r\n\t        for (var i = 0; i < ast.directives.length; i++) {\r\n\t            ast.directives[i].visit(this, i);\r\n\t        }\r\n\t        template_ast_1.templateVisitAll(this, ast.children);\r\n\t        return null;\r\n\t    };\r\n\t    ProtoViewVisitor.prototype.visitNgContent = function (ast, context) { return null; };\r\n\t    ProtoViewVisitor.prototype.visitVariable = function (ast, context) {\r\n\t        this.variableNames.push(ast.name);\r\n\t        return null;\r\n\t    };\r\n\t    ProtoViewVisitor.prototype.visitEvent = function (ast, directiveRecord) {\r\n\t        var bindingRecord = lang_1.isPresent(directiveRecord) ?\r\n\t            change_detection_1.BindingRecord.createForHostEvent(ast.handler, ast.fullName, directiveRecord) :\r\n\t            change_detection_1.BindingRecord.createForEvent(ast.handler, ast.fullName, this.boundElementCount - 1);\r\n\t        this.eventRecords.push(bindingRecord);\r\n\t        return null;\r\n\t    };\r\n\t    ProtoViewVisitor.prototype.visitElementProperty = function (ast, directiveRecord) {\r\n\t        var boundElementIndex = this.boundElementCount - 1;\r\n\t        var dirIndex = lang_1.isPresent(directiveRecord) ? directiveRecord.directiveIndex : null;\r\n\t        var bindingRecord;\r\n\t        if (ast.type === template_ast_1.PropertyBindingType.Property) {\r\n\t            bindingRecord =\r\n\t                lang_1.isPresent(dirIndex) ?\r\n\t                    change_detection_1.BindingRecord.createForHostProperty(dirIndex, ast.value, ast.name) :\r\n\t                    change_detection_1.BindingRecord.createForElementProperty(ast.value, boundElementIndex, ast.name);\r\n\t        }\r\n\t        else if (ast.type === template_ast_1.PropertyBindingType.Attribute) {\r\n\t            bindingRecord =\r\n\t                lang_1.isPresent(dirIndex) ?\r\n\t                    change_detection_1.BindingRecord.createForHostAttribute(dirIndex, ast.value, ast.name) :\r\n\t                    change_detection_1.BindingRecord.createForElementAttribute(ast.value, boundElementIndex, ast.name);\r\n\t        }\r\n\t        else if (ast.type === template_ast_1.PropertyBindingType.Class) {\r\n\t            bindingRecord =\r\n\t                lang_1.isPresent(dirIndex) ?\r\n\t                    change_detection_1.BindingRecord.createForHostClass(dirIndex, ast.value, ast.name) :\r\n\t                    change_detection_1.BindingRecord.createForElementClass(ast.value, boundElementIndex, ast.name);\r\n\t        }\r\n\t        else if (ast.type === template_ast_1.PropertyBindingType.Style) {\r\n\t            bindingRecord =\r\n\t                lang_1.isPresent(dirIndex) ?\r\n\t                    change_detection_1.BindingRecord.createForHostStyle(dirIndex, ast.value, ast.name, ast.unit) :\r\n\t                    change_detection_1.BindingRecord.createForElementStyle(ast.value, boundElementIndex, ast.name, ast.unit);\r\n\t        }\r\n\t        this.bindingRecords.push(bindingRecord);\r\n\t        return null;\r\n\t    };\r\n\t    ProtoViewVisitor.prototype.visitAttr = function (ast, context) { return null; };\r\n\t    ProtoViewVisitor.prototype.visitBoundText = function (ast, context) {\r\n\t        var nodeIndex = this.nodeCount++;\r\n\t        this.bindingRecords.push(change_detection_1.BindingRecord.createForTextNode(ast.value, nodeIndex));\r\n\t        return null;\r\n\t    };\r\n\t    ProtoViewVisitor.prototype.visitText = function (ast, context) {\r\n\t        this.nodeCount++;\r\n\t        return null;\r\n\t    };\r\n\t    ProtoViewVisitor.prototype.visitDirective = function (ast, directiveIndexAsNumber) {\r\n\t        var directiveIndex = new change_detection_1.DirectiveIndex(this.boundElementCount - 1, directiveIndexAsNumber);\r\n\t        var directiveMetadata = ast.directive;\r\n\t        var outputsArray = [];\r\n\t        collection_1.StringMapWrapper.forEach(ast.directive.outputs, function (eventName, dirProperty) { return outputsArray.push([dirProperty, eventName]); });\r\n\t        var directiveRecord = new change_detection_1.DirectiveRecord({\r\n\t            directiveIndex: directiveIndex,\r\n\t            callAfterContentInit: directiveMetadata.lifecycleHooks.indexOf(interfaces_1.LifecycleHooks.AfterContentInit) !== -1,\r\n\t            callAfterContentChecked: directiveMetadata.lifecycleHooks.indexOf(interfaces_1.LifecycleHooks.AfterContentChecked) !== -1,\r\n\t            callAfterViewInit: directiveMetadata.lifecycleHooks.indexOf(interfaces_1.LifecycleHooks.AfterViewInit) !== -1,\r\n\t            callAfterViewChecked: directiveMetadata.lifecycleHooks.indexOf(interfaces_1.LifecycleHooks.AfterViewChecked) !== -1,\r\n\t            callOnChanges: directiveMetadata.lifecycleHooks.indexOf(interfaces_1.LifecycleHooks.OnChanges) !== -1,\r\n\t            callDoCheck: directiveMetadata.lifecycleHooks.indexOf(interfaces_1.LifecycleHooks.DoCheck) !== -1,\r\n\t            callOnInit: directiveMetadata.lifecycleHooks.indexOf(interfaces_1.LifecycleHooks.OnInit) !== -1,\r\n\t            callOnDestroy: directiveMetadata.lifecycleHooks.indexOf(interfaces_1.LifecycleHooks.OnDestroy) !== -1,\r\n\t            changeDetection: directiveMetadata.changeDetection,\r\n\t            outputs: outputsArray\r\n\t        });\r\n\t        this.directiveRecords.push(directiveRecord);\r\n\t        template_ast_1.templateVisitAll(this, ast.inputs, directiveRecord);\r\n\t        var bindingRecords = this.bindingRecords;\r\n\t        if (directiveRecord.callOnChanges) {\r\n\t            bindingRecords.push(change_detection_1.BindingRecord.createDirectiveOnChanges(directiveRecord));\r\n\t        }\r\n\t        if (directiveRecord.callOnInit) {\r\n\t            bindingRecords.push(change_detection_1.BindingRecord.createDirectiveOnInit(directiveRecord));\r\n\t        }\r\n\t        if (directiveRecord.callDoCheck) {\r\n\t            bindingRecords.push(change_detection_1.BindingRecord.createDirectiveDoCheck(directiveRecord));\r\n\t        }\r\n\t        template_ast_1.templateVisitAll(this, ast.hostProperties, directiveRecord);\r\n\t        template_ast_1.templateVisitAll(this, ast.hostEvents, directiveRecord);\r\n\t        template_ast_1.templateVisitAll(this, ast.exportAsVars);\r\n\t        return null;\r\n\t    };\r\n\t    ProtoViewVisitor.prototype.visitDirectiveProperty = function (ast, directiveRecord) {\r\n\t        // TODO: these setters should eventually be created by change detection, to make\r\n\t        // it monomorphic!\r\n\t        var setter = reflection_1.reflector.setter(ast.directiveName);\r\n\t        this.bindingRecords.push(change_detection_1.BindingRecord.createForDirective(ast.value, ast.directiveName, setter, directiveRecord));\r\n\t        return null;\r\n\t    };\r\n\t    return ProtoViewVisitor;\r\n\t})();\r\n\tfunction createChangeDefinitions(pvVisitors, componentType, genConfig) {\r\n\t    var pvVariableNames = _collectNestedProtoViewsVariableNames(pvVisitors);\r\n\t    return pvVisitors.map(function (pvVisitor) {\r\n\t        var id = componentType.name + \"_\" + pvVisitor.viewIndex;\r\n\t        return new change_detection_1.ChangeDetectorDefinition(id, pvVisitor.strategy, pvVariableNames[pvVisitor.viewIndex], pvVisitor.bindingRecords, pvVisitor.eventRecords, pvVisitor.directiveRecords, genConfig);\r\n\t    });\r\n\t}\r\n\tfunction _collectNestedProtoViewsVariableNames(pvVisitors) {\r\n\t    var nestedPvVariableNames = collection_1.ListWrapper.createFixedSize(pvVisitors.length);\r\n\t    pvVisitors.forEach(function (pv) {\r\n\t        var parentVariableNames = lang_1.isPresent(pv.parent) ? nestedPvVariableNames[pv.parent.viewIndex] : [];\r\n\t        nestedPvVariableNames[pv.viewIndex] = parentVariableNames.concat(pv.variableNames);\r\n\t    });\r\n\t    return nestedPvVariableNames;\r\n\t}\r\n\t//# sourceMappingURL=data:application/json;base64,\n\n/***/ },\n\n/***/ 206:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';function __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\tvar runtime_compiler_1 = __webpack_require__(141);\r\n\tvar template_compiler_1 = __webpack_require__(95);\r\n\texports.TemplateCompiler = template_compiler_1.TemplateCompiler;\r\n\tvar directive_metadata_1 = __webpack_require__(59);\r\n\texports.CompileDirectiveMetadata = directive_metadata_1.CompileDirectiveMetadata;\r\n\texports.CompileTypeMetadata = directive_metadata_1.CompileTypeMetadata;\r\n\texports.CompileTemplateMetadata = directive_metadata_1.CompileTemplateMetadata;\r\n\tvar source_module_1 = __webpack_require__(31);\r\n\texports.SourceModule = source_module_1.SourceModule;\r\n\texports.SourceWithImports = source_module_1.SourceWithImports;\r\n\tvar platform_directives_and_pipes_1 = __webpack_require__(110);\r\n\texports.PLATFORM_DIRECTIVES = platform_directives_and_pipes_1.PLATFORM_DIRECTIVES;\r\n\texports.PLATFORM_PIPES = platform_directives_and_pipes_1.PLATFORM_PIPES;\r\n\t__export(__webpack_require__(32));\r\n\tvar template_parser_1 = __webpack_require__(96);\r\n\texports.TEMPLATE_TRANSFORMS = template_parser_1.TEMPLATE_TRANSFORMS;\r\n\tvar lang_1 = __webpack_require__(1);\r\n\tvar di_1 = __webpack_require__(6);\r\n\tvar template_parser_2 = __webpack_require__(96);\r\n\tvar html_parser_1 = __webpack_require__(90);\r\n\tvar template_normalizer_1 = __webpack_require__(145);\r\n\tvar runtime_metadata_1 = __webpack_require__(142);\r\n\tvar change_detector_compiler_1 = __webpack_require__(140);\r\n\tvar style_compiler_1 = __webpack_require__(144);\r\n\tvar view_compiler_1 = __webpack_require__(147);\r\n\tvar proto_view_compiler_1 = __webpack_require__(92);\r\n\tvar template_compiler_2 = __webpack_require__(95);\r\n\tvar change_detection_1 = __webpack_require__(15);\r\n\tvar compiler_1 = __webpack_require__(35);\r\n\tvar runtime_compiler_2 = __webpack_require__(141);\r\n\tvar element_schema_registry_1 = __webpack_require__(93);\r\n\tvar dom_element_schema_registry_1 = __webpack_require__(208);\r\n\tvar url_resolver_1 = __webpack_require__(44);\r\n\tvar change_detection_2 = __webpack_require__(15);\r\n\tfunction _createChangeDetectorGenConfig() {\r\n\t    return new change_detection_1.ChangeDetectorGenConfig(lang_1.assertionsEnabled(), false, true);\r\n\t}\r\n\t/**\r\n\t * A set of providers that provide `RuntimeCompiler` and its dependencies to use for\r\n\t * template compilation.\r\n\t */\r\n\texports.COMPILER_PROVIDERS = lang_1.CONST_EXPR([\r\n\t    change_detection_2.Lexer,\r\n\t    change_detection_2.Parser,\r\n\t    html_parser_1.HtmlParser,\r\n\t    template_parser_2.TemplateParser,\r\n\t    template_normalizer_1.TemplateNormalizer,\r\n\t    runtime_metadata_1.RuntimeMetadataResolver,\r\n\t    url_resolver_1.DEFAULT_PACKAGE_URL_PROVIDER,\r\n\t    style_compiler_1.StyleCompiler,\r\n\t    proto_view_compiler_1.ProtoViewCompiler,\r\n\t    view_compiler_1.ViewCompiler,\r\n\t    change_detector_compiler_1.ChangeDetectionCompiler,\r\n\t    new di_1.Provider(change_detection_1.ChangeDetectorGenConfig, { useFactory: _createChangeDetectorGenConfig, deps: [] }),\r\n\t    template_compiler_2.TemplateCompiler,\r\n\t    new di_1.Provider(runtime_compiler_2.RuntimeCompiler, { useClass: runtime_compiler_1.RuntimeCompiler_ }),\r\n\t    new di_1.Provider(compiler_1.Compiler, { useExisting: runtime_compiler_2.RuntimeCompiler }),\r\n\t    dom_element_schema_registry_1.DomElementSchemaRegistry,\r\n\t    new di_1.Provider(element_schema_registry_1.ElementSchemaRegistry, { useExisting: dom_element_schema_registry_1.DomElementSchemaRegistry }),\r\n\t    url_resolver_1.UrlResolver\r\n\t]);\r\n\t//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcGlsZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJhbmd1bGFyMi9zcmMvY29tcGlsZXIvY29tcGlsZXIudHMiXSwibmFtZXMiOlsiX2NyZWF0ZUNoYW5nZURldGVjdG9yR2VuQ29uZmlnIl0sIm1hcHBpbmdzIjoiOzs7QUFBQSxpQ0FBK0Isb0JBQW9CLENBQUMsQ0FBQTtBQUNwRCxrQ0FBK0IscUJBQXFCLENBQUM7QUFBN0MsZ0VBQTZDO0FBQ3JELG1DQUlPLHNCQUFzQixDQUFDO0FBSDVCLGlGQUF3QjtBQUN4Qix1RUFBbUI7QUFDbkIsK0VBQzRCO0FBQzlCLDhCQUE4QyxpQkFBaUIsQ0FBQztBQUF4RCxvREFBWTtBQUFFLDhEQUEwQztBQUNoRSw4Q0FBa0QsaURBQWlELENBQUM7QUFBNUYsa0ZBQW1CO0FBQUUsd0VBQXVFO0FBQ3BHLGlCQUFjLG9DQUFvQyxDQUFDLEVBQUE7QUFDbkQsZ0NBQWtDLHVDQUF1QyxDQUFDO0FBQWxFLG9FQUFrRTtBQUMxRSxxQkFBa0QsMEJBQTBCLENBQUMsQ0FBQTtBQUM3RSxtQkFBZ0Msc0JBQXNCLENBQUMsQ0FBQTtBQUN2RCxnQ0FBNkIsdUNBQXVDLENBQUMsQ0FBQTtBQUNyRSw0QkFBeUIsbUNBQW1DLENBQUMsQ0FBQTtBQUM3RCxvQ0FBaUMsMkNBQTJDLENBQUMsQ0FBQTtBQUM3RSxpQ0FBc0Msd0NBQXdDLENBQUMsQ0FBQTtBQUMvRSx5Q0FBc0MsZ0RBQWdELENBQUMsQ0FBQTtBQUN2RiwrQkFBNEIsc0NBQXNDLENBQUMsQ0FBQTtBQUNuRSw4QkFBMkIscUNBQXFDLENBQUMsQ0FBQTtBQUNqRSxvQ0FBZ0MsMkNBQTJDLENBQUMsQ0FBQTtBQUM1RSxrQ0FBK0IseUNBQXlDLENBQUMsQ0FBQTtBQUN6RSxpQ0FBc0MscURBQXFELENBQUMsQ0FBQTtBQUM1Rix5QkFBdUIsbUNBQW1DLENBQUMsQ0FBQTtBQUMzRCxpQ0FBOEIsd0NBQXdDLENBQUMsQ0FBQTtBQUN2RSx3Q0FBb0Msc0RBQXNELENBQUMsQ0FBQTtBQUMzRiw0Q0FBdUMsMERBQTBELENBQUMsQ0FBQTtBQUNsRyw2QkFBd0Qsb0NBQW9DLENBQUMsQ0FBQTtBQUM3RixpQ0FBNEIscURBQXFELENBQUMsQ0FBQTtBQUVsRjtJQUNFQSxNQUFNQSxDQUFDQSxJQUFJQSwwQ0FBdUJBLENBQUNBLHdCQUFpQkEsRUFBRUEsRUFBRUEsS0FBS0EsRUFBRUEsSUFBSUEsQ0FBQ0EsQ0FBQ0E7QUFDdkVBLENBQUNBO0FBRUQ7OztHQUdHO0FBQ1UsMEJBQWtCLEdBQW1DLGlCQUFVLENBQUM7SUFDM0Usd0JBQUs7SUFDTCx5QkFBTTtJQUNOLHdCQUFVO0lBQ1YsZ0NBQWM7SUFDZCx3Q0FBa0I7SUFDbEIsMENBQXVCO0lBQ3ZCLDJDQUE0QjtJQUM1Qiw4QkFBYTtJQUNiLHVDQUFpQjtJQUNqQiw0QkFBWTtJQUNaLGtEQUF1QjtJQUN2QixJQUFJLGFBQVEsQ0FBQywwQ0FBdUIsRUFBRSxFQUFDLFVBQVUsRUFBRSw4QkFBOEIsRUFBRSxJQUFJLEVBQUUsRUFBRSxFQUFDLENBQUM7SUFDN0Ysb0NBQWdCO0lBQ2hCLElBQUksYUFBUSxDQUFDLGtDQUFlLEVBQUUsRUFBQyxRQUFRLEVBQUUsbUNBQWdCLEVBQUMsQ0FBQztJQUMzRCxJQUFJLGFBQVEsQ0FBQyxtQkFBUSxFQUFFLEVBQUMsV0FBVyxFQUFFLGtDQUFlLEVBQUMsQ0FBQztJQUN0RCxzREFBd0I7SUFDeEIsSUFBSSxhQUFRLENBQUMsK0NBQXFCLEVBQUUsRUFBQyxXQUFXLEVBQUUsc0RBQXdCLEVBQUMsQ0FBQztJQUM1RSwwQkFBVztDQUNaLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7UnVudGltZUNvbXBpbGVyX30gZnJvbSBcIi4vcnVudGltZV9jb21waWxlclwiO1xuZXhwb3J0IHtUZW1wbGF0ZUNvbXBpbGVyfSBmcm9tICcuL3RlbXBsYXRlX2NvbXBpbGVyJztcbmV4cG9ydCB7XG4gIENvbXBpbGVEaXJlY3RpdmVNZXRhZGF0YSxcbiAgQ29tcGlsZVR5cGVNZXRhZGF0YSxcbiAgQ29tcGlsZVRlbXBsYXRlTWV0YWRhdGFcbn0gZnJvbSAnLi9kaXJlY3RpdmVfbWV0YWRhdGEnO1xuZXhwb3J0IHtTb3VyY2VNb2R1bGUsIFNvdXJjZVdpdGhJbXBvcnRzfSBmcm9tICcuL3NvdXJjZV9tb2R1bGUnO1xuZXhwb3J0IHtQTEFURk9STV9ESVJFQ1RJVkVTLCBQTEFURk9STV9QSVBFU30gZnJvbSAnYW5ndWxhcjIvc3JjL2NvcmUvcGxhdGZvcm1fZGlyZWN0aXZlc19hbmRfcGlwZXMnO1xuZXhwb3J0ICogZnJvbSAnYW5ndWxhcjIvc3JjL2NvbXBpbGVyL3RlbXBsYXRlX2FzdCc7XG5leHBvcnQge1RFTVBMQVRFX1RSQU5TRk9STVN9IGZyb20gJ2FuZ3VsYXIyL3NyYy9jb21waWxlci90ZW1wbGF0ZV9wYXJzZXInO1xuaW1wb3J0IHthc3NlcnRpb25zRW5hYmxlZCwgVHlwZSwgQ09OU1RfRVhQUn0gZnJvbSAnYW5ndWxhcjIvc3JjL2ZhY2FkZS9sYW5nJztcbmltcG9ydCB7cHJvdmlkZSwgUHJvdmlkZXJ9IGZyb20gJ2FuZ3VsYXIyL3NyYy9jb3JlL2RpJztcbmltcG9ydCB7VGVtcGxhdGVQYXJzZXJ9IGZyb20gJ2FuZ3VsYXIyL3NyYy9jb21waWxlci90ZW1wbGF0ZV9wYXJzZXInO1xuaW1wb3J0IHtIdG1sUGFyc2VyfSBmcm9tICdhbmd1bGFyMi9zcmMvY29tcGlsZXIvaHRtbF9wYXJzZXInO1xuaW1wb3J0IHtUZW1wbGF0ZU5vcm1hbGl6ZXJ9IGZyb20gJ2FuZ3VsYXIyL3NyYy9jb21waWxlci90ZW1wbGF0ZV9ub3JtYWxpemVyJztcbmltcG9ydCB7UnVudGltZU1ldGFkYXRhUmVzb2x2ZXJ9IGZyb20gJ2FuZ3VsYXIyL3NyYy9jb21waWxlci9ydW50aW1lX21ldGFkYXRhJztcbmltcG9ydCB7Q2hhbmdlRGV0ZWN0aW9uQ29tcGlsZXJ9IGZyb20gJ2FuZ3VsYXIyL3NyYy9jb21waWxlci9jaGFuZ2VfZGV0ZWN0b3JfY29tcGlsZXInO1xuaW1wb3J0IHtTdHlsZUNvbXBpbGVyfSBmcm9tICdhbmd1bGFyMi9zcmMvY29tcGlsZXIvc3R5bGVfY29tcGlsZXInO1xuaW1wb3J0IHtWaWV3Q29tcGlsZXJ9IGZyb20gJ2FuZ3VsYXIyL3NyYy9jb21waWxlci92aWV3X2NvbXBpbGVyJztcbmltcG9ydCB7UHJvdG9WaWV3Q29tcGlsZXJ9IGZyb20gJ2FuZ3VsYXIyL3NyYy9jb21waWxlci9wcm90b192aWV3X2NvbXBpbGVyJztcbmltcG9ydCB7VGVtcGxhdGVDb21waWxlcn0gZnJvbSAnYW5ndWxhcjIvc3JjL2NvbXBpbGVyL3RlbXBsYXRlX2NvbXBpbGVyJztcbmltcG9ydCB7Q2hhbmdlRGV0ZWN0b3JHZW5Db25maWd9IGZyb20gJ2FuZ3VsYXIyL3NyYy9jb3JlL2NoYW5nZV9kZXRlY3Rpb24vY2hhbmdlX2RldGVjdGlvbic7XG5pbXBvcnQge0NvbXBpbGVyfSBmcm9tICdhbmd1bGFyMi9zcmMvY29yZS9saW5rZXIvY29tcGlsZXInO1xuaW1wb3J0IHtSdW50aW1lQ29tcGlsZXJ9IGZyb20gJ2FuZ3VsYXIyL3NyYy9jb21waWxlci9ydW50aW1lX2NvbXBpbGVyJztcbmltcG9ydCB7RWxlbWVudFNjaGVtYVJlZ2lzdHJ5fSBmcm9tICdhbmd1bGFyMi9zcmMvY29tcGlsZXIvc2NoZW1hL2VsZW1lbnRfc2NoZW1hX3JlZ2lzdHJ5JztcbmltcG9ydCB7RG9tRWxlbWVudFNjaGVtYVJlZ2lzdHJ5fSBmcm9tICdhbmd1bGFyMi9zcmMvY29tcGlsZXIvc2NoZW1hL2RvbV9lbGVtZW50X3NjaGVtYV9yZWdpc3RyeSc7XG5pbXBvcnQge1VybFJlc29sdmVyLCBERUZBVUxUX1BBQ0tBR0VfVVJMX1BST1ZJREVSfSBmcm9tICdhbmd1bGFyMi9zcmMvY29tcGlsZXIvdXJsX3Jlc29sdmVyJztcbmltcG9ydCB7UGFyc2VyLCBMZXhlcn0gZnJvbSAnYW5ndWxhcjIvc3JjL2NvcmUvY2hhbmdlX2RldGVjdGlvbi9jaGFuZ2VfZGV0ZWN0aW9uJztcblxuZnVuY3Rpb24gX2NyZWF0ZUNoYW5nZURldGVjdG9yR2VuQ29uZmlnKCkge1xuICByZXR1cm4gbmV3IENoYW5nZURldGVjdG9yR2VuQ29uZmlnKGFzc2VydGlvbnNFbmFibGVkKCksIGZhbHNlLCB0cnVlKTtcbn1cblxuLyoqXG4gKiBBIHNldCBvZiBwcm92aWRlcnMgdGhhdCBwcm92aWRlIGBSdW50aW1lQ29tcGlsZXJgIGFuZCBpdHMgZGVwZW5kZW5jaWVzIHRvIHVzZSBmb3JcbiAqIHRlbXBsYXRlIGNvbXBpbGF0aW9uLlxuICovXG5leHBvcnQgY29uc3QgQ09NUElMRVJfUFJPVklERVJTOiBBcnJheTxUeXBlIHwgUHJvdmlkZXIgfCBhbnlbXT4gPSBDT05TVF9FWFBSKFtcbiAgTGV4ZXIsXG4gIFBhcnNlcixcbiAgSHRtbFBhcnNlcixcbiAgVGVtcGxhdGVQYXJzZXIsXG4gIFRlbXBsYXRlTm9ybWFsaXplcixcbiAgUnVudGltZU1ldGFkYXRhUmVzb2x2ZXIsXG4gIERFRkFVTFRfUEFDS0FHRV9VUkxfUFJPVklERVIsXG4gIFN0eWxlQ29tcGlsZXIsXG4gIFByb3RvVmlld0NvbXBpbGVyLFxuICBWaWV3Q29tcGlsZXIsXG4gIENoYW5nZURldGVjdGlvbkNvbXBpbGVyLFxuICBuZXcgUHJvdmlkZXIoQ2hhbmdlRGV0ZWN0b3JHZW5Db25maWcsIHt1c2VGYWN0b3J5OiBfY3JlYXRlQ2hhbmdlRGV0ZWN0b3JHZW5Db25maWcsIGRlcHM6IFtdfSksXG4gIFRlbXBsYXRlQ29tcGlsZXIsXG4gIG5ldyBQcm92aWRlcihSdW50aW1lQ29tcGlsZXIsIHt1c2VDbGFzczogUnVudGltZUNvbXBpbGVyX30pLFxuICBuZXcgUHJvdmlkZXIoQ29tcGlsZXIsIHt1c2VFeGlzdGluZzogUnVudGltZUNvbXBpbGVyfSksXG4gIERvbUVsZW1lbnRTY2hlbWFSZWdpc3RyeSxcbiAgbmV3IFByb3ZpZGVyKEVsZW1lbnRTY2hlbWFSZWdpc3RyeSwge3VzZUV4aXN0aW5nOiBEb21FbGVtZW50U2NoZW1hUmVnaXN0cnl9KSxcbiAgVXJsUmVzb2x2ZXJcbl0pO1xuIl19\n\n/***/ },\n\n/***/ 207:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';var __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar lang_1 = __webpack_require__(1);\r\n\tvar collection_1 = __webpack_require__(3);\r\n\tvar parse_util_1 = __webpack_require__(91);\r\n\tvar html_tags_1 = __webpack_require__(43);\r\n\t(function (HtmlTokenType) {\r\n\t    HtmlTokenType[HtmlTokenType[\"TAG_OPEN_START\"] = 0] = \"TAG_OPEN_START\";\r\n\t    HtmlTokenType[HtmlTokenType[\"TAG_OPEN_END\"] = 1] = \"TAG_OPEN_END\";\r\n\t    HtmlTokenType[HtmlTokenType[\"TAG_OPEN_END_VOID\"] = 2] = \"TAG_OPEN_END_VOID\";\r\n\t    HtmlTokenType[HtmlTokenType[\"TAG_CLOSE\"] = 3] = \"TAG_CLOSE\";\r\n\t    HtmlTokenType[HtmlTokenType[\"TEXT\"] = 4] = \"TEXT\";\r\n\t    HtmlTokenType[HtmlTokenType[\"ESCAPABLE_RAW_TEXT\"] = 5] = \"ESCAPABLE_RAW_TEXT\";\r\n\t    HtmlTokenType[HtmlTokenType[\"RAW_TEXT\"] = 6] = \"RAW_TEXT\";\r\n\t    HtmlTokenType[HtmlTokenType[\"COMMENT_START\"] = 7] = \"COMMENT_START\";\r\n\t    HtmlTokenType[HtmlTokenType[\"COMMENT_END\"] = 8] = \"COMMENT_END\";\r\n\t    HtmlTokenType[HtmlTokenType[\"CDATA_START\"] = 9] = \"CDATA_START\";\r\n\t    HtmlTokenType[HtmlTokenType[\"CDATA_END\"] = 10] = \"CDATA_END\";\r\n\t    HtmlTokenType[HtmlTokenType[\"ATTR_NAME\"] = 11] = \"ATTR_NAME\";\r\n\t    HtmlTokenType[HtmlTokenType[\"ATTR_VALUE\"] = 12] = \"ATTR_VALUE\";\r\n\t    HtmlTokenType[HtmlTokenType[\"DOC_TYPE\"] = 13] = \"DOC_TYPE\";\r\n\t    HtmlTokenType[HtmlTokenType[\"EOF\"] = 14] = \"EOF\";\r\n\t})(exports.HtmlTokenType || (exports.HtmlTokenType = {}));\r\n\tvar HtmlTokenType = exports.HtmlTokenType;\r\n\tvar HtmlToken = (function () {\r\n\t    function HtmlToken(type, parts, sourceSpan) {\r\n\t        this.type = type;\r\n\t        this.parts = parts;\r\n\t        this.sourceSpan = sourceSpan;\r\n\t    }\r\n\t    return HtmlToken;\r\n\t})();\r\n\texports.HtmlToken = HtmlToken;\r\n\tvar HtmlTokenError = (function (_super) {\r\n\t    __extends(HtmlTokenError, _super);\r\n\t    function HtmlTokenError(errorMsg, tokenType, location) {\r\n\t        _super.call(this, location, errorMsg);\r\n\t        this.tokenType = tokenType;\r\n\t    }\r\n\t    return HtmlTokenError;\r\n\t})(parse_util_1.ParseError);\r\n\texports.HtmlTokenError = HtmlTokenError;\r\n\tvar HtmlTokenizeResult = (function () {\r\n\t    function HtmlTokenizeResult(tokens, errors) {\r\n\t        this.tokens = tokens;\r\n\t        this.errors = errors;\r\n\t    }\r\n\t    return HtmlTokenizeResult;\r\n\t})();\r\n\texports.HtmlTokenizeResult = HtmlTokenizeResult;\r\n\tfunction tokenizeHtml(sourceContent, sourceUrl) {\r\n\t    return new _HtmlTokenizer(new parse_util_1.ParseSourceFile(sourceContent, sourceUrl)).tokenize();\r\n\t}\r\n\texports.tokenizeHtml = tokenizeHtml;\r\n\tvar $EOF = 0;\r\n\tvar $TAB = 9;\r\n\tvar $LF = 10;\r\n\tvar $FF = 12;\r\n\tvar $CR = 13;\r\n\tvar $SPACE = 32;\r\n\tvar $BANG = 33;\r\n\tvar $DQ = 34;\r\n\tvar $HASH = 35;\r\n\tvar $$ = 36;\r\n\tvar $AMPERSAND = 38;\r\n\tvar $SQ = 39;\r\n\tvar $MINUS = 45;\r\n\tvar $SLASH = 47;\r\n\tvar $0 = 48;\r\n\tvar $SEMICOLON = 59;\r\n\tvar $9 = 57;\r\n\tvar $COLON = 58;\r\n\tvar $LT = 60;\r\n\tvar $EQ = 61;\r\n\tvar $GT = 62;\r\n\tvar $QUESTION = 63;\r\n\tvar $LBRACKET = 91;\r\n\tvar $RBRACKET = 93;\r\n\tvar $A = 65;\r\n\tvar $F = 70;\r\n\tvar $X = 88;\r\n\tvar $Z = 90;\r\n\tvar $a = 97;\r\n\tvar $f = 102;\r\n\tvar $z = 122;\r\n\tvar $x = 120;\r\n\tvar $NBSP = 160;\r\n\tvar CR_OR_CRLF_REGEXP = /\\r\\n?/g;\r\n\tfunction unexpectedCharacterErrorMsg(charCode) {\r\n\t    var char = charCode === $EOF ? 'EOF' : lang_1.StringWrapper.fromCharCode(charCode);\r\n\t    return \"Unexpected character \\\"\" + char + \"\\\"\";\r\n\t}\r\n\tfunction unknownEntityErrorMsg(entitySrc) {\r\n\t    return \"Unknown entity \\\"\" + entitySrc + \"\\\" - use the \\\"&#<decimal>;\\\" or  \\\"&#x<hex>;\\\" syntax\";\r\n\t}\r\n\tvar ControlFlowError = (function () {\r\n\t    function ControlFlowError(error) {\r\n\t        this.error = error;\r\n\t    }\r\n\t    return ControlFlowError;\r\n\t})();\r\n\t// See http://www.w3.org/TR/html51/syntax.html#writing\r\n\tvar _HtmlTokenizer = (function () {\r\n\t    function _HtmlTokenizer(file) {\r\n\t        this.file = file;\r\n\t        // Note: this is always lowercase!\r\n\t        this.peek = -1;\r\n\t        this.index = -1;\r\n\t        this.line = 0;\r\n\t        this.column = -1;\r\n\t        this.tokens = [];\r\n\t        this.errors = [];\r\n\t        this.input = file.content;\r\n\t        this.length = file.content.length;\r\n\t        this._advance();\r\n\t    }\r\n\t    _HtmlTokenizer.prototype._processCarriageReturns = function (content) {\r\n\t        // http://www.w3.org/TR/html5/syntax.html#preprocessing-the-input-stream\r\n\t        // In order to keep the original position in the source, we can not pre-process it.\r\n\t        // Instead CRs are processed right before instantiating the tokens.\r\n\t        return lang_1.StringWrapper.replaceAll(content, CR_OR_CRLF_REGEXP, '\\n');\r\n\t    };\r\n\t    _HtmlTokenizer.prototype.tokenize = function () {\r\n\t        while (this.peek !== $EOF) {\r\n\t            var start = this._getLocation();\r\n\t            try {\r\n\t                if (this._attemptCharCode($LT)) {\r\n\t                    if (this._attemptCharCode($BANG)) {\r\n\t                        if (this._attemptCharCode($LBRACKET)) {\r\n\t                            this._consumeCdata(start);\r\n\t                        }\r\n\t                        else if (this._attemptCharCode($MINUS)) {\r\n\t                            this._consumeComment(start);\r\n\t                        }\r\n\t                        else {\r\n\t                            this._consumeDocType(start);\r\n\t                        }\r\n\t                    }\r\n\t                    else if (this._attemptCharCode($SLASH)) {\r\n\t                        this._consumeTagClose(start);\r\n\t                    }\r\n\t                    else {\r\n\t                        this._consumeTagOpen(start);\r\n\t                    }\r\n\t                }\r\n\t                else {\r\n\t                    this._consumeText();\r\n\t                }\r\n\t            }\r\n\t            catch (e) {\r\n\t                if (e instanceof ControlFlowError) {\r\n\t                    this.errors.push(e.error);\r\n\t                }\r\n\t                else {\r\n\t                    throw e;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        this._beginToken(HtmlTokenType.EOF);\r\n\t        this._endToken([]);\r\n\t        return new HtmlTokenizeResult(mergeTextTokens(this.tokens), this.errors);\r\n\t    };\r\n\t    _HtmlTokenizer.prototype._getLocation = function () {\r\n\t        return new parse_util_1.ParseLocation(this.file, this.index, this.line, this.column);\r\n\t    };\r\n\t    _HtmlTokenizer.prototype._beginToken = function (type, start) {\r\n\t        if (start === void 0) { start = null; }\r\n\t        if (lang_1.isBlank(start)) {\r\n\t            start = this._getLocation();\r\n\t        }\r\n\t        this.currentTokenStart = start;\r\n\t        this.currentTokenType = type;\r\n\t    };\r\n\t    _HtmlTokenizer.prototype._endToken = function (parts, end) {\r\n\t        if (end === void 0) { end = null; }\r\n\t        if (lang_1.isBlank(end)) {\r\n\t            end = this._getLocation();\r\n\t        }\r\n\t        var token = new HtmlToken(this.currentTokenType, parts, new parse_util_1.ParseSourceSpan(this.currentTokenStart, end));\r\n\t        this.tokens.push(token);\r\n\t        this.currentTokenStart = null;\r\n\t        this.currentTokenType = null;\r\n\t        return token;\r\n\t    };\r\n\t    _HtmlTokenizer.prototype._createError = function (msg, position) {\r\n\t        var error = new HtmlTokenError(msg, this.currentTokenType, position);\r\n\t        this.currentTokenStart = null;\r\n\t        this.currentTokenType = null;\r\n\t        return new ControlFlowError(error);\r\n\t    };\r\n\t    _HtmlTokenizer.prototype._advance = function () {\r\n\t        if (this.index >= this.length) {\r\n\t            throw this._createError(unexpectedCharacterErrorMsg($EOF), this._getLocation());\r\n\t        }\r\n\t        if (this.peek === $LF) {\r\n\t            this.line++;\r\n\t            this.column = 0;\r\n\t        }\r\n\t        else if (this.peek !== $LF && this.peek !== $CR) {\r\n\t            this.column++;\r\n\t        }\r\n\t        this.index++;\r\n\t        this.peek = this.index >= this.length ? $EOF : lang_1.StringWrapper.charCodeAt(this.input, this.index);\r\n\t    };\r\n\t    _HtmlTokenizer.prototype._attemptCharCode = function (charCode) {\r\n\t        if (this.peek === charCode) {\r\n\t            this._advance();\r\n\t            return true;\r\n\t        }\r\n\t        return false;\r\n\t    };\r\n\t    _HtmlTokenizer.prototype._attemptCharCodeCaseInsensitive = function (charCode) {\r\n\t        if (compareCharCodeCaseInsensitive(this.peek, charCode)) {\r\n\t            this._advance();\r\n\t            return true;\r\n\t        }\r\n\t        return false;\r\n\t    };\r\n\t    _HtmlTokenizer.prototype._requireCharCode = function (charCode) {\r\n\t        var location = this._getLocation();\r\n\t        if (!this._attemptCharCode(charCode)) {\r\n\t            throw this._createError(unexpectedCharacterErrorMsg(this.peek), location);\r\n\t        }\r\n\t    };\r\n\t    _HtmlTokenizer.prototype._attemptStr = function (chars) {\r\n\t        for (var i = 0; i < chars.length; i++) {\r\n\t            if (!this._attemptCharCode(lang_1.StringWrapper.charCodeAt(chars, i))) {\r\n\t                return false;\r\n\t            }\r\n\t        }\r\n\t        return true;\r\n\t    };\r\n\t    _HtmlTokenizer.prototype._attemptStrCaseInsensitive = function (chars) {\r\n\t        for (var i = 0; i < chars.length; i++) {\r\n\t            if (!this._attemptCharCodeCaseInsensitive(lang_1.StringWrapper.charCodeAt(chars, i))) {\r\n\t                return false;\r\n\t            }\r\n\t        }\r\n\t        return true;\r\n\t    };\r\n\t    _HtmlTokenizer.prototype._requireStr = function (chars) {\r\n\t        var location = this._getLocation();\r\n\t        if (!this._attemptStr(chars)) {\r\n\t            throw this._createError(unexpectedCharacterErrorMsg(this.peek), location);\r\n\t        }\r\n\t    };\r\n\t    _HtmlTokenizer.prototype._attemptCharCodeUntilFn = function (predicate) {\r\n\t        while (!predicate(this.peek)) {\r\n\t            this._advance();\r\n\t        }\r\n\t    };\r\n\t    _HtmlTokenizer.prototype._requireCharCodeUntilFn = function (predicate, len) {\r\n\t        var start = this._getLocation();\r\n\t        this._attemptCharCodeUntilFn(predicate);\r\n\t        if (this.index - start.offset < len) {\r\n\t            throw this._createError(unexpectedCharacterErrorMsg(this.peek), start);\r\n\t        }\r\n\t    };\r\n\t    _HtmlTokenizer.prototype._attemptUntilChar = function (char) {\r\n\t        while (this.peek !== char) {\r\n\t            this._advance();\r\n\t        }\r\n\t    };\r\n\t    _HtmlTokenizer.prototype._readChar = function (decodeEntities) {\r\n\t        if (decodeEntities && this.peek === $AMPERSAND) {\r\n\t            return this._decodeEntity();\r\n\t        }\r\n\t        else {\r\n\t            var index = this.index;\r\n\t            this._advance();\r\n\t            return this.input[index];\r\n\t        }\r\n\t    };\r\n\t    _HtmlTokenizer.prototype._decodeEntity = function () {\r\n\t        var start = this._getLocation();\r\n\t        this._advance();\r\n\t        if (this._attemptCharCode($HASH)) {\r\n\t            var isHex = this._attemptCharCode($x) || this._attemptCharCode($X);\r\n\t            var numberStart = this._getLocation().offset;\r\n\t            this._attemptCharCodeUntilFn(isDigitEntityEnd);\r\n\t            if (this.peek != $SEMICOLON) {\r\n\t                throw this._createError(unexpectedCharacterErrorMsg(this.peek), this._getLocation());\r\n\t            }\r\n\t            this._advance();\r\n\t            var strNum = this.input.substring(numberStart, this.index - 1);\r\n\t            try {\r\n\t                var charCode = lang_1.NumberWrapper.parseInt(strNum, isHex ? 16 : 10);\r\n\t                return lang_1.StringWrapper.fromCharCode(charCode);\r\n\t            }\r\n\t            catch (e) {\r\n\t                var entity = this.input.substring(start.offset + 1, this.index - 1);\r\n\t                throw this._createError(unknownEntityErrorMsg(entity), start);\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            var startPosition = this._savePosition();\r\n\t            this._attemptCharCodeUntilFn(isNamedEntityEnd);\r\n\t            if (this.peek != $SEMICOLON) {\r\n\t                this._restorePosition(startPosition);\r\n\t                return '&';\r\n\t            }\r\n\t            this._advance();\r\n\t            var name_1 = this.input.substring(start.offset + 1, this.index - 1);\r\n\t            var char = html_tags_1.NAMED_ENTITIES[name_1];\r\n\t            if (lang_1.isBlank(char)) {\r\n\t                throw this._createError(unknownEntityErrorMsg(name_1), start);\r\n\t            }\r\n\t            return char;\r\n\t        }\r\n\t    };\r\n\t    _HtmlTokenizer.prototype._consumeRawText = function (decodeEntities, firstCharOfEnd, attemptEndRest) {\r\n\t        var tagCloseStart;\r\n\t        var textStart = this._getLocation();\r\n\t        this._beginToken(decodeEntities ? HtmlTokenType.ESCAPABLE_RAW_TEXT : HtmlTokenType.RAW_TEXT, textStart);\r\n\t        var parts = [];\r\n\t        while (true) {\r\n\t            tagCloseStart = this._getLocation();\r\n\t            if (this._attemptCharCode(firstCharOfEnd) && attemptEndRest()) {\r\n\t                break;\r\n\t            }\r\n\t            if (this.index > tagCloseStart.offset) {\r\n\t                parts.push(this.input.substring(tagCloseStart.offset, this.index));\r\n\t            }\r\n\t            while (this.peek !== firstCharOfEnd) {\r\n\t                parts.push(this._readChar(decodeEntities));\r\n\t            }\r\n\t        }\r\n\t        return this._endToken([this._processCarriageReturns(parts.join(''))], tagCloseStart);\r\n\t    };\r\n\t    _HtmlTokenizer.prototype._consumeComment = function (start) {\r\n\t        var _this = this;\r\n\t        this._beginToken(HtmlTokenType.COMMENT_START, start);\r\n\t        this._requireCharCode($MINUS);\r\n\t        this._endToken([]);\r\n\t        var textToken = this._consumeRawText(false, $MINUS, function () { return _this._attemptStr('->'); });\r\n\t        this._beginToken(HtmlTokenType.COMMENT_END, textToken.sourceSpan.end);\r\n\t        this._endToken([]);\r\n\t    };\r\n\t    _HtmlTokenizer.prototype._consumeCdata = function (start) {\r\n\t        var _this = this;\r\n\t        this._beginToken(HtmlTokenType.CDATA_START, start);\r\n\t        this._requireStr('CDATA[');\r\n\t        this._endToken([]);\r\n\t        var textToken = this._consumeRawText(false, $RBRACKET, function () { return _this._attemptStr(']>'); });\r\n\t        this._beginToken(HtmlTokenType.CDATA_END, textToken.sourceSpan.end);\r\n\t        this._endToken([]);\r\n\t    };\r\n\t    _HtmlTokenizer.prototype._consumeDocType = function (start) {\r\n\t        this._beginToken(HtmlTokenType.DOC_TYPE, start);\r\n\t        this._attemptUntilChar($GT);\r\n\t        this._advance();\r\n\t        this._endToken([this.input.substring(start.offset + 2, this.index - 1)]);\r\n\t    };\r\n\t    _HtmlTokenizer.prototype._consumePrefixAndName = function () {\r\n\t        var nameOrPrefixStart = this.index;\r\n\t        var prefix = null;\r\n\t        while (this.peek !== $COLON && !isPrefixEnd(this.peek)) {\r\n\t            this._advance();\r\n\t        }\r\n\t        var nameStart;\r\n\t        if (this.peek === $COLON) {\r\n\t            this._advance();\r\n\t            prefix = this.input.substring(nameOrPrefixStart, this.index - 1);\r\n\t            nameStart = this.index;\r\n\t        }\r\n\t        else {\r\n\t            nameStart = nameOrPrefixStart;\r\n\t        }\r\n\t        this._requireCharCodeUntilFn(isNameEnd, this.index === nameStart ? 1 : 0);\r\n\t        var name = this.input.substring(nameStart, this.index);\r\n\t        return [prefix, name];\r\n\t    };\r\n\t    _HtmlTokenizer.prototype._consumeTagOpen = function (start) {\r\n\t        var savedPos = this._savePosition();\r\n\t        var lowercaseTagName;\r\n\t        try {\r\n\t            if (!isAsciiLetter(this.peek)) {\r\n\t                throw this._createError(unexpectedCharacterErrorMsg(this.peek), this._getLocation());\r\n\t            }\r\n\t            var nameStart = this.index;\r\n\t            this._consumeTagOpenStart(start);\r\n\t            lowercaseTagName = this.input.substring(nameStart, this.index).toLowerCase();\r\n\t            this._attemptCharCodeUntilFn(isNotWhitespace);\r\n\t            while (this.peek !== $SLASH && this.peek !== $GT) {\r\n\t                this._consumeAttributeName();\r\n\t                this._attemptCharCodeUntilFn(isNotWhitespace);\r\n\t                if (this._attemptCharCode($EQ)) {\r\n\t                    this._attemptCharCodeUntilFn(isNotWhitespace);\r\n\t                    this._consumeAttributeValue();\r\n\t                }\r\n\t                this._attemptCharCodeUntilFn(isNotWhitespace);\r\n\t            }\r\n\t            this._consumeTagOpenEnd();\r\n\t        }\r\n\t        catch (e) {\r\n\t            if (e instanceof ControlFlowError) {\r\n\t                // When the start tag is invalid, assume we want a \"<\"\r\n\t                this._restorePosition(savedPos);\r\n\t                // Back to back text tokens are merged at the end\r\n\t                this._beginToken(HtmlTokenType.TEXT, start);\r\n\t                this._endToken(['<']);\r\n\t                return;\r\n\t            }\r\n\t            throw e;\r\n\t        }\r\n\t        var contentTokenType = html_tags_1.getHtmlTagDefinition(lowercaseTagName).contentType;\r\n\t        if (contentTokenType === html_tags_1.HtmlTagContentType.RAW_TEXT) {\r\n\t            this._consumeRawTextWithTagClose(lowercaseTagName, false);\r\n\t        }\r\n\t        else if (contentTokenType === html_tags_1.HtmlTagContentType.ESCAPABLE_RAW_TEXT) {\r\n\t            this._consumeRawTextWithTagClose(lowercaseTagName, true);\r\n\t        }\r\n\t    };\r\n\t    _HtmlTokenizer.prototype._consumeRawTextWithTagClose = function (lowercaseTagName, decodeEntities) {\r\n\t        var _this = this;\r\n\t        var textToken = this._consumeRawText(decodeEntities, $LT, function () {\r\n\t            if (!_this._attemptCharCode($SLASH))\r\n\t                return false;\r\n\t            _this._attemptCharCodeUntilFn(isNotWhitespace);\r\n\t            if (!_this._attemptStrCaseInsensitive(lowercaseTagName))\r\n\t                return false;\r\n\t            _this._attemptCharCodeUntilFn(isNotWhitespace);\r\n\t            if (!_this._attemptCharCode($GT))\r\n\t                return false;\r\n\t            return true;\r\n\t        });\r\n\t        this._beginToken(HtmlTokenType.TAG_CLOSE, textToken.sourceSpan.end);\r\n\t        this._endToken([null, lowercaseTagName]);\r\n\t    };\r\n\t    _HtmlTokenizer.prototype._consumeTagOpenStart = function (start) {\r\n\t        this._beginToken(HtmlTokenType.TAG_OPEN_START, start);\r\n\t        var parts = this._consumePrefixAndName();\r\n\t        this._endToken(parts);\r\n\t    };\r\n\t    _HtmlTokenizer.prototype._consumeAttributeName = function () {\r\n\t        this._beginToken(HtmlTokenType.ATTR_NAME);\r\n\t        var prefixAndName = this._consumePrefixAndName();\r\n\t        this._endToken(prefixAndName);\r\n\t    };\r\n\t    _HtmlTokenizer.prototype._consumeAttributeValue = function () {\r\n\t        this._beginToken(HtmlTokenType.ATTR_VALUE);\r\n\t        var value;\r\n\t        if (this.peek === $SQ || this.peek === $DQ) {\r\n\t            var quoteChar = this.peek;\r\n\t            this._advance();\r\n\t            var parts = [];\r\n\t            while (this.peek !== quoteChar) {\r\n\t                parts.push(this._readChar(true));\r\n\t            }\r\n\t            value = parts.join('');\r\n\t            this._advance();\r\n\t        }\r\n\t        else {\r\n\t            var valueStart = this.index;\r\n\t            this._requireCharCodeUntilFn(isNameEnd, 1);\r\n\t            value = this.input.substring(valueStart, this.index);\r\n\t        }\r\n\t        this._endToken([this._processCarriageReturns(value)]);\r\n\t    };\r\n\t    _HtmlTokenizer.prototype._consumeTagOpenEnd = function () {\r\n\t        var tokenType = this._attemptCharCode($SLASH) ? HtmlTokenType.TAG_OPEN_END_VOID :\r\n\t            HtmlTokenType.TAG_OPEN_END;\r\n\t        this._beginToken(tokenType);\r\n\t        this._requireCharCode($GT);\r\n\t        this._endToken([]);\r\n\t    };\r\n\t    _HtmlTokenizer.prototype._consumeTagClose = function (start) {\r\n\t        this._beginToken(HtmlTokenType.TAG_CLOSE, start);\r\n\t        this._attemptCharCodeUntilFn(isNotWhitespace);\r\n\t        var prefixAndName;\r\n\t        prefixAndName = this._consumePrefixAndName();\r\n\t        this._attemptCharCodeUntilFn(isNotWhitespace);\r\n\t        this._requireCharCode($GT);\r\n\t        this._endToken(prefixAndName);\r\n\t    };\r\n\t    _HtmlTokenizer.prototype._consumeText = function () {\r\n\t        var start = this._getLocation();\r\n\t        this._beginToken(HtmlTokenType.TEXT, start);\r\n\t        var parts = [this._readChar(true)];\r\n\t        while (!isTextEnd(this.peek)) {\r\n\t            parts.push(this._readChar(true));\r\n\t        }\r\n\t        this._endToken([this._processCarriageReturns(parts.join(''))]);\r\n\t    };\r\n\t    _HtmlTokenizer.prototype._savePosition = function () {\r\n\t        return [this.peek, this.index, this.column, this.line, this.tokens.length];\r\n\t    };\r\n\t    _HtmlTokenizer.prototype._restorePosition = function (position) {\r\n\t        this.peek = position[0];\r\n\t        this.index = position[1];\r\n\t        this.column = position[2];\r\n\t        this.line = position[3];\r\n\t        var nbTokens = position[4];\r\n\t        if (nbTokens < this.tokens.length) {\r\n\t            // remove any extra tokens\r\n\t            this.tokens = collection_1.ListWrapper.slice(this.tokens, 0, nbTokens);\r\n\t        }\r\n\t    };\r\n\t    return _HtmlTokenizer;\r\n\t})();\r\n\tfunction isNotWhitespace(code) {\r\n\t    return !isWhitespace(code) || code === $EOF;\r\n\t}\r\n\tfunction isWhitespace(code) {\r\n\t    return (code >= $TAB && code <= $SPACE) || (code === $NBSP);\r\n\t}\r\n\tfunction isNameEnd(code) {\r\n\t    return isWhitespace(code) || code === $GT || code === $SLASH || code === $SQ || code === $DQ ||\r\n\t        code === $EQ;\r\n\t}\r\n\tfunction isPrefixEnd(code) {\r\n\t    return (code < $a || $z < code) && (code < $A || $Z < code) && (code < $0 || code > $9);\r\n\t}\r\n\tfunction isDigitEntityEnd(code) {\r\n\t    return code == $SEMICOLON || code == $EOF || !isAsciiHexDigit(code);\r\n\t}\r\n\tfunction isNamedEntityEnd(code) {\r\n\t    return code == $SEMICOLON || code == $EOF || !isAsciiLetter(code);\r\n\t}\r\n\tfunction isTextEnd(code) {\r\n\t    return code === $LT || code === $EOF;\r\n\t}\r\n\tfunction isAsciiLetter(code) {\r\n\t    return code >= $a && code <= $z || code >= $A && code <= $Z;\r\n\t}\r\n\tfunction isAsciiHexDigit(code) {\r\n\t    return code >= $a && code <= $f || code >= $A && code <= $F || code >= $0 && code <= $9;\r\n\t}\r\n\tfunction compareCharCodeCaseInsensitive(code1, code2) {\r\n\t    return toUpperCaseCharCode(code1) == toUpperCaseCharCode(code2);\r\n\t}\r\n\tfunction toUpperCaseCharCode(code) {\r\n\t    return code >= $a && code <= $z ? code - $a + $A : code;\r\n\t}\r\n\tfunction mergeTextTokens(srcTokens) {\r\n\t    var dstTokens = [];\r\n\t    var lastDstToken;\r\n\t    for (var i = 0; i < srcTokens.length; i++) {\r\n\t        var token = srcTokens[i];\r\n\t        if (lang_1.isPresent(lastDstToken) && lastDstToken.type == HtmlTokenType.TEXT &&\r\n\t            token.type == HtmlTokenType.TEXT) {\r\n\t            lastDstToken.parts[0] += token.parts[0];\r\n\t            lastDstToken.sourceSpan.end = token.sourceSpan.end;\r\n\t        }\r\n\t        else {\r\n\t            lastDstToken = token;\r\n\t            dstTokens.push(lastDstToken);\r\n\t        }\r\n\t    }\r\n\t    return dstTokens;\r\n\t}\r\n\t//# sourceMappingURL=data:application/json;base64,\n\n/***/ },\n\n/***/ 208:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';var __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar di_1 = __webpack_require__(6);\r\n\tvar lang_1 = __webpack_require__(1);\r\n\tvar collection_1 = __webpack_require__(3);\r\n\tvar dom_adapter_1 = __webpack_require__(11);\r\n\tvar html_tags_1 = __webpack_require__(43);\r\n\tvar element_schema_registry_1 = __webpack_require__(93);\r\n\tvar NAMESPACE_URIS = lang_1.CONST_EXPR({ 'xlink': 'http://www.w3.org/1999/xlink', 'svg': 'http://www.w3.org/2000/svg' });\r\n\tvar DomElementSchemaRegistry = (function (_super) {\r\n\t    __extends(DomElementSchemaRegistry, _super);\r\n\t    function DomElementSchemaRegistry() {\r\n\t        _super.apply(this, arguments);\r\n\t        this._protoElements = new Map();\r\n\t    }\r\n\t    DomElementSchemaRegistry.prototype._getProtoElement = function (tagName) {\r\n\t        var element = this._protoElements.get(tagName);\r\n\t        if (lang_1.isBlank(element)) {\r\n\t            var nsAndName = html_tags_1.splitNsName(tagName);\r\n\t            element = lang_1.isPresent(nsAndName[0]) ?\r\n\t                dom_adapter_1.DOM.createElementNS(NAMESPACE_URIS[nsAndName[0]], nsAndName[1]) :\r\n\t                dom_adapter_1.DOM.createElement(nsAndName[1]);\r\n\t            this._protoElements.set(tagName, element);\r\n\t        }\r\n\t        return element;\r\n\t    };\r\n\t    DomElementSchemaRegistry.prototype.hasProperty = function (tagName, propName) {\r\n\t        if (tagName.indexOf('-') !== -1) {\r\n\t            // can't tell now as we don't know which properties a custom element will get\r\n\t            // once it is instantiated\r\n\t            return true;\r\n\t        }\r\n\t        else {\r\n\t            var elm = this._getProtoElement(tagName);\r\n\t            return dom_adapter_1.DOM.hasProperty(elm, propName);\r\n\t        }\r\n\t    };\r\n\t    DomElementSchemaRegistry.prototype.getMappedPropName = function (propName) {\r\n\t        var mappedPropName = collection_1.StringMapWrapper.get(dom_adapter_1.DOM.attrToPropMap, propName);\r\n\t        return lang_1.isPresent(mappedPropName) ? mappedPropName : propName;\r\n\t    };\r\n\t    DomElementSchemaRegistry = __decorate([\r\n\t        di_1.Injectable(), \r\n\t        __metadata('design:paramtypes', [])\r\n\t    ], DomElementSchemaRegistry);\r\n\t    return DomElementSchemaRegistry;\r\n\t})(element_schema_registry_1.ElementSchemaRegistry);\r\n\texports.DomElementSchemaRegistry = DomElementSchemaRegistry;\r\n\t//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZG9tX2VsZW1lbnRfc2NoZW1hX3JlZ2lzdHJ5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYW5ndWxhcjIvc3JjL2NvbXBpbGVyL3NjaGVtYS9kb21fZWxlbWVudF9zY2hlbWFfcmVnaXN0cnkudHMiXSwibmFtZXMiOlsiRG9tRWxlbWVudFNjaGVtYVJlZ2lzdHJ5IiwiRG9tRWxlbWVudFNjaGVtYVJlZ2lzdHJ5LmNvbnN0cnVjdG9yIiwiRG9tRWxlbWVudFNjaGVtYVJlZ2lzdHJ5Ll9nZXRQcm90b0VsZW1lbnQiLCJEb21FbGVtZW50U2NoZW1hUmVnaXN0cnkuaGFzUHJvcGVydHkiLCJEb21FbGVtZW50U2NoZW1hUmVnaXN0cnkuZ2V0TWFwcGVkUHJvcE5hbWUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQUEsbUJBQXlCLHNCQUFzQixDQUFDLENBQUE7QUFDaEQscUJBQTZDLDBCQUEwQixDQUFDLENBQUE7QUFDeEUsMkJBQStCLGdDQUFnQyxDQUFDLENBQUE7QUFDaEUsNEJBQWtCLHVDQUF1QyxDQUFDLENBQUE7QUFDMUQsMEJBQTBCLGlDQUFpQyxDQUFDLENBQUE7QUFFNUQsd0NBQW9DLDJCQUEyQixDQUFDLENBQUE7QUFFaEUsSUFBTSxjQUFjLEdBQ2hCLGlCQUFVLENBQUMsRUFBQyxPQUFPLEVBQUUsOEJBQThCLEVBQUUsS0FBSyxFQUFFLDRCQUE0QixFQUFDLENBQUMsQ0FBQztBQUUvRjtJQUM4Q0EsNENBQXFCQTtJQURuRUE7UUFDOENDLDhCQUFxQkE7UUFDekRBLG1CQUFjQSxHQUFHQSxJQUFJQSxHQUFHQSxFQUFtQkEsQ0FBQ0E7SUE2QnREQSxDQUFDQTtJQTNCU0QsbURBQWdCQSxHQUF4QkEsVUFBeUJBLE9BQWVBO1FBQ3RDRSxJQUFJQSxPQUFPQSxHQUFHQSxJQUFJQSxDQUFDQSxjQUFjQSxDQUFDQSxHQUFHQSxDQUFDQSxPQUFPQSxDQUFDQSxDQUFDQTtRQUMvQ0EsRUFBRUEsQ0FBQ0EsQ0FBQ0EsY0FBT0EsQ0FBQ0EsT0FBT0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7WUFDckJBLElBQUlBLFNBQVNBLEdBQUdBLHVCQUFXQSxDQUFDQSxPQUFPQSxDQUFDQSxDQUFDQTtZQUNyQ0EsT0FBT0EsR0FBR0EsZ0JBQVNBLENBQUNBLFNBQVNBLENBQUNBLENBQUNBLENBQUNBLENBQUNBO2dCQUNuQkEsaUJBQUdBLENBQUNBLGVBQWVBLENBQUNBLGNBQWNBLENBQUNBLFNBQVNBLENBQUNBLENBQUNBLENBQUNBLENBQUNBLEVBQUVBLFNBQVNBLENBQUNBLENBQUNBLENBQUNBLENBQUNBO2dCQUMvREEsaUJBQUdBLENBQUNBLGFBQWFBLENBQUNBLFNBQVNBLENBQUNBLENBQUNBLENBQUNBLENBQUNBLENBQUNBO1lBQzlDQSxJQUFJQSxDQUFDQSxjQUFjQSxDQUFDQSxHQUFHQSxDQUFDQSxPQUFPQSxFQUFFQSxPQUFPQSxDQUFDQSxDQUFDQTtRQUM1Q0EsQ0FBQ0E7UUFDREEsTUFBTUEsQ0FBQ0EsT0FBT0EsQ0FBQ0E7SUFDakJBLENBQUNBO0lBRURGLDhDQUFXQSxHQUFYQSxVQUFZQSxPQUFlQSxFQUFFQSxRQUFnQkE7UUFDM0NHLEVBQUVBLENBQUNBLENBQUNBLE9BQU9BLENBQUNBLE9BQU9BLENBQUNBLEdBQUdBLENBQUNBLEtBQUtBLENBQUNBLENBQUNBLENBQUNBLENBQUNBLENBQUNBO1lBQ2hDQSw2RUFBNkVBO1lBQzdFQSwwQkFBMEJBO1lBQzFCQSxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQTtRQUNkQSxDQUFDQTtRQUFDQSxJQUFJQSxDQUFDQSxDQUFDQTtZQUNOQSxJQUFJQSxHQUFHQSxHQUFHQSxJQUFJQSxDQUFDQSxnQkFBZ0JBLENBQUNBLE9BQU9BLENBQUNBLENBQUNBO1lBQ3pDQSxNQUFNQSxDQUFDQSxpQkFBR0EsQ0FBQ0EsV0FBV0EsQ0FBQ0EsR0FBR0EsRUFBRUEsUUFBUUEsQ0FBQ0EsQ0FBQ0E7UUFDeENBLENBQUNBO0lBQ0hBLENBQUNBO0lBRURILG9EQUFpQkEsR0FBakJBLFVBQWtCQSxRQUFnQkE7UUFDaENJLElBQUlBLGNBQWNBLEdBQUdBLDZCQUFnQkEsQ0FBQ0EsR0FBR0EsQ0FBQ0EsaUJBQUdBLENBQUNBLGFBQWFBLEVBQUVBLFFBQVFBLENBQUNBLENBQUNBO1FBQ3ZFQSxNQUFNQSxDQUFDQSxnQkFBU0EsQ0FBQ0EsY0FBY0EsQ0FBQ0EsR0FBR0EsY0FBY0EsR0FBR0EsUUFBUUEsQ0FBQ0E7SUFDL0RBLENBQUNBO0lBOUJISjtRQUFDQSxlQUFVQSxFQUFFQTs7aUNBK0JaQTtJQUFEQSwrQkFBQ0E7QUFBREEsQ0FBQ0EsQUEvQkQsRUFDOEMsK0NBQXFCLEVBOEJsRTtBQTlCWSxnQ0FBd0IsMkJBOEJwQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtJbmplY3RhYmxlfSBmcm9tICdhbmd1bGFyMi9zcmMvY29yZS9kaSc7XG5pbXBvcnQge2lzUHJlc2VudCwgaXNCbGFuaywgQ09OU1RfRVhQUn0gZnJvbSAnYW5ndWxhcjIvc3JjL2ZhY2FkZS9sYW5nJztcbmltcG9ydCB7U3RyaW5nTWFwV3JhcHBlcn0gZnJvbSAnYW5ndWxhcjIvc3JjL2ZhY2FkZS9jb2xsZWN0aW9uJztcbmltcG9ydCB7RE9NfSBmcm9tICdhbmd1bGFyMi9zcmMvcGxhdGZvcm0vZG9tL2RvbV9hZGFwdGVyJztcbmltcG9ydCB7c3BsaXROc05hbWV9IGZyb20gJ2FuZ3VsYXIyL3NyYy9jb21waWxlci9odG1sX3RhZ3MnO1xuXG5pbXBvcnQge0VsZW1lbnRTY2hlbWFSZWdpc3RyeX0gZnJvbSAnLi9lbGVtZW50X3NjaGVtYV9yZWdpc3RyeSc7XG5cbmNvbnN0IE5BTUVTUEFDRV9VUklTID1cbiAgICBDT05TVF9FWFBSKHsneGxpbmsnOiAnaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluaycsICdzdmcnOiAnaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnfSk7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBEb21FbGVtZW50U2NoZW1hUmVnaXN0cnkgZXh0ZW5kcyBFbGVtZW50U2NoZW1hUmVnaXN0cnkge1xuICBwcml2YXRlIF9wcm90b0VsZW1lbnRzID0gbmV3IE1hcDxzdHJpbmcsIEVsZW1lbnQ+KCk7XG5cbiAgcHJpdmF0ZSBfZ2V0UHJvdG9FbGVtZW50KHRhZ05hbWU6IHN0cmluZyk6IEVsZW1lbnQge1xuICAgIHZhciBlbGVtZW50ID0gdGhpcy5fcHJvdG9FbGVtZW50cy5nZXQodGFnTmFtZSk7XG4gICAgaWYgKGlzQmxhbmsoZWxlbWVudCkpIHtcbiAgICAgIHZhciBuc0FuZE5hbWUgPSBzcGxpdE5zTmFtZSh0YWdOYW1lKTtcbiAgICAgIGVsZW1lbnQgPSBpc1ByZXNlbnQobnNBbmROYW1lWzBdKSA/XG4gICAgICAgICAgICAgICAgICAgIERPTS5jcmVhdGVFbGVtZW50TlMoTkFNRVNQQUNFX1VSSVNbbnNBbmROYW1lWzBdXSwgbnNBbmROYW1lWzFdKSA6XG4gICAgICAgICAgICAgICAgICAgIERPTS5jcmVhdGVFbGVtZW50KG5zQW5kTmFtZVsxXSk7XG4gICAgICB0aGlzLl9wcm90b0VsZW1lbnRzLnNldCh0YWdOYW1lLCBlbGVtZW50KTtcbiAgICB9XG4gICAgcmV0dXJuIGVsZW1lbnQ7XG4gIH1cblxuICBoYXNQcm9wZXJ0eSh0YWdOYW1lOiBzdHJpbmcsIHByb3BOYW1lOiBzdHJpbmcpOiBib29sZWFuIHtcbiAgICBpZiAodGFnTmFtZS5pbmRleE9mKCctJykgIT09IC0xKSB7XG4gICAgICAvLyBjYW4ndCB0ZWxsIG5vdyBhcyB3ZSBkb24ndCBrbm93IHdoaWNoIHByb3BlcnRpZXMgYSBjdXN0b20gZWxlbWVudCB3aWxsIGdldFxuICAgICAgLy8gb25jZSBpdCBpcyBpbnN0YW50aWF0ZWRcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgZWxtID0gdGhpcy5fZ2V0UHJvdG9FbGVtZW50KHRhZ05hbWUpO1xuICAgICAgcmV0dXJuIERPTS5oYXNQcm9wZXJ0eShlbG0sIHByb3BOYW1lKTtcbiAgICB9XG4gIH1cblxuICBnZXRNYXBwZWRQcm9wTmFtZShwcm9wTmFtZTogc3RyaW5nKTogc3RyaW5nIHtcbiAgICB2YXIgbWFwcGVkUHJvcE5hbWUgPSBTdHJpbmdNYXBXcmFwcGVyLmdldChET00uYXR0clRvUHJvcE1hcCwgcHJvcE5hbWUpO1xuICAgIHJldHVybiBpc1ByZXNlbnQobWFwcGVkUHJvcE5hbWUpID8gbWFwcGVkUHJvcE5hbWUgOiBwcm9wTmFtZTtcbiAgfVxufVxuIl19\n\n/***/ },\n\n/***/ 209:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';var collection_1 = __webpack_require__(3);\r\n\tvar lang_1 = __webpack_require__(1);\r\n\t/**\r\n\t * This file is a port of shadowCSS from webcomponents.js to TypeScript.\r\n\t *\r\n\t * Please make sure to keep to edits in sync with the source file.\r\n\t *\r\n\t * Source:\r\n\t * https://github.com/webcomponents/webcomponentsjs/blob/4efecd7e0e/src/ShadowCSS/ShadowCSS.js\r\n\t *\r\n\t * The original file level comment is reproduced below\r\n\t */\r\n\t/*\r\n\t  This is a limited shim for ShadowDOM css styling.\r\n\t  https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/shadow/index.html#styles\r\n\t\r\n\t  The intention here is to support only the styling features which can be\r\n\t  relatively simply implemented. The goal is to allow users to avoid the\r\n\t  most obvious pitfalls and do so without compromising performance significantly.\r\n\t  For ShadowDOM styling that's not covered here, a set of best practices\r\n\t  can be provided that should allow users to accomplish more complex styling.\r\n\t\r\n\t  The following is a list of specific ShadowDOM styling features and a brief\r\n\t  discussion of the approach used to shim.\r\n\t\r\n\t  Shimmed features:\r\n\t\r\n\t  * :host, :host-context: ShadowDOM allows styling of the shadowRoot's host\r\n\t  element using the :host rule. To shim this feature, the :host styles are\r\n\t  reformatted and prefixed with a given scope name and promoted to a\r\n\t  document level stylesheet.\r\n\t  For example, given a scope name of .foo, a rule like this:\r\n\t\r\n\t    :host {\r\n\t        background: red;\r\n\t      }\r\n\t    }\r\n\t\r\n\t  becomes:\r\n\t\r\n\t    .foo {\r\n\t      background: red;\r\n\t    }\r\n\t\r\n\t  * encapsultion: Styles defined within ShadowDOM, apply only to\r\n\t  dom inside the ShadowDOM. Polymer uses one of two techniques to implement\r\n\t  this feature.\r\n\t\r\n\t  By default, rules are prefixed with the host element tag name\r\n\t  as a descendant selector. This ensures styling does not leak out of the 'top'\r\n\t  of the element's ShadowDOM. For example,\r\n\t\r\n\t  div {\r\n\t      font-weight: bold;\r\n\t    }\r\n\t\r\n\t  becomes:\r\n\t\r\n\t  x-foo div {\r\n\t      font-weight: bold;\r\n\t    }\r\n\t\r\n\t  becomes:\r\n\t\r\n\t\r\n\t  Alternatively, if WebComponents.ShadowCSS.strictStyling is set to true then\r\n\t  selectors are scoped by adding an attribute selector suffix to each\r\n\t  simple selector that contains the host element tag name. Each element\r\n\t  in the element's ShadowDOM template is also given the scope attribute.\r\n\t  Thus, these rules match only elements that have the scope attribute.\r\n\t  For example, given a scope name of x-foo, a rule like this:\r\n\t\r\n\t    div {\r\n\t      font-weight: bold;\r\n\t    }\r\n\t\r\n\t  becomes:\r\n\t\r\n\t    div[x-foo] {\r\n\t      font-weight: bold;\r\n\t    }\r\n\t\r\n\t  Note that elements that are dynamically added to a scope must have the scope\r\n\t  selector added to them manually.\r\n\t\r\n\t  * upper/lower bound encapsulation: Styles which are defined outside a\r\n\t  shadowRoot should not cross the ShadowDOM boundary and should not apply\r\n\t  inside a shadowRoot.\r\n\t\r\n\t  This styling behavior is not emulated. Some possible ways to do this that\r\n\t  were rejected due to complexity and/or performance concerns include: (1) reset\r\n\t  every possible property for every possible selector for a given scope name;\r\n\t  (2) re-implement css in javascript.\r\n\t\r\n\t  As an alternative, users should make sure to use selectors\r\n\t  specific to the scope in which they are working.\r\n\t\r\n\t  * ::distributed: This behavior is not emulated. It's often not necessary\r\n\t  to style the contents of a specific insertion point and instead, descendants\r\n\t  of the host element can be styled selectively. Users can also create an\r\n\t  extra node around an insertion point and style that node's contents\r\n\t  via descendent selectors. For example, with a shadowRoot like this:\r\n\t\r\n\t    <style>\r\n\t      ::content(div) {\r\n\t        background: red;\r\n\t      }\r\n\t    </style>\r\n\t    <content></content>\r\n\t\r\n\t  could become:\r\n\t\r\n\t    <style>\r\n\t      / *@polyfill .content-container div * /\r\n\t      ::content(div) {\r\n\t        background: red;\r\n\t      }\r\n\t    </style>\r\n\t    <div class=\"content-container\">\r\n\t      <content></content>\r\n\t    </div>\r\n\t\r\n\t  Note the use of @polyfill in the comment above a ShadowDOM specific style\r\n\t  declaration. This is a directive to the styling shim to use the selector\r\n\t  in comments in lieu of the next selector when running under polyfill.\r\n\t*/\r\n\tvar ShadowCss = (function () {\r\n\t    function ShadowCss() {\r\n\t        this.strictStyling = true;\r\n\t    }\r\n\t    /*\r\n\t    * Shim some cssText with the given selector. Returns cssText that can\r\n\t    * be included in the document via WebComponents.ShadowCSS.addCssToDocument(css).\r\n\t    *\r\n\t    * When strictStyling is true:\r\n\t    * - selector is the attribute added to all elements inside the host,\r\n\t    * - hostSelector is the attribute added to the host itself.\r\n\t    */\r\n\t    ShadowCss.prototype.shimCssText = function (cssText, selector, hostSelector) {\r\n\t        if (hostSelector === void 0) { hostSelector = ''; }\r\n\t        cssText = stripComments(cssText);\r\n\t        cssText = this._insertDirectives(cssText);\r\n\t        return this._scopeCssText(cssText, selector, hostSelector);\r\n\t    };\r\n\t    ShadowCss.prototype._insertDirectives = function (cssText) {\r\n\t        cssText = this._insertPolyfillDirectivesInCssText(cssText);\r\n\t        return this._insertPolyfillRulesInCssText(cssText);\r\n\t    };\r\n\t    /*\r\n\t     * Process styles to convert native ShadowDOM rules that will trip\r\n\t     * up the css parser; we rely on decorating the stylesheet with inert rules.\r\n\t     *\r\n\t     * For example, we convert this rule:\r\n\t     *\r\n\t     * polyfill-next-selector { content: ':host menu-item'; }\r\n\t     * ::content menu-item {\r\n\t     *\r\n\t     * to this:\r\n\t     *\r\n\t     * scopeName menu-item {\r\n\t     *\r\n\t    **/\r\n\t    ShadowCss.prototype._insertPolyfillDirectivesInCssText = function (cssText) {\r\n\t        // Difference with webcomponents.js: does not handle comments\r\n\t        return lang_1.StringWrapper.replaceAllMapped(cssText, _cssContentNextSelectorRe, function (m) { return m[1] + '{'; });\r\n\t    };\r\n\t    /*\r\n\t     * Process styles to add rules which will only apply under the polyfill\r\n\t     *\r\n\t     * For example, we convert this rule:\r\n\t     *\r\n\t     * polyfill-rule {\r\n\t     *   content: ':host menu-item';\r\n\t     * ...\r\n\t     * }\r\n\t     *\r\n\t     * to this:\r\n\t     *\r\n\t     * scopeName menu-item {...}\r\n\t     *\r\n\t    **/\r\n\t    ShadowCss.prototype._insertPolyfillRulesInCssText = function (cssText) {\r\n\t        // Difference with webcomponents.js: does not handle comments\r\n\t        return lang_1.StringWrapper.replaceAllMapped(cssText, _cssContentRuleRe, function (m) {\r\n\t            var rule = m[0];\r\n\t            rule = lang_1.StringWrapper.replace(rule, m[1], '');\r\n\t            rule = lang_1.StringWrapper.replace(rule, m[2], '');\r\n\t            return m[3] + rule;\r\n\t        });\r\n\t    };\r\n\t    /* Ensure styles are scoped. Pseudo-scoping takes a rule like:\r\n\t     *\r\n\t     *  .foo {... }\r\n\t     *\r\n\t     *  and converts this to\r\n\t     *\r\n\t     *  scopeName .foo { ... }\r\n\t    */\r\n\t    ShadowCss.prototype._scopeCssText = function (cssText, scopeSelector, hostSelector) {\r\n\t        var unscoped = this._extractUnscopedRulesFromCssText(cssText);\r\n\t        cssText = this._insertPolyfillHostInCssText(cssText);\r\n\t        cssText = this._convertColonHost(cssText);\r\n\t        cssText = this._convertColonHostContext(cssText);\r\n\t        cssText = this._convertShadowDOMSelectors(cssText);\r\n\t        if (lang_1.isPresent(scopeSelector)) {\r\n\t            cssText = this._scopeSelectors(cssText, scopeSelector, hostSelector);\r\n\t        }\r\n\t        cssText = cssText + '\\n' + unscoped;\r\n\t        return cssText.trim();\r\n\t    };\r\n\t    /*\r\n\t     * Process styles to add rules which will only apply under the polyfill\r\n\t     * and do not process via CSSOM. (CSSOM is destructive to rules on rare\r\n\t     * occasions, e.g. -webkit-calc on Safari.)\r\n\t     * For example, we convert this rule:\r\n\t     *\r\n\t     * @polyfill-unscoped-rule {\r\n\t     *   content: 'menu-item';\r\n\t     * ... }\r\n\t     *\r\n\t     * to this:\r\n\t     *\r\n\t     * menu-item {...}\r\n\t     *\r\n\t    **/\r\n\t    ShadowCss.prototype._extractUnscopedRulesFromCssText = function (cssText) {\r\n\t        // Difference with webcomponents.js: does not handle comments\r\n\t        var r = '', m;\r\n\t        var matcher = lang_1.RegExpWrapper.matcher(_cssContentUnscopedRuleRe, cssText);\r\n\t        while (lang_1.isPresent(m = lang_1.RegExpMatcherWrapper.next(matcher))) {\r\n\t            var rule = m[0];\r\n\t            rule = lang_1.StringWrapper.replace(rule, m[2], '');\r\n\t            rule = lang_1.StringWrapper.replace(rule, m[1], m[3]);\r\n\t            r += rule + '\\n\\n';\r\n\t        }\r\n\t        return r;\r\n\t    };\r\n\t    /*\r\n\t     * convert a rule like :host(.foo) > .bar { }\r\n\t     *\r\n\t     * to\r\n\t     *\r\n\t     * scopeName.foo > .bar\r\n\t    */\r\n\t    ShadowCss.prototype._convertColonHost = function (cssText) {\r\n\t        return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);\r\n\t    };\r\n\t    /*\r\n\t     * convert a rule like :host-context(.foo) > .bar { }\r\n\t     *\r\n\t     * to\r\n\t     *\r\n\t     * scopeName.foo > .bar, .foo scopeName > .bar { }\r\n\t     *\r\n\t     * and\r\n\t     *\r\n\t     * :host-context(.foo:host) .bar { ... }\r\n\t     *\r\n\t     * to\r\n\t     *\r\n\t     * scopeName.foo .bar { ... }\r\n\t    */\r\n\t    ShadowCss.prototype._convertColonHostContext = function (cssText) {\r\n\t        return this._convertColonRule(cssText, _cssColonHostContextRe, this._colonHostContextPartReplacer);\r\n\t    };\r\n\t    ShadowCss.prototype._convertColonRule = function (cssText, regExp, partReplacer) {\r\n\t        // p1 = :host, p2 = contents of (), p3 rest of rule\r\n\t        return lang_1.StringWrapper.replaceAllMapped(cssText, regExp, function (m) {\r\n\t            if (lang_1.isPresent(m[2])) {\r\n\t                var parts = m[2].split(','), r = [];\r\n\t                for (var i = 0; i < parts.length; i++) {\r\n\t                    var p = parts[i];\r\n\t                    if (lang_1.isBlank(p))\r\n\t                        break;\r\n\t                    p = p.trim();\r\n\t                    r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\r\n\t                }\r\n\t                return r.join(',');\r\n\t            }\r\n\t            else {\r\n\t                return _polyfillHostNoCombinator + m[3];\r\n\t            }\r\n\t        });\r\n\t    };\r\n\t    ShadowCss.prototype._colonHostContextPartReplacer = function (host, part, suffix) {\r\n\t        if (lang_1.StringWrapper.contains(part, _polyfillHost)) {\r\n\t            return this._colonHostPartReplacer(host, part, suffix);\r\n\t        }\r\n\t        else {\r\n\t            return host + part + suffix + ', ' + part + ' ' + host + suffix;\r\n\t        }\r\n\t    };\r\n\t    ShadowCss.prototype._colonHostPartReplacer = function (host, part, suffix) {\r\n\t        return host + lang_1.StringWrapper.replace(part, _polyfillHost, '') + suffix;\r\n\t    };\r\n\t    /*\r\n\t     * Convert combinators like ::shadow and pseudo-elements like ::content\r\n\t     * by replacing with space.\r\n\t    */\r\n\t    ShadowCss.prototype._convertShadowDOMSelectors = function (cssText) {\r\n\t        for (var i = 0; i < _shadowDOMSelectorsRe.length; i++) {\r\n\t            cssText = lang_1.StringWrapper.replaceAll(cssText, _shadowDOMSelectorsRe[i], ' ');\r\n\t        }\r\n\t        return cssText;\r\n\t    };\r\n\t    // change a selector like 'div' to 'name div'\r\n\t    ShadowCss.prototype._scopeSelectors = function (cssText, scopeSelector, hostSelector) {\r\n\t        var _this = this;\r\n\t        return processRules(cssText, function (rule) {\r\n\t            var selector = rule.selector;\r\n\t            var content = rule.content;\r\n\t            if (rule.selector[0] != '@' || rule.selector.startsWith('@page')) {\r\n\t                selector =\r\n\t                    _this._scopeSelector(rule.selector, scopeSelector, hostSelector, _this.strictStyling);\r\n\t            }\r\n\t            else if (rule.selector.startsWith('@media')) {\r\n\t                content = _this._scopeSelectors(rule.content, scopeSelector, hostSelector);\r\n\t            }\r\n\t            return new CssRule(selector, content);\r\n\t        });\r\n\t    };\r\n\t    ShadowCss.prototype._scopeSelector = function (selector, scopeSelector, hostSelector, strict) {\r\n\t        var r = [], parts = selector.split(',');\r\n\t        for (var i = 0; i < parts.length; i++) {\r\n\t            var p = parts[i];\r\n\t            p = p.trim();\r\n\t            if (this._selectorNeedsScoping(p, scopeSelector)) {\r\n\t                p = strict && !lang_1.StringWrapper.contains(p, _polyfillHostNoCombinator) ?\r\n\t                    this._applyStrictSelectorScope(p, scopeSelector) :\r\n\t                    this._applySelectorScope(p, scopeSelector, hostSelector);\r\n\t            }\r\n\t            r.push(p);\r\n\t        }\r\n\t        return r.join(', ');\r\n\t    };\r\n\t    ShadowCss.prototype._selectorNeedsScoping = function (selector, scopeSelector) {\r\n\t        var re = this._makeScopeMatcher(scopeSelector);\r\n\t        return !lang_1.isPresent(lang_1.RegExpWrapper.firstMatch(re, selector));\r\n\t    };\r\n\t    ShadowCss.prototype._makeScopeMatcher = function (scopeSelector) {\r\n\t        var lre = /\\[/g;\r\n\t        var rre = /\\]/g;\r\n\t        scopeSelector = lang_1.StringWrapper.replaceAll(scopeSelector, lre, '\\\\[');\r\n\t        scopeSelector = lang_1.StringWrapper.replaceAll(scopeSelector, rre, '\\\\]');\r\n\t        return lang_1.RegExpWrapper.create('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\r\n\t    };\r\n\t    ShadowCss.prototype._applySelectorScope = function (selector, scopeSelector, hostSelector) {\r\n\t        // Difference from webcomponentsjs: scopeSelector could not be an array\r\n\t        return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);\r\n\t    };\r\n\t    // scope via name and [is=name]\r\n\t    ShadowCss.prototype._applySimpleSelectorScope = function (selector, scopeSelector, hostSelector) {\r\n\t        if (lang_1.isPresent(lang_1.RegExpWrapper.firstMatch(_polyfillHostRe, selector))) {\r\n\t            var replaceBy = this.strictStyling ? \"[\" + hostSelector + \"]\" : scopeSelector;\r\n\t            selector = lang_1.StringWrapper.replace(selector, _polyfillHostNoCombinator, replaceBy);\r\n\t            return lang_1.StringWrapper.replaceAll(selector, _polyfillHostRe, replaceBy + ' ');\r\n\t        }\r\n\t        else {\r\n\t            return scopeSelector + ' ' + selector;\r\n\t        }\r\n\t    };\r\n\t    // return a selector with [name] suffix on each simple selector\r\n\t    // e.g. .foo.bar > .zot becomes .foo[name].bar[name] > .zot[name]  /** @internal */\r\n\t    ShadowCss.prototype._applyStrictSelectorScope = function (selector, scopeSelector) {\r\n\t        var isRe = /\\[is=([^\\]]*)\\]/g;\r\n\t        scopeSelector = lang_1.StringWrapper.replaceAllMapped(scopeSelector, isRe, function (m) { return m[1]; });\r\n\t        var splits = [' ', '>', '+', '~'], scoped = selector, attrName = '[' + scopeSelector + ']';\r\n\t        for (var i = 0; i < splits.length; i++) {\r\n\t            var sep = splits[i];\r\n\t            var parts = scoped.split(sep);\r\n\t            scoped = parts.map(function (p) {\r\n\t                // remove :host since it should be unnecessary\r\n\t                var t = lang_1.StringWrapper.replaceAll(p.trim(), _polyfillHostRe, '');\r\n\t                if (t.length > 0 && !collection_1.ListWrapper.contains(splits, t) &&\r\n\t                    !lang_1.StringWrapper.contains(t, attrName)) {\r\n\t                    var re = /([^:]*)(:*)(.*)/g;\r\n\t                    var m = lang_1.RegExpWrapper.firstMatch(re, t);\r\n\t                    if (lang_1.isPresent(m)) {\r\n\t                        p = m[1] + attrName + m[2] + m[3];\r\n\t                    }\r\n\t                }\r\n\t                return p;\r\n\t            })\r\n\t                .join(sep);\r\n\t        }\r\n\t        return scoped;\r\n\t    };\r\n\t    ShadowCss.prototype._insertPolyfillHostInCssText = function (selector) {\r\n\t        selector = lang_1.StringWrapper.replaceAll(selector, _colonHostContextRe, _polyfillHostContext);\r\n\t        selector = lang_1.StringWrapper.replaceAll(selector, _colonHostRe, _polyfillHost);\r\n\t        return selector;\r\n\t    };\r\n\t    return ShadowCss;\r\n\t})();\r\n\texports.ShadowCss = ShadowCss;\r\n\tvar _cssContentNextSelectorRe = /polyfill-next-selector[^}]*content:[\\s]*?['\"](.*?)['\"][;\\s]*}([^{]*?){/gim;\r\n\tvar _cssContentRuleRe = /(polyfill-rule)[^}]*(content:[\\s]*['\"](.*?)['\"])[;\\s]*[^}]*}/gim;\r\n\tvar _cssContentUnscopedRuleRe = /(polyfill-unscoped-rule)[^}]*(content:[\\s]*['\"](.*?)['\"])[;\\s]*[^}]*}/gim;\r\n\tvar _polyfillHost = '-shadowcsshost';\r\n\t// note: :host-context pre-processed to -shadowcsshostcontext.\r\n\tvar _polyfillHostContext = '-shadowcsscontext';\r\n\tvar _parenSuffix = ')(?:\\\\((' +\r\n\t    '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\r\n\t    ')\\\\))?([^,{]*)';\r\n\tvar _cssColonHostRe = lang_1.RegExpWrapper.create('(' + _polyfillHost + _parenSuffix, 'im');\r\n\tvar _cssColonHostContextRe = lang_1.RegExpWrapper.create('(' + _polyfillHostContext + _parenSuffix, 'im');\r\n\tvar _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\r\n\tvar _shadowDOMSelectorsRe = [\r\n\t    />>>/g,\r\n\t    /::shadow/g,\r\n\t    /::content/g,\r\n\t    // Deprecated selectors\r\n\t    // TODO(vicb): see https://github.com/angular/clang-format/issues/16\r\n\t    // clang-format off\r\n\t    /\\/deep\\//g,\r\n\t    /\\/shadow-deep\\//g,\r\n\t    /\\/shadow\\//g,\r\n\t];\r\n\tvar _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\r\n\tvar _polyfillHostRe = lang_1.RegExpWrapper.create(_polyfillHost, 'im');\r\n\tvar _colonHostRe = /:host/gim;\r\n\tvar _colonHostContextRe = /:host-context/gim;\r\n\tvar _commentRe = /\\/\\*[\\s\\S]*?\\*\\//g;\r\n\tfunction stripComments(input) {\r\n\t    return lang_1.StringWrapper.replaceAllMapped(input, _commentRe, function (_) { return ''; });\r\n\t}\r\n\tvar _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\r\n\tvar _curlyRe = /([{}])/g;\r\n\tvar OPEN_CURLY = '{';\r\n\tvar CLOSE_CURLY = '}';\r\n\tvar BLOCK_PLACEHOLDER = '%BLOCK%';\r\n\tvar CssRule = (function () {\r\n\t    function CssRule(selector, content) {\r\n\t        this.selector = selector;\r\n\t        this.content = content;\r\n\t    }\r\n\t    return CssRule;\r\n\t})();\r\n\texports.CssRule = CssRule;\r\n\tfunction processRules(input, ruleCallback) {\r\n\t    var inputWithEscapedBlocks = escapeBlocks(input);\r\n\t    var nextBlockIndex = 0;\r\n\t    return lang_1.StringWrapper.replaceAllMapped(inputWithEscapedBlocks.escapedString, _ruleRe, function (m) {\r\n\t        var selector = m[2];\r\n\t        var content = '';\r\n\t        var suffix = m[4];\r\n\t        var contentPrefix = '';\r\n\t        if (lang_1.isPresent(m[4]) && m[4].startsWith('{' + BLOCK_PLACEHOLDER)) {\r\n\t            content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\r\n\t            suffix = m[4].substring(BLOCK_PLACEHOLDER.length + 1);\r\n\t            contentPrefix = '{';\r\n\t        }\r\n\t        var rule = ruleCallback(new CssRule(selector, content));\r\n\t        return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\r\n\t    });\r\n\t}\r\n\texports.processRules = processRules;\r\n\tvar StringWithEscapedBlocks = (function () {\r\n\t    function StringWithEscapedBlocks(escapedString, blocks) {\r\n\t        this.escapedString = escapedString;\r\n\t        this.blocks = blocks;\r\n\t    }\r\n\t    return StringWithEscapedBlocks;\r\n\t})();\r\n\tfunction escapeBlocks(input) {\r\n\t    var inputParts = lang_1.StringWrapper.split(input, _curlyRe);\r\n\t    var resultParts = [];\r\n\t    var escapedBlocks = [];\r\n\t    var bracketCount = 0;\r\n\t    var currentBlockParts = [];\r\n\t    for (var partIndex = 0; partIndex < inputParts.length; partIndex++) {\r\n\t        var part = inputParts[partIndex];\r\n\t        if (part == CLOSE_CURLY) {\r\n\t            bracketCount--;\r\n\t        }\r\n\t        if (bracketCount > 0) {\r\n\t            currentBlockParts.push(part);\r\n\t        }\r\n\t        else {\r\n\t            if (currentBlockParts.length > 0) {\r\n\t                escapedBlocks.push(currentBlockParts.join(''));\r\n\t                resultParts.push(BLOCK_PLACEHOLDER);\r\n\t                currentBlockParts = [];\r\n\t            }\r\n\t            resultParts.push(part);\r\n\t        }\r\n\t        if (part == OPEN_CURLY) {\r\n\t            bracketCount++;\r\n\t        }\r\n\t    }\r\n\t    if (currentBlockParts.length > 0) {\r\n\t        escapedBlocks.push(currentBlockParts.join(''));\r\n\t        resultParts.push(BLOCK_PLACEHOLDER);\r\n\t    }\r\n\t    return new StringWithEscapedBlocks(resultParts.join(''), escapedBlocks);\r\n\t}\r\n\t//# sourceMappingURL=data:application/json;base64,\n\n/***/ },\n\n/***/ 210:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar lang_1 = __webpack_require__(1);\r\n\t/**\r\n\t * Marks a function or method as an Angular 2 entrypoint. Only necessary in Dart code.\r\n\t *\r\n\t * The optional `name` parameter will be reflected in logs when the entry point is processed.\r\n\t *\r\n\t * See [the wiki][] for detailed documentation.\r\n\t * [the wiki]: https://github.com/angular/angular/wiki/Angular-2-Dart-Transformer#entry_points\r\n\t *\r\n\t * ## Example\r\n\t *\r\n\t * ```\r\n\t * @AngularEntrypoint(\"name-for-debug\")\r\n\t * void main() {\r\n\t *   bootstrap(MyComponent);\r\n\t * }\r\n\t * ```\r\n\t */\r\n\tvar AngularEntrypoint = (function () {\r\n\t    function AngularEntrypoint(name) {\r\n\t        this.name = name;\r\n\t    }\r\n\t    AngularEntrypoint = __decorate([\r\n\t        lang_1.CONST(), \r\n\t        __metadata('design:paramtypes', [String])\r\n\t    ], AngularEntrypoint);\r\n\t    return AngularEntrypoint;\r\n\t})();\r\n\texports.AngularEntrypoint = AngularEntrypoint;\r\n\t//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5ndWxhcl9lbnRyeXBvaW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYW5ndWxhcjIvc3JjL2NvcmUvYW5ndWxhcl9lbnRyeXBvaW50LnRzIl0sIm5hbWVzIjpbIkFuZ3VsYXJFbnRyeXBvaW50IiwiQW5ndWxhckVudHJ5cG9pbnQuY29uc3RydWN0b3IiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBLHFCQUFvQiwwQkFBMEIsQ0FBQyxDQUFBO0FBRS9DOzs7Ozs7Ozs7Ozs7Ozs7O0dBZ0JHO0FBQ0g7SUFFRUEsMkJBQW1CQSxJQUFhQTtRQUFiQyxTQUFJQSxHQUFKQSxJQUFJQSxDQUFTQTtJQUFHQSxDQUFDQTtJQUZ0Q0Q7UUFBQ0EsWUFBS0EsRUFBRUE7OzBCQUdQQTtJQUFEQSx3QkFBQ0E7QUFBREEsQ0FBQ0EsQUFIRCxJQUdDO0FBRlkseUJBQWlCLG9CQUU3QixDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDT05TVH0gZnJvbSAnYW5ndWxhcjIvc3JjL2ZhY2FkZS9sYW5nJztcblxuLyoqXG4gKiBNYXJrcyBhIGZ1bmN0aW9uIG9yIG1ldGhvZCBhcyBhbiBBbmd1bGFyIDIgZW50cnlwb2ludC4gT25seSBuZWNlc3NhcnkgaW4gRGFydCBjb2RlLlxuICpcbiAqIFRoZSBvcHRpb25hbCBgbmFtZWAgcGFyYW1ldGVyIHdpbGwgYmUgcmVmbGVjdGVkIGluIGxvZ3Mgd2hlbiB0aGUgZW50cnkgcG9pbnQgaXMgcHJvY2Vzc2VkLlxuICpcbiAqIFNlZSBbdGhlIHdpa2ldW10gZm9yIGRldGFpbGVkIGRvY3VtZW50YXRpb24uXG4gKiBbdGhlIHdpa2ldOiBodHRwczovL2dpdGh1Yi5jb20vYW5ndWxhci9hbmd1bGFyL3dpa2kvQW5ndWxhci0yLURhcnQtVHJhbnNmb3JtZXIjZW50cnlfcG9pbnRzXG4gKlxuICogIyMgRXhhbXBsZVxuICpcbiAqIGBgYFxuICogQEFuZ3VsYXJFbnRyeXBvaW50KFwibmFtZS1mb3ItZGVidWdcIilcbiAqIHZvaWQgbWFpbigpIHtcbiAqICAgYm9vdHN0cmFwKE15Q29tcG9uZW50KTtcbiAqIH1cbiAqIGBgYFxuICovXG5AQ09OU1QoKVxuZXhwb3J0IGNsYXNzIEFuZ3VsYXJFbnRyeXBvaW50IHtcbiAgY29uc3RydWN0b3IocHVibGljIG5hbWU/OiBTdHJpbmcpIHt9XG59XG4iXX0=\n\n/***/ },\n\n/***/ 223:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';var lang_1 = __webpack_require__(1);\r\n\tvar debug_node_1 = __webpack_require__(100);\r\n\tvar DebugDomRootRenderer = (function () {\r\n\t    function DebugDomRootRenderer(_delegate) {\r\n\t        this._delegate = _delegate;\r\n\t    }\r\n\t    DebugDomRootRenderer.prototype.renderComponent = function (componentProto) {\r\n\t        return new DebugDomRenderer(this, this._delegate.renderComponent(componentProto));\r\n\t    };\r\n\t    return DebugDomRootRenderer;\r\n\t})();\r\n\texports.DebugDomRootRenderer = DebugDomRootRenderer;\r\n\tvar DebugDomRenderer = (function () {\r\n\t    function DebugDomRenderer(_rootRenderer, _delegate) {\r\n\t        this._rootRenderer = _rootRenderer;\r\n\t        this._delegate = _delegate;\r\n\t    }\r\n\t    DebugDomRenderer.prototype.renderComponent = function (componentType) {\r\n\t        return this._rootRenderer.renderComponent(componentType);\r\n\t    };\r\n\t    DebugDomRenderer.prototype.selectRootElement = function (selector) {\r\n\t        var nativeEl = this._delegate.selectRootElement(selector);\r\n\t        var debugEl = new debug_node_1.DebugElement(nativeEl, null);\r\n\t        debug_node_1.indexDebugNode(debugEl);\r\n\t        return nativeEl;\r\n\t    };\r\n\t    DebugDomRenderer.prototype.createElement = function (parentElement, name) {\r\n\t        var nativeEl = this._delegate.createElement(parentElement, name);\r\n\t        var debugEl = new debug_node_1.DebugElement(nativeEl, debug_node_1.getDebugNode(parentElement));\r\n\t        debugEl.name = name;\r\n\t        debug_node_1.indexDebugNode(debugEl);\r\n\t        return nativeEl;\r\n\t    };\r\n\t    DebugDomRenderer.prototype.createViewRoot = function (hostElement) { return this._delegate.createViewRoot(hostElement); };\r\n\t    DebugDomRenderer.prototype.createTemplateAnchor = function (parentElement) {\r\n\t        var comment = this._delegate.createTemplateAnchor(parentElement);\r\n\t        var debugEl = new debug_node_1.DebugNode(comment, debug_node_1.getDebugNode(parentElement));\r\n\t        debug_node_1.indexDebugNode(debugEl);\r\n\t        return comment;\r\n\t    };\r\n\t    DebugDomRenderer.prototype.createText = function (parentElement, value) {\r\n\t        var text = this._delegate.createText(parentElement, value);\r\n\t        var debugEl = new debug_node_1.DebugNode(text, debug_node_1.getDebugNode(parentElement));\r\n\t        debug_node_1.indexDebugNode(debugEl);\r\n\t        return text;\r\n\t    };\r\n\t    DebugDomRenderer.prototype.projectNodes = function (parentElement, nodes) {\r\n\t        var debugParent = debug_node_1.getDebugNode(parentElement);\r\n\t        if (lang_1.isPresent(debugParent) && debugParent instanceof debug_node_1.DebugElement) {\r\n\t            nodes.forEach(function (node) { debugParent.addChild(debug_node_1.getDebugNode(node)); });\r\n\t        }\r\n\t        return this._delegate.projectNodes(parentElement, nodes);\r\n\t    };\r\n\t    DebugDomRenderer.prototype.attachViewAfter = function (node, viewRootNodes) {\r\n\t        var debugNode = debug_node_1.getDebugNode(node);\r\n\t        if (lang_1.isPresent(debugNode)) {\r\n\t            var debugParent = debugNode.parent;\r\n\t            if (viewRootNodes.length > 0 && lang_1.isPresent(debugParent)) {\r\n\t                var debugViewRootNodes = [];\r\n\t                viewRootNodes.forEach(function (rootNode) { return debugViewRootNodes.push(debug_node_1.getDebugNode(rootNode)); });\r\n\t                debugParent.insertChildrenAfter(debugNode, debugViewRootNodes);\r\n\t            }\r\n\t        }\r\n\t        return this._delegate.attachViewAfter(node, viewRootNodes);\r\n\t    };\r\n\t    DebugDomRenderer.prototype.detachView = function (viewRootNodes) {\r\n\t        viewRootNodes.forEach(function (node) {\r\n\t            var debugNode = debug_node_1.getDebugNode(node);\r\n\t            if (lang_1.isPresent(debugNode) && lang_1.isPresent(debugNode.parent)) {\r\n\t                debugNode.parent.removeChild(debugNode);\r\n\t            }\r\n\t        });\r\n\t        return this._delegate.detachView(viewRootNodes);\r\n\t    };\r\n\t    DebugDomRenderer.prototype.destroyView = function (hostElement, viewAllNodes) {\r\n\t        viewAllNodes.forEach(function (node) { debug_node_1.removeDebugNodeFromIndex(debug_node_1.getDebugNode(node)); });\r\n\t        return this._delegate.destroyView(hostElement, viewAllNodes);\r\n\t    };\r\n\t    DebugDomRenderer.prototype.listen = function (renderElement, name, callback) {\r\n\t        var debugEl = debug_node_1.getDebugNode(renderElement);\r\n\t        if (lang_1.isPresent(debugEl)) {\r\n\t            debugEl.listeners.push(new debug_node_1.EventListener(name, callback));\r\n\t        }\r\n\t        return this._delegate.listen(renderElement, name, callback);\r\n\t    };\r\n\t    DebugDomRenderer.prototype.listenGlobal = function (target, name, callback) {\r\n\t        return this._delegate.listenGlobal(target, name, callback);\r\n\t    };\r\n\t    DebugDomRenderer.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\r\n\t        var debugEl = debug_node_1.getDebugNode(renderElement);\r\n\t        if (lang_1.isPresent(debugEl) && debugEl instanceof debug_node_1.DebugElement) {\r\n\t            debugEl.properties.set(propertyName, propertyValue);\r\n\t        }\r\n\t        return this._delegate.setElementProperty(renderElement, propertyName, propertyValue);\r\n\t    };\r\n\t    DebugDomRenderer.prototype.setElementAttribute = function (renderElement, attributeName, attributeValue) {\r\n\t        var debugEl = debug_node_1.getDebugNode(renderElement);\r\n\t        if (lang_1.isPresent(debugEl) && debugEl instanceof debug_node_1.DebugElement) {\r\n\t            debugEl.attributes.set(attributeName, attributeValue);\r\n\t        }\r\n\t        return this._delegate.setElementAttribute(renderElement, attributeName, attributeValue);\r\n\t    };\r\n\t    /**\r\n\t     * Used only in debug mode to serialize property changes to comment nodes,\r\n\t     * such as <template> placeholders.\r\n\t     */\r\n\t    DebugDomRenderer.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) {\r\n\t        return this._delegate.setBindingDebugInfo(renderElement, propertyName, propertyValue);\r\n\t    };\r\n\t    /**\r\n\t     * Used only in development mode to set information needed by the DebugNode for this element.\r\n\t     */\r\n\t    DebugDomRenderer.prototype.setElementDebugInfo = function (renderElement, info) {\r\n\t        var debugEl = debug_node_1.getDebugNode(renderElement);\r\n\t        debugEl.setDebugInfo(info);\r\n\t        return this._delegate.setElementDebugInfo(renderElement, info);\r\n\t    };\r\n\t    DebugDomRenderer.prototype.setElementClass = function (renderElement, className, isAdd) {\r\n\t        return this._delegate.setElementClass(renderElement, className, isAdd);\r\n\t    };\r\n\t    DebugDomRenderer.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\r\n\t        return this._delegate.setElementStyle(renderElement, styleName, styleValue);\r\n\t    };\r\n\t    DebugDomRenderer.prototype.invokeElementMethod = function (renderElement, methodName, args) {\r\n\t        return this._delegate.invokeElementMethod(renderElement, methodName, args);\r\n\t    };\r\n\t    DebugDomRenderer.prototype.setText = function (renderNode, text) { return this._delegate.setText(renderNode, text); };\r\n\t    return DebugDomRenderer;\r\n\t})();\r\n\texports.DebugDomRenderer = DebugDomRenderer;\r\n\t//# sourceMappingURL=data:application/json;base64,\n\n/***/ },\n\n/***/ 226:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';var lang_1 = __webpack_require__(1);\r\n\tvar interfaces_1 = __webpack_require__(63);\r\n\tfunction hasLifecycleHook(lcInterface, token) {\r\n\t    if (!(token instanceof lang_1.Type))\r\n\t        return false;\r\n\t    var proto = token.prototype;\r\n\t    switch (lcInterface) {\r\n\t        case interfaces_1.LifecycleHooks.AfterContentInit:\r\n\t            return !!proto.ngAfterContentInit;\r\n\t        case interfaces_1.LifecycleHooks.AfterContentChecked:\r\n\t            return !!proto.ngAfterContentChecked;\r\n\t        case interfaces_1.LifecycleHooks.AfterViewInit:\r\n\t            return !!proto.ngAfterViewInit;\r\n\t        case interfaces_1.LifecycleHooks.AfterViewChecked:\r\n\t            return !!proto.ngAfterViewChecked;\r\n\t        case interfaces_1.LifecycleHooks.OnChanges:\r\n\t            return !!proto.ngOnChanges;\r\n\t        case interfaces_1.LifecycleHooks.DoCheck:\r\n\t            return !!proto.ngDoCheck;\r\n\t        case interfaces_1.LifecycleHooks.OnDestroy:\r\n\t            return !!proto.ngOnDestroy;\r\n\t        case interfaces_1.LifecycleHooks.OnInit:\r\n\t            return !!proto.ngOnInit;\r\n\t        default:\r\n\t            return false;\r\n\t    }\r\n\t}\r\n\texports.hasLifecycleHook = hasLifecycleHook;\r\n\t//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlyZWN0aXZlX2xpZmVjeWNsZV9yZWZsZWN0b3IuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJhbmd1bGFyMi9zcmMvY29yZS9saW5rZXIvZGlyZWN0aXZlX2xpZmVjeWNsZV9yZWZsZWN0b3IudHMiXSwibmFtZXMiOlsiaGFzTGlmZWN5Y2xlSG9vayJdLCJtYXBwaW5ncyI6IkFBQUEscUJBQW1CLDBCQUEwQixDQUFDLENBQUE7QUFDOUMsMkJBQTZCLGNBQWMsQ0FBQyxDQUFBO0FBRTVDLDBCQUFpQyxXQUEyQixFQUFFLEtBQUs7SUFDakVBLEVBQUVBLENBQUNBLENBQUNBLENBQUNBLENBQUNBLEtBQUtBLFlBQVlBLFdBQUlBLENBQUNBLENBQUNBO1FBQUNBLE1BQU1BLENBQUNBLEtBQUtBLENBQUNBO0lBRTNDQSxJQUFJQSxLQUFLQSxHQUFTQSxLQUFNQSxDQUFDQSxTQUFTQSxDQUFDQTtJQUVuQ0EsTUFBTUEsQ0FBQ0EsQ0FBQ0EsV0FBV0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7UUFDcEJBLEtBQUtBLDJCQUFjQSxDQUFDQSxnQkFBZ0JBO1lBQ2xDQSxNQUFNQSxDQUFDQSxDQUFDQSxDQUFDQSxLQUFLQSxDQUFDQSxrQkFBa0JBLENBQUNBO1FBQ3BDQSxLQUFLQSwyQkFBY0EsQ0FBQ0EsbUJBQW1CQTtZQUNyQ0EsTUFBTUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsS0FBS0EsQ0FBQ0EscUJBQXFCQSxDQUFDQTtRQUN2Q0EsS0FBS0EsMkJBQWNBLENBQUNBLGFBQWFBO1lBQy9CQSxNQUFNQSxDQUFDQSxDQUFDQSxDQUFDQSxLQUFLQSxDQUFDQSxlQUFlQSxDQUFDQTtRQUNqQ0EsS0FBS0EsMkJBQWNBLENBQUNBLGdCQUFnQkE7WUFDbENBLE1BQU1BLENBQUNBLENBQUNBLENBQUNBLEtBQUtBLENBQUNBLGtCQUFrQkEsQ0FBQ0E7UUFDcENBLEtBQUtBLDJCQUFjQSxDQUFDQSxTQUFTQTtZQUMzQkEsTUFBTUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsS0FBS0EsQ0FBQ0EsV0FBV0EsQ0FBQ0E7UUFDN0JBLEtBQUtBLDJCQUFjQSxDQUFDQSxPQUFPQTtZQUN6QkEsTUFBTUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsS0FBS0EsQ0FBQ0EsU0FBU0EsQ0FBQ0E7UUFDM0JBLEtBQUtBLDJCQUFjQSxDQUFDQSxTQUFTQTtZQUMzQkEsTUFBTUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsS0FBS0EsQ0FBQ0EsV0FBV0EsQ0FBQ0E7UUFDN0JBLEtBQUtBLDJCQUFjQSxDQUFDQSxNQUFNQTtZQUN4QkEsTUFBTUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsS0FBS0EsQ0FBQ0EsUUFBUUEsQ0FBQ0E7UUFDMUJBO1lBQ0VBLE1BQU1BLENBQUNBLEtBQUtBLENBQUNBO0lBQ2pCQSxDQUFDQTtBQUNIQSxDQUFDQTtBQXpCZSx3QkFBZ0IsbUJBeUIvQixDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtUeXBlfSBmcm9tICdhbmd1bGFyMi9zcmMvZmFjYWRlL2xhbmcnO1xuaW1wb3J0IHtMaWZlY3ljbGVIb29rc30gZnJvbSAnLi9pbnRlcmZhY2VzJztcblxuZXhwb3J0IGZ1bmN0aW9uIGhhc0xpZmVjeWNsZUhvb2sobGNJbnRlcmZhY2U6IExpZmVjeWNsZUhvb2tzLCB0b2tlbik6IGJvb2xlYW4ge1xuICBpZiAoISh0b2tlbiBpbnN0YW5jZW9mIFR5cGUpKSByZXR1cm4gZmFsc2U7XG5cbiAgdmFyIHByb3RvID0gKDxhbnk+dG9rZW4pLnByb3RvdHlwZTtcblxuICBzd2l0Y2ggKGxjSW50ZXJmYWNlKSB7XG4gICAgY2FzZSBMaWZlY3ljbGVIb29rcy5BZnRlckNvbnRlbnRJbml0OlxuICAgICAgcmV0dXJuICEhcHJvdG8ubmdBZnRlckNvbnRlbnRJbml0O1xuICAgIGNhc2UgTGlmZWN5Y2xlSG9va3MuQWZ0ZXJDb250ZW50Q2hlY2tlZDpcbiAgICAgIHJldHVybiAhIXByb3RvLm5nQWZ0ZXJDb250ZW50Q2hlY2tlZDtcbiAgICBjYXNlIExpZmVjeWNsZUhvb2tzLkFmdGVyVmlld0luaXQ6XG4gICAgICByZXR1cm4gISFwcm90by5uZ0FmdGVyVmlld0luaXQ7XG4gICAgY2FzZSBMaWZlY3ljbGVIb29rcy5BZnRlclZpZXdDaGVja2VkOlxuICAgICAgcmV0dXJuICEhcHJvdG8ubmdBZnRlclZpZXdDaGVja2VkO1xuICAgIGNhc2UgTGlmZWN5Y2xlSG9va3MuT25DaGFuZ2VzOlxuICAgICAgcmV0dXJuICEhcHJvdG8ubmdPbkNoYW5nZXM7XG4gICAgY2FzZSBMaWZlY3ljbGVIb29rcy5Eb0NoZWNrOlxuICAgICAgcmV0dXJuICEhcHJvdG8ubmdEb0NoZWNrO1xuICAgIGNhc2UgTGlmZWN5Y2xlSG9va3MuT25EZXN0cm95OlxuICAgICAgcmV0dXJuICEhcHJvdG8ubmdPbkRlc3Ryb3k7XG4gICAgY2FzZSBMaWZlY3ljbGVIb29rcy5PbkluaXQ6XG4gICAgICByZXR1cm4gISFwcm90by5uZ09uSW5pdDtcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIGZhbHNlO1xuICB9XG59XG4iXX0=\n\n/***/ },\n\n/***/ 230:\n/***/ function(module, exports) {\n\n\t'use strict';/**\r\n\t * This is here because DART requires it. It is noop in JS.\r\n\t */\r\n\tfunction wtfInit() { }\r\n\texports.wtfInit = wtfInit;\r\n\t//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid3RmX2luaXQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJhbmd1bGFyMi9zcmMvY29yZS9wcm9maWxlL3d0Zl9pbml0LnRzIl0sIm5hbWVzIjpbInd0ZkluaXQiXSwibWFwcGluZ3MiOiJBQUFBOztHQUVHO0FBQ0gscUJBQTJCQSxDQUFDQTtBQUFaLGVBQU8sVUFBSyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBUaGlzIGlzIGhlcmUgYmVjYXVzZSBEQVJUIHJlcXVpcmVzIGl0LiBJdCBpcyBub29wIGluIEpTLlxuICovXG5leHBvcnQgZnVuY3Rpb24gd3RmSW5pdCgpIHt9XG4iXX0=\n\n/***/ },\n\n/***/ 235:\n/***/ function(module, exports) {\n\n\t'use strict';/**\r\n\t * JS version of browser APIs. This library can only run in the browser.\r\n\t */\r\n\tvar win = window;\r\n\texports.window = win;\r\n\texports.document = window.document;\r\n\texports.location = window.location;\r\n\texports.gc = window['gc'] ? function () { return window['gc'](); } : function () { return null; };\r\n\texports.performance = window['performance'] ? window['performance'] : null;\r\n\texports.Event = window['Event'];\r\n\texports.MouseEvent = window['MouseEvent'];\r\n\texports.KeyboardEvent = window['KeyboardEvent'];\r\n\texports.EventTarget = window['EventTarget'];\r\n\texports.History = window['History'];\r\n\texports.Location = window['Location'];\r\n\texports.EventListener = window['EventListener'];\r\n\t//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnJvd3Nlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImFuZ3VsYXIyL3NyYy9mYWNhZGUvYnJvd3Nlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7R0FFRztBQUNILElBQUksR0FBRyxHQUFHLE1BQU07QUFFRCxjQUFNLE9BRko7QUFHTixnQkFBUSxHQUFHLE1BQU0sQ0FBQyxRQUFRLENBQUM7QUFDM0IsZ0JBQVEsR0FBRyxNQUFNLENBQUMsUUFBUSxDQUFDO0FBQzNCLFVBQUUsR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsY0FBTSxPQUFBLE1BQU0sQ0FBQyxJQUFJLENBQUMsRUFBRSxFQUFkLENBQWMsR0FBRyxjQUFNLE9BQUEsSUFBSSxFQUFKLENBQUksQ0FBQztBQUN0RCxtQkFBVyxHQUFHLE1BQU0sQ0FBQyxhQUFhLENBQUMsR0FBRyxNQUFNLENBQUMsYUFBYSxDQUFDLEdBQUcsSUFBSSxDQUFDO0FBQ2pFLGFBQUssR0FBRyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUM7QUFDeEIsa0JBQVUsR0FBRyxNQUFNLENBQUMsWUFBWSxDQUFDLENBQUM7QUFDbEMscUJBQWEsR0FBRyxNQUFNLENBQUMsZUFBZSxDQUFDLENBQUM7QUFDeEMsbUJBQVcsR0FBRyxNQUFNLENBQUMsYUFBYSxDQUFDLENBQUM7QUFDcEMsZUFBTyxHQUFHLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQztBQUM1QixnQkFBUSxHQUFHLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQztBQUM5QixxQkFBYSxHQUFHLE1BQU0sQ0FBQyxlQUFlLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogSlMgdmVyc2lvbiBvZiBicm93c2VyIEFQSXMuIFRoaXMgbGlicmFyeSBjYW4gb25seSBydW4gaW4gdGhlIGJyb3dzZXIuXG4gKi9cbnZhciB3aW4gPSB3aW5kb3c7XG5cbmV4cG9ydCB7d2luIGFzIHdpbmRvd307XG5leHBvcnQgdmFyIGRvY3VtZW50ID0gd2luZG93LmRvY3VtZW50O1xuZXhwb3J0IHZhciBsb2NhdGlvbiA9IHdpbmRvdy5sb2NhdGlvbjtcbmV4cG9ydCB2YXIgZ2MgPSB3aW5kb3dbJ2djJ10gPyAoKSA9PiB3aW5kb3dbJ2djJ10oKSA6ICgpID0+IG51bGw7XG5leHBvcnQgdmFyIHBlcmZvcm1hbmNlID0gd2luZG93WydwZXJmb3JtYW5jZSddID8gd2luZG93WydwZXJmb3JtYW5jZSddIDogbnVsbDtcbmV4cG9ydCBjb25zdCBFdmVudCA9IHdpbmRvd1snRXZlbnQnXTtcbmV4cG9ydCBjb25zdCBNb3VzZUV2ZW50ID0gd2luZG93WydNb3VzZUV2ZW50J107XG5leHBvcnQgY29uc3QgS2V5Ym9hcmRFdmVudCA9IHdpbmRvd1snS2V5Ym9hcmRFdmVudCddO1xuZXhwb3J0IGNvbnN0IEV2ZW50VGFyZ2V0ID0gd2luZG93WydFdmVudFRhcmdldCddO1xuZXhwb3J0IGNvbnN0IEhpc3RvcnkgPSB3aW5kb3dbJ0hpc3RvcnknXTtcbmV4cG9ydCBjb25zdCBMb2NhdGlvbiA9IHdpbmRvd1snTG9jYXRpb24nXTtcbmV4cG9ydCBjb25zdCBFdmVudExpc3RlbmVyID0gd2luZG93WydFdmVudExpc3RlbmVyJ107XG4iXX0=\n\n/***/ },\n\n/***/ 237:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';var __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar collection_1 = __webpack_require__(3);\r\n\tvar lang_1 = __webpack_require__(1);\r\n\tvar dom_adapter_1 = __webpack_require__(11);\r\n\tvar xhr_impl_1 = __webpack_require__(174);\r\n\t/**\r\n\t * Provides DOM operations in any browser environment.\r\n\t */\r\n\tvar GenericBrowserDomAdapter = (function (_super) {\r\n\t    __extends(GenericBrowserDomAdapter, _super);\r\n\t    function GenericBrowserDomAdapter() {\r\n\t        var _this = this;\r\n\t        _super.call(this);\r\n\t        this._animationPrefix = null;\r\n\t        this._transitionEnd = null;\r\n\t        try {\r\n\t            var element = this.createElement('div', this.defaultDoc());\r\n\t            if (lang_1.isPresent(this.getStyle(element, 'animationName'))) {\r\n\t                this._animationPrefix = '';\r\n\t            }\r\n\t            else {\r\n\t                var domPrefixes = ['Webkit', 'Moz', 'O', 'ms'];\r\n\t                for (var i = 0; i < domPrefixes.length; i++) {\r\n\t                    if (lang_1.isPresent(this.getStyle(element, domPrefixes[i] + 'AnimationName'))) {\r\n\t                        this._animationPrefix = '-' + domPrefixes[i].toLowerCase() + '-';\r\n\t                        break;\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t            var transEndEventNames = {\r\n\t                WebkitTransition: 'webkitTransitionEnd',\r\n\t                MozTransition: 'transitionend',\r\n\t                OTransition: 'oTransitionEnd otransitionend',\r\n\t                transition: 'transitionend'\r\n\t            };\r\n\t            collection_1.StringMapWrapper.forEach(transEndEventNames, function (value, key) {\r\n\t                if (lang_1.isPresent(_this.getStyle(element, key))) {\r\n\t                    _this._transitionEnd = value;\r\n\t                }\r\n\t            });\r\n\t        }\r\n\t        catch (e) {\r\n\t            this._animationPrefix = null;\r\n\t            this._transitionEnd = null;\r\n\t        }\r\n\t    }\r\n\t    GenericBrowserDomAdapter.prototype.getXHR = function () { return xhr_impl_1.XHRImpl; };\r\n\t    GenericBrowserDomAdapter.prototype.getDistributedNodes = function (el) { return el.getDistributedNodes(); };\r\n\t    GenericBrowserDomAdapter.prototype.resolveAndSetHref = function (el, baseUrl, href) {\r\n\t        el.href = href == null ? baseUrl : baseUrl + '/../' + href;\r\n\t    };\r\n\t    GenericBrowserDomAdapter.prototype.supportsDOMEvents = function () { return true; };\r\n\t    GenericBrowserDomAdapter.prototype.supportsNativeShadowDOM = function () {\r\n\t        return lang_1.isFunction(this.defaultDoc().body.createShadowRoot);\r\n\t    };\r\n\t    GenericBrowserDomAdapter.prototype.getAnimationPrefix = function () {\r\n\t        return lang_1.isPresent(this._animationPrefix) ? this._animationPrefix : \"\";\r\n\t    };\r\n\t    GenericBrowserDomAdapter.prototype.getTransitionEnd = function () { return lang_1.isPresent(this._transitionEnd) ? this._transitionEnd : \"\"; };\r\n\t    GenericBrowserDomAdapter.prototype.supportsAnimation = function () {\r\n\t        return lang_1.isPresent(this._animationPrefix) && lang_1.isPresent(this._transitionEnd);\r\n\t    };\r\n\t    return GenericBrowserDomAdapter;\r\n\t})(dom_adapter_1.DomAdapter);\r\n\texports.GenericBrowserDomAdapter = GenericBrowserDomAdapter;\r\n\t//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2VuZXJpY19icm93c2VyX2FkYXB0ZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJhbmd1bGFyMi9zcmMvcGxhdGZvcm0vYnJvd3Nlci9nZW5lcmljX2Jyb3dzZXJfYWRhcHRlci50cyJdLCJuYW1lcyI6WyJHZW5lcmljQnJvd3NlckRvbUFkYXB0ZXIiLCJHZW5lcmljQnJvd3NlckRvbUFkYXB0ZXIuY29uc3RydWN0b3IiLCJHZW5lcmljQnJvd3NlckRvbUFkYXB0ZXIuZ2V0WEhSIiwiR2VuZXJpY0Jyb3dzZXJEb21BZGFwdGVyLmdldERpc3RyaWJ1dGVkTm9kZXMiLCJHZW5lcmljQnJvd3NlckRvbUFkYXB0ZXIucmVzb2x2ZUFuZFNldEhyZWYiLCJHZW5lcmljQnJvd3NlckRvbUFkYXB0ZXIuc3VwcG9ydHNET01FdmVudHMiLCJHZW5lcmljQnJvd3NlckRvbUFkYXB0ZXIuc3VwcG9ydHNOYXRpdmVTaGFkb3dET00iLCJHZW5lcmljQnJvd3NlckRvbUFkYXB0ZXIuZ2V0QW5pbWF0aW9uUHJlZml4IiwiR2VuZXJpY0Jyb3dzZXJEb21BZGFwdGVyLmdldFRyYW5zaXRpb25FbmQiLCJHZW5lcmljQnJvd3NlckRvbUFkYXB0ZXIuc3VwcG9ydHNBbmltYXRpb24iXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsMkJBQTRDLGdDQUFnQyxDQUFDLENBQUE7QUFDN0UscUJBQTBDLDBCQUEwQixDQUFDLENBQUE7QUFDckUsNEJBQXlCLHVDQUF1QyxDQUFDLENBQUE7QUFDakUseUJBQXNCLHdDQUF3QyxDQUFDLENBQUE7QUFHL0Q7O0dBRUc7QUFDSDtJQUF1REEsNENBQVVBO0lBRy9EQTtRQUhGQyxpQkFtRENBO1FBL0NHQSxpQkFBT0EsQ0FBQ0E7UUFIRkEscUJBQWdCQSxHQUFXQSxJQUFJQSxDQUFDQTtRQUNoQ0EsbUJBQWNBLEdBQVdBLElBQUlBLENBQUNBO1FBR3BDQSxJQUFJQSxDQUFDQTtZQUNIQSxJQUFJQSxPQUFPQSxHQUFHQSxJQUFJQSxDQUFDQSxhQUFh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QUFJQSxDQUFDQSxVQUFVQSxFQUFFQSxDQUFDQSxJQUFLQSxDQUFDQSxnQkFBZ0JBLENBQUNBLENBQUNBO0lBQ3BFQSxDQUFDQTtJQUNETixxREFBa0JBLEdBQWxCQTtRQUNFTyxNQUFNQSxDQUFDQSxnQkFBU0EsQ0FBQ0EsSUFBSUEsQ0FBQ0EsZ0JBQWdCQSxDQUFDQSxHQUFHQSxJQUFJQSxDQUFDQSxnQkFBZ0JBLEdBQUdBLEVBQUVBLENBQUNBO0lBQ3ZFQSxDQUFDQTtJQUNEUCxtREFBZ0JBLEdBQWhCQSxjQUE2QlEsTUFBTUEsQ0FBQ0EsZ0JBQVNBLENBQUNBLElBQUlBLENBQUNBLGNBQWNBLENBQUNBLEdBQUdBLElBQUlBLENBQUNBLGNBQWNBLEdBQUdBLEVBQUVBLENBQUNBLENBQUNBLENBQUNBO0lBQ2hHUixvREFBaUJBLEdBQWpCQTtRQUNFUyxNQUFNQSxDQUFDQSxnQkFBU0EsQ0FBQ0EsSUFBSUEsQ0FBQ0EsZ0JBQWdCQSxDQUFDQSxJQUFJQSxnQkFBU0EsQ0FBQ0EsSUFBSUEsQ0FBQ0EsY0FBY0EsQ0FBQ0EsQ0FBQ0E7SUFDNUVBLENBQUNBO0lBQ0hULCtCQUFDQTtBQUFEQSxDQUFDQSxBQW5ERCxFQUF1RCx3QkFBVSxFQW1EaEU7QUFuRHFCLGdDQUF3QiwyQkFtRDdDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0xpc3RXcmFwcGVyLCBTdHJpbmdNYXBXcmFwcGVyfSBmcm9tICdhbmd1bGFyMi9zcmMvZmFjYWRlL2NvbGxlY3Rpb24nO1xuaW1wb3J0IHtpc1ByZXNlbnQsIGlzRnVuY3Rpb24sIFR5cGV9IGZyb20gJ2FuZ3VsYXIyL3NyYy9mYWNhZGUvbGFuZyc7XG5pbXBvcnQge0RvbUFkYXB0ZXJ9IGZyb20gJ2FuZ3VsYXIyL3NyYy9wbGF0Zm9ybS9kb20vZG9tX2FkYXB0ZXInO1xuaW1wb3J0IHtYSFJJbXBsfSBmcm9tICdhbmd1bGFyMi9zcmMvcGxhdGZvcm0vYnJvd3Nlci94aHJfaW1wbCc7XG5cblxuLyoqXG4gKiBQcm92aWRlcyBET00gb3BlcmF0aW9ucyBpbiBhbnkgYnJvd3NlciBlbnZpcm9ubWVudC5cbiAqL1xuZXhwb3J0IGFic3RyYWN0IGNsYXNzIEdlbmVyaWNCcm93c2VyRG9tQWRhcHRlciBleHRlbmRzIERvbUFkYXB0ZXIge1xuICBwcml2YXRlIF9hbmltYXRpb25QcmVmaXg6IHN0cmluZyA9IG51bGw7XG4gIHByaXZhdGUgX3RyYW5zaXRpb25FbmQ6IHN0cmluZyA9IG51bGw7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG4gICAgdHJ5IHtcbiAgICAgIHZhciBlbGVtZW50ID0gdGhpcy5jcmVhdGVFbGVtZW50KCdkaXYnLCB0aGlzLmRlZmF1bHREb2MoKSk7XG4gICAgICBpZiAoaXNQcmVzZW50KHRoaXMuZ2V0U3R5bGUoZWxlbWVudCwgJ2FuaW1hdGlvbk5hbWUnKSkpIHtcbiAgICAgICAgdGhpcy5fYW5pbWF0aW9uUHJlZml4ID0gJyc7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YXIgZG9tUHJlZml4ZXMgPSBbJ1dlYmtpdCcsICdNb3onLCAnTycsICdtcyddO1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGRvbVByZWZpeGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgaWYgKGlzUHJlc2VudCh0aGlzLmdldFN0eWxlKGVsZW1lbnQsIGRvbVByZWZpeGVzW2ldICsgJ0FuaW1hdGlvbk5hbWUnKSkpIHtcbiAgICAgICAgICAgIHRoaXMuX2FuaW1hdGlvblByZWZpeCA9ICctJyArIGRvbVByZWZpeGVzW2ldLnRvTG93ZXJDYXNlKCkgKyAnLSc7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHZhciB0cmFuc0VuZEV2ZW50TmFtZXM6IHtba2V5OiBzdHJpbmddOiBzdHJpbmd9ID0ge1xuICAgICAgICBXZWJraXRUcmFuc2l0aW9uOiAnd2Via2l0VHJhbnNpdGlvbkVuZCcsXG4gICAgICAgIE1velRyYW5zaXRpb246ICd0cmFuc2l0aW9uZW5kJyxcbiAgICAgICAgT1RyYW5zaXRpb246ICdvVHJhbnNpdGlvbkVuZCBvdHJhbnNpdGlvbmVuZCcsXG4gICAgICAgIHRyYW5zaXRpb246ICd0cmFuc2l0aW9uZW5kJ1xuICAgICAgfTtcbiAgICAgIFN0cmluZ01hcFdyYXBwZXIuZm9yRWFjaCh0cmFuc0VuZEV2ZW50TmFtZXMsICh2YWx1ZSwga2V5KSA9PiB7XG4gICAgICAgIGlmIChpc1ByZXNlbnQodGhpcy5nZXRTdHlsZShlbGVtZW50LCBrZXkpKSkge1xuICAgICAgICAgIHRoaXMuX3RyYW5zaXRpb25FbmQgPSB2YWx1ZTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgdGhpcy5fYW5pbWF0aW9uUHJlZml4ID0gbnVsbDtcbiAgICAgIHRoaXMuX3RyYW5zaXRpb25FbmQgPSBudWxsO1xuICAgIH1cbiAgfVxuXG4gIGdldFhIUigpOiBUeXBlIHsgcmV0dXJuIFhIUkltcGw7IH1cbiAgZ2V0RGlzdHJpYnV0ZWROb2RlcyhlbDogSFRNTEVsZW1lbnQpOiBOb2RlW10geyByZXR1cm4gKDxhbnk+ZWwpLmdldERpc3RyaWJ1dGVkTm9kZXMoKTsgfVxuICByZXNvbHZlQW5kU2V0SHJlZihlbDogSFRNTEFuY2hvckVsZW1lbnQsIGJhc2VVcmw6IHN0cmluZywgaHJlZjogc3RyaW5nKSB7XG4gICAgZWwuaHJlZiA9IGhyZWYgPT0gbnVsbCA/IGJhc2VVcmwgOiBiYXNlVXJsICsgJy8uLi8nICsgaHJlZjtcbiAgfVxuICBzdXBwb3J0c0RPTUV2ZW50cygpOiBib29sZWFuIHsgcmV0dXJuIHRydWU7IH1cbiAgc3VwcG9ydHNOYXRpdmVTaGFkb3dET00oKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIGlzRnVuY3Rpb24oKDxhbnk+dGhpcy5kZWZhdWx0RG9jKCkuYm9keSkuY3JlYXRlU2hhZG93Um9vdCk7XG4gIH1cbiAgZ2V0QW5pbWF0aW9uUHJlZml4KCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIGlzUHJlc2VudCh0aGlzLl9hbmltYXRpb25QcmVmaXgpID8gdGhpcy5fYW5pbWF0aW9uUHJlZml4IDogXCJcIjtcbiAgfVxuICBnZXRUcmFuc2l0aW9uRW5kKCk6IHN0cmluZyB7IHJldHVybiBpc1ByZXNlbnQodGhpcy5fdHJhbnNpdGlvbkVuZCkgPyB0aGlzLl90cmFuc2l0aW9uRW5kIDogXCJcIjsgfVxuICBzdXBwb3J0c0FuaW1hdGlvbigpOiBib29sZWFuIHtcbiAgICByZXR1cm4gaXNQcmVzZW50KHRoaXMuX2FuaW1hdGlvblByZWZpeCkgJiYgaXNQcmVzZW50KHRoaXMuX3RyYW5zaXRpb25FbmQpO1xuICB9XG59XG4iXX0=\n\n/***/ },\n\n/***/ 238:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';var collection_1 = __webpack_require__(3);\r\n\tvar lang_1 = __webpack_require__(1);\r\n\tvar dom_adapter_1 = __webpack_require__(11);\r\n\tvar core_1 = __webpack_require__(9);\r\n\tvar PublicTestability = (function () {\r\n\t    function PublicTestability(testability) {\r\n\t        this._testability = testability;\r\n\t    }\r\n\t    PublicTestability.prototype.isStable = function () { return this._testability.isStable(); };\r\n\t    PublicTestability.prototype.whenStable = function (callback) { this._testability.whenStable(callback); };\r\n\t    PublicTestability.prototype.findBindings = function (using, provider, exactMatch) {\r\n\t        return this.findProviders(using, provider, exactMatch);\r\n\t    };\r\n\t    PublicTestability.prototype.findProviders = function (using, provider, exactMatch) {\r\n\t        return this._testability.findBindings(using, provider, exactMatch);\r\n\t    };\r\n\t    return PublicTestability;\r\n\t})();\r\n\tvar BrowserGetTestability = (function () {\r\n\t    function BrowserGetTestability() {\r\n\t    }\r\n\t    BrowserGetTestability.init = function () { core_1.setTestabilityGetter(new BrowserGetTestability()); };\r\n\t    BrowserGetTestability.prototype.addToWindow = function (registry) {\r\n\t        lang_1.global.getAngularTestability = function (elem, findInAncestors) {\r\n\t            if (findInAncestors === void 0) { findInAncestors = true; }\r\n\t            var testability = registry.findTestabilityInTree(elem, findInAncestors);\r\n\t            if (testability == null) {\r\n\t                throw new Error('Could not find testability for element.');\r\n\t            }\r\n\t            return new PublicTestability(testability);\r\n\t        };\r\n\t        lang_1.global.getAllAngularTestabilities = function () {\r\n\t            var testabilities = registry.getAllTestabilities();\r\n\t            return testabilities.map(function (testability) { return new PublicTestability(testability); });\r\n\t        };\r\n\t        var whenAllStable = function (callback) {\r\n\t            var testabilities = lang_1.global.getAllAngularTestabilities();\r\n\t            var count = testabilities.length;\r\n\t            var didWork = false;\r\n\t            var decrement = function (didWork_) {\r\n\t                didWork = didWork || didWork_;\r\n\t                count--;\r\n\t                if (count == 0) {\r\n\t                    callback(didWork);\r\n\t                }\r\n\t            };\r\n\t            testabilities.forEach(function (testability) { testability.whenStable(decrement); });\r\n\t        };\r\n\t        if (!lang_1.global.frameworkStabilizers) {\r\n\t            lang_1.global.frameworkStabilizers = collection_1.ListWrapper.createGrowableSize(0);\r\n\t        }\r\n\t        lang_1.global.frameworkStabilizers.push(whenAllStable);\r\n\t    };\r\n\t    BrowserGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\r\n\t        if (elem == null) {\r\n\t            return null;\r\n\t        }\r\n\t        var t = registry.getTestability(elem);\r\n\t        if (lang_1.isPresent(t)) {\r\n\t            return t;\r\n\t        }\r\n\t        else if (!findInAncestors) {\r\n\t            return null;\r\n\t        }\r\n\t        if (dom_adapter_1.DOM.isShadowRoot(elem)) {\r\n\t            return this.findTestabilityInTree(registry, dom_adapter_1.DOM.getHost(elem), true);\r\n\t        }\r\n\t        return this.findTestabilityInTree(registry, dom_adapter_1.DOM.parentElement(elem), true);\r\n\t    };\r\n\t    return BrowserGetTestability;\r\n\t})();\r\n\texports.BrowserGetTestability = BrowserGetTestability;\r\n\t//# sourceMappingURL=data:application/json;base64,\n\n/***/ },\n\n/***/ 239:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';var dom_adapter_1 = __webpack_require__(11);\r\n\t/**\r\n\t * A service that can be used to get and set the title of a current HTML document.\r\n\t *\r\n\t * Since an Angular 2 application can't be bootstrapped on the entire HTML document (`<html>` tag)\r\n\t * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\r\n\t * (representing the `<title>` tag). Instead, this service can be used to set and get the current\r\n\t * title value.\r\n\t */\r\n\tvar Title = (function () {\r\n\t    function Title() {\r\n\t    }\r\n\t    /**\r\n\t     * Get the title of the current HTML document.\r\n\t     * @returns {string}\r\n\t     */\r\n\t    Title.prototype.getTitle = function () { return dom_adapter_1.DOM.getTitle(); };\r\n\t    /**\r\n\t     * Set the title of the current HTML document.\r\n\t     * @param newTitle\r\n\t     */\r\n\t    Title.prototype.setTitle = function (newTitle) { dom_adapter_1.DOM.setTitle(newTitle); };\r\n\t    return Title;\r\n\t})();\r\n\texports.Title = Title;\r\n\t//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGl0bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJhbmd1bGFyMi9zcmMvcGxhdGZvcm0vYnJvd3Nlci90aXRsZS50cyJdLCJuYW1lcyI6WyJUaXRsZSIsIlRpdGxlLmNvbnN0cnVjdG9yIiwiVGl0bGUuZ2V0VGl0bGUiLCJUaXRsZS5zZXRUaXRsZSJdLCJtYXBwaW5ncyI6IkFBQUEsNEJBQWtCLHVDQUF1QyxDQUFDLENBQUE7QUFFMUQ7Ozs7Ozs7R0FPRztBQUNIO0lBQUFBO0lBWUFDLENBQUNBO0lBWENEOzs7T0FHR0E7SUFDSEEsd0JBQVFBLEdBQVJBLGNBQXFCRSxNQUFNQSxDQUFDQSxpQkFBR0EsQ0FBQ0EsUUFBUUEsRUFBRUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7SUFFN0NGOzs7T0FHR0E7SUFDSEEsd0JBQVFBLEdBQVJBLFVBQVNBLFFBQWdCQSxJQUFJRyxpQkFBR0EsQ0FBQ0EsUUFBUUEsQ0FBQ0EsUUFBUUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7SUFDeERILFlBQUNBO0FBQURBLENBQUNBLEFBWkQsSUFZQztBQVpZLGFBQUssUUFZakIsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RE9NfSBmcm9tICdhbmd1bGFyMi9zcmMvcGxhdGZvcm0vZG9tL2RvbV9hZGFwdGVyJztcblxuLyoqXG4gKiBBIHNlcnZpY2UgdGhhdCBjYW4gYmUgdXNlZCB0byBnZXQgYW5kIHNldCB0aGUgdGl0bGUgb2YgYSBjdXJyZW50IEhUTUwgZG9jdW1lbnQuXG4gKlxuICogU2luY2UgYW4gQW5ndWxhciAyIGFwcGxpY2F0aW9uIGNhbid0IGJlIGJvb3RzdHJhcHBlZCBvbiB0aGUgZW50aXJlIEhUTUwgZG9jdW1lbnQgKGA8aHRtbD5gIHRhZylcbiAqIGl0IGlzIG5vdCBwb3NzaWJsZSB0byBiaW5kIHRvIHRoZSBgdGV4dGAgcHJvcGVydHkgb2YgdGhlIGBIVE1MVGl0bGVFbGVtZW50YCBlbGVtZW50c1xuICogKHJlcHJlc2VudGluZyB0aGUgYDx0aXRsZT5gIHRhZykuIEluc3RlYWQsIHRoaXMgc2VydmljZSBjYW4gYmUgdXNlZCB0byBzZXQgYW5kIGdldCB0aGUgY3VycmVudFxuICogdGl0bGUgdmFsdWUuXG4gKi9cbmV4cG9ydCBjbGFzcyBUaXRsZSB7XG4gIC8qKlxuICAgKiBHZXQgdGhlIHRpdGxlIG9mIHRoZSBjdXJyZW50IEhUTUwgZG9jdW1lbnQuXG4gICAqIEByZXR1cm5zIHtzdHJpbmd9XG4gICAqL1xuICBnZXRUaXRsZSgpOiBzdHJpbmcgeyByZXR1cm4gRE9NLmdldFRpdGxlKCk7IH1cblxuICAvKipcbiAgICogU2V0IHRoZSB0aXRsZSBvZiB0aGUgY3VycmVudCBIVE1MIGRvY3VtZW50LlxuICAgKiBAcGFyYW0gbmV3VGl0bGVcbiAgICovXG4gIHNldFRpdGxlKG5ld1RpdGxlOiBzdHJpbmcpIHsgRE9NLnNldFRpdGxlKG5ld1RpdGxlKTsgfVxufVxuIl19\n\n/***/ },\n\n/***/ 240:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';var application_ref_1 = __webpack_require__(148);\r\n\tvar lang_1 = __webpack_require__(1);\r\n\tvar browser_1 = __webpack_require__(235);\r\n\tvar dom_adapter_1 = __webpack_require__(11);\r\n\t/**\r\n\t * Entry point for all Angular debug tools. This object corresponds to the `ng`\r\n\t * global variable accessible in the dev console.\r\n\t */\r\n\tvar AngularTools = (function () {\r\n\t    function AngularTools(ref) {\r\n\t        this.profiler = new AngularProfiler(ref);\r\n\t    }\r\n\t    return AngularTools;\r\n\t})();\r\n\texports.AngularTools = AngularTools;\r\n\t/**\r\n\t * Entry point for all Angular profiling-related debug tools. This object\r\n\t * corresponds to the `ng.profiler` in the dev console.\r\n\t */\r\n\tvar AngularProfiler = (function () {\r\n\t    function AngularProfiler(ref) {\r\n\t        this.appRef = ref.injector.get(application_ref_1.ApplicationRef);\r\n\t    }\r\n\t    /**\r\n\t     * Exercises change detection in a loop and then prints the average amount of\r\n\t     * time in milliseconds how long a single round of change detection takes for\r\n\t     * the current state of the UI. It runs a minimum of 5 rounds for a minimum\r\n\t     * of 500 milliseconds.\r\n\t     *\r\n\t     * Optionally, a user may pass a `config` parameter containing a map of\r\n\t     * options. Supported options are:\r\n\t     *\r\n\t     * `record` (boolean) - causes the profiler to record a CPU profile while\r\n\t     * it exercises the change detector. Example:\r\n\t     *\r\n\t     * ```\r\n\t     * ng.profiler.timeChangeDetection({record: true})\r\n\t     * ```\r\n\t     */\r\n\t    AngularProfiler.prototype.timeChangeDetection = function (config) {\r\n\t        var record = lang_1.isPresent(config) && config['record'];\r\n\t        var profileName = 'Change Detection';\r\n\t        // Profiler is not available in Android browsers, nor in IE 9 without dev tools opened\r\n\t        var isProfilerAvailable = lang_1.isPresent(browser_1.window.console.profile);\r\n\t        if (record && isProfilerAvailable) {\r\n\t            browser_1.window.console.profile(profileName);\r\n\t        }\r\n\t        var start = dom_adapter_1.DOM.performanceNow();\r\n\t        var numTicks = 0;\r\n\t        while (numTicks < 5 || (dom_adapter_1.DOM.performanceNow() - start) < 500) {\r\n\t            this.appRef.tick();\r\n\t            numTicks++;\r\n\t        }\r\n\t        var end = dom_adapter_1.DOM.performanceNow();\r\n\t        if (record && isProfilerAvailable) {\r\n\t            // need to cast to <any> because type checker thinks there's no argument\r\n\t            // while in fact there is:\r\n\t            //\r\n\t            // https://developer.mozilla.org/en-US/docs/Web/API/Console/profileEnd\r\n\t            browser_1.window.console.profileEnd(profileName);\r\n\t        }\r\n\t        var msPerTick = (end - start) / numTicks;\r\n\t        browser_1.window.console.log(\"ran \" + numTicks + \" change detection cycles\");\r\n\t        browser_1.window.console.log(lang_1.NumberWrapper.toFixed(msPerTick, 2) + \" ms per check\");\r\n\t    };\r\n\t    return AngularProfiler;\r\n\t})();\r\n\texports.AngularProfiler = AngularProfiler;\r\n\t//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbW9uX3Rvb2xzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYW5ndWxhcjIvc3JjL3BsYXRmb3JtL2Jyb3dzZXIvdG9vbHMvY29tbW9uX3Rvb2xzLnRzIl0sIm5hbWVzIjpbIkFuZ3VsYXJUb29scyIsIkFuZ3VsYXJUb29scy5jb25zdHJ1Y3RvciIsIkFuZ3VsYXJQcm9maWxlciIsIkFuZ3VsYXJQcm9maWxlci5jb25zdHJ1Y3RvciIsIkFuZ3VsYXJQcm9maWxlci50aW1lQ2hhbmdlRGV0ZWN0aW9uIl0sIm1hcHBpbmdzIjoiQUFBQSxnQ0FBNkIsbUNBQW1DLENBQUMsQ0FBQTtBQUVqRSxxQkFBdUMsMEJBQTBCLENBQUMsQ0FBQTtBQUNsRSx3QkFBcUIsNkJBQTZCLENBQUMsQ0FBQTtBQUNuRCw0QkFBa0IsdUNBQXVDLENBQUMsQ0FBQTtBQUUxRDs7O0dBR0c7QUFDSDtJQUdFQSxzQkFBWUEsR0FBaUJBO1FBQUlDLElBQUlBLENBQUNBLFFBQVFBLEdBQUdBLElBQUlBLGVBQWVBLENBQUNBLEdBQUdBLENBQUNBLENBQUNBO0lBQUNBLENBQUNBO0lBQzlFRCxtQkFBQ0E7QUFBREEsQ0FBQ0EsQUFKRCxJQUlDO0FBSlksb0JBQVksZUFJeEIsQ0FBQTtBQUVEOzs7R0FHRztBQUNIO0lBR0VFLHlCQUFZQSxHQUFpQkE7UUFDM0JDLElBQUlBLENBQUNBLE1BQU1BLEdBQW1CQSxHQUFJQSxDQUFDQSxRQUFRQSxDQUFDQSxHQUFHQSxDQUFDQSxnQ0FBY0EsQ0FBQ0EsQ0FBQ0E7SUFDbEVBLENBQUNBO0lBRUREOzs7Ozs7Ozs7Ozs7Ozs7T0FlR0E7SUFDSEEsNkNBQW1CQSxHQUFuQkEsVUFBb0JBLE1BQVdBO1FBQzdCRSxJQUFJQSxNQUFNQSxHQUFHQSxnQkFBU0EsQ0FBQ0EsTUFBTUEsQ0FBQ0EsSUFBSUEsTUFBTUEsQ0FBQ0EsUUFBUUEsQ0FBQ0EsQ0FBQ0E7UUFDbkRBLElBQUlBLFdBQVdBLEdBQUdBLGtCQUFrQkEsQ0FBQ0E7UUFDckNBLHNGQUFzRkE7UUFDdEZBLElBQUlBLG1CQUFtQkEsR0FBR0EsZ0JBQVNBLENBQUNBLGdCQUFNQSxDQUFDQSxPQUFPQSxDQUFDQSxPQUFPQSxDQUFDQSxDQUFDQTtRQUM1REEsRUFBRUEsQ0FBQ0EsQ0FBQ0EsTUFBTUEsSUFBSUEsbUJBQW1CQSxDQUFDQSxDQUFDQSxDQUFDQTtZQUNsQ0EsZ0JBQU1BLENBQUNBLE9BQU9BLENBQUNBLE9BQU9BLENBQUNBLFdBQVdBLENBQUNBLENBQUNBO1FBQ3RDQSxDQUFDQTtRQUNEQSxJQUFJQSxLQUFLQSxHQUFHQSxpQkFBR0EsQ0FBQ0EsY0FBY0EsRUFBRUEsQ0FBQ0E7UUFDakNBLElBQUlBLFFBQVFBLEdBQUdBLENBQUNBLENBQUNBO1FBQ2pCQSxPQUFPQSxRQUFRQSxHQUFHQSxDQUFDQSxJQUFJQSxDQUFDQSxpQkFBR0EsQ0FBQ0EsY0FBY0EsRUFBRUEsR0FBR0EsS0FBS0EsQ0FBQ0EsR0FBR0EsR0FBR0EsRUFBRUEsQ0FBQ0E7WUFDNURBLElBQUlBLENBQUNBLE1BQU1BLENBQUNBLElBQUlBLEVBQUVBLENBQUNBO1lBQ25CQSxRQUFRQSxFQUFFQSxDQUFDQTtRQUNiQSxDQUFDQTtRQUNEQSxJQUFJQSxHQUFHQSxHQUFHQSxpQkFBR0EsQ0FBQ0EsY0FBY0EsRUFBRUEsQ0FBQ0E7UUFDL0JBLEVBQUVBLENBQUNBLENBQUNBLE1BQU1BLElBQUlBLG1CQUFtQkEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7WUFDbENBLHdFQUF3RUE7WUFDeEVBLDBCQUEwQkE7WUFDMUJBLEVBQUVBO1lBQ0ZBLHNFQUFzRUE7WUFDaEVBLGdCQUFNQSxDQUFDQSxPQUFPQSxDQUFDQSxVQUFXQSxDQUFDQSxXQUFXQSxDQUFDQSxDQUFDQTtRQUNoREEsQ0FBQ0E7UUFDREEsSUFBSUEsU0FBU0EsR0FBR0EsQ0FBQ0EsR0FBR0EsR0FBR0EsS0FBS0EsQ0FBQ0EsR0FBR0EsUUFBUUEsQ0FBQ0E7UUFDekNBLGdCQUFNQSxDQUFDQSxPQUFPQSxDQUFDQSxHQUFHQSxDQUFDQSxTQUFPQSxRQUFRQSw2QkFBMEJBLENBQUNBLENBQUNBO1FBQzlEQSxnQkFBTUEsQ0FBQ0EsT0FBT0EsQ0FBQ0EsR0FBR0EsQ0FBSUEsb0JBQWFBLENBQUNBLE9BQU9BLENBQUNBLFNBQVNBLEVBQUVBLENBQUNBLENBQUNBLGtCQUFlQSxDQUFDQSxDQUFDQTtJQUM1RUEsQ0FBQ0E7SUFDSEYsc0JBQUNBO0FBQURBLENBQUNBLEFBakRELElBaURDO0FBakRZLHVCQUFlLGtCQWlEM0IsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7QXBwbGljYXRpb25SZWZ9IGZyb20gJ2FuZ3VsYXIyL3NyYy9jb3JlL2FwcGxpY2F0aW9uX3JlZic7XG5pbXBvcnQge0NvbXBvbmVudFJlZiwgQ29tcG9uZW50UmVmX30gZnJvbSAnYW5ndWxhcjIvc3JjL2NvcmUvbGlua2VyL2R5bmFtaWNfY29tcG9uZW50X2xvYWRlcic7XG5pbXBvcnQge2lzUHJlc2VudCwgTnVtYmVyV3JhcHBlcn0gZnJvbSAnYW5ndWxhcjIvc3JjL2ZhY2FkZS9sYW5nJztcbmltcG9ydCB7d2luZG93fSBmcm9tICdhbmd1bGFyMi9zcmMvZmFjYWRlL2Jyb3dzZXInO1xuaW1wb3J0IHtET019IGZyb20gJ2FuZ3VsYXIyL3NyYy9wbGF0Zm9ybS9kb20vZG9tX2FkYXB0ZXInO1xuXG4vKipcbiAqIEVudHJ5IHBvaW50IGZvciBhbGwgQW5ndWxhciBkZWJ1ZyB0b29scy4gVGhpcyBvYmplY3QgY29ycmVzcG9uZHMgdG8gdGhlIGBuZ2BcbiAqIGdsb2JhbCB2YXJpYWJsZSBhY2Nlc3NpYmxlIGluIHRoZSBkZXYgY29uc29sZS5cbiAqL1xuZXhwb3J0IGNsYXNzIEFuZ3VsYXJUb29scyB7XG4gIHByb2ZpbGVyOiBBbmd1bGFyUHJvZmlsZXI7XG5cbiAgY29uc3RydWN0b3IocmVmOiBDb21wb25lbnRSZWYpIHsgdGhpcy5wcm9maWxlciA9IG5ldyBBbmd1bGFyUHJvZmlsZXIocmVmKTsgfVxufVxuXG4vKipcbiAqIEVudHJ5IHBvaW50IGZvciBhbGwgQW5ndWxhciBwcm9maWxpbmctcmVsYXRlZCBkZWJ1ZyB0b29scy4gVGhpcyBvYmplY3RcbiAqIGNvcnJlc3BvbmRzIHRvIHRoZSBgbmcucHJvZmlsZXJgIGluIHRoZSBkZXYgY29uc29sZS5cbiAqL1xuZXhwb3J0IGNsYXNzIEFuZ3VsYXJQcm9maWxlciB7XG4gIGFwcFJlZjogQXBwbGljYXRpb25SZWY7XG5cbiAgY29uc3RydWN0b3IocmVmOiBDb21wb25lbnRSZWYpIHtcbiAgICB0aGlzLmFwcFJlZiA9ICg8Q29tcG9uZW50UmVmXz5yZWYpLmluamVjdG9yLmdldChBcHBsaWNhdGlvblJlZik7XG4gIH1cblxuICAvKipcbiAgICogRXhlcmNpc2VzIGNoYW5nZSBkZXRlY3Rpb24gaW4gYSBsb29wIGFuZCB0aGVuIHByaW50cyB0aGUgYXZlcmFnZSBhbW91bnQgb2ZcbiAgICogdGltZSBpbiBtaWxsaXNlY29uZHMgaG93IGxvbmcgYSBzaW5nbGUgcm91bmQgb2YgY2hhbmdlIGRldGVjdGlvbiB0YWtlcyBmb3JcbiAgICogdGhlIGN1cnJlbnQgc3RhdGUgb2YgdGhlIFVJLiBJdCBydW5zIGEgbWluaW11bSBvZiA1IHJvdW5kcyBmb3IgYSBtaW5pbXVtXG4gICAqIG9mIDUwMCBtaWxsaXNlY29uZHMuXG4gICAqXG4gICAqIE9wdGlvbmFsbHksIGEgdXNlciBtYXkgcGFzcyBhIGBjb25maWdgIHBhcmFtZXRlciBjb250YWluaW5nIGEgbWFwIG9mXG4gICAqIG9wdGlvbnMuIFN1cHBvcnRlZCBvcHRpb25zIGFyZTpcbiAgICpcbiAgICogYHJlY29yZGAgKGJvb2xlYW4pIC0gY2F1c2VzIHRoZSBwcm9maWxlciB0byByZWNvcmQgYSBDUFUgcHJvZmlsZSB3aGlsZVxuICAgKiBpdCBleGVyY2lzZXMgdGhlIGNoYW5nZSBkZXRlY3Rvci4gRXhhbXBsZTpcbiAgICpcbiAgICogYGBgXG4gICAqIG5nLnByb2ZpbGVyLnRpbWVDaGFuZ2VEZXRlY3Rpb24oe3JlY29yZDogdHJ1ZX0pXG4gICAqIGBgYFxuICAgKi9cbiAgdGltZUNoYW5nZURldGVjdGlvbihjb25maWc6IGFueSkge1xuICAgIHZhciByZWNvcmQgPSBpc1ByZXNlbnQoY29uZmlnKSAmJiBjb25maWdbJ3JlY29yZCddO1xuICAgIHZhciBwcm9maWxlTmFtZSA9ICdDaGFuZ2UgRGV0ZWN0aW9uJztcbiAgICAvLyBQcm9maWxlciBpcyBub3QgYXZhaWxhYmxlIGluIEFuZHJvaWQgYnJvd3NlcnMsIG5vciBpbiBJRSA5IHdpdGhvdXQgZGV2IHRvb2xzIG9wZW5lZFxuICAgIHZhciBpc1Byb2ZpbGVyQXZhaWxhYmxlID0gaXNQcmVzZW50KHdpbmRvdy5jb25zb2xlLnByb2ZpbGUpO1xuICAgIGlmIChyZWNvcmQgJiYgaXNQcm9maWxlckF2YWlsYWJsZSkge1xuICAgICAgd2luZG93LmNvbnNvbGUucHJvZmlsZShwcm9maWxlTmFtZSk7XG4gICAgfVxuICAgIHZhciBzdGFydCA9IERPTS5wZXJmb3JtYW5jZU5vdygpO1xuICAgIHZhciBudW1UaWNrcyA9IDA7XG4gICAgd2hpbGUgKG51bVRpY2tzIDwgNSB8fCAoRE9NLnBlcmZvcm1hbmNlTm93KCkgLSBzdGFydCkgPCA1MDApIHtcbiAgICAgIHRoaXMuYXBwUmVmLnRpY2soKTtcbiAgICAgIG51bVRpY2tzKys7XG4gICAgfVxuICAgIHZhciBlbmQgPSBET00ucGVyZm9ybWFuY2VOb3coKTtcbiAgICBpZiAocmVjb3JkICYmIGlzUHJvZmlsZXJBdmFpbGFibGUpIHtcbiAgICAgIC8vIG5lZWQgdG8gY2FzdCB0byA8YW55PiBiZWNhdXNlIHR5cGUgY2hlY2tlciB0aGlua3MgdGhlcmUncyBubyBhcmd1bWVudFxuICAgICAgLy8gd2hpbGUgaW4gZmFjdCB0aGVyZSBpczpcbiAgICAgIC8vXG4gICAgICAvLyBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9BUEkvQ29uc29sZS9wcm9maWxlRW5kXG4gICAgICAoPGFueT53aW5kb3cuY29uc29sZS5wcm9maWxlRW5kKShwcm9maWxlTmFtZSk7XG4gICAgfVxuICAgIHZhciBtc1BlclRpY2sgPSAoZW5kIC0gc3RhcnQpIC8gbnVtVGlja3M7XG4gICAgd2luZG93LmNvbnNvbGUubG9nKGByYW4gJHtudW1UaWNrc30gY2hhbmdlIGRldGVjdGlvbiBjeWNsZXNgKTtcbiAgICB3aW5kb3cuY29uc29sZS5sb2coYCR7TnVtYmVyV3JhcHBlci50b0ZpeGVkKG1zUGVyVGljaywgMil9IG1zIHBlciBjaGVja2ApO1xuICB9XG59XG4iXX0=\n\n/***/ },\n\n/***/ 241:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';var lang_1 = __webpack_require__(1);\r\n\tvar common_tools_1 = __webpack_require__(240);\r\n\tvar context = lang_1.global;\r\n\t/**\r\n\t * Enabled Angular 2 debug tools that are accessible via your browser's\r\n\t * developer console.\r\n\t *\r\n\t * Usage:\r\n\t *\r\n\t * 1. Open developer console (e.g. in Chrome Ctrl + Shift + j)\r\n\t * 1. Type `ng.` (usually the console will show auto-complete suggestion)\r\n\t * 1. Try the change detection profiler `ng.profiler.timeChangeDetection()`\r\n\t *    then hit Enter.\r\n\t */\r\n\tfunction enableDebugTools(ref) {\r\n\t    context.ng = new common_tools_1.AngularTools(ref);\r\n\t}\r\n\texports.enableDebugTools = enableDebugTools;\r\n\t/**\r\n\t * Disables Angular 2 tools.\r\n\t */\r\n\tfunction disableDebugTools() {\r\n\t    delete context.ng;\r\n\t}\r\n\texports.disableDebugTools = disableDebugTools;\r\n\t//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9vbHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJhbmd1bGFyMi9zcmMvcGxhdGZvcm0vYnJvd3Nlci90b29scy90b29scy50cyJdLCJuYW1lcyI6WyJlbmFibGVEZWJ1Z1Rvb2xzIiwiZGlzYWJsZURlYnVnVG9vbHMiXSwibWFwcGluZ3MiOiJBQUFBLHFCQUFxQiwwQkFBMEIsQ0FBQyxDQUFBO0FBRWhELDZCQUEyQixnQkFBZ0IsQ0FBQyxDQUFBO0FBRTVDLElBQUksT0FBTyxHQUFRLGFBQU0sQ0FBQztBQUUxQjs7Ozs7Ozs7OztHQVVHO0FBQ0gsMEJBQWlDLEdBQWlCO0lBQ2hEQSxPQUFPQSxDQUFDQSxFQUFFQSxHQUFHQSxJQUFJQSwyQkFBWUEsQ0FBQ0EsR0FBR0EsQ0FBQ0EsQ0FBQ0E7QUFDckNBLENBQUNBO0FBRmUsd0JBQWdCLG1CQUUvQixDQUFBO0FBRUQ7O0dBRUc7QUFDSDtJQUNFQyxPQUFPQSxPQUFPQSxDQUFDQSxFQUFFQSxDQUFDQTtBQUNwQkEsQ0FBQ0E7QUFGZSx5QkFBaUIsb0JBRWhDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2dsb2JhbH0gZnJvbSAnYW5ndWxhcjIvc3JjL2ZhY2FkZS9sYW5nJztcbmltcG9ydCB7Q29tcG9uZW50UmVmfSBmcm9tICdhbmd1bGFyMi9zcmMvY29yZS9saW5rZXIvZHluYW1pY19jb21wb25lbnRfbG9hZGVyJztcbmltcG9ydCB7QW5ndWxhclRvb2xzfSBmcm9tICcuL2NvbW1vbl90b29scyc7XG5cbnZhciBjb250ZXh0ID0gPGFueT5nbG9iYWw7XG5cbi8qKlxuICogRW5hYmxlZCBBbmd1bGFyIDIgZGVidWcgdG9vbHMgdGhhdCBhcmUgYWNjZXNzaWJsZSB2aWEgeW91ciBicm93c2VyJ3NcbiAqIGRldmVsb3BlciBjb25zb2xlLlxuICpcbiAqIFVzYWdlOlxuICpcbiAqIDEuIE9wZW4gZGV2ZWxvcGVyIGNvbnNvbGUgKGUuZy4gaW4gQ2hyb21lIEN0cmwgKyBTaGlmdCArIGopXG4gKiAxLiBUeXBlIGBuZy5gICh1c3VhbGx5IHRoZSBjb25zb2xlIHdpbGwgc2hvdyBhdXRvLWNvbXBsZXRlIHN1Z2dlc3Rpb24pXG4gKiAxLiBUcnkgdGhlIGNoYW5nZSBkZXRlY3Rpb24gcHJvZmlsZXIgYG5nLnByb2ZpbGVyLnRpbWVDaGFuZ2VEZXRlY3Rpb24oKWBcbiAqICAgIHRoZW4gaGl0IEVudGVyLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZW5hYmxlRGVidWdUb29scyhyZWY6IENvbXBvbmVudFJlZik6IHZvaWQge1xuICBjb250ZXh0Lm5nID0gbmV3IEFuZ3VsYXJUb29scyhyZWYpO1xufVxuXG4vKipcbiAqIERpc2FibGVzIEFuZ3VsYXIgMiB0b29scy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRpc2FibGVEZWJ1Z1Rvb2xzKCk6IHZvaWQge1xuICBkZWxldGUgY29udGV4dC5uZztcbn1cbiJdfQ==\n\n/***/ },\n\n/***/ 242:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';var lang_1 = __webpack_require__(1);\r\n\tvar dom_adapter_1 = __webpack_require__(11);\r\n\t/**\r\n\t * Predicates for use with {@link DebugElement}'s query functions.\r\n\t */\r\n\tvar By = (function () {\r\n\t    function By() {\r\n\t    }\r\n\t    /**\r\n\t     * Match all elements.\r\n\t     *\r\n\t     * ## Example\r\n\t     *\r\n\t     * {@example platform/dom/debug/ts/by/by.ts region='by_all'}\r\n\t     */\r\n\t    By.all = function () { return function (debugElement) { return true; }; };\r\n\t    /**\r\n\t     * Match elements by the given CSS selector.\r\n\t     *\r\n\t     * ## Example\r\n\t     *\r\n\t     * {@example platform/dom/debug/ts/by/by.ts region='by_css'}\r\n\t     */\r\n\t    By.css = function (selector) {\r\n\t        return function (debugElement) {\r\n\t            return lang_1.isPresent(debugElement.nativeElement) ?\r\n\t                dom_adapter_1.DOM.elementMatches(debugElement.nativeElement, selector) :\r\n\t                false;\r\n\t        };\r\n\t    };\r\n\t    /**\r\n\t     * Match elements that have the given directive present.\r\n\t     *\r\n\t     * ## Example\r\n\t     *\r\n\t     * {@example platform/dom/debug/ts/by/by.ts region='by_directive'}\r\n\t     */\r\n\t    By.directive = function (type) {\r\n\t        return function (debugElement) { return debugElement.providerTokens.indexOf(type) !== -1; };\r\n\t    };\r\n\t    return By;\r\n\t})();\r\n\texports.By = By;\r\n\t//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJhbmd1bGFyMi9zcmMvcGxhdGZvcm0vZG9tL2RlYnVnL2J5LnRzIl0sIm5hbWVzIjpbIkJ5IiwiQnkuY29uc3RydWN0b3IiLCJCeS5hbGwiLCJCeS5jc3MiLCJCeS5kaXJlY3RpdmUiXSwibWFwcGluZ3MiOiJBQUFBLHFCQUF1QywwQkFBMEIsQ0FBQyxDQUFBO0FBRWxFLDRCQUFrQix1Q0FBdUMsQ0FBQyxDQUFBO0FBRzFEOztHQUVHO0FBQ0g7SUFBQUE7SUFtQ0FDLENBQUNBO0lBbENDRDs7Ozs7O09BTUdBO0lBQ0lBLE1BQUdBLEdBQVZBLGNBQXdDRSxNQUFNQSxDQUFDQSxVQUFDQSxZQUFZQSxJQUFLQSxPQUFBQSxJQUFJQSxFQUFKQSxDQUFJQSxDQUFDQSxDQUFDQSxDQUFDQTtJQUV4RUY7Ozs7OztPQU1HQTtJQUNJQSxNQUFHQSxHQUFWQSxVQUFXQSxRQUFnQkE7UUFDekJHLE1BQU1BLENBQUNBLFVBQUNBLFlBQVlBO1lBQ2xCQSxNQUFNQSxDQUFDQSxnQkFBU0EsQ0FBQ0EsWUFBWUEsQ0FBQ0EsYUFBYUEsQ0FBQ0E7Z0JBQ2pDQSxpQkFBR0EsQ0FBQ0EsY0FBY0EsQ0FBQ0EsWUFBWUEsQ0FBQ0EsYUFBYUEsRUFBRUEsUUFBUUEsQ0FBQ0E7Z0JBQ3hEQSxLQUFLQSxDQUFDQTtRQUNuQkEsQ0FBQ0EsQ0FBQ0E7SUFDSkEsQ0FBQ0E7SUFFREg7Ozs7OztPQU1HQTtJQUNJQSxZQUFTQSxHQUFoQkEsVUFBaUJBLElBQVVBO1FBQ3pCSSxNQUFNQSxDQUFDQSxVQUFDQSxZQUFZQSxJQUFPQSxNQUFNQSxDQUFDQSxZQUFZQSxDQUFDQSxjQUFjQSxDQUFDQSxPQUFPQSxDQUFDQSxJQUFJQSxDQUFDQSxLQUFLQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQTtJQUN4RkEsQ0FBQ0E7SUFDSEosU0FBQ0E7QUFBREEsQ0FBQ0EsQUFuQ0QsSUFtQ0M7QUFuQ1ksVUFBRSxLQW1DZCxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtUeXBlLCBpc1ByZXNlbnQsIGlzQmxhbmt9IGZyb20gJ2FuZ3VsYXIyL3NyYy9mYWNhZGUvbGFuZyc7XG5pbXBvcnQge1ByZWRpY2F0ZX0gZnJvbSAnYW5ndWxhcjIvc3JjL2ZhY2FkZS9jb2xsZWN0aW9uJztcbmltcG9ydCB7RE9NfSBmcm9tICdhbmd1bGFyMi9zcmMvcGxhdGZvcm0vZG9tL2RvbV9hZGFwdGVyJztcbmltcG9ydCB7RGVidWdFbGVtZW50fSBmcm9tICdhbmd1bGFyMi9jb3JlJztcblxuLyoqXG4gKiBQcmVkaWNhdGVzIGZvciB1c2Ugd2l0aCB7QGxpbmsgRGVidWdFbGVtZW50fSdzIHF1ZXJ5IGZ1bmN0aW9ucy5cbiAqL1xuZXhwb3J0IGNsYXNzIEJ5IHtcbiAgLyoqXG4gICAqIE1hdGNoIGFsbCBlbGVtZW50cy5cbiAgICpcbiAgICogIyMgRXhhbXBsZVxuICAgKlxuICAgKiB7QGV4YW1wbGUgcGxhdGZvcm0vZG9tL2RlYnVnL3RzL2J5L2J5LnRzIHJlZ2lvbj0nYnlfYWxsJ31cbiAgICovXG4gIHN0YXRpYyBhbGwoKTogUHJlZGljYXRlPERlYnVnRWxlbWVudD4geyByZXR1cm4gKGRlYnVnRWxlbWVudCkgPT4gdHJ1ZTsgfVxuXG4gIC8qKlxuICAgKiBNYXRjaCBlbGVtZW50cyBieSB0aGUgZ2l2ZW4gQ1NTIHNlbGVjdG9yLlxuICAgKlxuICAgKiAjIyBFeGFtcGxlXG4gICAqXG4gICAqIHtAZXhhbXBsZSBwbGF0Zm9ybS9kb20vZGVidWcvdHMvYnkvYnkudHMgcmVnaW9uPSdieV9jc3MnfVxuICAgKi9cbiAgc3RhdGljIGNzcyhzZWxlY3Rvcjogc3RyaW5nKTogUHJlZGljYXRlPERlYnVnRWxlbWVudD4ge1xuICAgIHJldHVybiAoZGVidWdFbGVtZW50KSA9PiB7XG4gICAgICByZXR1cm4gaXNQcmVzZW50KGRlYnVnRWxlbWVudC5uYXRpdmVFbGVtZW50KSA/XG4gICAgICAgICAgICAgICAgIERPTS5lbGVtZW50TWF0Y2hlcyhkZWJ1Z0VsZW1lbnQubmF0aXZlRWxlbWVudCwgc2VsZWN0b3IpIDpcbiAgICAgICAgICAgICAgICAgZmFsc2U7XG4gICAgfTtcbiAgfVxuXG4gIC8qKlxuICAgKiBNYXRjaCBlbGVtZW50cyB0aGF0IGhhdmUgdGhlIGdpdmVuIGRpcmVjdGl2ZSBwcmVzZW50LlxuICAgKlxuICAgKiAjIyBFeGFtcGxlXG4gICAqXG4gICAqIHtAZXhhbXBsZSBwbGF0Zm9ybS9kb20vZGVidWcvdHMvYnkvYnkudHMgcmVnaW9uPSdieV9kaXJlY3RpdmUnfVxuICAgKi9cbiAgc3RhdGljIGRpcmVjdGl2ZSh0eXBlOiBUeXBlKTogUHJlZGljYXRlPERlYnVnRWxlbWVudD4ge1xuICAgIHJldHVybiAoZGVidWdFbGVtZW50KSA9PiB7IHJldHVybiBkZWJ1Z0VsZW1lbnQucHJvdmlkZXJUb2tlbnMuaW5kZXhPZih0eXBlKSAhPT0gLTE7IH07XG4gIH1cbn1cbiJdfQ==\n\n/***/ },\n\n/***/ 243:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';var lang_1 = __webpack_require__(1);\r\n\tvar di_1 = __webpack_require__(6);\r\n\tvar dom_adapter_1 = __webpack_require__(11);\r\n\tvar debug_node_1 = __webpack_require__(100);\r\n\tvar dom_renderer_1 = __webpack_require__(113);\r\n\tvar core_1 = __webpack_require__(9);\r\n\tvar debug_renderer_1 = __webpack_require__(223);\r\n\tvar INSPECT_GLOBAL_NAME = 'ng.probe';\r\n\t/**\r\n\t * Returns a {@link DebugElement} for the given native DOM element, or\r\n\t * null if the given native element does not have an Angular view associated\r\n\t * with it.\r\n\t */\r\n\tfunction inspectNativeElement(element) {\r\n\t    return debug_node_1.getDebugNode(element);\r\n\t}\r\n\texports.inspectNativeElement = inspectNativeElement;\r\n\tfunction _createConditionalRootRenderer(rootRenderer) {\r\n\t    if (lang_1.assertionsEnabled()) {\r\n\t        return _createRootRenderer(rootRenderer);\r\n\t    }\r\n\t    return rootRenderer;\r\n\t}\r\n\tfunction _createRootRenderer(rootRenderer) {\r\n\t    dom_adapter_1.DOM.setGlobalVar(INSPECT_GLOBAL_NAME, inspectNativeElement);\r\n\t    return new debug_renderer_1.DebugDomRootRenderer(rootRenderer);\r\n\t}\r\n\t/**\r\n\t * Providers which support debugging Angular applications (e.g. via `ng.probe`).\r\n\t */\r\n\texports.ELEMENT_PROBE_PROVIDERS = lang_1.CONST_EXPR([\r\n\t    new di_1.Provider(core_1.RootRenderer, { useFactory: _createConditionalRootRenderer, deps: [dom_renderer_1.DomRootRenderer] })\r\n\t]);\r\n\texports.ELEMENT_PROBE_PROVIDERS_PROD_MODE = lang_1.CONST_EXPR([new di_1.Provider(core_1.RootRenderer, { useFactory: _createRootRenderer, deps: [dom_renderer_1.DomRootRenderer] })]);\r\n\t//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmdfcHJvYmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJhbmd1bGFyMi9zcmMvcGxhdGZvcm0vZG9tL2RlYnVnL25nX3Byb2JlLnRzIl0sIm5hbWVzIjpbImluc3BlY3ROYXRpdmVFbGVtZW50IiwiX2NyZWF0ZUNvbmRpdGlvbmFsUm9vdFJlbmRlcmVyIiwiX2NyZWF0ZVJvb3RSZW5kZXJlciJdLCJtYXBwaW5ncyI6IkFBQUEscUJBQXVELDBCQUEwQixDQUFDLENBQUE7QUFDbEYsbUJBQTRDLHNCQUFzQixDQUFDLENBQUE7QUFDbkUsNEJBQWtCLHVDQUF1QyxDQUFDLENBQUE7QUFDMUQsMkJBQXNDLG9DQUFvQyxDQUFDLENBQUE7QUFDM0UsNkJBQThCLHdDQUF3QyxDQUFDLENBQUE7QUFDdkUscUJBQTJCLGVBQWUsQ0FBQyxDQUFBO0FBQzNDLCtCQUFtQyx3Q0FBd0MsQ0FBQyxDQUFBO0FBRzVFLElBQU0sbUJBQW1CLEdBQUcsVUFBVSxDQUFDO0FBRXZDOzs7O0dBSUc7QUFDSCw4QkFBcUMsT0FBTztJQUMxQ0EsTUFBTUEsQ0FBQ0EseUJBQVlBLENBQUNBLE9BQU9BLENBQUNBLENBQUNBO0FBQy9CQSxDQUFDQTtBQUZlLDRCQUFvQix1QkFFbkMsQ0FBQTtBQUVELHdDQUF3QyxZQUFZO0lBQ2xEQyxFQUFFQSxDQUFDQSxDQUFDQSx3QkFBaUJBLEVBQUVBLENBQUNBLENBQUNBLENBQUNBO1FBQ3hCQSxNQUFNQSxDQUFDQSxtQkFBbUJBLENBQUNBLFlBQVlBLENBQUNBLENBQUNBO0lBQzNDQSxDQUFDQTtJQUNEQSxNQUFNQSxDQUFDQSxZQUFZQSxDQUFDQTtBQUN0QkEsQ0FBQ0E7QUFFRCw2QkFBNkIsWUFBWTtJQUN2Q0MsaUJBQUdBLENBQUNBLFlBQVlBLENBQUNBLG1CQUFtQkEsRUFBRUEsb0JBQW9CQSxDQUFDQSxDQUFDQTtJQUM1REEsTUFBTUEsQ0FBQ0EsSUFBSUEscUNBQW9CQSxDQUFDQSxZQUFZQSxDQUFDQSxDQUFDQTtBQUNoREEsQ0FBQ0E7QUFFRDs7R0FFRztBQUNVLCtCQUF1QixHQUFVLGlCQUFVLENBQUM7SUFDdkQsSUFBSSxhQUFRLENBQUMsbUJBQVksRUFDWixFQUFDLFVBQVUsRUFBRSw4QkFBOEIsRUFBRSxJQUFJLEVBQUUsQ0FBQyw4QkFBZSxDQUFDLEVBQUMsQ0FBQztDQUNwRixDQUFDLENBQUM7QUFFVSx5Q0FBaUMsR0FBVSxpQkFBVSxDQUM5RCxDQUFDLElBQUksYUFBUSxDQUFDLG1CQUFZLEVBQUUsRUFBQyxVQUFVLEVBQUUsbUJBQW1CLEVBQUUsSUFBSSxFQUFFLENBQUMsOEJBQWUsQ0FBQyxFQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NPTlNUX0VYUFIsIGFzc2VydGlvbnNFbmFibGVkLCBpc1ByZXNlbnR9IGZyb20gJ2FuZ3VsYXIyL3NyYy9mYWNhZGUvbGFuZyc7XG5pbXBvcnQge0luamVjdGFibGUsIHByb3ZpZGUsIFByb3ZpZGVyfSBmcm9tICdhbmd1bGFyMi9zcmMvY29yZS9kaSc7XG5pbXBvcnQge0RPTX0gZnJvbSAnYW5ndWxhcjIvc3JjL3BsYXRmb3JtL2RvbS9kb21fYWRhcHRlcic7XG5pbXBvcnQge0RlYnVnTm9kZSwgZ2V0RGVidWdOb2RlfSBmcm9tICdhbmd1bGFyMi9zcmMvY29yZS9kZWJ1Zy9kZWJ1Z19ub2RlJztcbmltcG9ydCB7RG9tUm9vdFJlbmRlcmVyfSBmcm9tICdhbmd1bGFyMi9zcmMvcGxhdGZvcm0vZG9tL2RvbV9yZW5kZXJlcic7XG5pbXBvcnQge1Jvb3RSZW5kZXJlcn0gZnJvbSAnYW5ndWxhcjIvY29yZSc7XG5pbXBvcnQge0RlYnVnRG9tUm9vdFJlbmRlcmVyfSBmcm9tICdhbmd1bGFyMi9zcmMvY29yZS9kZWJ1Zy9kZWJ1Z19yZW5kZXJlcic7XG5cblxuY29uc3QgSU5TUEVDVF9HTE9CQUxfTkFNRSA9ICduZy5wcm9iZSc7XG5cbi8qKlxuICogUmV0dXJucyBhIHtAbGluayBEZWJ1Z0VsZW1lbnR9IGZvciB0aGUgZ2l2ZW4gbmF0aXZlIERPTSBlbGVtZW50LCBvclxuICogbnVsbCBpZiB0aGUgZ2l2ZW4gbmF0aXZlIGVsZW1lbnQgZG9lcyBub3QgaGF2ZSBhbiBBbmd1bGFyIHZpZXcgYXNzb2NpYXRlZFxuICogd2l0aCBpdC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGluc3BlY3ROYXRpdmVFbGVtZW50KGVsZW1lbnQpOiBEZWJ1Z05vZGUge1xuICByZXR1cm4gZ2V0RGVidWdOb2RlKGVsZW1lbnQpO1xufVxuXG5mdW5jdGlvbiBfY3JlYXRlQ29uZGl0aW9uYWxSb290UmVuZGVyZXIocm9vdFJlbmRlcmVyKSB7XG4gIGlmIChhc3NlcnRpb25zRW5hYmxlZCgpKSB7XG4gICAgcmV0dXJuIF9jcmVhdGVSb290UmVuZGVyZXIocm9vdFJlbmRlcmVyKTtcbiAgfVxuICByZXR1cm4gcm9vdFJlbmRlcmVyO1xufVxuXG5mdW5jdGlvbiBfY3JlYXRlUm9vdFJlbmRlcmVyKHJvb3RSZW5kZXJlcikge1xuICBET00uc2V0R2xvYmFsVmFyKElOU1BFQ1RfR0xPQkFMX05BTUUsIGluc3BlY3ROYXRpdmVFbGVtZW50KTtcbiAgcmV0dXJuIG5ldyBEZWJ1Z0RvbVJvb3RSZW5kZXJlcihyb290UmVuZGVyZXIpO1xufVxuXG4vKipcbiAqIFByb3ZpZGVycyB3aGljaCBzdXBwb3J0IGRlYnVnZ2luZyBBbmd1bGFyIGFwcGxpY2F0aW9ucyAoZS5nLiB2aWEgYG5nLnByb2JlYCkuXG4gKi9cbmV4cG9ydCBjb25zdCBFTEVNRU5UX1BST0JFX1BST1ZJREVSUzogYW55W10gPSBDT05TVF9FWFBSKFtcbiAgbmV3IFByb3ZpZGVyKFJvb3RSZW5kZXJlcixcbiAgICAgICAgICAgICAgIHt1c2VGYWN0b3J5OiBfY3JlYXRlQ29uZGl0aW9uYWxSb290UmVuZGVyZXIsIGRlcHM6IFtEb21Sb290UmVuZGVyZXJdfSlcbl0pO1xuXG5leHBvcnQgY29uc3QgRUxFTUVOVF9QUk9CRV9QUk9WSURFUlNfUFJPRF9NT0RFOiBhbnlbXSA9IENPTlNUX0VYUFIoXG4gICAgW25ldyBQcm92aWRlcihSb290UmVuZGVyZXIsIHt1c2VGYWN0b3J5OiBfY3JlYXRlUm9vdFJlbmRlcmVyLCBkZXBzOiBbRG9tUm9vdFJlbmRlcmVyXX0pXSk7XG4iXX0=\n\n/***/ },\n\n/***/ 244:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';var __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar event_manager_1 = __webpack_require__(36);\r\n\tvar collection_1 = __webpack_require__(3);\r\n\tvar _eventNames = {\r\n\t    // pan\r\n\t    'pan': true,\r\n\t    'panstart': true,\r\n\t    'panmove': true,\r\n\t    'panend': true,\r\n\t    'pancancel': true,\r\n\t    'panleft': true,\r\n\t    'panright': true,\r\n\t    'panup': true,\r\n\t    'pandown': true,\r\n\t    // pinch\r\n\t    'pinch': true,\r\n\t    'pinchstart': true,\r\n\t    'pinchmove': true,\r\n\t    'pinchend': true,\r\n\t    'pinchcancel': true,\r\n\t    'pinchin': true,\r\n\t    'pinchout': true,\r\n\t    // press\r\n\t    'press': true,\r\n\t    'pressup': true,\r\n\t    // rotate\r\n\t    'rotate': true,\r\n\t    'rotatestart': true,\r\n\t    'rotatemove': true,\r\n\t    'rotateend': true,\r\n\t    'rotatecancel': true,\r\n\t    // swipe\r\n\t    'swipe': true,\r\n\t    'swipeleft': true,\r\n\t    'swiperight': true,\r\n\t    'swipeup': true,\r\n\t    'swipedown': true,\r\n\t    // tap\r\n\t    'tap': true,\r\n\t};\r\n\tvar HammerGesturesPluginCommon = (function (_super) {\r\n\t    __extends(HammerGesturesPluginCommon, _super);\r\n\t    function HammerGesturesPluginCommon() {\r\n\t        _super.call(this);\r\n\t    }\r\n\t    HammerGesturesPluginCommon.prototype.supports = function (eventName) {\r\n\t        eventName = eventName.toLowerCase();\r\n\t        return collection_1.StringMapWrapper.contains(_eventNames, eventName);\r\n\t    };\r\n\t    return HammerGesturesPluginCommon;\r\n\t})(event_manager_1.EventManagerPlugin);\r\n\texports.HammerGesturesPluginCommon = HammerGesturesPluginCommon;\r\n\t//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFtbWVyX2NvbW1vbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImFuZ3VsYXIyL3NyYy9wbGF0Zm9ybS9kb20vZXZlbnRzL2hhbW1lcl9jb21tb24udHMiXSwibmFtZXMiOlsiSGFtbWVyR2VzdHVyZXNQbHVnaW5Db21tb24iLCJIYW1tZXJHZXN0dXJlc1BsdWdpbkNvbW1vbi5jb25zdHJ1Y3RvciIsIkhhbW1lckdlc3R1cmVzUGx1Z2luQ29tbW9uLnN1cHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7OztBQUFBLDhCQUFpQyxpQkFBaUIsQ0FBQyxDQUFBO0FBQ25ELDJCQUErQixnQ0FBZ0MsQ0FBQyxDQUFBO0FBRWhFLElBQUksV0FBVyxHQUFHO0lBQ2hCLE1BQU07SUFDTixLQUFLLEVBQUUsSUFBSTtJQUNYLFVBQVUsRUFBRSxJQUFJO0lBQ2hCLFNBQVMsRUFBRSxJQUFJO0lBQ2YsUUFBUSxFQUFFLElBQUk7SUFDZCxXQUFXLEVBQUUsSUFBSTtJQUNqQixTQUFTLEVBQUUsSUFBSTtJQUNmLFVBQVUsRUFBRSxJQUFJO0lBQ2hCLE9BQU8sRUFBRSxJQUFJO0lBQ2IsU0FBUyxFQUFFLElBQUk7SUFDZixRQUFRO0lBQ1IsT0FBTyxFQUFFLElBQUk7SUFDYixZQUFZLEVBQUUsSUFBSTtJQUNsQixXQUFXLEVBQUUsSUFBSTtJQUNqQixVQUFVLEVBQUUsSUFBSTtJQUNoQixhQUFhLEVBQUUsSUFBSTtJQUNuQixTQUFTLEVBQUUsSUFBSTtJQUNmLFVBQVUsRUFBRSxJQUFJO0lBQ2hCLFFBQVE7SUFDUixPQUFPLEVBQUUsSUFBSTtJQUNiLFNBQVMsRUFBRSxJQUFJO0lBQ2YsU0FBUztJQUNULFFBQVEsRUFBRSxJQUFJO0lBQ2QsYUFBYSxFQUFFLElBQUk7SUFDbkIsWUFBWSxFQUFFLElBQUk7SUFDbEIsV0FBVyxFQUFFLElBQUk7SUFDakIsY0FBYyxFQUFFLElBQUk7SUFDcEIsUUFBUTtJQUNSLE9BQU8sRUFBRSxJQUFJO0lBQ2IsV0FBVyxFQUFFLElBQUk7SUFDakIsWUFBWSxFQUFFLElBQUk7SUFDbEIsU0FBUyxFQUFFLElBQUk7SUFDZixXQUFXLEVBQUUsSUFBSTtJQUNqQixNQUFNO0lBQ04sS0FBSyxFQUFFLElBQUk7Q0FDWixDQUFDO0FBR0Y7SUFBZ0RBLDhDQUFrQkE7SUFDaEVBO1FBQWdCQyxpQkFBT0EsQ0FBQ0E7SUFBQ0EsQ0FBQ0E7SUFFMUJELDZDQUFRQSxHQUFSQSxVQUFTQSxTQUFpQkE7UUFDeEJFLFNBQVNBLEdBQUdBLFNBQVNBLENBQUNBLFdBQVdBLEVBQUVBLENBQUNBO1FBQ3BDQSxNQUFNQSxDQUFDQSw2QkFBZ0JBLENBQUNBLFFBQVFBLENBQUNBLFdBQVdBLEVBQUVBLFNBQVNBLENBQUNBLENBQUNBO0lBQzNEQSxDQUFDQTtJQUNIRixpQ0FBQ0E7QUFBREEsQ0FBQ0EsQUFQRCxFQUFnRCxrQ0FBa0IsRUFPakU7QUFQWSxrQ0FBMEIsNkJBT3RDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0V2ZW50TWFuYWdlclBsdWdpbn0gZnJvbSAnLi9ldmVudF9tYW5hZ2VyJztcbmltcG9ydCB7U3RyaW5nTWFwV3JhcHBlcn0gZnJvbSAnYW5ndWxhcjIvc3JjL2ZhY2FkZS9jb2xsZWN0aW9uJztcblxudmFyIF9ldmVudE5hbWVzID0ge1xuICAvLyBwYW5cbiAgJ3Bhbic6IHRydWUsXG4gICdwYW5zdGFydCc6IHRydWUsXG4gICdwYW5tb3ZlJzogdHJ1ZSxcbiAgJ3BhbmVuZCc6IHRydWUsXG4gICdwYW5jYW5jZWwnOiB0cnVlLFxuICAncGFubGVmdCc6IHRydWUsXG4gICdwYW5yaWdodCc6IHRydWUsXG4gICdwYW51cCc6IHRydWUsXG4gICdwYW5kb3duJzogdHJ1ZSxcbiAgLy8gcGluY2hcbiAgJ3BpbmNoJzogdHJ1ZSxcbiAgJ3BpbmNoc3RhcnQnOiB0cnVlLFxuICAncGluY2htb3ZlJzogdHJ1ZSxcbiAgJ3BpbmNoZW5kJzogdHJ1ZSxcbiAgJ3BpbmNoY2FuY2VsJzogdHJ1ZSxcbiAgJ3BpbmNoaW4nOiB0cnVlLFxuICAncGluY2hvdXQnOiB0cnVlLFxuICAvLyBwcmVzc1xuICAncHJlc3MnOiB0cnVlLFxuICAncHJlc3N1cCc6IHRydWUsXG4gIC8vIHJvdGF0ZVxuICAncm90YXRlJzogdHJ1ZSxcbiAgJ3JvdGF0ZXN0YXJ0JzogdHJ1ZSxcbiAgJ3JvdGF0ZW1vdmUnOiB0cnVlLFxuICAncm90YXRlZW5kJzogdHJ1ZSxcbiAgJ3JvdGF0ZWNhbmNlbCc6IHRydWUsXG4gIC8vIHN3aXBlXG4gICdzd2lwZSc6IHRydWUsXG4gICdzd2lwZWxlZnQnOiB0cnVlLFxuICAnc3dpcGVyaWdodCc6IHRydWUsXG4gICdzd2lwZXVwJzogdHJ1ZSxcbiAgJ3N3aXBlZG93bic6IHRydWUsXG4gIC8vIHRhcFxuICAndGFwJzogdHJ1ZSxcbn07XG5cblxuZXhwb3J0IGNsYXNzIEhhbW1lckdlc3R1cmVzUGx1Z2luQ29tbW9uIGV4dGVuZHMgRXZlbnRNYW5hZ2VyUGx1Z2luIHtcbiAgY29uc3RydWN0b3IoKSB7IHN1cGVyKCk7IH1cblxuICBzdXBwb3J0cyhldmVudE5hbWU6IHN0cmluZyk6IGJvb2xlYW4ge1xuICAgIGV2ZW50TmFtZSA9IGV2ZW50TmFtZS50b0xvd2VyQ2FzZSgpO1xuICAgIHJldHVybiBTdHJpbmdNYXBXcmFwcGVyLmNvbnRhaW5zKF9ldmVudE5hbWVzLCBldmVudE5hbWUpO1xuICB9XG59XG4iXX0=\n\n/***/ },\n\n/***/ 245:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';var __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar hammer_common_1 = __webpack_require__(244);\r\n\tvar lang_1 = __webpack_require__(1);\r\n\tvar exceptions_1 = __webpack_require__(5);\r\n\tvar di_1 = __webpack_require__(6);\r\n\tvar HammerGesturesPlugin = (function (_super) {\r\n\t    __extends(HammerGesturesPlugin, _super);\r\n\t    function HammerGesturesPlugin() {\r\n\t        _super.apply(this, arguments);\r\n\t    }\r\n\t    HammerGesturesPlugin.prototype.supports = function (eventName) {\r\n\t        if (!_super.prototype.supports.call(this, eventName))\r\n\t            return false;\r\n\t        if (!lang_1.isPresent(window['Hammer'])) {\r\n\t            throw new exceptions_1.BaseException(\"Hammer.js is not loaded, can not bind \" + eventName + \" event\");\r\n\t        }\r\n\t        return true;\r\n\t    };\r\n\t    HammerGesturesPlugin.prototype.addEventListener = function (element, eventName, handler) {\r\n\t        var zone = this.manager.getZone();\r\n\t        eventName = eventName.toLowerCase();\r\n\t        return zone.runOutsideAngular(function () {\r\n\t            // Creating the manager bind events, must be done outside of angular\r\n\t            var mc = new Hammer(element);\r\n\t            mc.get('pinch').set({ enable: true });\r\n\t            mc.get('rotate').set({ enable: true });\r\n\t            var handler = function (eventObj) { zone.run(function () { handler(eventObj); }); };\r\n\t            mc.on(eventName, handler);\r\n\t            return function () { mc.off(eventName, handler); };\r\n\t        });\r\n\t    };\r\n\t    HammerGesturesPlugin = __decorate([\r\n\t        di_1.Injectable(), \r\n\t        __metadata('design:paramtypes', [])\r\n\t    ], HammerGesturesPlugin);\r\n\t    return HammerGesturesPlugin;\r\n\t})(hammer_common_1.HammerGesturesPluginCommon);\r\n\texports.HammerGesturesPlugin = HammerGesturesPlugin;\r\n\t//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFtbWVyX2dlc3R1cmVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYW5ndWxhcjIvc3JjL3BsYXRmb3JtL2RvbS9ldmVudHMvaGFtbWVyX2dlc3R1cmVzLnRzIl0sIm5hbWVzIjpbIkhhbW1lckdlc3R1cmVzUGx1Z2luIiwiSGFtbWVyR2VzdHVyZXNQbHVnaW4uY29uc3RydWN0b3IiLCJIYW1tZXJHZXN0dXJlc1BsdWdpbi5zdXBwb3J0cyIsIkhhbW1lckdlc3R1cmVzUGx1Z2luLmFkZEV2ZW50TGlzdGVuZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQUEsOEJBQXlDLGlCQUFpQixDQUFDLENBQUE7QUFDM0QscUJBQXdCLDBCQUEwQixDQUFDLENBQUE7QUFDbkQsMkJBQThDLGdDQUFnQyxDQUFDLENBQUE7QUFDL0UsbUJBQXlCLHNCQUFzQixDQUFDLENBQUE7QUFFaEQ7SUFDMENBLHdDQUEwQkE7SUFEcEVBO1FBQzBDQyw4QkFBMEJBO0lBeUJwRUEsQ0FBQ0E7SUF4QkNELHVDQUFRQSxHQUFSQSxVQUFTQSxTQUFpQkE7UUFDeEJFLEVBQUVBLENBQUNBLENBQUNBLENBQUNBLGdCQUFLQSxDQUFDQSxRQUFRQSxZQUFDQSxTQUFTQSxDQUFDQSxDQUFDQTtZQUFDQSxNQUFNQSxDQUFDQSxLQUFLQSxDQUFDQTtRQUU3Q0EsRUFBRUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsZ0JBQVNBLENBQUNBLE1BQU1BLENBQUNBLFFBQVFBLENBQUNBLENBQUNBLENBQUNBLENBQUNBLENBQUNBO1lBQ2pDQSxNQUFNQSxJQUFJQSwwQkFBYUEsQ0FBQ0EsMkNBQXlDQSxTQUFTQSxXQUFRQSxDQUFDQSxDQUFDQTtRQUN0RkEsQ0FBQ0E7UUFFREEsTUFBTUEsQ0FBQ0EsSUFBSUEsQ0FBQ0E7SUFDZEEsQ0FBQ0E7SUFFREYsK0NBQWdCQSxHQUFoQkEsVUFBaUJBLE9BQW9CQSxFQUFFQSxTQUFpQkEsRUFBRUEsT0FBaUJBO1FBQ3pFRyxJQUFJQSxJQUFJQSxHQUFHQSxJQUFJQSxDQUFDQSxPQUFPQSxDQUFDQSxPQUFPQSxFQUFFQSxDQUFDQTtRQUNsQ0EsU0FBU0EsR0FBR0EsU0FBU0EsQ0FBQ0EsV0FBV0EsRUFBRUEsQ0FBQ0E7UUFFcENBLE1BQU1BLENBQUNBLElBQUlBLENBQUNBLGlCQUFpQkEsQ0FBQ0E7WUFDNUIsb0VBQW9FO1lBQ3BFLElBQUksRUFBRSxHQUFHLElBQUksTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1lBQzdCLEVBQUUsQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLENBQUMsR0FBRyxDQUFDLEVBQUMsTUFBTSxFQUFFLElBQUksRUFBQyxDQUFDLENBQUM7WUFDcEMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsQ0FBQyxHQUFHLENBQUMsRUFBQyxNQUFNLEVBQUUsSUFBSSxFQUFDLENBQUMsQ0FBQztZQUNyQyxJQUFJLE9BQU8sR0FBRyxVQUFTLFFBQVEsSUFBSSxJQUFJLENBQUMsR0FBRyxDQUFDLGNBQWEsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDbEYsRUFBRSxDQUFDLEVBQUUsQ0FBQyxTQUFTLEVBQUUsT0FBTyxDQUFDLENBQUM7WUFDMUIsTUFBTSxDQUFDLGNBQVEsRUFBRSxDQUFDLEdBQUcsQ0FBQyxTQUFTLEVBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDL0MsQ0FBQyxDQUFDQSxDQUFDQTtJQUNMQSxDQUFDQTtJQXpCSEg7UUFBQ0EsZUFBVUEsRUFBRUE7OzZCQTBCWkE7SUFBREEsMkJBQUNBO0FBQURBLENBQUNBLEFBMUJELEVBQzBDLDBDQUEwQixFQXlCbkU7QUF6QlksNEJBQW9CLHVCQXlCaEMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SGFtbWVyR2VzdHVyZXNQbHVnaW5Db21tb259IGZyb20gJy4vaGFtbWVyX2NvbW1vbic7XG5pbXBvcnQge2lzUHJlc2VudH0gZnJvbSAnYW5ndWxhcjIvc3JjL2ZhY2FkZS9sYW5nJztcbmltcG9ydCB7QmFzZUV4Y2VwdGlvbiwgV3JhcHBlZEV4Y2VwdGlvbn0gZnJvbSAnYW5ndWxhcjIvc3JjL2ZhY2FkZS9leGNlcHRpb25zJztcbmltcG9ydCB7SW5qZWN0YWJsZX0gZnJvbSAnYW5ndWxhcjIvc3JjL2NvcmUvZGknO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgSGFtbWVyR2VzdHVyZXNQbHVnaW4gZXh0ZW5kcyBIYW1tZXJHZXN0dXJlc1BsdWdpbkNvbW1vbiB7XG4gIHN1cHBvcnRzKGV2ZW50TmFtZTogc3RyaW5nKTogYm9vbGVhbiB7XG4gICAgaWYgKCFzdXBlci5zdXBwb3J0cyhldmVudE5hbWUpKSByZXR1cm4gZmFsc2U7XG5cbiAgICBpZiAoIWlzUHJlc2VudCh3aW5kb3dbJ0hhbW1lciddKSkge1xuICAgICAgdGhyb3cgbmV3IEJhc2VFeGNlcHRpb24oYEhhbW1lci5qcyBpcyBub3QgbG9hZGVkLCBjYW4gbm90IGJpbmQgJHtldmVudE5hbWV9IGV2ZW50YCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICBhZGRFdmVudExpc3RlbmVyKGVsZW1lbnQ6IEhUTUxFbGVtZW50LCBldmVudE5hbWU6IHN0cmluZywgaGFuZGxlcjogRnVuY3Rpb24pOiBGdW5jdGlvbiB7XG4gICAgdmFyIHpvbmUgPSB0aGlzLm1hbmFnZXIuZ2V0Wm9uZSgpO1xuICAgIGV2ZW50TmFtZSA9IGV2ZW50TmFtZS50b0xvd2VyQ2FzZSgpO1xuXG4gICAgcmV0dXJuIHpvbmUucnVuT3V0c2lkZUFuZ3VsYXIoZnVuY3Rpb24oKSB7XG4gICAgICAvLyBDcmVhdGluZyB0aGUgbWFuYWdlciBiaW5kIGV2ZW50cywgbXVzdCBiZSBkb25lIG91dHNpZGUgb2YgYW5ndWxhclxuICAgICAgdmFyIG1jID0gbmV3IEhhbW1lcihlbGVtZW50KTtcbiAgICAgIG1jLmdldCgncGluY2gnKS5zZXQoe2VuYWJsZTogdHJ1ZX0pO1xuICAgICAgbWMuZ2V0KCdyb3RhdGUnKS5zZXQoe2VuYWJsZTogdHJ1ZX0pO1xuICAgICAgdmFyIGhhbmRsZXIgPSBmdW5jdGlvbihldmVudE9iaikgeyB6b25lLnJ1bihmdW5jdGlvbigpIHsgaGFuZGxlcihldmVudE9iaik7IH0pOyB9O1xuICAgICAgbWMub24oZXZlbnROYW1lLCBoYW5kbGVyKTtcbiAgICAgIHJldHVybiAoKSA9PiB7IG1jLm9mZihldmVudE5hbWUsIGhhbmRsZXIpOyB9O1xuICAgIH0pO1xuICB9XG59XG4iXX0=\n\n/***/ },\n\n/***/ 246:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';var __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar dom_adapter_1 = __webpack_require__(11);\r\n\tvar lang_1 = __webpack_require__(1);\r\n\tvar collection_1 = __webpack_require__(3);\r\n\tvar event_manager_1 = __webpack_require__(36);\r\n\tvar di_1 = __webpack_require__(6);\r\n\tvar modifierKeys = ['alt', 'control', 'meta', 'shift'];\r\n\tvar modifierKeyGetters = {\r\n\t    'alt': function (event) { return event.altKey; },\r\n\t    'control': function (event) { return event.ctrlKey; },\r\n\t    'meta': function (event) { return event.metaKey; },\r\n\t    'shift': function (event) { return event.shiftKey; }\r\n\t};\r\n\tvar KeyEventsPlugin = (function (_super) {\r\n\t    __extends(KeyEventsPlugin, _super);\r\n\t    function KeyEventsPlugin() {\r\n\t        _super.call(this);\r\n\t    }\r\n\t    KeyEventsPlugin.prototype.supports = function (eventName) {\r\n\t        return lang_1.isPresent(KeyEventsPlugin.parseEventName(eventName));\r\n\t    };\r\n\t    KeyEventsPlugin.prototype.addEventListener = function (element, eventName, handler) {\r\n\t        var parsedEvent = KeyEventsPlugin.parseEventName(eventName);\r\n\t        var outsideHandler = KeyEventsPlugin.eventCallback(element, collection_1.StringMapWrapper.get(parsedEvent, 'fullKey'), handler, this.manager.getZone());\r\n\t        return this.manager.getZone().runOutsideAngular(function () {\r\n\t            return dom_adapter_1.DOM.onAndCancel(element, collection_1.StringMapWrapper.get(parsedEvent, 'domEventName'), outsideHandler);\r\n\t        });\r\n\t    };\r\n\t    KeyEventsPlugin.parseEventName = function (eventName) {\r\n\t        var parts = eventName.toLowerCase().split('.');\r\n\t        var domEventName = parts.shift();\r\n\t        if ((parts.length === 0) ||\r\n\t            !(lang_1.StringWrapper.equals(domEventName, 'keydown') ||\r\n\t                lang_1.StringWrapper.equals(domEventName, 'keyup'))) {\r\n\t            return null;\r\n\t        }\r\n\t        var key = KeyEventsPlugin._normalizeKey(parts.pop());\r\n\t        var fullKey = '';\r\n\t        modifierKeys.forEach(function (modifierName) {\r\n\t            if (collection_1.ListWrapper.contains(parts, modifierName)) {\r\n\t                collection_1.ListWrapper.remove(parts, modifierName);\r\n\t                fullKey += modifierName + '.';\r\n\t            }\r\n\t        });\r\n\t        fullKey += key;\r\n\t        if (parts.length != 0 || key.length === 0) {\r\n\t            // returning null instead of throwing to let another plugin process the event\r\n\t            return null;\r\n\t        }\r\n\t        var result = collection_1.StringMapWrapper.create();\r\n\t        collection_1.StringMapWrapper.set(result, 'domEventName', domEventName);\r\n\t        collection_1.StringMapWrapper.set(result, 'fullKey', fullKey);\r\n\t        return result;\r\n\t    };\r\n\t    KeyEventsPlugin.getEventFullKey = function (event) {\r\n\t        var fullKey = '';\r\n\t        var key = dom_adapter_1.DOM.getEventKey(event);\r\n\t        key = key.toLowerCase();\r\n\t        if (lang_1.StringWrapper.equals(key, ' ')) {\r\n\t            key = 'space'; // for readability\r\n\t        }\r\n\t        else if (lang_1.StringWrapper.equals(key, '.')) {\r\n\t            key = 'dot'; // because '.' is used as a separator in event names\r\n\t        }\r\n\t        modifierKeys.forEach(function (modifierName) {\r\n\t            if (modifierName != key) {\r\n\t                var modifierGetter = collection_1.StringMapWrapper.get(modifierKeyGetters, modifierName);\r\n\t                if (modifierGetter(event)) {\r\n\t                    fullKey += modifierName + '.';\r\n\t                }\r\n\t            }\r\n\t        });\r\n\t        fullKey += key;\r\n\t        return fullKey;\r\n\t    };\r\n\t    KeyEventsPlugin.eventCallback = function (element, fullKey, handler, zone) {\r\n\t        return function (event) {\r\n\t            if (lang_1.StringWrapper.equals(KeyEventsPlugin.getEventFullKey(event), fullKey)) {\r\n\t                zone.run(function () { return handler(event); });\r\n\t            }\r\n\t        };\r\n\t    };\r\n\t    /** @internal */\r\n\t    KeyEventsPlugin._normalizeKey = function (keyName) {\r\n\t        // TODO: switch to a StringMap if the mapping grows too much\r\n\t        switch (keyName) {\r\n\t            case 'esc':\r\n\t                return 'escape';\r\n\t            default:\r\n\t                return keyName;\r\n\t        }\r\n\t    };\r\n\t    KeyEventsPlugin = __decorate([\r\n\t        di_1.Injectable(), \r\n\t        __metadata('design:paramtypes', [])\r\n\t    ], KeyEventsPlugin);\r\n\t    return KeyEventsPlugin;\r\n\t})(event_manager_1.EventManagerPlugin);\r\n\texports.KeyEventsPlugin = KeyEventsPlugin;\r\n\t//# sourceMappingURL=data:application/json;base64,\n\n/***/ },\n\n/***/ 247:\n/***/ function(module, exports) {\n\n\t'use strict';// Note: This class is only here so that we can reference it from TypeScript code.\r\n\t// The actual implementation lives under modules_dart.\r\n\t// TODO(tbosch): Move the corresponding code into angular2/src/compiler once\r\n\t// the new compiler is done.\r\n\tvar Codegen = (function () {\r\n\t    function Codegen(moduleAlias) {\r\n\t    }\r\n\t    Codegen.prototype.generate = function (typeName, changeDetectorTypeName, def) {\r\n\t        throw \"Not implemented in JS\";\r\n\t    };\r\n\t    Codegen.prototype.toString = function () { throw \"Not implemented in JS\"; };\r\n\t    return Codegen;\r\n\t})();\r\n\texports.Codegen = Codegen;\r\n\t//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhbmdlX2RldGVjdG9yX2NvZGVnZW4uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJhbmd1bGFyMi9zcmMvdHJhbnNmb3JtL3RlbXBsYXRlX2NvbXBpbGVyL2NoYW5nZV9kZXRlY3Rvcl9jb2RlZ2VuLnRzIl0sIm5hbWVzIjpbIkNvZGVnZW4iLCJDb2RlZ2VuLmNvbnN0cnVjdG9yIiwiQ29kZWdlbi5nZW5lcmF0ZSIsIkNvZGVnZW4udG9TdHJpbmciXSwibWFwcGluZ3MiOiJBQUlBLGtGQUFrRjtBQUNsRixzREFBc0Q7QUFDdEQsNEVBQTRFO0FBQzVFLDRCQUE0QjtBQUM1QjtJQUNFQSxpQkFBWUEsV0FBbUJBO0lBQUdDLENBQUNBO0lBQ25DRCwwQkFBUUEsR0FBUkEsVUFBU0EsUUFBZ0JBLEVBQUVBLHNCQUE4QkEsRUFBRUEsR0FBNkJBO1FBQ3RGRSxNQUFNQSx1QkFBdUJBLENBQUNBO0lBQ2hDQSxDQUFDQTtJQUNERiwwQkFBUUEsR0FBUkEsY0FBcUJHLE1BQU1BLHVCQUF1QkEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7SUFDdkRILGNBQUNBO0FBQURBLENBQUNBLEFBTkQsSUFNQztBQU5ZLGVBQU8sVUFNbkIsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENoYW5nZURldGVjdG9yRGVmaW5pdGlvbixcbn0gZnJvbSAnYW5ndWxhcjIvc3JjL2NvcmUvY2hhbmdlX2RldGVjdGlvbi9jaGFuZ2VfZGV0ZWN0aW9uJztcblxuLy8gTm90ZTogVGhpcyBjbGFzcyBpcyBvbmx5IGhlcmUgc28gdGhhdCB3ZSBjYW4gcmVmZXJlbmNlIGl0IGZyb20gVHlwZVNjcmlwdCBjb2RlLlxuLy8gVGhlIGFjdHVhbCBpbXBsZW1lbnRhdGlvbiBsaXZlcyB1bmRlciBtb2R1bGVzX2RhcnQuXG4vLyBUT0RPKHRib3NjaCk6IE1vdmUgdGhlIGNvcnJlc3BvbmRpbmcgY29kZSBpbnRvIGFuZ3VsYXIyL3NyYy9jb21waWxlciBvbmNlXG4vLyB0aGUgbmV3IGNvbXBpbGVyIGlzIGRvbmUuXG5leHBvcnQgY2xhc3MgQ29kZWdlbiB7XG4gIGNvbnN0cnVjdG9yKG1vZHVsZUFsaWFzOiBzdHJpbmcpIHt9XG4gIGdlbmVyYXRlKHR5cGVOYW1lOiBzdHJpbmcsIGNoYW5nZURldGVjdG9yVHlwZU5hbWU6IHN0cmluZywgZGVmOiBDaGFuZ2VEZXRlY3RvckRlZmluaXRpb24pOiB2b2lkIHtcbiAgICB0aHJvdyBcIk5vdCBpbXBsZW1lbnRlZCBpbiBKU1wiO1xuICB9XG4gIHRvU3RyaW5nKCk6IHN0cmluZyB7IHRocm93IFwiTm90IGltcGxlbWVudGVkIGluIEpTXCI7IH1cbn1cbiJdfQ==\n\n/***/ },\n\n/***/ 445:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(9);\n\tvar AppComponent = (function () {\n\t    function AppComponent() {\n\t        this.type = 'app component';\n\t    }\n\t    AppComponent = __decorate([\n\t        core_1.Component({\n\t            selector: 'gapminder-app',\n\t            template: \"\\n    <alert type=\\\"info\\\">Here will be new and shiny gapminder.org</alert>\\n  \",\n\t        }), \n\t        __metadata('design:paramtypes', [])\n\t    ], AppComponent);\n\t    return AppComponent;\n\t})();\n\texports.AppComponent = AppComponent;\n\n\n/***/ }\n\n});\n\n\n/** WEBPACK FOOTER **\n ** app.js\n **/","import {bootstrap}    from 'angular2/platform/browser';\nimport {AppComponent} from './app.component';\n\nbootstrap(AppComponent);\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./app/index.ts\n **/","'use strict';var lang_1 = require('angular2/src/facade/lang');\r\nexports.DOM = null;\r\nfunction setRootDomAdapter(adapter) {\r\n    if (lang_1.isBlank(exports.DOM)) {\r\n        exports.DOM = adapter;\r\n    }\r\n}\r\nexports.setRootDomAdapter = setRootDomAdapter;\r\n/* tslint:disable:requireParameterType */\r\n/**\r\n * Provides DOM operations in an environment-agnostic way.\r\n */\r\nvar DomAdapter = (function () {\r\n    function DomAdapter() {\r\n    }\r\n    Object.defineProperty(DomAdapter.prototype, \"attrToPropMap\", {\r\n        /**\r\n         * Maps attribute names to their corresponding property names for cases\r\n         * where attribute name doesn't match property name.\r\n         */\r\n        get: function () { return this._attrToPropMap; },\r\n        set: function (value) { this._attrToPropMap = value; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ;\r\n    ;\r\n    return DomAdapter;\r\n})();\r\nexports.DomAdapter = DomAdapter;\r\n//# sourceMappingURL=data:application/json;base64,\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/platform/dom/dom_adapter.js\n ** module id = 11\n ** module chunks = 1\n **/","'use strict';var lang_1 = require('angular2/src/facade/lang');\r\nvar CAMEL_CASE_REGEXP = /([A-Z])/g;\r\nvar DASH_CASE_REGEXP = /-([a-z])/g;\r\nvar SINGLE_QUOTE_ESCAPE_STRING_RE = /'|\\\\|\\n|\\r|\\$/g;\r\nvar DOUBLE_QUOTE_ESCAPE_STRING_RE = /\"|\\\\|\\n|\\r|\\$/g;\r\nexports.MODULE_SUFFIX = lang_1.IS_DART ? '.dart' : '.js';\r\nexports.CONST_VAR = lang_1.IS_DART ? 'const' : 'var';\r\nfunction camelCaseToDashCase(input) {\r\n    return lang_1.StringWrapper.replaceAllMapped(input, CAMEL_CASE_REGEXP, function (m) { return '-' + m[1].toLowerCase(); });\r\n}\r\nexports.camelCaseToDashCase = camelCaseToDashCase;\r\nfunction dashCaseToCamelCase(input) {\r\n    return lang_1.StringWrapper.replaceAllMapped(input, DASH_CASE_REGEXP, function (m) { return m[1].toUpperCase(); });\r\n}\r\nexports.dashCaseToCamelCase = dashCaseToCamelCase;\r\nfunction escapeSingleQuoteString(input) {\r\n    if (lang_1.isBlank(input)) {\r\n        return null;\r\n    }\r\n    return \"'\" + escapeString(input, SINGLE_QUOTE_ESCAPE_STRING_RE) + \"'\";\r\n}\r\nexports.escapeSingleQuoteString = escapeSingleQuoteString;\r\nfunction escapeDoubleQuoteString(input) {\r\n    if (lang_1.isBlank(input)) {\r\n        return null;\r\n    }\r\n    return \"\\\"\" + escapeString(input, DOUBLE_QUOTE_ESCAPE_STRING_RE) + \"\\\"\";\r\n}\r\nexports.escapeDoubleQuoteString = escapeDoubleQuoteString;\r\nfunction escapeString(input, re) {\r\n    return lang_1.StringWrapper.replaceAllMapped(input, re, function (match) {\r\n        if (match[0] == '$') {\r\n            return lang_1.IS_DART ? '\\\\$' : '$';\r\n        }\r\n        else if (match[0] == '\\n') {\r\n            return '\\\\n';\r\n        }\r\n        else if (match[0] == '\\r') {\r\n            return '\\\\r';\r\n        }\r\n        else {\r\n            return \"\\\\\" + match[0];\r\n        }\r\n    });\r\n}\r\nfunction codeGenExportVariable(name) {\r\n    if (lang_1.IS_DART) {\r\n        return \"const \" + name + \" = \";\r\n    }\r\n    else {\r\n        return \"var \" + name + \" = exports['\" + name + \"'] = \";\r\n    }\r\n}\r\nexports.codeGenExportVariable = codeGenExportVariable;\r\nfunction codeGenConstConstructorCall(name) {\r\n    if (lang_1.IS_DART) {\r\n        return \"const \" + name;\r\n    }\r\n    else {\r\n        return \"new \" + name;\r\n    }\r\n}\r\nexports.codeGenConstConstructorCall = codeGenConstConstructorCall;\r\nfunction codeGenValueFn(params, value, fnName) {\r\n    if (fnName === void 0) { fnName = ''; }\r\n    if (lang_1.IS_DART) {\r\n        return codeGenFnHeader(params, fnName) + \" => \" + value;\r\n    }\r\n    else {\r\n        return codeGenFnHeader(params, fnName) + \" { return \" + value + \"; }\";\r\n    }\r\n}\r\nexports.codeGenValueFn = codeGenValueFn;\r\nfunction codeGenFnHeader(params, fnName) {\r\n    if (fnName === void 0) { fnName = ''; }\r\n    if (lang_1.IS_DART) {\r\n        return fnName + \"(\" + params.join(',') + \")\";\r\n    }\r\n    else {\r\n        return \"function \" + fnName + \"(\" + params.join(',') + \")\";\r\n    }\r\n}\r\nexports.codeGenFnHeader = codeGenFnHeader;\r\nfunction codeGenToString(expr) {\r\n    if (lang_1.IS_DART) {\r\n        return \"'${\" + expr + \"}'\";\r\n    }\r\n    else {\r\n        // JS automatically converts to string...\r\n        return expr;\r\n    }\r\n}\r\nexports.codeGenToString = codeGenToString;\r\nfunction splitAtColon(input, defaultValues) {\r\n    var parts = lang_1.StringWrapper.split(input.trim(), /\\s*:\\s*/g);\r\n    if (parts.length > 1) {\r\n        return parts;\r\n    }\r\n    else {\r\n        return defaultValues;\r\n    }\r\n}\r\nexports.splitAtColon = splitAtColon;\r\nvar Statement = (function () {\r\n    function Statement(statement) {\r\n        this.statement = statement;\r\n    }\r\n    return Statement;\r\n})();\r\nexports.Statement = Statement;\r\nvar Expression = (function () {\r\n    function Expression(expression, isArray) {\r\n        if (isArray === void 0) { isArray = false; }\r\n        this.expression = expression;\r\n        this.isArray = isArray;\r\n    }\r\n    return Expression;\r\n})();\r\nexports.Expression = Expression;\r\nfunction escapeValue(value) {\r\n    if (value instanceof Expression) {\r\n        return value.expression;\r\n    }\r\n    else if (lang_1.isString(value)) {\r\n        return escapeSingleQuoteString(value);\r\n    }\r\n    else if (lang_1.isBlank(value)) {\r\n        return 'null';\r\n    }\r\n    else {\r\n        return \"\" + value;\r\n    }\r\n}\r\nexports.escapeValue = escapeValue;\r\nfunction codeGenArray(data) {\r\n    return \"[\" + data.map(escapeValue).join(',') + \"]\";\r\n}\r\nexports.codeGenArray = codeGenArray;\r\nfunction codeGenFlatArray(values) {\r\n    var result = '([';\r\n    var isFirstArrayEntry = true;\r\n    var concatFn = lang_1.IS_DART ? '.addAll' : 'concat';\r\n    for (var i = 0; i < values.length; i++) {\r\n        var value = values[i];\r\n        if (value instanceof Expression && value.isArray) {\r\n            result += \"]).\" + concatFn + \"(\" + value.expression + \").\" + concatFn + \"([\";\r\n            isFirstArrayEntry = true;\r\n        }\r\n        else {\r\n            if (!isFirstArrayEntry) {\r\n                result += ',';\r\n            }\r\n            isFirstArrayEntry = false;\r\n            result += escapeValue(value);\r\n        }\r\n    }\r\n    result += '])';\r\n    return result;\r\n}\r\nexports.codeGenFlatArray = codeGenFlatArray;\r\nfunction codeGenStringMap(keyValueArray) {\r\n    return \"{\" + keyValueArray.map(codeGenKeyValue).join(',') + \"}\";\r\n}\r\nexports.codeGenStringMap = codeGenStringMap;\r\nfunction codeGenKeyValue(keyValue) {\r\n    return escapeValue(keyValue[0]) + \":\" + escapeValue(keyValue[1]);\r\n}\r\nfunction addAll(source, target) {\r\n    for (var i = 0; i < source.length; i++) {\r\n        target.push(source[i]);\r\n    }\r\n}\r\nexports.addAll = addAll;\r\nfunction flattenArray(source, target) {\r\n    if (lang_1.isPresent(source)) {\r\n        for (var i = 0; i < source.length; i++) {\r\n            var item = source[i];\r\n            if (lang_1.isArray(item)) {\r\n                flattenArray(item, target);\r\n            }\r\n            else {\r\n                target.push(item);\r\n            }\r\n        }\r\n    }\r\n    return target;\r\n}\r\nexports.flattenArray = flattenArray;\r\n//# sourceMappingURL=data:application/json;base64,\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/compiler/util.js\n ** module id = 24\n ** module chunks = 1\n **/","'use strict';var lang_1 = require('angular2/src/facade/lang');\r\nvar MODULE_REGEXP = /#MODULE\\[([^\\]]*)\\]/g;\r\nfunction moduleRef(moduleUrl) {\r\n    return \"#MODULE[\" + moduleUrl + \"]\";\r\n}\r\nexports.moduleRef = moduleRef;\r\n/**\r\n * Represents generated source code with module references. Internal to the Angular compiler.\r\n */\r\nvar SourceModule = (function () {\r\n    function SourceModule(moduleUrl, sourceWithModuleRefs) {\r\n        this.moduleUrl = moduleUrl;\r\n        this.sourceWithModuleRefs = sourceWithModuleRefs;\r\n    }\r\n    SourceModule.getSourceWithoutImports = function (sourceWithModuleRefs) {\r\n        return lang_1.StringWrapper.replaceAllMapped(sourceWithModuleRefs, MODULE_REGEXP, function (match) { return ''; });\r\n    };\r\n    SourceModule.prototype.getSourceWithImports = function () {\r\n        var _this = this;\r\n        var moduleAliases = {};\r\n        var imports = [];\r\n        var newSource = lang_1.StringWrapper.replaceAllMapped(this.sourceWithModuleRefs, MODULE_REGEXP, function (match) {\r\n            var moduleUrl = match[1];\r\n            var alias = moduleAliases[moduleUrl];\r\n            if (lang_1.isBlank(alias)) {\r\n                if (moduleUrl == _this.moduleUrl) {\r\n                    alias = '';\r\n                }\r\n                else {\r\n                    alias = \"import\" + imports.length;\r\n                    imports.push([moduleUrl, alias]);\r\n                }\r\n                moduleAliases[moduleUrl] = alias;\r\n            }\r\n            return alias.length > 0 ? alias + \".\" : '';\r\n        });\r\n        return new SourceWithImports(newSource, imports);\r\n    };\r\n    return SourceModule;\r\n})();\r\nexports.SourceModule = SourceModule;\r\nvar SourceExpression = (function () {\r\n    function SourceExpression(declarations, expression) {\r\n        this.declarations = declarations;\r\n        this.expression = expression;\r\n    }\r\n    return SourceExpression;\r\n})();\r\nexports.SourceExpression = SourceExpression;\r\nvar SourceExpressions = (function () {\r\n    function SourceExpressions(declarations, expressions) {\r\n        this.declarations = declarations;\r\n        this.expressions = expressions;\r\n    }\r\n    return SourceExpressions;\r\n})();\r\nexports.SourceExpressions = SourceExpressions;\r\n/**\r\n * Represents generated source code with imports. Internal to the Angular compiler.\r\n */\r\nvar SourceWithImports = (function () {\r\n    function SourceWithImports(source, imports) {\r\n        this.source = source;\r\n        this.imports = imports;\r\n    }\r\n    return SourceWithImports;\r\n})();\r\nexports.SourceWithImports = SourceWithImports;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic291cmNlX21vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImFuZ3VsYXIyL3NyYy9jb21waWxlci9zb3VyY2VfbW9kdWxlLnRzIl0sIm5hbWVzIjpbIm1vZHVsZVJlZiIsIlNvdXJjZU1vZHVsZSIsIlNvdXJjZU1vZHVsZS5jb25zdHJ1Y3RvciIsIlNvdXJjZU1vZHVsZS5nZXRTb3VyY2VXaXRob3V0SW1wb3J0cyIsIlNvdXJjZU1vZHVsZS5nZXRTb3VyY2VXaXRoSW1wb3J0cyIsIlNvdXJjZUV4cHJlc3Npb24iLCJTb3VyY2VFeHByZXNzaW9uLmNvbnN0cnVjdG9yIiwiU291cmNlRXhwcmVzc2lvbnMiLCJTb3VyY2VFeHByZXNzaW9ucy5jb25zdHJ1Y3RvciIsIlNvdXJjZVdpdGhJbXBvcnRzIiwiU291cmNlV2l0aEltcG9ydHMuY29uc3RydWN0b3IiXSwibWFwcGluZ3MiOiJBQUFBLHFCQUFxQywwQkFBMEIsQ0FBQyxDQUFBO0FBRWhFLElBQUksYUFBYSxHQUFHLHNCQUFzQixDQUFDO0FBRTNDLG1CQUEwQixTQUFTO0lBQ2pDQSxNQUFNQSxDQUFDQSxhQUFXQSxTQUFTQSxNQUFHQSxDQUFDQTtBQUNqQ0EsQ0FBQ0E7QUFGZSxpQkFBUyxZQUV4QixDQUFBO0FBRUQ7O0dBRUc7QUFDSDtJQUtFQyxzQkFBbUJBLFNBQWlCQSxFQUFTQSxvQkFBNEJBO1FBQXREQyxjQUFTQSxHQUFUQSxTQUFTQSxDQUFRQTtRQUFTQSx5QkFBb0JBLEdBQXBCQSxvQkFBb0JBLENBQVFBO0lBQUdBLENBQUNBO0lBSnRFRCxvQ0FBdUJBLEdBQTlCQSxVQUErQkEsb0JBQTRCQTtRQUN6REUsTUFBTUEsQ0FBQ0Esb0JBQWFBLENBQUNBLGdCQUFnQkEsQ0FBQ0Esb0JBQW9CQSxFQUFFQSxhQUFhQSxFQUFFQSxVQUFDQSxLQUFLQSxJQUFLQSxPQUFBQSxFQUFFQSxFQUFGQSxDQUFFQSxDQUFDQSxDQUFDQTtJQUM1RkEsQ0FBQ0E7SUFJREYsMkNBQW9CQSxHQUFwQkE7UUFBQUcsaUJBbUJDQTtRQWxCQ0EsSUFBSUEsYUFBYUEsR0FBR0EsRUFBRUEsQ0FBQ0E7UUFDdkJBLElBQUlBLE9BQU9BLEdBQWVBLEVBQUVBLENBQUNBO1FBQzdCQSxJQUFJQSxTQUFTQSxHQUNUQSxvQkFBYUEsQ0FBQ0EsZ0JBQWdCQSxDQUFDQSxJQUFJQSxDQUFDQSxvQkFBb0JBLEVBQUVBLGFBQWFBLEVBQUVBLFVBQUNBLEtBQUtBO1lBQzdFQSxJQUFJQSxTQUFTQSxHQUFHQSxLQUFLQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQTtZQUN6QkEsSUFBSUEsS0FBS0EsR0FBR0EsYUFBYUEsQ0FBQ0EsU0FBU0EsQ0FBQ0EsQ0FBQ0E7WUFDckNBLEVBQUVBLENBQUNBLENBQUNBLGNBQU9BLENBQUNBLEtBQUtBLENBQUNBLENBQUNBLENBQUNBLENBQUNBO2dCQUNuQkEsRUFBRUEsQ0FBQ0EsQ0FBQ0EsU0FBU0EsSUFBSUEsS0FBSUEsQ0FBQ0EsU0FBU0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7b0JBQ2hDQSxLQUFLQSxHQUFHQSxFQUFFQSxDQUFDQTtnQkFDYkEsQ0FBQ0E7Z0JBQUNBLElBQUlBLENBQUNBLENBQUNBO29CQUNOQSxLQUFLQSxHQUFHQSxXQUFTQSxPQUFPQSxDQUFDQSxNQUFRQSxDQUFDQTtvQkFDbENBLE9BQU9BLENBQUNBLElBQUlBLENBQUNBLENBQUNBLFNBQVNBLEVBQUVBLEtBQUtBLENBQUNBLENBQUNBLENBQUNBO2dCQUNuQ0EsQ0FBQ0E7Z0JBQ0RBLGFBQWFBLENBQUNBLFNBQVNBLENBQUNBLEdBQUdBLEtBQUtBLENBQUNBO1lBQ25DQSxDQUFDQTtZQUNEQSxNQUFNQSxDQUFDQSxLQUFLQSxDQUFDQSxNQUFNQSxHQUFHQSxDQUFDQSxHQUFNQSxLQUFLQSxNQUFHQSxHQUFHQSxFQUFFQSxDQUFDQTtRQUM3Q0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7UUFDUEEsTUFBTUEsQ0FBQ0EsSUFBSUEsaUJBQWlCQSxDQUFDQSxTQUFTQSxFQUFFQSxPQUFPQSxDQUFDQSxDQUFDQTtJQUNuREEsQ0FBQ0E7SUFDSEgsbUJBQUNBO0FBQURBLENBQUNBLEFBM0JELElBMkJDO0FBM0JZLG9CQUFZLGVBMkJ4QixDQUFBO0FBRUQ7SUFDRUksMEJBQW1CQSxZQUFzQkEsRUFBU0EsVUFBa0JBO1FBQWpEQyxpQkFBWUEsR0FBWkEsWUFBWUEsQ0FBVUE7UUFBU0EsZUFBVUEsR0FBVkEsVUFBVUEsQ0FBUUE7SUFBR0EsQ0FBQ0E7SUFDMUVELHVCQUFDQTtBQUFEQSxDQUFDQSxBQUZELElBRUM7QUFGWSx3QkFBZ0IsbUJBRTVCLENBQUE7QUFFRDtJQUNFRSwyQkFBbUJBLFlBQXNCQSxFQUFTQSxXQUFxQkE7UUFBcERDLGlCQUFZQSxHQUFaQSxZQUFZQSxDQUFVQTtRQUFTQSxnQkFBV0EsR0FBWEEsV0FBV0EsQ0FBVUE7SUFBR0EsQ0FBQ0E7SUFDN0VELHdCQUFDQTtBQUFEQSxDQUFDQSxBQUZELElBRUM7QUFGWSx5QkFBaUIsb0JBRTdCLENBQUE7QUFFRDs7R0FFRztBQUNIO0lBQ0VFLDJCQUFtQkEsTUFBY0EsRUFBU0EsT0FBbUJBO1FBQTFDQyxXQUFNQSxHQUFOQSxNQUFNQSxDQUFRQTtRQUFTQSxZQUFPQSxHQUFQQSxPQUFPQSxDQUFZQTtJQUFHQSxDQUFDQTtJQUNuRUQsd0JBQUNBO0FBQURBLENBQUNBLEFBRkQsSUFFQztBQUZZLHlCQUFpQixvQkFFN0IsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7U3RyaW5nV3JhcHBlciwgaXNCbGFua30gZnJvbSAnYW5ndWxhcjIvc3JjL2ZhY2FkZS9sYW5nJztcblxudmFyIE1PRFVMRV9SRUdFWFAgPSAvI01PRFVMRVxcWyhbXlxcXV0qKVxcXS9nO1xuXG5leHBvcnQgZnVuY3Rpb24gbW9kdWxlUmVmKG1vZHVsZVVybCk6IHN0cmluZyB7XG4gIHJldHVybiBgI01PRFVMRVske21vZHVsZVVybH1dYDtcbn1cblxuLyoqXG4gKiBSZXByZXNlbnRzIGdlbmVyYXRlZCBzb3VyY2UgY29kZSB3aXRoIG1vZHVsZSByZWZlcmVuY2VzLiBJbnRlcm5hbCB0byB0aGUgQW5ndWxhciBjb21waWxlci5cbiAqL1xuZXhwb3J0IGNsYXNzIFNvdXJjZU1vZHVsZSB7XG4gIHN0YXRpYyBnZXRTb3VyY2VXaXRob3V0SW1wb3J0cyhzb3VyY2VXaXRoTW9kdWxlUmVmczogc3RyaW5nKTogc3RyaW5nIHtcbiAgICByZXR1cm4gU3RyaW5nV3JhcHBlci5yZXBsYWNlQWxsTWFwcGVkKHNvdXJjZVdpdGhNb2R1bGVSZWZzLCBNT0RVTEVfUkVHRVhQLCAobWF0Y2gpID0+ICcnKTtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBtb2R1bGVVcmw6IHN0cmluZywgcHVibGljIHNvdXJjZVdpdGhNb2R1bGVSZWZzOiBzdHJpbmcpIHt9XG5cbiAgZ2V0U291cmNlV2l0aEltcG9ydHMoKTogU291cmNlV2l0aEltcG9ydHMge1xuICAgIHZhciBtb2R1bGVBbGlhc2VzID0ge307XG4gICAgdmFyIGltcG9ydHM6IHN0cmluZ1tdW10gPSBbXTtcbiAgICB2YXIgbmV3U291cmNlID1cbiAgICAgICAgU3RyaW5nV3JhcHBlci5yZXBsYWNlQWxsTWFwcGVkKHRoaXMuc291cmNlV2l0aE1vZHVsZVJlZnMsIE1PRFVMRV9SRUdFWFAsIChtYXRjaCkgPT4ge1xuICAgICAgICAgIHZhciBtb2R1bGVVcmwgPSBtYXRjaFsxXTtcbiAgICAgICAgICB2YXIgYWxpYXMgPSBtb2R1bGVBbGlhc2VzW21vZHVsZVVybF07XG4gICAgICAgICAgaWYgKGlzQmxhbmsoYWxpYXMpKSB7XG4gICAgICAgICAgICBpZiAobW9kdWxlVXJsID09IHRoaXMubW9kdWxlVXJsKSB7XG4gICAgICAgICAgICAgIGFsaWFzID0gJyc7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBhbGlhcyA9IGBpbXBvcnQke2ltcG9ydHMubGVuZ3RofWA7XG4gICAgICAgICAgICAgIGltcG9ydHMucHVzaChbbW9kdWxlVXJsLCBhbGlhc10pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbW9kdWxlQWxpYXNlc1ttb2R1bGVVcmxdID0gYWxpYXM7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiBhbGlhcy5sZW5ndGggPiAwID8gYCR7YWxpYXN9LmAgOiAnJztcbiAgICAgICAgfSk7XG4gICAgcmV0dXJuIG5ldyBTb3VyY2VXaXRoSW1wb3J0cyhuZXdTb3VyY2UsIGltcG9ydHMpO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBTb3VyY2VFeHByZXNzaW9uIHtcbiAgY29uc3RydWN0b3IocHVibGljIGRlY2xhcmF0aW9uczogc3RyaW5nW10sIHB1YmxpYyBleHByZXNzaW9uOiBzdHJpbmcpIHt9XG59XG5cbmV4cG9ydCBjbGFzcyBTb3VyY2VFeHByZXNzaW9ucyB7XG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBkZWNsYXJhdGlvbnM6IHN0cmluZ1tdLCBwdWJsaWMgZXhwcmVzc2lvbnM6IHN0cmluZ1tdKSB7fVxufVxuXG4vKipcbiAqIFJlcHJlc2VudHMgZ2VuZXJhdGVkIHNvdXJjZSBjb2RlIHdpdGggaW1wb3J0cy4gSW50ZXJuYWwgdG8gdGhlIEFuZ3VsYXIgY29tcGlsZXIuXG4gKi9cbmV4cG9ydCBjbGFzcyBTb3VyY2VXaXRoSW1wb3J0cyB7XG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBzb3VyY2U6IHN0cmluZywgcHVibGljIGltcG9ydHM6IHN0cmluZ1tdW10pIHt9XG59XG4iXX0=\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/compiler/source_module.js\n ** module id = 31\n ** module chunks = 1\n **/","'use strict';var lang_1 = require('angular2/src/facade/lang');\r\n/**\r\n * A segment of text within the template.\r\n */\r\nvar TextAst = (function () {\r\n    function TextAst(value, ngContentIndex, sourceSpan) {\r\n        this.value = value;\r\n        this.ngContentIndex = ngContentIndex;\r\n        this.sourceSpan = sourceSpan;\r\n    }\r\n    TextAst.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\r\n    return TextAst;\r\n})();\r\nexports.TextAst = TextAst;\r\n/**\r\n * A bound expression within the text of a template.\r\n */\r\nvar BoundTextAst = (function () {\r\n    function BoundTextAst(value, ngContentIndex, sourceSpan) {\r\n        this.value = value;\r\n        this.ngContentIndex = ngContentIndex;\r\n        this.sourceSpan = sourceSpan;\r\n    }\r\n    BoundTextAst.prototype.visit = function (visitor, context) {\r\n        return visitor.visitBoundText(this, context);\r\n    };\r\n    return BoundTextAst;\r\n})();\r\nexports.BoundTextAst = BoundTextAst;\r\n/**\r\n * A plain attribute on an element.\r\n */\r\nvar AttrAst = (function () {\r\n    function AttrAst(name, value, sourceSpan) {\r\n        this.name = name;\r\n        this.value = value;\r\n        this.sourceSpan = sourceSpan;\r\n    }\r\n    AttrAst.prototype.visit = function (visitor, context) { return visitor.visitAttr(this, context); };\r\n    return AttrAst;\r\n})();\r\nexports.AttrAst = AttrAst;\r\n/**\r\n * A binding for an element property (e.g. `[property]=\"expression\"`).\r\n */\r\nvar BoundElementPropertyAst = (function () {\r\n    function BoundElementPropertyAst(name, type, value, unit, sourceSpan) {\r\n        this.name = name;\r\n        this.type = type;\r\n        this.value = value;\r\n        this.unit = unit;\r\n        this.sourceSpan = sourceSpan;\r\n    }\r\n    BoundElementPropertyAst.prototype.visit = function (visitor, context) {\r\n        return visitor.visitElementProperty(this, context);\r\n    };\r\n    return BoundElementPropertyAst;\r\n})();\r\nexports.BoundElementPropertyAst = BoundElementPropertyAst;\r\n/**\r\n * A binding for an element event (e.g. `(event)=\"handler()\"`).\r\n */\r\nvar BoundEventAst = (function () {\r\n    function BoundEventAst(name, target, handler, sourceSpan) {\r\n        this.name = name;\r\n        this.target = target;\r\n        this.handler = handler;\r\n        this.sourceSpan = sourceSpan;\r\n    }\r\n    BoundEventAst.prototype.visit = function (visitor, context) {\r\n        return visitor.visitEvent(this, context);\r\n    };\r\n    Object.defineProperty(BoundEventAst.prototype, \"fullName\", {\r\n        get: function () {\r\n            if (lang_1.isPresent(this.target)) {\r\n                return this.target + \":\" + this.name;\r\n            }\r\n            else {\r\n                return this.name;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return BoundEventAst;\r\n})();\r\nexports.BoundEventAst = BoundEventAst;\r\n/**\r\n * A variable declaration on an element (e.g. `#var=\"expression\"`).\r\n */\r\nvar VariableAst = (function () {\r\n    function VariableAst(name, value, sourceSpan) {\r\n        this.name = name;\r\n        this.value = value;\r\n        this.sourceSpan = sourceSpan;\r\n    }\r\n    VariableAst.prototype.visit = function (visitor, context) {\r\n        return visitor.visitVariable(this, context);\r\n    };\r\n    return VariableAst;\r\n})();\r\nexports.VariableAst = VariableAst;\r\n/**\r\n * An element declaration in a template.\r\n */\r\nvar ElementAst = (function () {\r\n    function ElementAst(name, attrs, inputs, outputs, exportAsVars, directives, children, ngContentIndex, sourceSpan) {\r\n        this.name = name;\r\n        this.attrs = attrs;\r\n        this.inputs = inputs;\r\n        this.outputs = outputs;\r\n        this.exportAsVars = exportAsVars;\r\n        this.directives = directives;\r\n        this.children = children;\r\n        this.ngContentIndex = ngContentIndex;\r\n        this.sourceSpan = sourceSpan;\r\n    }\r\n    ElementAst.prototype.visit = function (visitor, context) {\r\n        return visitor.visitElement(this, context);\r\n    };\r\n    /**\r\n     * Whether the element has any active bindings (inputs, outputs, vars, or directives).\r\n     */\r\n    ElementAst.prototype.isBound = function () {\r\n        return (this.inputs.length > 0 || this.outputs.length > 0 || this.exportAsVars.length > 0 ||\r\n            this.directives.length > 0);\r\n    };\r\n    /**\r\n     * Get the component associated with this element, if any.\r\n     */\r\n    ElementAst.prototype.getComponent = function () {\r\n        return this.directives.length > 0 && this.directives[0].directive.isComponent ?\r\n            this.directives[0].directive :\r\n            null;\r\n    };\r\n    return ElementAst;\r\n})();\r\nexports.ElementAst = ElementAst;\r\n/**\r\n * A `<template>` element included in an Angular template.\r\n */\r\nvar EmbeddedTemplateAst = (function () {\r\n    function EmbeddedTemplateAst(attrs, outputs, vars, directives, children, ngContentIndex, sourceSpan) {\r\n        this.attrs = attrs;\r\n        this.outputs = outputs;\r\n        this.vars = vars;\r\n        this.directives = directives;\r\n        this.children = children;\r\n        this.ngContentIndex = ngContentIndex;\r\n        this.sourceSpan = sourceSpan;\r\n    }\r\n    EmbeddedTemplateAst.prototype.visit = function (visitor, context) {\r\n        return visitor.visitEmbeddedTemplate(this, context);\r\n    };\r\n    return EmbeddedTemplateAst;\r\n})();\r\nexports.EmbeddedTemplateAst = EmbeddedTemplateAst;\r\n/**\r\n * A directive property with a bound value (e.g. `*ngIf=\"condition\").\r\n */\r\nvar BoundDirectivePropertyAst = (function () {\r\n    function BoundDirectivePropertyAst(directiveName, templateName, value, sourceSpan) {\r\n        this.directiveName = directiveName;\r\n        this.templateName = templateName;\r\n        this.value = value;\r\n        this.sourceSpan = sourceSpan;\r\n    }\r\n    BoundDirectivePropertyAst.prototype.visit = function (visitor, context) {\r\n        return visitor.visitDirectiveProperty(this, context);\r\n    };\r\n    return BoundDirectivePropertyAst;\r\n})();\r\nexports.BoundDirectivePropertyAst = BoundDirectivePropertyAst;\r\n/**\r\n * A directive declared on an element.\r\n */\r\nvar DirectiveAst = (function () {\r\n    function DirectiveAst(directive, inputs, hostProperties, hostEvents, exportAsVars, sourceSpan) {\r\n        this.directive = directive;\r\n        this.inputs = inputs;\r\n        this.hostProperties = hostProperties;\r\n        this.hostEvents = hostEvents;\r\n        this.exportAsVars = exportAsVars;\r\n        this.sourceSpan = sourceSpan;\r\n    }\r\n    DirectiveAst.prototype.visit = function (visitor, context) {\r\n        return visitor.visitDirective(this, context);\r\n    };\r\n    return DirectiveAst;\r\n})();\r\nexports.DirectiveAst = DirectiveAst;\r\n/**\r\n * Position where content is to be projected (instance of `<ng-content>` in a template).\r\n */\r\nvar NgContentAst = (function () {\r\n    function NgContentAst(index, ngContentIndex, sourceSpan) {\r\n        this.index = index;\r\n        this.ngContentIndex = ngContentIndex;\r\n        this.sourceSpan = sourceSpan;\r\n    }\r\n    NgContentAst.prototype.visit = function (visitor, context) {\r\n        return visitor.visitNgContent(this, context);\r\n    };\r\n    return NgContentAst;\r\n})();\r\nexports.NgContentAst = NgContentAst;\r\n/**\r\n * Enumeration of types of property bindings.\r\n */\r\n(function (PropertyBindingType) {\r\n    /**\r\n     * A normal binding to a property (e.g. `[property]=\"expression\"`).\r\n     */\r\n    PropertyBindingType[PropertyBindingType[\"Property\"] = 0] = \"Property\";\r\n    /**\r\n     * A binding to an element attribute (e.g. `[attr.name]=\"expression\"`).\r\n     */\r\n    PropertyBindingType[PropertyBindingType[\"Attribute\"] = 1] = \"Attribute\";\r\n    /**\r\n     * A binding to a CSS class (e.g. `[class.name]=\"condition\"`).\r\n     */\r\n    PropertyBindingType[PropertyBindingType[\"Class\"] = 2] = \"Class\";\r\n    /**\r\n     * A binding to a style rule (e.g. `[style.rule]=\"expression\"`).\r\n     */\r\n    PropertyBindingType[PropertyBindingType[\"Style\"] = 3] = \"Style\";\r\n})(exports.PropertyBindingType || (exports.PropertyBindingType = {}));\r\nvar PropertyBindingType = exports.PropertyBindingType;\r\n/**\r\n * Visit every node in a list of {@link TemplateAst}s with the given {@link TemplateAstVisitor}.\r\n */\r\nfunction templateVisitAll(visitor, asts, context) {\r\n    if (context === void 0) { context = null; }\r\n    var result = [];\r\n    asts.forEach(function (ast) {\r\n        var astResult = ast.visit(visitor, context);\r\n        if (lang_1.isPresent(astResult)) {\r\n            result.push(astResult);\r\n        }\r\n    });\r\n    return result;\r\n}\r\nexports.templateVisitAll = templateVisitAll;\r\n//# sourceMappingURL=data:application/json;base64,\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/compiler/template_ast.js\n ** module id = 32\n ** module chunks = 1\n **/","'use strict';var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar lang_1 = require('angular2/src/facade/lang');\r\nvar exceptions_1 = require('angular2/src/facade/exceptions');\r\nvar di_1 = require('angular2/src/core/di');\r\nvar ng_zone_1 = require('angular2/src/core/zone/ng_zone');\r\nvar collection_1 = require('angular2/src/facade/collection');\r\nexports.EVENT_MANAGER_PLUGINS = lang_1.CONST_EXPR(new di_1.OpaqueToken(\"EventManagerPlugins\"));\r\nvar EventManager = (function () {\r\n    function EventManager(plugins, _zone) {\r\n        var _this = this;\r\n        this._zone = _zone;\r\n        plugins.forEach(function (p) { return p.manager = _this; });\r\n        this._plugins = collection_1.ListWrapper.reversed(plugins);\r\n    }\r\n    EventManager.prototype.addEventListener = function (element, eventName, handler) {\r\n        var plugin = this._findPluginFor(eventName);\r\n        return plugin.addEventListener(element, eventName, handler);\r\n    };\r\n    EventManager.prototype.addGlobalEventListener = function (target, eventName, handler) {\r\n        var plugin = this._findPluginFor(eventName);\r\n        return plugin.addGlobalEventListener(target, eventName, handler);\r\n    };\r\n    EventManager.prototype.getZone = function () { return this._zone; };\r\n    /** @internal */\r\n    EventManager.prototype._findPluginFor = function (eventName) {\r\n        var plugins = this._plugins;\r\n        for (var i = 0; i < plugins.length; i++) {\r\n            var plugin = plugins[i];\r\n            if (plugin.supports(eventName)) {\r\n                return plugin;\r\n            }\r\n        }\r\n        throw new exceptions_1.BaseException(\"No event manager plugin found for event \" + eventName);\r\n    };\r\n    EventManager = __decorate([\r\n        di_1.Injectable(),\r\n        __param(0, di_1.Inject(exports.EVENT_MANAGER_PLUGINS)), \r\n        __metadata('design:paramtypes', [Array, ng_zone_1.NgZone])\r\n    ], EventManager);\r\n    return EventManager;\r\n})();\r\nexports.EventManager = EventManager;\r\nvar EventManagerPlugin = (function () {\r\n    function EventManagerPlugin() {\r\n    }\r\n    // That is equivalent to having supporting $event.target\r\n    EventManagerPlugin.prototype.supports = function (eventName) { return false; };\r\n    EventManagerPlugin.prototype.addEventListener = function (element, eventName, handler) {\r\n        throw \"not implemented\";\r\n    };\r\n    EventManagerPlugin.prototype.addGlobalEventListener = function (element, eventName, handler) {\r\n        throw \"not implemented\";\r\n    };\r\n    return EventManagerPlugin;\r\n})();\r\nexports.EventManagerPlugin = EventManagerPlugin;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXZlbnRfbWFuYWdlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImFuZ3VsYXIyL3NyYy9wbGF0Zm9ybS9kb20vZXZlbnRzL2V2ZW50X21hbmFnZXIudHMiXSwibmFtZXMiOlsiRXZlbnRNYW5hZ2VyIiwiRXZlbnRNYW5hZ2VyLmNvbnN0cnVjdG9yIiwiRXZlbnRNYW5hZ2VyLmFkZEV2ZW50TGlzdGVuZXIiLCJFdmVudE1hbmFnZXIuYWRkR2xvYmFsRXZlbnRMaXN0ZW5lciIsIkV2ZW50TWFuYWdlci5nZXRab25lIiwiRXZlbnRNYW5hZ2VyLl9maW5kUGx1Z2luRm9yIiwiRXZlbnRNYW5hZ2VyUGx1Z2luIiwiRXZlbnRNYW5hZ2VyUGx1Z2luLmNvbnN0cnVjdG9yIiwiRXZlbnRNYW5hZ2VyUGx1Z2luLnN1cHBvcnRzIiwiRXZlbnRNYW5hZ2VyUGx1Z2luLmFkZEV2ZW50TGlzdGVuZXIiLCJFdmVudE1hbmFnZXJQbHVnaW4uYWRkR2xvYmFsRXZlbnRMaXN0ZW5lciJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUEscUJBQXlCLDBCQUEwQixDQUFDLENBQUE7QUFDcEQsMkJBQThDLGdDQUFnQyxDQUFDLENBQUE7QUFDL0UsbUJBQThDLHNCQUFzQixDQUFDLENBQUE7QUFDckUsd0JBQXFCLGdDQUFnQyxDQUFDLENBQUE7QUFDdEQsMkJBQTBCLGdDQUFnQyxDQUFDLENBQUE7QUFFOUMsNkJBQXFCLEdBQzlCLGlCQUFVLENBQUMsSUFBSSxnQkFBVyxDQUFDLHFCQUFxQixDQUFDLENBQUMsQ0FBQztBQUV2RDtJQUlFQSxzQkFBMkNBLE9BQTZCQSxFQUFVQSxLQUFhQTtRQUpqR0MsaUJBZ0NDQTtRQTVCbUZBLFVBQUtBLEdBQUxBLEtBQUtBLENBQVFBO1FBQzdGQSxPQUFPQSxDQUFDQSxPQUFPQSxDQUFDQSxVQUFBQSxDQUFDQSxJQUFJQSxPQUFBQSxDQUFDQSxDQUFDQSxPQUFPQSxHQUFHQSxLQUFJQSxFQUFoQkEsQ0FBZ0JBLENBQUNBLENBQUNBO1FBQ3ZDQSxJQUFJQSxDQUFDQSxRQUFRQSxHQUFHQSx3QkFBV0EsQ0FBQ0EsUUFBUUEsQ0FBQ0EsT0FBT0EsQ0FBQ0EsQ0FBQ0E7SUFDaERBLENBQUNBO0lBRURELHVDQUFnQkEsR0FBaEJBLFVBQWlCQSxPQUFvQkEsRUFBRUEsU0FBaUJBLEVBQUVBLE9BQWlCQTtRQUN6RUUsSUFBSUEsTUFBTUEsR0FBR0EsSUFBSUEsQ0FBQ0EsY0FBY0EsQ0FBQ0EsU0FBU0EsQ0FBQ0EsQ0FBQ0E7UUFDNUNBLE1BQU1BLENBQUNBLE1BQU1BLENBQUNBLGdCQUFnQkEsQ0FBQ0EsT0FBT0EsRUFBRUEsU0FBU0EsRUFBRUEsT0FBT0EsQ0FBQ0EsQ0FBQ0E7SUFDOURBLENBQUNBO0lBRURGLDZDQUFzQkEsR0FBdEJBLFVBQXVCQSxNQUFjQSxFQUFFQSxTQUFpQkEsRUFBRUEsT0FBaUJBO1FBQ3pFRyxJQUFJQSxNQUFNQSxHQUFHQSxJQUFJQSxDQUFDQSxjQUFjQSxDQUFDQSxTQUFTQSxDQUFDQSxDQUFDQTtRQUM1Q0EsTUFBTUEsQ0FBQ0EsTUFBTUEsQ0FBQ0Esc0JBQXNCQSxDQUFDQSxNQUFNQSxFQUFFQSxTQUFTQSxFQUFFQSxPQUFPQSxDQUFDQSxDQUFDQTtJQUNuRUEsQ0FBQ0E7SUFFREgsOEJBQU9BLEdBQVBBLGNBQW9CSSxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQSxLQUFLQSxDQUFDQSxDQUFDQSxDQUFDQTtJQUV4Q0osZ0JBQWdCQTtJQUNoQkEscUNBQWNBLEdBQWRBLFVBQWVBLFNBQWlCQTtRQUM5QkssSUFBSUEsT0FBT0EsR0FBR0EsSUFBSUEsQ0FBQ0EsUUFBUUEsQ0FBQ0E7UUFDNUJBLEdBQUdBLENBQUNBLENBQUNBLEdBQUdBLENBQUNBLENBQUNBLEdBQUdBLENBQUNBLEVBQUVBLENBQUNBLEdBQUdBLE9BQU9BLENBQUNBLE1BQU1BLEVBQUVBLENBQUNBLEVBQUVBLEVBQUVBLENBQUNBO1lBQ3hDQSxJQUFJQSxNQUFNQSxHQUFHQSxPQUFPQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQTtZQUN4QkEsRUFBRUEsQ0FBQ0EsQ0FBQ0EsTUFBTUEsQ0FBQ0EsUUFBUUEsQ0FBQ0EsU0FBU0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7Z0JBQy9CQSxNQUFNQSxDQUFDQSxNQUFNQSxDQUFDQTtZQUNoQkEsQ0FBQ0E7UUFDSEEsQ0FBQ0E7UUFDREEsTUFBTUEsSUFBSUEsMEJBQWFBLENBQUNBLDZDQUEyQ0EsU0FBV0EsQ0FBQ0EsQ0FBQ0E7SUFDbEZBLENBQUNBO0lBL0JITDtRQUFDQSxlQUFVQSxFQUFFQTtRQUlDQSxXQUFDQSxXQUFNQSxDQUFDQSw2QkFBcUJBLENBQUNBLENBQUFBOztxQkE0QjNDQTtJQUFEQSxtQkFBQ0E7QUFBREEsQ0FBQ0EsQUFoQ0QsSUFnQ0M7QUEvQlksb0JBQVksZUErQnhCLENBQUE7QUFFRDtJQUFBTTtJQWFBQyxDQUFDQTtJQVZDRCx3REFBd0RBO0lBQ3hEQSxxQ0FBUUEsR0FBUkEsVUFBU0EsU0FBaUJBLElBQWFFLE1BQU1BLENBQUNBLEtBQUtBLENBQUNBLENBQUNBLENBQUNBO0lBRXRERiw2Q0FBZ0JBLEdBQWhCQSxVQUFpQkEsT0FBb0JBLEVBQUVBLFNBQWlCQSxFQUFFQSxPQUFpQkE7UUFDekVHLE1BQU1BLGlCQUFpQkEsQ0FBQ0E7SUFDMUJBLENBQUNBO0lBRURILG1EQUFzQkEsR0FBdEJBLFVBQXVCQSxPQUFlQSxFQUFFQSxTQUFpQkEsRUFBRUEsT0FBaUJBO1FBQzFFSSxNQUFNQSxpQkFBaUJBLENBQUNBO0lBQzFCQSxDQUFDQTtJQUNISix5QkFBQ0E7QUFBREEsQ0FBQ0EsQUFiRCxJQWFDO0FBYlksMEJBQWtCLHFCQWE5QixDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDT05TVF9FWFBSfSBmcm9tICdhbmd1bGFyMi9zcmMvZmFjYWRlL2xhbmcnO1xuaW1wb3J0IHtCYXNlRXhjZXB0aW9uLCBXcmFwcGVkRXhjZXB0aW9ufSBmcm9tICdhbmd1bGFyMi9zcmMvZmFjYWRlL2V4Y2VwdGlvbnMnO1xuaW1wb3J0IHtJbmplY3RhYmxlLCBJbmplY3QsIE9wYXF1ZVRva2VufSBmcm9tICdhbmd1bGFyMi9zcmMvY29yZS9kaSc7XG5pbXBvcnQge05nWm9uZX0gZnJvbSAnYW5ndWxhcjIvc3JjL2NvcmUvem9uZS9uZ196b25lJztcbmltcG9ydCB7TGlzdFdyYXBwZXJ9IGZyb20gJ2FuZ3VsYXIyL3NyYy9mYWNhZGUvY29sbGVjdGlvbic7XG5cbmV4cG9ydCBjb25zdCBFVkVOVF9NQU5BR0VSX1BMVUdJTlM6IE9wYXF1ZVRva2VuID1cbiAgICBDT05TVF9FWFBSKG5ldyBPcGFxdWVUb2tlbihcIkV2ZW50TWFuYWdlclBsdWdpbnNcIikpO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgRXZlbnRNYW5hZ2VyIHtcbiAgcHJpdmF0ZSBfcGx1Z2luczogRXZlbnRNYW5hZ2VyUGx1Z2luW107XG5cbiAgY29uc3RydWN0b3IoQEluamVjdChFVkVOVF9NQU5BR0VSX1BMVUdJTlMpIHBsdWdpbnM6IEV2ZW50TWFuYWdlclBsdWdpbltdLCBwcml2YXRlIF96b25lOiBOZ1pvbmUpIHtcbiAgICBwbHVnaW5zLmZvckVhY2gocCA9PiBwLm1hbmFnZXIgPSB0aGlzKTtcbiAgICB0aGlzLl9wbHVnaW5zID0gTGlzdFdyYXBwZXIucmV2ZXJzZWQocGx1Z2lucyk7XG4gIH1cblxuICBhZGRFdmVudExpc3RlbmVyKGVsZW1lbnQ6IEhUTUxFbGVtZW50LCBldmVudE5hbWU6IHN0cmluZywgaGFuZGxlcjogRnVuY3Rpb24pOiBGdW5jdGlvbiB7XG4gICAgdmFyIHBsdWdpbiA9IHRoaXMuX2ZpbmRQbHVnaW5Gb3IoZXZlbnROYW1lKTtcbiAgICByZXR1cm4gcGx1Z2luLmFkZEV2ZW50TGlzdGVuZXIoZWxlbWVudCwgZXZlbnROYW1lLCBoYW5kbGVyKTtcbiAgfVxuXG4gIGFkZEdsb2JhbEV2ZW50TGlzdGVuZXIodGFyZ2V0OiBzdHJpbmcsIGV2ZW50TmFtZTogc3RyaW5nLCBoYW5kbGVyOiBGdW5jdGlvbik6IEZ1bmN0aW9uIHtcbiAgICB2YXIgcGx1Z2luID0gdGhpcy5fZmluZFBsdWdpbkZvcihldmVudE5hbWUpO1xuICAgIHJldHVybiBwbHVnaW4uYWRkR2xvYmFsRXZlbnRMaXN0ZW5lcih0YXJnZXQsIGV2ZW50TmFtZSwgaGFuZGxlcik7XG4gIH1cblxuICBnZXRab25lKCk6IE5nWm9uZSB7IHJldHVybiB0aGlzLl96b25lOyB9XG5cbiAgLyoqIEBpbnRlcm5hbCAqL1xuICBfZmluZFBsdWdpbkZvcihldmVudE5hbWU6IHN0cmluZyk6IEV2ZW50TWFuYWdlclBsdWdpbiB7XG4gICAgdmFyIHBsdWdpbnMgPSB0aGlzLl9wbHVnaW5zO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcGx1Z2lucy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHBsdWdpbiA9IHBsdWdpbnNbaV07XG4gICAgICBpZiAocGx1Z2luLnN1cHBvcnRzKGV2ZW50TmFtZSkpIHtcbiAgICAgICAgcmV0dXJuIHBsdWdpbjtcbiAgICAgIH1cbiAgICB9XG4gICAgdGhyb3cgbmV3IEJhc2VFeGNlcHRpb24oYE5vIGV2ZW50IG1hbmFnZXIgcGx1Z2luIGZvdW5kIGZvciBldmVudCAke2V2ZW50TmFtZX1gKTtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgRXZlbnRNYW5hZ2VyUGx1Z2luIHtcbiAgbWFuYWdlcjogRXZlbnRNYW5hZ2VyO1xuXG4gIC8vIFRoYXQgaXMgZXF1aXZhbGVudCB0byBoYXZpbmcgc3VwcG9ydGluZyAkZXZlbnQudGFyZ2V0XG4gIHN1cHBvcnRzKGV2ZW50TmFtZTogc3RyaW5nKTogYm9vbGVhbiB7IHJldHVybiBmYWxzZTsgfVxuXG4gIGFkZEV2ZW50TGlzdGVuZXIoZWxlbWVudDogSFRNTEVsZW1lbnQsIGV2ZW50TmFtZTogc3RyaW5nLCBoYW5kbGVyOiBGdW5jdGlvbik6IEZ1bmN0aW9uIHtcbiAgICB0aHJvdyBcIm5vdCBpbXBsZW1lbnRlZFwiO1xuICB9XG5cbiAgYWRkR2xvYmFsRXZlbnRMaXN0ZW5lcihlbGVtZW50OiBzdHJpbmcsIGV2ZW50TmFtZTogc3RyaW5nLCBoYW5kbGVyOiBGdW5jdGlvbik6IEZ1bmN0aW9uIHtcbiAgICB0aHJvdyBcIm5vdCBpbXBsZW1lbnRlZFwiO1xuICB9XG59Il19\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/platform/dom/events/event_manager.js\n ** module id = 36\n ** module chunks = 1\n **/","'use strict';var lang_1 = require('angular2/src/facade/lang');\r\n// see http://www.w3.org/TR/html51/syntax.html#named-character-references\r\n// see https://html.spec.whatwg.org/multipage/entities.json\r\n// This list is not exhaustive to keep the compiler footprint low.\r\n// The `&#123;` / `&#x1ab;` syntax should be used when the named character reference does not exist.\r\nexports.NAMED_ENTITIES = lang_1.CONST_EXPR({\r\n    'Aacute': '\\u00C1',\r\n    'aacute': '\\u00E1',\r\n    'Acirc': '\\u00C2',\r\n    'acirc': '\\u00E2',\r\n    'acute': '\\u00B4',\r\n    'AElig': '\\u00C6',\r\n    'aelig': '\\u00E6',\r\n    'Agrave': '\\u00C0',\r\n    'agrave': '\\u00E0',\r\n    'alefsym': '\\u2135',\r\n    'Alpha': '\\u0391',\r\n    'alpha': '\\u03B1',\r\n    'amp': '&',\r\n    'and': '\\u2227',\r\n    'ang': '\\u2220',\r\n    'apos': '\\u0027',\r\n    'Aring': '\\u00C5',\r\n    'aring': '\\u00E5',\r\n    'asymp': '\\u2248',\r\n    'Atilde': '\\u00C3',\r\n    'atilde': '\\u00E3',\r\n    'Auml': '\\u00C4',\r\n    'auml': '\\u00E4',\r\n    'bdquo': '\\u201E',\r\n    'Beta': '\\u0392',\r\n    'beta': '\\u03B2',\r\n    'brvbar': '\\u00A6',\r\n    'bull': '\\u2022',\r\n    'cap': '\\u2229',\r\n    'Ccedil': '\\u00C7',\r\n    'ccedil': '\\u00E7',\r\n    'cedil': '\\u00B8',\r\n    'cent': '\\u00A2',\r\n    'Chi': '\\u03A7',\r\n    'chi': '\\u03C7',\r\n    'circ': '\\u02C6',\r\n    'clubs': '\\u2663',\r\n    'cong': '\\u2245',\r\n    'copy': '\\u00A9',\r\n    'crarr': '\\u21B5',\r\n    'cup': '\\u222A',\r\n    'curren': '\\u00A4',\r\n    'dagger': '\\u2020',\r\n    'Dagger': '\\u2021',\r\n    'darr': '\\u2193',\r\n    'dArr': '\\u21D3',\r\n    'deg': '\\u00B0',\r\n    'Delta': '\\u0394',\r\n    'delta': '\\u03B4',\r\n    'diams': '\\u2666',\r\n    'divide': '\\u00F7',\r\n    'Eacute': '\\u00C9',\r\n    'eacute': '\\u00E9',\r\n    'Ecirc': '\\u00CA',\r\n    'ecirc': '\\u00EA',\r\n    'Egrave': '\\u00C8',\r\n    'egrave': '\\u00E8',\r\n    'empty': '\\u2205',\r\n    'emsp': '\\u2003',\r\n    'ensp': '\\u2002',\r\n    'Epsilon': '\\u0395',\r\n    'epsilon': '\\u03B5',\r\n    'equiv': '\\u2261',\r\n    'Eta': '\\u0397',\r\n    'eta': '\\u03B7',\r\n    'ETH': '\\u00D0',\r\n    'eth': '\\u00F0',\r\n    'Euml': '\\u00CB',\r\n    'euml': '\\u00EB',\r\n    'euro': '\\u20AC',\r\n    'exist': '\\u2203',\r\n    'fnof': '\\u0192',\r\n    'forall': '\\u2200',\r\n    'frac12': '\\u00BD',\r\n    'frac14': '\\u00BC',\r\n    'frac34': '\\u00BE',\r\n    'frasl': '\\u2044',\r\n    'Gamma': '\\u0393',\r\n    'gamma': '\\u03B3',\r\n    'ge': '\\u2265',\r\n    'gt': '>',\r\n    'harr': '\\u2194',\r\n    'hArr': '\\u21D4',\r\n    'hearts': '\\u2665',\r\n    'hellip': '\\u2026',\r\n    'Iacute': '\\u00CD',\r\n    'iacute': '\\u00ED',\r\n    'Icirc': '\\u00CE',\r\n    'icirc': '\\u00EE',\r\n    'iexcl': '\\u00A1',\r\n    'Igrave': '\\u00CC',\r\n    'igrave': '\\u00EC',\r\n    'image': '\\u2111',\r\n    'infin': '\\u221E',\r\n    'int': '\\u222B',\r\n    'Iota': '\\u0399',\r\n    'iota': '\\u03B9',\r\n    'iquest': '\\u00BF',\r\n    'isin': '\\u2208',\r\n    'Iuml': '\\u00CF',\r\n    'iuml': '\\u00EF',\r\n    'Kappa': '\\u039A',\r\n    'kappa': '\\u03BA',\r\n    'Lambda': '\\u039B',\r\n    'lambda': '\\u03BB',\r\n    'lang': '\\u27E8',\r\n    'laquo': '\\u00AB',\r\n    'larr': '\\u2190',\r\n    'lArr': '\\u21D0',\r\n    'lceil': '\\u2308',\r\n    'ldquo': '\\u201C',\r\n    'le': '\\u2264',\r\n    'lfloor': '\\u230A',\r\n    'lowast': '\\u2217',\r\n    'loz': '\\u25CA',\r\n    'lrm': '\\u200E',\r\n    'lsaquo': '\\u2039',\r\n    'lsquo': '\\u2018',\r\n    'lt': '<',\r\n    'macr': '\\u00AF',\r\n    'mdash': '\\u2014',\r\n    'micro': '\\u00B5',\r\n    'middot': '\\u00B7',\r\n    'minus': '\\u2212',\r\n    'Mu': '\\u039C',\r\n    'mu': '\\u03BC',\r\n    'nabla': '\\u2207',\r\n    'nbsp': '\\u00A0',\r\n    'ndash': '\\u2013',\r\n    'ne': '\\u2260',\r\n    'ni': '\\u220B',\r\n    'not': '\\u00AC',\r\n    'notin': '\\u2209',\r\n    'nsub': '\\u2284',\r\n    'Ntilde': '\\u00D1',\r\n    'ntilde': '\\u00F1',\r\n    'Nu': '\\u039D',\r\n    'nu': '\\u03BD',\r\n    'Oacute': '\\u00D3',\r\n    'oacute': '\\u00F3',\r\n    'Ocirc': '\\u00D4',\r\n    'ocirc': '\\u00F4',\r\n    'OElig': '\\u0152',\r\n    'oelig': '\\u0153',\r\n    'Ograve': '\\u00D2',\r\n    'ograve': '\\u00F2',\r\n    'oline': '\\u203E',\r\n    'Omega': '\\u03A9',\r\n    'omega': '\\u03C9',\r\n    'Omicron': '\\u039F',\r\n    'omicron': '\\u03BF',\r\n    'oplus': '\\u2295',\r\n    'or': '\\u2228',\r\n    'ordf': '\\u00AA',\r\n    'ordm': '\\u00BA',\r\n    'Oslash': '\\u00D8',\r\n    'oslash': '\\u00F8',\r\n    'Otilde': '\\u00D5',\r\n    'otilde': '\\u00F5',\r\n    'otimes': '\\u2297',\r\n    'Ouml': '\\u00D6',\r\n    'ouml': '\\u00F6',\r\n    'para': '\\u00B6',\r\n    'permil': '\\u2030',\r\n    'perp': '\\u22A5',\r\n    'Phi': '\\u03A6',\r\n    'phi': '\\u03C6',\r\n    'Pi': '\\u03A0',\r\n    'pi': '\\u03C0',\r\n    'piv': '\\u03D6',\r\n    'plusmn': '\\u00B1',\r\n    'pound': '\\u00A3',\r\n    'prime': '\\u2032',\r\n    'Prime': '\\u2033',\r\n    'prod': '\\u220F',\r\n    'prop': '\\u221D',\r\n    'Psi': '\\u03A8',\r\n    'psi': '\\u03C8',\r\n    'quot': '\\u0022',\r\n    'radic': '\\u221A',\r\n    'rang': '\\u27E9',\r\n    'raquo': '\\u00BB',\r\n    'rarr': '\\u2192',\r\n    'rArr': '\\u21D2',\r\n    'rceil': '\\u2309',\r\n    'rdquo': '\\u201D',\r\n    'real': '\\u211C',\r\n    'reg': '\\u00AE',\r\n    'rfloor': '\\u230B',\r\n    'Rho': '\\u03A1',\r\n    'rho': '\\u03C1',\r\n    'rlm': '\\u200F',\r\n    'rsaquo': '\\u203A',\r\n    'rsquo': '\\u2019',\r\n    'sbquo': '\\u201A',\r\n    'Scaron': '\\u0160',\r\n    'scaron': '\\u0161',\r\n    'sdot': '\\u22C5',\r\n    'sect': '\\u00A7',\r\n    'shy': '\\u00AD',\r\n    'Sigma': '\\u03A3',\r\n    'sigma': '\\u03C3',\r\n    'sigmaf': '\\u03C2',\r\n    'sim': '\\u223C',\r\n    'spades': '\\u2660',\r\n    'sub': '\\u2282',\r\n    'sube': '\\u2286',\r\n    'sum': '\\u2211',\r\n    'sup': '\\u2283',\r\n    'sup1': '\\u00B9',\r\n    'sup2': '\\u00B2',\r\n    'sup3': '\\u00B3',\r\n    'supe': '\\u2287',\r\n    'szlig': '\\u00DF',\r\n    'Tau': '\\u03A4',\r\n    'tau': '\\u03C4',\r\n    'there4': '\\u2234',\r\n    'Theta': '\\u0398',\r\n    'theta': '\\u03B8',\r\n    'thetasym': '\\u03D1',\r\n    'thinsp': '\\u2009',\r\n    'THORN': '\\u00DE',\r\n    'thorn': '\\u00FE',\r\n    'tilde': '\\u02DC',\r\n    'times': '\\u00D7',\r\n    'trade': '\\u2122',\r\n    'Uacute': '\\u00DA',\r\n    'uacute': '\\u00FA',\r\n    'uarr': '\\u2191',\r\n    'uArr': '\\u21D1',\r\n    'Ucirc': '\\u00DB',\r\n    'ucirc': '\\u00FB',\r\n    'Ugrave': '\\u00D9',\r\n    'ugrave': '\\u00F9',\r\n    'uml': '\\u00A8',\r\n    'upsih': '\\u03D2',\r\n    'Upsilon': '\\u03A5',\r\n    'upsilon': '\\u03C5',\r\n    'Uuml': '\\u00DC',\r\n    'uuml': '\\u00FC',\r\n    'weierp': '\\u2118',\r\n    'Xi': '\\u039E',\r\n    'xi': '\\u03BE',\r\n    'Yacute': '\\u00DD',\r\n    'yacute': '\\u00FD',\r\n    'yen': '\\u00A5',\r\n    'yuml': '\\u00FF',\r\n    'Yuml': '\\u0178',\r\n    'Zeta': '\\u0396',\r\n    'zeta': '\\u03B6',\r\n    'zwj': '\\u200D',\r\n    'zwnj': '\\u200C',\r\n});\r\n(function (HtmlTagContentType) {\r\n    HtmlTagContentType[HtmlTagContentType[\"RAW_TEXT\"] = 0] = \"RAW_TEXT\";\r\n    HtmlTagContentType[HtmlTagContentType[\"ESCAPABLE_RAW_TEXT\"] = 1] = \"ESCAPABLE_RAW_TEXT\";\r\n    HtmlTagContentType[HtmlTagContentType[\"PARSABLE_DATA\"] = 2] = \"PARSABLE_DATA\";\r\n})(exports.HtmlTagContentType || (exports.HtmlTagContentType = {}));\r\nvar HtmlTagContentType = exports.HtmlTagContentType;\r\nvar HtmlTagDefinition = (function () {\r\n    function HtmlTagDefinition(_a) {\r\n        var _this = this;\r\n        var _b = _a === void 0 ? {} : _a, closedByChildren = _b.closedByChildren, requiredParents = _b.requiredParents, implicitNamespacePrefix = _b.implicitNamespacePrefix, contentType = _b.contentType, closedByParent = _b.closedByParent, isVoid = _b.isVoid, ignoreFirstLf = _b.ignoreFirstLf;\r\n        this.closedByChildren = {};\r\n        this.closedByParent = false;\r\n        if (lang_1.isPresent(closedByChildren) && closedByChildren.length > 0) {\r\n            closedByChildren.forEach(function (tagName) { return _this.closedByChildren[tagName] = true; });\r\n        }\r\n        this.isVoid = lang_1.normalizeBool(isVoid);\r\n        this.closedByParent = lang_1.normalizeBool(closedByParent) || this.isVoid;\r\n        if (lang_1.isPresent(requiredParents) && requiredParents.length > 0) {\r\n            this.requiredParents = {};\r\n            this.parentToAdd = requiredParents[0];\r\n            requiredParents.forEach(function (tagName) { return _this.requiredParents[tagName] = true; });\r\n        }\r\n        this.implicitNamespacePrefix = implicitNamespacePrefix;\r\n        this.contentType = lang_1.isPresent(contentType) ? contentType : HtmlTagContentType.PARSABLE_DATA;\r\n        this.ignoreFirstLf = lang_1.normalizeBool(ignoreFirstLf);\r\n    }\r\n    HtmlTagDefinition.prototype.requireExtraParent = function (currentParent) {\r\n        if (lang_1.isBlank(this.requiredParents)) {\r\n            return false;\r\n        }\r\n        if (lang_1.isBlank(currentParent)) {\r\n            return true;\r\n        }\r\n        var lcParent = currentParent.toLowerCase();\r\n        return this.requiredParents[lcParent] != true && lcParent != 'template';\r\n    };\r\n    HtmlTagDefinition.prototype.isClosedByChild = function (name) {\r\n        return this.isVoid || lang_1.normalizeBool(this.closedByChildren[name.toLowerCase()]);\r\n    };\r\n    return HtmlTagDefinition;\r\n})();\r\nexports.HtmlTagDefinition = HtmlTagDefinition;\r\n// see http://www.w3.org/TR/html51/syntax.html#optional-tags\r\n// This implementation does not fully conform to the HTML5 spec.\r\nvar TAG_DEFINITIONS = {\r\n    'area': new HtmlTagDefinition({ isVoid: true }),\r\n    'embed': new HtmlTagDefinition({ isVoid: true }),\r\n    'link': new HtmlTagDefinition({ isVoid: true }),\r\n    'img': new HtmlTagDefinition({ isVoid: true }),\r\n    'input': new HtmlTagDefinition({ isVoid: true }),\r\n    'param': new HtmlTagDefinition({ isVoid: true }),\r\n    'hr': new HtmlTagDefinition({ isVoid: true }),\r\n    'br': new HtmlTagDefinition({ isVoid: true }),\r\n    'source': new HtmlTagDefinition({ isVoid: true }),\r\n    'track': new HtmlTagDefinition({ isVoid: true }),\r\n    'wbr': new HtmlTagDefinition({ isVoid: true }),\r\n    'p': new HtmlTagDefinition({\r\n        closedByChildren: [\r\n            'address',\r\n            'article',\r\n            'aside',\r\n            'blockquote',\r\n            'div',\r\n            'dl',\r\n            'fieldset',\r\n            'footer',\r\n            'form',\r\n            'h1',\r\n            'h2',\r\n            'h3',\r\n            'h4',\r\n            'h5',\r\n            'h6',\r\n            'header',\r\n            'hgroup',\r\n            'hr',\r\n            'main',\r\n            'nav',\r\n            'ol',\r\n            'p',\r\n            'pre',\r\n            'section',\r\n            'table',\r\n            'ul'\r\n        ],\r\n        closedByParent: true\r\n    }),\r\n    'thead': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'] }),\r\n    'tbody': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'], closedByParent: true }),\r\n    'tfoot': new HtmlTagDefinition({ closedByChildren: ['tbody'], closedByParent: true }),\r\n    'tr': new HtmlTagDefinition({\r\n        closedByChildren: ['tr'],\r\n        requiredParents: ['tbody', 'tfoot', 'thead'],\r\n        closedByParent: true\r\n    }),\r\n    'td': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\r\n    'th': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\r\n    'col': new HtmlTagDefinition({ requiredParents: ['colgroup'], isVoid: true }),\r\n    'svg': new HtmlTagDefinition({ implicitNamespacePrefix: 'svg' }),\r\n    'math': new HtmlTagDefinition({ implicitNamespacePrefix: 'math' }),\r\n    'li': new HtmlTagDefinition({ closedByChildren: ['li'], closedByParent: true }),\r\n    'dt': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'] }),\r\n    'dd': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'], closedByParent: true }),\r\n    'rb': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\r\n    'rt': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\r\n    'rtc': new HtmlTagDefinition({ closedByChildren: ['rb', 'rtc', 'rp'], closedByParent: true }),\r\n    'rp': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\r\n    'optgroup': new HtmlTagDefinition({ closedByChildren: ['optgroup'], closedByParent: true }),\r\n    'option': new HtmlTagDefinition({ closedByChildren: ['option', 'optgroup'], closedByParent: true }),\r\n    'pre': new HtmlTagDefinition({ ignoreFirstLf: true }),\r\n    'listing': new HtmlTagDefinition({ ignoreFirstLf: true }),\r\n    'style': new HtmlTagDefinition({ contentType: HtmlTagContentType.RAW_TEXT }),\r\n    'script': new HtmlTagDefinition({ contentType: HtmlTagContentType.RAW_TEXT }),\r\n    'title': new HtmlTagDefinition({ contentType: HtmlTagContentType.ESCAPABLE_RAW_TEXT }),\r\n    'textarea': new HtmlTagDefinition({ contentType: HtmlTagContentType.ESCAPABLE_RAW_TEXT, ignoreFirstLf: true }),\r\n};\r\nvar DEFAULT_TAG_DEFINITION = new HtmlTagDefinition();\r\nfunction getHtmlTagDefinition(tagName) {\r\n    var result = TAG_DEFINITIONS[tagName.toLowerCase()];\r\n    return lang_1.isPresent(result) ? result : DEFAULT_TAG_DEFINITION;\r\n}\r\nexports.getHtmlTagDefinition = getHtmlTagDefinition;\r\nvar NS_PREFIX_RE = /^@([^:]+):(.+)/g;\r\nfunction splitNsName(elementName) {\r\n    if (elementName[0] != '@') {\r\n        return [null, elementName];\r\n    }\r\n    var match = lang_1.RegExpWrapper.firstMatch(NS_PREFIX_RE, elementName);\r\n    return [match[1], match[2]];\r\n}\r\nexports.splitNsName = splitNsName;\r\nfunction getNsPrefix(elementName) {\r\n    return splitNsName(elementName)[0];\r\n}\r\nexports.getNsPrefix = getNsPrefix;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaHRtbF90YWdzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYW5ndWxhcjIvc3JjL2NvbXBpbGVyL2h0bWxfdGFncy50cyJdLCJuYW1lcyI6WyJIdG1sVGFnQ29udGVudFR5cGUiLCJIdG1sVGFnRGVmaW5pdGlvbiIsIkh0bWxUYWdEZWZpbml0aW9uLmNvbnN0cnVjdG9yIiwiSHRtbFRhZ0RlZmluaXRpb24ucmVxdWlyZUV4dHJhUGFyZW50IiwiSHRtbFRhZ0RlZmluaXRpb24uaXNDbG9zZWRCeUNoaWxkIiwiZ2V0SHRtbFRhZ0RlZmluaXRpb24iLCJzcGxpdE5zTmFtZSIsImdldE5zUHJlZml4Il0sIm1hcHBpbmdzIjoiQUFBQSxxQkFNTywwQkFBMEIsQ0FBQyxDQUFBO0FBRWxDLHlFQUF5RTtBQUN6RSwyREFBMkQ7QUFDM0Qsa0VBQWtFO0FBQ2xFLG9HQUFvRztBQUN2RixzQkFBYyxHQUFHLGlCQUFVLENBQUM7SUFDdkMsUUFBUSxFQUFFLFFBQVE7SUFDbEIsUUFBUSxFQUFFLFFBQVE7SUFDbEIsT0FBTyxFQUFFLFFBQVE7SUFDakIsT0FBTyxFQUFFLFFBQVE7SUFDakIsT0FBTyxFQUFFLFFBQVE7SUFDakIsT0FBTyxFQUFFLFFBQVE7SUFDakIsT0FBTyxFQUFFLFFBQVE7SUFDakIsUUFBUSxFQUFFLFFBQVE7SUFDbEIsUUFBUSxFQUFFLFFBQVE7SUFDbEIsU0FBUyxFQUFFLFFBQVE7SUFDbkIsT0FBTyxFQUFFLFFBQVE7SUFDakIsT0FBTyxFQUFFLFFBQVE7SUFDakIsS0FBSyxFQUFFLEdBQUc7SUFDVixLQUFLLEVBQUUsUUFBUTtJQUNmLEtBQUssRUFBRSxRQUFRO0lBQ2YsTUFBTSxFQUFFLFFBQVE7SUFDaEIsT0FBTyxFQUFFLFFBQVE7SUFDakIsT0FBTyxFQUFFLFFBQVE7SUFDakIsT0FBTyxFQUFFLFFBQVE7SUFDakIsUUFBUSxFQUFFLFFBQVE7SUFDbEIsUUFBUSxFQUFFLFFBQVE7SUFDbEIsTUFBTSxFQUFFLFFBQVE7SUFDaEIsTUFBTSxFQUFFLFFBQVE7SUFDaEIsT0FBTyxFQUFFLFFBQVE7SUFDakIsTUFBTSxFQUFFLFFBQVE7SUFDaEIsTUFBTSxFQUFFLFFBQVE7SUFDaEIsUUFBUSxFQUFFLFFBQVE7SUFDbEIsTUFBTSxFQUFFLFFBQVE7SUFDaEIsS0FBSyxFQUFFLFFBQVE7SUFDZixRQUFRLEVBQUUsUUFBUTtJQUNsQixRQUFRLEVBQUUsUUFBUTtJQUNsQixPQUFPLEVBQUUsUUFBUTtJQUNqQixNQUFNLEVBQUUsUUFBUTtJQUNoQixLQUFLLEVBQUUsUUFBUTtJQUNmLEtBQUssRUFBRSxRQUFRO0lBQ2YsTUFBTSxFQUFFLFFBQVE7SUFDaEIsT0FBTyxFQUFFLFFBQVE7SUFDakIsTUFBTSxFQUFFLFFBQVE7SUFDaEIsTUFBTSxFQUFFLFFBQVE7SUFDaEIsT0FBTyxFQUFFLFFBQVE7SUFDakIsS0FBSyxFQUFFLFFBQVE7SUFDZixRQUFRLEVBQUUsUUFBUTtJQUNsQixRQUFRLEVBQUUsUUFBUTtJQUNsQixRQUFRLEVBQUUsUUFBUTtJQUNsQixNQUFNLEVBQUUsUUFBUTtJQUNoQixNQUFNLEVBQUUsUUFBUTtJQUNoQixLQUFLLEVBQUUsUUFBUTtJQUNmLE9BQU8sRUFBRSxRQUFRO0lBQ2pCLE9BQU8sRUFBRSxRQUFRO0lBQ2pCLE9BQU8sRUFBRSxRQUFRO0lBQ2pCLFFBQVEsRUFBRSxRQUFRO0lBQ2xCLFFBQVEsRUFBRSxRQUFRO0lBQ2xCLFFBQVEsRUFBRSxRQUFRO0lBQ2xCLE9BQU8sRUFBRSxRQUFRO0lBQ2pCLE9BQU8sRUFBRSxRQUFRO0lBQ2pCLFFBQVEsRUFBRSxRQUFRO0lBQ2xCLFFBQVEsRUFBRSxRQUFRO0lBQ2xCLE9BQU8sRUFBRSxRQUFRO0lBQ2pCLE1BQU0sRUFBRSxRQUFRO0lBQ2hCLE1BQU0sRUFBRSxRQUFRO0lBQ2hCLFNBQVMsRUFBRSxRQUFRO0lBQ25CLFNBQVMsRUFBRSxRQUFRO0lBQ25CLE9BQU8sRUFBRSxRQUFRO0lBQ2pCLEtBQUssRUFBRSxRQUFRO0lBQ2YsS0FBSyxFQUFFLFFBQVE7SUFDZixLQUFLLEVBQUUsUUFBUTtJQUNmLEtBQUssRUFBRSxRQUFRO0lBQ2YsTUFBTSxFQUFFLFFBQVE7SUFDaEIsTUFBTSxFQUFFLFFBQVE7SUFDaEIsTUFBTSxFQUFFLFFBQVE7SUFDaEIsT0FBTyxFQUFFLFFBQVE7SUFDakIsTUFBTSxFQUFFLFFBQVE7SUFDaEIsUUFBUSxFQUFFLFFBQVE7SUFDbEIsUUFBUSxFQUFFLFFBQVE7SUFDbEIsUUFBUSxFQUFFLFFBQVE7SUFDbEIsUUFBUSxFQUFFLFFBQVE7SUFDbEIsT0FBTyxFQUFFLFFBQVE7SUFDakIsT0FBTyxFQUFFLFFBQVE7SUFDakIsT0FBTyxFQUFFLFFBQVE7SUFDakIsSUFBSSxFQUFFLFFBQVE7SUFDZCxJQUFJLEVBQUUsR0FBRztJQUNULE1BQU0sRUFBRSxRQUFRO0lBQ2hCLE1BQU0sRUFBRSxRQUFRO0lBQ2hCLFFBQVEsRUFBRSxRQUFRO0lBQ2xCLFFBQVEsRUFBRSxRQUFRO0lBQ2xCLFFBQVEsRUFBRSxRQUFRO0lBQ2xCLFFBQVEsRUFBRSxRQUFRO0lBQ2xCLE9BQU8sRUFBRSxRQUFRO0lBQ2pCLE9BQU8sRUFBRSxRQUFRO0lBQ2pCLE9BQU8sRUFBRSxRQUFRO0lBQ2pCLFFBQVEsRUFBRSxRQUFRO0lBQ2xCLFFBQVEsRUFBRSxRQUFRO0lBQ2xCLE9BQU8sRUFBRSxRQUFRO0lBQ2pCLE9BQU8sRUFBRSxRQUFRO0lBQ2pCLEtBQUssRUFBRSxRQUFRO0lBQ2YsTUFBTSxFQUFFLFFBQVE7SUFDaEIsTUFBTSxFQUFFLFFBQVE7SUFDaEIsUUFBUSxFQUFFLFFBQVE7SUFDbEIsTUFBTSxFQUFFLFFBQVE7SUFDaEIsTUFBTSxFQUFFLFFBQVE7SUFDaEIsTUFBTSxFQUFFLFFBQVE7SUFDaEIsT0FBTyxFQUFFLFFBQVE7SUFDakIsT0FBTyxFQUFFLFFBQVE7SUFDakIsUUFBUSxFQUFFLFFBQVE7SUFDbEIsUUFBUSxFQUFFLFFBQVE7SUFDbEIsTUFBTSxFQUFFLFFBQVE7SUFDaEIsT0FBTyxFQUFFLFFBQVE7SUFDakIsTUFBTSxFQUFFLFFBQVE7SUFDaEIsTUFBTSxFQUFFLFFBQVE7SUFDaEIsT0FBTyxFQUFFLFFBQVE7SUFDakIsT0FBTyxFQUFFLFFBQVE7SUFDakIsSUFBSSxFQUFFLFFBQVE7SUFDZCxRQUFRLEVBQUUsUUFBUTtJQUNsQixRQUFRLEVBQUUsUUFBUTtJQUNsQixLQUFLLEVBQUUsUUFBUTtJQUNmLEtBQUssRUFBRSxRQUFRO0lBQ2YsUUFBUSxFQUFFLFFBQVE7SUFDbEIsT0FBTyxFQUFFLFFBQVE7SUFDakIsSUFBSSxFQUFFLEdBQUc7SUFDVCxNQUFNLEVBQUUsUUFBUTtJQUNoQixPQUFPLEVBQUUsUUFBUTtJQUNqQixPQUFPLEVBQUUsUUFBUTtJQUNqQixRQUFRLEVBQUUsUUFBUTtJQUNsQixPQUFPLEVBQUUsUUFBUTtJQUNqQixJQUFJLEVBQUUsUUFBUTtJQUNkLElBQUksRUFBRSxRQUFRO0lBQ2QsT0FBTyxFQUFFLFFBQVE7SUFDakIsTUFBTSxFQUFFLFFBQVE7SUFDaEIsT0FBTyxFQUFFLFFBQVE7SUFDakIsSUFBSSxFQUFFLFFBQVE7SUFDZCxJQUFJLEVBQUUsUUFBUTtJQUNkLEtBQUssRUFBRSxRQUFRO0lBQ2YsT0FBTyxFQUFFLFFBQVE7SUFDakIsTUFBTSxFQUFFLFFBQVE7SUFDaEIsUUFBUSxFQUFFLFFBQVE7SUFDbEIsUUFBUSxFQUFFLFFBQVE7SUFDbEIsSUFBSSxFQUFFLFFBQVE7SUFDZCxJQUFJLEVBQUUsUUFBUTtJQUNkLFFBQVEsRUFBRSxRQUFRO0lBQ2xCLFFBQVEsRUFBRSxRQUFRO0lBQ2xCLE9BQU8sRUFBRSxRQUFRO0lBQ2pCLE9BQU8sRUFBRSxRQUFRO0lBQ2pCLE9BQU8sRUFBRSxRQUFRO0lBQ2pCLE9BQU8sRUFBRSxRQUFRO0lBQ2pCLFFBQVEsRUFBRSxRQUFRO0lBQ2xCLFFBQVEsRUFBRSxRQUFRO0lBQ2xCLE9BQU8sRUFBRSxRQUFRO0lBQ2pCLE9BQU8sRUFBRSxRQUFRO0lBQ2pCLE9BQU8sRUFBRSxRQUFRO0lBQ2pCLFNBQVMsRUFBRSxRQUFRO0lBQ25CLFNBQVMsRUFBRSxRQUFRO0lBQ25CLE9BQU8sRUFBRSxRQUFRO0lBQ2pCLElBQUksRUFBRSxRQUFRO0lBQ2QsTUFBTSxFQUFFLFFBQVE7SUFDaEIsTUFBTSxFQUFFLFFBQVE7SUFDaEIsUUFBUSxFQUFFLFFBQVE7SUFDbEIsUUFBUSxFQUFFLFFBQVE7SUFDbEIsUUFBUSxFQUFFLFFBQVE7SUFDbEIsUUFBUSxFQUFFLFFBQVE7SUFDbEIsUUFBUSxFQUFFLFFBQVE7SUFDbEIsTUFBTSxFQUFFLFFBQVE7SUFDaEIsTUFBTSxFQUFFLFFBQVE7SUFDaEIsTUFBTSxFQUFFLFFBQVE7SUFDaEIsUUFBUSxFQUFFLFFBQVE7SUFDbEIsTUFBTSxFQUFFLFFBQVE7SUFDaEIsS0FBSyxFQUFFLFFBQVE7SUFDZixLQUFLLEVBQUUsUUFBUTtJQUNmLElBQUksRUFBRSxRQUFRO0lBQ2QsSUFBSSxFQUFFLFFBQVE7SUFDZCxLQUFLLEVBQUUsUUFBUTtJQUNmLFFBQVEsRUFBRSxRQUFRO0lBQ2xCLE9BQU8sRUFBRSxRQUFRO0lBQ2pCLE9BQU8sRUFBRSxRQUFRO0lBQ2pCLE9BQU8sRUFBRSxRQUFRO0lBQ2pCLE1BQU0sRUFBRSxRQUFRO0lBQ2hCLE1BQU0sRUFBRSxRQUFRO0lBQ2hCLEtBQUssRUFBRSxRQUFRO0lBQ2YsS0FBSyxFQUFFLFFBQVE7SUFDZixNQUFNLEVBQUUsUUFBUTtJQUNoQixPQUFPLEVBQUUsUUFBUTtJQUNqQixNQUFNLEVBQUUsUUFBUTtJQUNoQixPQUFPLEVBQUUsUUFBUTtJQUNqQixNQUFNLEVBQUUsUUFBUTtJQUNoQixNQUFNLEVBQUUsUUFBUTtJQUNoQixPQUFPLEVBQUUsUUFBUTtJQUNqQixPQUFPLEVBQUUsUUFBUTtJQUNqQixNQUFNLEVBQUUsUUFBUTtJQUNoQixLQUFLLEVBQUUsUUFBUTtJQUNmLFFBQVEsRUFBRSxRQUFRO0lBQ2xCLEtBQUssRUFBRSxRQUFRO0lBQ2YsS0FBSyxFQUFFLFFBQVE7SUFDZixLQUFLLEVBQUUsUUFBUTtJQUNmLFFBQVEsRUFBRSxRQUFRO0lBQ2xCLE9BQU8sRUFBRSxRQUFRO0lBQ2pCLE9BQU8sRUFBRSxRQUFRO0lBQ2pCLFFBQVEsRUFBRSxRQUFRO0lBQ2xCLFFBQVEsRUFBRSxRQUFRO0lBQ2xCLE1BQU0sRUFBRSxRQUFRO0lBQ2hCLE1BQU0sRUFBRSxRQUFRO0lBQ2hCLEtBQUssRUFBRSxRQUFRO0lBQ2YsT0FBTyxFQUFFLFFBQVE7SUFDakIsT0FBTyxFQUFFLFFBQVE7SUFDakIsUUFBUSxFQUFFLFFBQVE7SUFDbEIsS0FBSyxFQUFFLFFBQVE7SUFDZixRQUFRLEVBQUUsUUFBUTtJQUNsQixLQUFLLEVBQUUsUUFBUTtJQUNmLE1BQU0sRUFBRSxRQUFRO0lBQ2hCLEtBQUssRUFBRSxRQUFRO0lBQ2YsS0FBSyxFQUFFLFFBQVE7SUFDZixNQUFNLEVBQUUsUUFBUTtJQUNoQixNQUFNLEVBQUUsUUFBUTtJQUNoQixNQUFNLEVBQUUsUUFBUTtJQUNoQixNQUFNLEVBQUUsUUFBUTtJQUNoQixPQUFPLEVBQUUsUUFBUTtJQUNqQixLQUFLLEVBQUUsUUFBUTtJQUNmLEtBQUssRUFBRSxRQUFRO0lBQ2YsUUFBUSxFQUFFLFFBQVE7SUFDbEIsT0FBTyxFQUFFLFFBQVE7SUFDakIsT0FBTyxFQUFFLFFBQVE7SUFDakIsVUFBVSxFQUFFLFFBQVE7SUFDcEIsUUFBUSxFQUFFLFFBQVE7SUFDbEIsT0FBTyxFQUFFLFFBQVE7SUFDakIsT0FBTyxFQUFFLFFBQVE7SUFDakIsT0FBTyxFQUFFLFFBQVE7SUFDakIsT0FBTyxFQUFFLFFBQVE7SUFDakIsT0FBTyxFQUFFLFFBQVE7SUFDakIsUUFBUSxFQUFFLFFBQVE7SUFDbEIsUUFBUSxFQUFFLFFBQVE7SUFDbEIsTUFBTSxFQUFFLFFBQVE7SUFDaEIsTUFBTSxFQUFFLFFBQVE7SUFDaEIsT0FBTyxFQUFFLFFBQVE7SUFDakIsT0FBTyxFQUFFLFFBQVE7SUFDakIsUUFBUSxFQUFFLFFBQVE7SUFDbEIsUUFBUSxFQUFFLFFBQVE7SUFDbEIsS0FBSyxFQUFFLFFBQVE7SUFDZixPQUFPLEVBQUUsUUFBUTtJQUNqQixTQUFTLEVBQUUsUUFBUTtJQUNuQixTQUFTLEVBQUUsUUFBUTtJQUNuQixNQUFNLEVBQUUsUUFB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QSxDQUFDQTtBQU5lLG1CQUFXLGNBTTFCLENBQUE7QUFFRCxxQkFBNEIsV0FBbUI7SUFDN0NDLE1BQU1BLENBQUNBLFdBQVdBLENBQUNBLFdBQVdBLENBQUNBLENBQUNBLENBQUNBLENBQUNBLENBQUNBO0FBQ3JDQSxDQUFDQTtBQUZlLG1CQUFXLGNBRTFCLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBpc1ByZXNlbnQsXG4gIGlzQmxhbmssXG4gIG5vcm1hbGl6ZUJvb2wsXG4gIFJlZ0V4cFdyYXBwZXIsXG4gIENPTlNUX0VYUFJcbn0gZnJvbSAnYW5ndWxhcjIvc3JjL2ZhY2FkZS9sYW5nJztcblxuLy8gc2VlIGh0dHA6Ly93d3cudzMub3JnL1RSL2h0bWw1MS9zeW50YXguaHRtbCNuYW1lZC1jaGFyYWN0ZXItcmVmZXJlbmNlc1xuLy8gc2VlIGh0dHBzOi8vaHRtbC5zcGVjLndoYXR3Zy5vcmcvbXVsdGlwYWdlL2VudGl0aWVzLmpzb25cbi8vIFRoaXMgbGlzdCBpcyBub3QgZXhoYXVzdGl2ZSB0byBrZWVwIHRoZSBjb21waWxlciBmb290cHJpbnQgbG93LlxuLy8gVGhlIGAmIzEyMztgIC8gYCYjeDFhYjtgIHN5bnRheCBzaG91bGQgYmUgdXNlZCB3aGVuIHRoZSBuYW1lZCBjaGFyYWN0ZXIgcmVmZXJlbmNlIGRvZXMgbm90IGV4aXN0LlxuZXhwb3J0IGNvbnN0IE5BTUVEX0VOVElUSUVTID0gQ09OU1RfRVhQUih7XG4gICdBYWN1dGUnOiAnXFx1MDBDMScsXG4gICdhYWN1dGUnOiAnXFx1MDBFMScsXG4gICdBY2lyYyc6ICdcXHUwMEMyJyxcbiAgJ2FjaXJjJzogJ1xcdTAwRTInLFxuICAnYWN1dGUnOiAnXFx1MDBCNCcsXG4gICdBRWxpZyc6ICdcXHUwMEM2JyxcbiAgJ2FlbGlnJzogJ1xcdTAwRTYnLFxuICAnQWdyYXZlJzogJ1xcdTAwQzAnLFxuICAnYWdyYXZlJzogJ1xcdTAwRTAnLFxuICAnYWxlZnN5bSc6ICdcXHUyMTM1JyxcbiAgJ0FscGhhJzogJ1xcdTAzOTEnLFxuICAnYWxwaGEnOiAnXFx1MDNCMScsXG4gICdhbXAnOiAnJicsXG4gICdhbmQnOiAnXFx1MjIyNycsXG4gICdhbmcnOiAnXFx1MjIyMCcsXG4gICdhcG9zJzogJ1xcdTAwMjcnLFxuICAnQXJpbmcnOiAnXFx1MDBDNScsXG4gICdhcmluZyc6ICdcXHUwMEU1JyxcbiAgJ2FzeW1wJzogJ1xcdTIyNDgnLFxuICAnQXRpbGRlJzogJ1xcdTAwQzMnLFxuICAnYXRpbGRlJzogJ1xcdTAwRTMnLFxuICAnQXVtbCc6ICdcXHUwMEM0JyxcbiAgJ2F1bWwnOiAnXFx1MDBFNCcsXG4gICdiZHF1byc6ICdcXHUyMDFFJyxcbiAgJ0JldGEnOiAnXFx1MDM5MicsXG4gICdiZXRhJzogJ1xcdTAzQjInLFxuICAnYnJ2YmFyJzogJ1xcdTAwQTYnLFxuICAnYnVsbCc6ICdcXHUyMDIyJyxcbiAgJ2NhcCc6ICdcXHUyMjI5JyxcbiAgJ0NjZWRpbCc6ICdcXHUwMEM3JyxcbiAgJ2NjZWRpbCc6ICdcXHUwMEU3JyxcbiAgJ2NlZGlsJzogJ1xcdTAwQjgnLFxuICAnY2VudCc6ICdcXHUwMEEyJyxcbiAgJ0NoaSc6ICdcXHUwM0E3JyxcbiAgJ2NoaSc6ICdcXHUwM0M3JyxcbiAgJ2NpcmMnOiAnXFx1MDJDNicsXG4gICdjbHVicyc6ICdcXHUyNjYzJyxcbiAgJ2NvbmcnOiAnXFx1MjI0NScsXG4gICdjb3B5JzogJ1xcdTAwQTknLFxuICAnY3JhcnInOiAnXFx1MjFCNScsXG4gICdjdXAnOiAnXFx1MjIyQScsXG4gICdjdXJyZW4nOiAnXFx1MDBBNCcsXG4gICdkYWdnZXInOiAnXFx1MjAyMCcsXG4gICdEYWdnZXInOiAnXFx1MjAyMScsXG4gICdkYXJyJzogJ1xcdTIxOTMnLFxuICAnZEFycic6ICdcXHUyMUQzJyxcbiAgJ2RlZyc6ICdcXHUwMEIwJyxcbiAgJ0RlbHRhJzogJ1xcdTAzOTQnLFxuICAnZGVsdGEnOiAnXFx1MDNCNCcsXG4gICdkaWFtcyc6ICdcXHUyNjY2JyxcbiAgJ2RpdmlkZSc6ICdcXHUwMEY3JyxcbiAgJ0VhY3V0ZSc6ICdcXHUwMEM5JyxcbiAgJ2VhY3V0ZSc6ICdcXHUwMEU5JyxcbiAgJ0VjaXJjJzogJ1xcdTAwQ0EnLFxuICAnZWNpcmMnOiAnXFx1MDBFQScsXG4gICdFZ3JhdmUnOiAnXFx1MDBDOCcsXG4gICdlZ3JhdmUnOiAnXFx1MDBFOCcsXG4gICdlbXB0eSc6ICdcXHUyMjA1JyxcbiAgJ2Vtc3AnOiAnXFx1MjAwMycsXG4gICdlbnNwJzogJ1xcdTIwMDInLFxuICAnRXBzaWxvbic6ICdcXHUwMzk1JyxcbiAgJ2Vwc2lsb24nOiAnXFx1MDNCNScsXG4gICdlcXVpdic6ICdcXHUyMjYxJyxcbiAgJ0V0YSc6ICdcXHUwMzk3JyxcbiAgJ2V0YSc6ICdcXHUwM0I3JyxcbiAgJ0VUSCc6ICdcXHUwMEQwJyxcbiAgJ2V0aCc6ICdcXHUwMEYwJyxcbiAgJ0V1bWwnOiAnXFx1MDBDQicsXG4gICdldW1sJzogJ1xcdTAwRUInLFxuICAnZXVybyc6ICdcXHUyMEFDJyxcbiAgJ2V4aXN0JzogJ1xcdTIyMDMnLFxuICAnZm5vZic6ICdcXHUwMTkyJyxcbiAgJ2ZvcmFsbCc6ICdcXHUyMjAwJyxcbiAgJ2ZyYWMxMic6ICdcXHUwMEJEJyxcbiAgJ2ZyYWMxNCc6ICdcXHUwMEJDJyxcbiAgJ2ZyYWMzNCc6ICdcXHUwMEJFJyxcbiAgJ2ZyYXNsJzogJ1xcdTIwNDQnLFxuICAnR2FtbWEnOiAnXFx1MDM5MycsXG4gICdnYW1tYSc6ICdcXHUwM0IzJyxcbiAgJ2dlJzogJ1xcdTIyNjUnLFxuICAnZ3QnOiAnPicsXG4gICdoYXJyJzogJ1xcdTIxOTQnLFxuICAnaEFycic6ICdcXHUyMUQ0JyxcbiAgJ2hlYXJ0cyc6ICdcXHUyNjY1JyxcbiAgJ2hlbGxpcCc6ICdcXHUyMDI2JyxcbiAgJ0lhY3V0ZSc6ICdcXHUwMENEJyxcbiAgJ2lhY3V0ZSc6ICdcXHUwMEVEJyxcbiAgJ0ljaXJjJzogJ1xcdTAwQ0UnLFxuICAnaWNpcmMnOiAnXFx1MDBFRScsXG4gICdpZXhjbCc6ICdcXHUwMEExJyxcbiAgJ0lncmF2ZSc6ICdcXHUwMENDJyxcbiAgJ2lncmF2ZSc6ICdcXHUwMEVDJyxcbiAgJ2ltYWdlJzogJ1xcdTIxMTEnLFxuICAnaW5maW4nOiAnXFx1MjIxRScsXG4gICdpbnQnOiAnXFx1MjIyQicsXG4gICdJb3RhJzogJ1xcdTAzOTknLFxuICAnaW90YSc6ICdcXHUwM0I5JyxcbiAgJ2lxdWVzdCc6ICdcXHUwMEJGJyxcbiAgJ2lzaW4nOiAnXFx1MjIwOCcsXG4gICdJdW1sJzogJ1xcdTAwQ0YnLFxuICAnaXVtbCc6ICdcXHUwMEVGJyxcbiAgJ0thcHBhJzogJ1xcdTAzOUEnLFxuICAna2FwcGEnOiAnXFx1MDNCQScsXG4gICdMYW1iZGEnOiAnXFx1MDM5QicsXG4gICdsYW1iZGEnOiAnXFx1MDNCQicsXG4gICdsYW5nJzogJ1xcdTI3RTgnLFxuICAnbGFxdW8nOiAnXFx1MDBBQicsXG4gICdsYXJyJzogJ1xcdTIxOTAnLFxuICAnbEFycic6ICdcXHUyMUQwJyxcbiAgJ2xjZWlsJzogJ1xcdTIzMDgnLFxuICAnbGRxdW8nOiAnXFx1MjAxQycsXG4gICdsZSc6ICdcXHUyMjY0JyxcbiAgJ2xmbG9vcic6ICdcXHUyMzBBJyxcbiAgJ2xvd2FzdCc6ICdcXHUyMjE3JyxcbiAgJ2xveic6ICdcXHUyNUNBJyxcbiAgJ2xybSc6ICdcXHUyMDBFJyxcbiAgJ2xzYXF1byc6ICdcXHUyMDM5JyxcbiAgJ2xzcXVvJzogJ1xcdTIwMTgnLFxuICAnbHQnOiAnPCcsXG4gICdtYWNyJzogJ1xcdTAwQUYnLFxuICAnbWRhc2gnOiAnXFx1MjAxNCcsXG4gICdtaWNybyc6ICdcXHUwMEI1JyxcbiAgJ21pZGRvdCc6ICdcXHUwMEI3JyxcbiAgJ21pbnVzJzogJ1xcdTIyMTInLFxuICAnTXUnOiAnXFx1MDM5QycsXG4gICdtdSc6ICdcXHUwM0JDJyxcbiAgJ25hYmxhJzogJ1xcdTIyMDcnLFxuICAnbmJzcCc6ICdcXHUwMEEwJyxcbiAgJ25kYXNoJzogJ1xcdTIwMTMnLFxuICAnbmUnOiAnXFx1MjI2MCcsXG4gICduaSc6ICdcXHUyMjBCJyxcbiAgJ25vdCc6ICdcXHUwMEFDJyxcbiAgJ25vdGluJzogJ1xcdTIyMDknLFxuICAnbnN1Yic6ICdcXHUyMjg0JyxcbiAgJ050aWxkZSc6ICdcXHUwMEQxJyxcbiAgJ250aWxkZSc6ICdcXHUwMEYxJyxcbiAgJ051JzogJ1xcdTAzOUQnLFxuICAnbnUnOiAnXFx1MDNCRCcsXG4gICdPYWN1dGUnOiAnXFx1MDBEMycsXG4gICdvYWN1dGUnOiAnXFx1MDBGMycsXG4gICdPY2lyYyc6ICdcXHUwMEQ0JyxcbiAgJ29jaXJjJzogJ1xcdTAwRjQnLFxuICAnT0VsaWcnOiAnXFx1MDE1MicsXG4gICdvZWxpZyc6ICdcXHUwMTUzJyxcbiAgJ09ncmF2ZSc6ICdcXHUwMEQyJyxcbiAgJ29ncmF2ZSc6ICdcXHUwMEYyJyxcbiAgJ29saW5lJzogJ1xcdTIwM0UnLFxuICAnT21lZ2EnOiAnXFx1MDNBOScsXG4gICdvbWVnYSc6ICdcXHUwM0M5JyxcbiAgJ09taWNyb24nOiAnXFx1MDM5RicsXG4gICdvbWljcm9uJzogJ1xcdTAzQkYnLFxuICAnb3BsdXMnOiAnXFx1MjI5NScsXG4gICdvcic6ICdcXHUyMjI4JyxcbiAgJ29yZGYnOiAnXFx1MDBBQScsXG4gICdvcmRtJzogJ1xcdTAwQkEnLFxuICAnT3NsYXNoJzogJ1xcdTAwRDgnLFxuICAnb3NsYXNoJzogJ1xcdTAwRjgnLFxuICAnT3RpbGRlJzogJ1xcdTAwRDUnLFxuICAnb3RpbGRlJzogJ1xcdTAwRjUnLFxuICAnb3RpbWVzJzogJ1xcdTIyOTcnLFxuICAnT3VtbCc6ICdcXHUwMEQ2JyxcbiAgJ291bWwnOiAnXFx1MDBGNicsXG4gICdwYXJhJzogJ1xcdTAwQjYnLFxuICAncGVybWlsJzogJ1xcdTIwMzAnLFxuICAncGVycCc6ICdcXHUyMkE1JyxcbiAgJ1BoaSc6ICdcXHUwM0E2JyxcbiAgJ3BoaSc6ICdcXHUwM0M2JyxcbiAgJ1BpJzogJ1xcdTAzQTAnLFxuICAncGknOiAnXFx1MDNDMCcsXG4gICdwaXYnOiAnXFx1MDNENicsXG4gICdwbHVzbW4nOiAnXFx1MDBCMScsXG4gICdwb3VuZCc6ICdcXHUwMEEzJyxcbiAgJ3ByaW1lJzogJ1xcdTIwMzInLFxuICAnUHJpbWUnOiAnXFx1MjAzMycsXG4gICdwcm9kJzogJ1xcdTIyMEYnLFxuICAncHJvcCc6ICdcXHUyMjFEJyxcbiAgJ1BzaSc6ICdcXHUwM0E4JyxcbiAgJ3BzaSc6ICdcXHUwM0M4JyxcbiAgJ3F1b3QnOiAnXFx1MDAyMicsXG4gICdyYWRpYyc6ICdcXHUyMjFBJyxcbiAgJ3JhbmcnOiAnXFx1MjdFOScsXG4gICdyYXF1byc6ICdcXHUwMEJCJyxcbiAgJ3JhcnInOiAnXFx1MjE5MicsXG4gICdyQXJyJzogJ1xcdTIxRDInLFxuICAncmNlaWwnOiAnXFx1MjMwOScsXG4gICdyZHF1byc6ICdcXHUyMDFEJyxcbiAgJ3JlYWwnOiAnXFx1MjExQycsXG4gICdyZWcnOiAnXFx1MDBBRScsXG4gICdyZmxvb3InOiAnXFx1MjMwQicsXG4gICdSaG8nOiAnXFx1MDNBMScsXG4gICdyaG8nOiAnXFx1MDNDMScsXG4gICdybG0nOiAnXFx1MjAwRicsXG4gICdyc2FxdW8nOiAnXFx1MjAzQScsXG4gICdyc3F1byc6ICdcXHUyMDE5JyxcbiAgJ3NicXVvJzogJ1xcdTIwMUEnLFxuICAnU2Nhcm9uJzogJ1xcdTAxNjAnLFxuICAnc2Nhcm9uJzogJ1xcdTAxNjEnLFxuICAnc2RvdCc6ICdcXHUyMkM1JyxcbiAgJ3NlY3QnOiAnXFx1MDBBNycsXG4gICdzaHknOiAnXFx1MDBBRCcsXG4gICdTaWdtYSc6ICdcXHUwM0EzJyxcbiAgJ3NpZ21hJzogJ1xcdTAzQzMnLFxuICAnc2lnbWFmJzogJ1xcdTAzQzInLFxuICAnc2ltJzogJ1xcdTIyM0MnLFxuICAnc3BhZGVzJzogJ1xcdTI2NjAnLFxuICAnc3ViJzogJ1xcdTIyODInLFxuICAnc3ViZSc6ICdcXHUyMjg2JyxcbiAgJ3N1bSc6ICdcXHUyMjExJyxcbiAgJ3N1cCc6ICdcXHUyMjgzJyxcbiAgJ3N1cDEnOiAnXFx1MDBCOScsXG4gICdzdXAyJzogJ1xcdTAwQjInLFxuICAnc3VwMyc6ICdcXHUwMEIzJyxcbiAgJ3N1cGUnOiAnXFx1MjI4NycsXG4gICdzemxpZyc6ICdcXHUwMERGJyxcbiAgJ1RhdSc6ICdcXHUwM0E0JyxcbiAgJ3RhdSc6ICdcXHUwM0M0JyxcbiAgJ3RoZXJlNCc6ICdcXHUyMjM0JyxcbiAgJ1RoZXRhJzogJ1xcdTAzOTgnLFxuICAndGhldGEnOiAnXFx1MDNCOCcsXG4gICd0aGV0YXN5bSc6ICdcXHUwM0QxJyxcbiAgJ3RoaW5zcCc6ICdcXHUyMDA5JyxcbiAgJ1RIT1JOJzogJ1xcdTAwREUnLFxuICAndGhvcm4nOiAnXFx1MDBGRScsXG4gICd0aWxkZSc6ICdcXHUwMkRDJyxcbiAgJ3RpbWVzJzogJ1xcdTAwRDcnLFxuICAndHJhZGUnOiAnXFx1MjEyMicsXG4gICdVYWN1dGUnOiAnXFx1MDBEQScsXG4gICd1YWN1dGUnOiAnXFx1MDBGQScsXG4gICd1YXJyJzogJ1xcdTIxOTEnLFxuICAndUFycic6ICdcXHUyMUQxJyxcbiAgJ1VjaXJjJzogJ1xcdTAwREInLFxuICAndWNpcmMnOiAnXFx1MDBGQicsXG4gICdVZ3JhdmUnOiAnXFx1MDBEOScsXG4gICd1Z3JhdmUnOiAnXFx1MDBGOScsXG4gICd1bWwnOiAnXFx1MDBBOCcsXG4gICd1cHNpaCc6ICdcXHUwM0QyJyxcbiAgJ1Vwc2lsb24nOiAnXFx1MDNBNScsXG4gICd1cHNpbG9uJzogJ1xcdTAzQzUnLFxuICAnVXVtbCc6ICdcXHUwMERDJyxcbiAgJ3V1bWwnOiAnXFx1MDBGQycsXG4gICd3ZWllcnAnOiAnXFx1MjExOCcsXG4gICdYaSc6ICdcXHUwMzlFJyxcbiAgJ3hpJzogJ1xcdTAzQkUnLFxuICAnWWFjdXRlJzogJ1xcdTAwREQnLFxuICAneWFjdXRlJzogJ1xcdTAwRkQnLFxuICAneWVuJzogJ1xcdTAwQTUnLFxuICAneXVtbCc6ICdcXHUwMEZGJyxcbiAgJ1l1bWwnOiAnXFx1MDE3OCcsXG4gICdaZXRhJzogJ1xcdTAzOTYnLFxuICAnemV0YSc6ICdcXHUwM0I2JyxcbiAgJ3p3aic6ICdcXHUyMDBEJyxcbiAgJ3p3bmonOiAnXFx1MjAwQycsXG59KTtcblxuZXhwb3J0IGVudW0gSHRtbFRhZ0NvbnRlbnRUeXBlIHtcbiAgUkFXX1RFWFQsXG4gIEVTQ0FQQUJMRV9SQVdfVEVYVCxcbiAgUEFSU0FCTEVfREFUQVxufVxuXG5leHBvcnQgY2xhc3MgSHRtbFRhZ0RlZmluaXRpb24ge1xuICBwcml2YXRlIGNsb3NlZEJ5Q2hpbGRyZW46IHtba2V5OiBzdHJpbmddOiBib29sZWFufSA9IHt9O1xuICBwdWJsaWMgY2xvc2VkQnlQYXJlbnQ6IGJvb2xlYW4gPSBmYWxzZTtcbiAgcHVibGljIHJlcXVpcmVkUGFyZW50czoge1trZXk6IHN0cmluZ106IGJvb2xlYW59O1xuICBwdWJsaWMgcGFyZW50VG9BZGQ6IHN0cmluZztcbiAgcHVibGljIGltcGxpY2l0TmFtZXNwYWNlUHJlZml4OiBzdHJpbmc7XG4gIHB1YmxpYyBjb250ZW50VHlwZTogSHRtbFRhZ0NvbnRlbnRUeXBlO1xuICBwdWJsaWMgaXNWb2lkOiBib29sZWFuO1xuICBwdWJsaWMgaWdub3JlRmlyc3RMZjogYm9vbGVhbjtcblxuICBjb25zdHJ1Y3Rvcih7Y2xvc2VkQnlDaGlsZHJlbiwgcmVxdWlyZWRQYXJlbnRzLCBpbXBsaWNpdE5hbWVzcGFjZVByZWZpeCwgY29udGVudFR5cGUsXG4gICAgICAgICAgICAgICBjbG9zZWRCeVBhcmVudCwgaXNWb2lkLCBpZ25vcmVGaXJzdExmfToge1xuICAgIGNsb3NlZEJ5Q2hpbGRyZW4/OiBzdHJpbmdbXSxcbiAgICBjbG9zZWRCeVBhcmVudD86IGJvb2xlYW4sXG4gICAgcmVxdWlyZWRQYXJlbnRzPzogc3RyaW5nW10sXG4gICAgaW1wbGljaXROYW1lc3BhY2VQcmVmaXg/OiBzdHJpbmcsXG4gICAgY29udGVudFR5cGU/OiBIdG1sVGFnQ29udGVudFR5cGUsXG4gICAgaXNWb2lkPzogYm9vbGVhbixcbiAgICBpZ25vcmVGaXJzdExmPzogYm9vbGVhblxuICB9ID0ge30pIHtcbiAgICBpZiAoaXNQcmVzZW50KGNsb3NlZEJ5Q2hpbGRyZW4pICYmIGNsb3NlZEJ5Q2hpbGRyZW4ubGVuZ3RoID4gMCkge1xuICAgICAgY2xvc2VkQnlDaGlsZHJlbi5mb3JFYWNoKHRhZ05hbWUgPT4gdGhpcy5jbG9zZWRCeUNoaWxkcmVuW3RhZ05hbWVdID0gdHJ1ZSk7XG4gICAgfVxuICAgIHRoaXMuaXNWb2lkID0gbm9ybWFsaXplQm9vbChpc1ZvaWQpO1xuICAgIHRoaXMuY2xvc2VkQnlQYXJlbnQgPSBub3JtYWxpemVCb29sKGNsb3NlZEJ5UGFyZW50KSB8fCB0aGlzLmlzVm9pZDtcbiAgICBpZiAoaXNQcmVzZW50KHJlcXVpcmVkUGFyZW50cykgJiYgcmVxdWlyZWRQYXJlbnRzLmxlbmd0aCA+IDApIHtcbiAgICAgIHRoaXMucmVxdWlyZWRQYXJlbnRzID0ge307XG4gICAgICB0aGlzLnBhcmVudFRvQWRkID0gcmVxdWlyZWRQYXJlbnRzWzBdO1xuICAgICAgcmVxdWlyZWRQYXJlbnRzLmZvckVhY2godGFnTmFtZSA9PiB0aGlzLnJlcXVpcmVkUGFyZW50c1t0YWdOYW1lXSA9IHRydWUpO1xuICAgIH1cbiAgICB0aGlzLmltcGxpY2l0TmFtZXNwYWNlUHJlZml4ID0gaW1wbGljaXROYW1lc3BhY2VQcmVmaXg7XG4gICAgdGhpcy5jb250ZW50VHlwZSA9IGlzUHJlc2VudChjb250ZW50VHlwZSkgPyBjb250ZW50VHlwZSA6IEh0bWxUYWdDb250ZW50VHlwZS5QQVJTQUJMRV9EQVRBO1xuICAgIHRoaXMuaWdub3JlRmlyc3RMZiA9IG5vcm1hbGl6ZUJvb2woaWdub3JlRmlyc3RMZik7XG4gIH1cblxuICByZXF1aXJlRXh0cmFQYXJlbnQoY3VycmVudFBhcmVudDogc3RyaW5nKTogYm9vbGVhbiB7XG4gICAgaWYgKGlzQmxhbmsodGhpcy5yZXF1aXJlZFBhcmVudHMpKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgaWYgKGlzQmxhbmsoY3VycmVudFBhcmVudCkpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIGxldCBsY1BhcmVudCA9IGN1cnJlbnRQYXJlbnQudG9Mb3dlckNhc2UoKTtcbiAgICByZXR1cm4gdGhpcy5yZXF1aXJlZFBhcmVudHNbbGNQYXJlbnRdICE9IHRydWUgJiYgbGNQYXJlbnQgIT0gJ3RlbXBsYXRlJztcbiAgfVxuXG4gIGlzQ2xvc2VkQnlDaGlsZChuYW1lOiBzdHJpbmcpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5pc1ZvaWQgfHwgbm9ybWFsaXplQm9vbCh0aGlzLmNsb3NlZEJ5Q2hpbGRyZW5bbmFtZS50b0xvd2VyQ2FzZSgpXSk7XG4gIH1cbn1cblxuLy8gc2VlIGh0dHA6Ly93d3cudzMub3JnL1RSL2h0bWw1MS9zeW50YXguaHRtbCNvcHRpb25hbC10YWdzXG4vLyBUaGlzIGltcGxlbWVudGF0aW9uIGRvZXMgbm90IGZ1bGx5IGNvbmZvcm0gdG8gdGhlIEhUTUw1IHNwZWMuXG52YXIgVEFHX0RFRklOSVRJT05TOiB7W2tleTogc3RyaW5nXTogSHRtbFRhZ0RlZmluaXRpb259ID0ge1xuICAnYXJlYSc6IG5ldyBIdG1sVGFnRGVmaW5pdGlvbih7aXNWb2lkOiB0cnVlfSksXG4gICdlbWJlZCc6IG5ldyBIdG1sVGFnRGVmaW5pdGlvbih7aXNWb2lkOiB0cnVlfSksXG4gICdsaW5rJzogbmV3IEh0bWxUYWdEZWZpbml0aW9uKHtpc1ZvaWQ6IHRydWV9KSxcbiAgJ2ltZyc6IG5ldyBIdG1sVGFnRGVmaW5pdGlvbih7aXNWb2lkOiB0cnVlfSksXG4gICdpbnB1dCc6IG5ldyBIdG1sVGFnRGVmaW5pdGlvbih7aXNWb2lkOiB0cnVlfSksXG4gICdwYXJhbSc6IG5ldyBIdG1sVGFnRGVmaW5pdGlvbih7aXNWb2lkOiB0cnVlfSksXG4gICdocic6IG5ldyBIdG1sVGFnRGVmaW5pdGlvbih7aXNWb2lkOiB0cnVlfSksXG4gICdicic6IG5ldyBIdG1sVGFnRGVmaW5pdGlvbih7aXNWb2lkOiB0cnVlfSksXG4gICdzb3VyY2UnOiBuZXcgSHRtbFRhZ0RlZmluaXRpb24oe2lzVm9pZDogdHJ1ZX0pLFxuICAndHJhY2snOiBuZXcgSHRtbFRhZ0RlZmluaXRpb24oe2lzVm9pZDogdHJ1ZX0pLFxuICAnd2JyJzogbmV3IEh0bWxUYWdEZWZpbml0aW9uKHtpc1ZvaWQ6IHRydWV9KSxcbiAgJ3AnOiBuZXcgSHRtbFRhZ0RlZmluaXRpb24oe1xuICAgIGNsb3NlZEJ5Q2hpbGRyZW46IFtcbiAgICAgICdhZGRyZXNzJyxcbiAgICAgICdhcnRpY2xlJyxcbiAgICAgICdhc2lkZScsXG4gICAgICAnYmxvY2txdW90ZScsXG4gICAgICAnZGl2JyxcbiAgICAgICdkbCcsXG4gICAgICAnZmllbGRzZXQnLFxuICAgICAgJ2Zvb3RlcicsXG4gICAgICAnZm9ybScsXG4gICAgICAnaDEnLFxuICAgICAgJ2gyJyxcbiAgICAgICdoMycsXG4gICAgICAnaDQnLFxuICAgICAgJ2g1JyxcbiAgICAgICdoNicsXG4gICAgICAnaGVhZGVyJyxcbiAgICAgICdoZ3JvdXAnLFxuICAgICAgJ2hyJyxcbiAgICAgICdtYWluJyxcbiAgICAgICduYXYnLFxuICAgICAgJ29sJyxcbiAgICAgICdwJyxcbiAgICAgICdwcmUnLFxuICAgICAgJ3NlY3Rpb24nLFxuICAgICAgJ3RhYmxlJyxcbiAgICAgICd1bCdcbiAgICBdLFxuICAgIGNsb3NlZEJ5UGFyZW50OiB0cnVlXG4gIH0pLFxuICAndGhlYWQnOiBuZXcgSHRtbFRhZ0RlZmluaXRpb24oe2Nsb3NlZEJ5Q2hpbGRyZW46IFsndGJvZHknLCAndGZvb3QnXX0pLFxuICAndGJvZHknOiBuZXcgSHRtbFRhZ0RlZmluaXRpb24oe2Nsb3NlZEJ5Q2hpbGRyZW46IFsndGJvZHknLCAndGZvb3QnXSwgY2xvc2VkQnlQYXJlbnQ6IHRydWV9KSxcbiAgJ3Rmb290JzogbmV3IEh0bWxUYWdEZWZpbml0aW9uKHtjbG9zZWRCeUNoaWxkcmVuOiBbJ3Rib2R5J10sIGNsb3NlZEJ5UGFyZW50OiB0cnVlfSksXG4gICd0cic6IG5ldyBIdG1sVGFnRGVmaW5pdGlvbih7XG4gICAgY2xvc2VkQnlDaGlsZHJlbjogWyd0ciddLFxuICAgIHJlcXVpcmVkUGFyZW50czogWyd0Ym9keScsICd0Zm9vdCcsICd0aGVhZCddLFxuICAgIGNsb3NlZEJ5UGFyZW50OiB0cnVlXG4gIH0pLFxuICAndGQnOiBuZXcgSHRtbFRhZ0RlZmluaXRpb24oe2Nsb3NlZEJ5Q2hpbGRyZW46IFsndGQnLCAndGgnXSwgY2xvc2VkQnlQYXJlbnQ6IHRydWV9KSxcbiAgJ3RoJzogbmV3IEh0bWxUYWdEZWZpbml0aW9uKHtjbG9zZWRCeUNoaWxkcmVuOiBbJ3RkJywgJ3RoJ10sIGNsb3NlZEJ5UGFyZW50OiB0cnVlfSksXG4gICdjb2wnOiBuZXcgSHRtbFRhZ0RlZmluaXRpb24oe3JlcXVpcmVkUGFyZW50czogWydjb2xncm91cCddLCBpc1ZvaWQ6IHRydWV9KSxcbiAgJ3N2Zyc6IG5ldyBIdG1sVGFnRGVmaW5pdGlvbih7aW1wbGljaXROYW1lc3BhY2VQcmVmaXg6ICdzdmcnfSksXG4gICdtYXRoJzogbmV3IEh0bWxUYWdEZWZpbml0aW9uKHtpbXBsaWNpdE5hbWVzcGFjZVByZWZpeDogJ21hdGgnfSksXG4gICdsaSc6IG5ldyBIdG1sVGFnRGVmaW5pdGlvbih7Y2xvc2VkQnlDaGlsZHJlbjogWydsaSddLCBjbG9zZWRCeVBhcmVudDogdHJ1ZX0pLFxuICAnZHQnOiBuZXcgSHRtbFRhZ0RlZmluaXRpb24oe2Nsb3NlZEJ5Q2hpbGRyZW46IFsnZHQnLCAnZGQnXX0pLFxuICAnZGQnOiBuZXcgSHRtbFRhZ0RlZmluaXRpb24oe2Nsb3NlZEJ5Q2hpbGRyZW46IFsnZHQnLCAnZGQnXSwgY2xvc2VkQnlQYXJlbnQ6IHRydWV9KSxcbiAgJ3JiJzogbmV3IEh0bWxUYWdEZWZpbml0aW9uKHtjbG9zZWRCeUNoaWxkcmVuOiBbJ3JiJywgJ3J0JywgJ3J0YycsICdycCddLCBjbG9zZWRCeVBhcmVudDogdHJ1ZX0pLFxuICAncnQnOiBuZXcgSHRtbFRhZ0RlZmluaXRpb24oe2Nsb3NlZEJ5Q2hpbGRyZW46IFsncmInLCAncnQnLCAncnRjJywgJ3JwJ10sIGNsb3NlZEJ5UGFyZW50OiB0cnVlfSksXG4gICdydGMnOiBuZXcgSHRtbFRhZ0RlZmluaXRpb24oe2Nsb3NlZEJ5Q2hpbGRyZW46IFsncmInLCAncnRjJywgJ3JwJ10sIGNsb3NlZEJ5UGFyZW50OiB0cnVlfSksXG4gICdycCc6IG5ldyBIdG1sVGFnRGVmaW5pdGlvbih7Y2xvc2VkQnlDaGlsZHJlbjogWydyYicsICdydCcsICdydGMnLCAncnAnXSwgY2xvc2VkQnlQYXJlbnQ6IHRydWV9KSxcbiAgJ29wdGdyb3VwJzogbmV3IEh0bWxUYWdEZWZpbml0aW9uKHtjbG9zZWRCeUNoaWxkcmVuOiBbJ29wdGdyb3VwJ10sIGNsb3NlZEJ5UGFyZW50OiB0cnVlfSksXG4gICdvcHRpb24nOiBuZXcgSHRtbFRhZ0RlZmluaXRpb24oe2Nsb3NlZEJ5Q2hpbGRyZW46IFsnb3B0aW9uJywgJ29wdGdyb3VwJ10sIGNsb3NlZEJ5UGFyZW50OiB0cnVlfSksXG4gICdwcmUnOiBuZXcgSHRtbFRhZ0RlZmluaXRpb24oe2lnbm9yZUZpcnN0TGY6IHRydWV9KSxcbiAgJ2xpc3RpbmcnOiBuZXcgSHRtbFRhZ0RlZmluaXRpb24oe2lnbm9yZUZpcnN0TGY6IHRydWV9KSxcbiAgJ3N0eWxlJzogbmV3IEh0bWxUYWdEZWZpbml0aW9uKHtjb250ZW50VHlwZTogSHRtbFRhZ0NvbnRlbnRUeXBlLlJBV19URVhUfSksXG4gICdzY3JpcHQnOiBuZXcgSHRtbFRhZ0RlZmluaXRpb24oe2NvbnRlbnRUeXBlOiBIdG1sVGFnQ29udGVudFR5cGUuUkFXX1RFWFR9KSxcbiAgJ3RpdGxlJzogbmV3IEh0bWxUYWdEZWZpbml0aW9uKHtjb250ZW50VHlwZTogSHRtbFRhZ0NvbnRlbnRUeXBlLkVTQ0FQQUJMRV9SQVdfVEVYVH0pLFxuICAndGV4dGFyZWEnOiBuZXcgSHRtbFRhZ0RlZmluaXRpb24oXG4gICAgICB7Y29udGVudFR5cGU6IEh0bWxUYWdDb250ZW50VHlwZS5FU0NBUEFCTEVfUkFXX1RFWFQsIGlnbm9yZUZpcnN0TGY6IHRydWV9KSxcbn07XG5cbnZhciBERUZBVUxUX1RBR19ERUZJTklUSU9OID0gbmV3IEh0bWxUYWdEZWZpbml0aW9uKCk7XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRIdG1sVGFnRGVmaW5pdGlvbih0YWdOYW1lOiBzdHJpbmcpOiBIdG1sVGFnRGVmaW5pdGlvbiB7XG4gIHZhciByZXN1bHQgPSBUQUdfREVGSU5JVElPTlNbdGFnTmFtZS50b0xvd2VyQ2FzZSgpXTtcbiAgcmV0dXJuIGlzUHJlc2VudChyZXN1bHQpID8gcmVzdWx0IDogREVGQVVMVF9UQUdfREVGSU5JVElPTjtcbn1cblxudmFyIE5TX1BSRUZJWF9SRSA9IC9eQChbXjpdKyk6KC4rKS9nO1xuXG5leHBvcnQgZnVuY3Rpb24gc3BsaXROc05hbWUoZWxlbWVudE5hbWU6IHN0cmluZyk6IHN0cmluZ1tdIHtcbiAgaWYgKGVsZW1lbnROYW1lWzBdICE9ICdAJykge1xuICAgIHJldHVybiBbbnVsbCwgZWxlbWVudE5hbWVdO1xuICB9XG4gIGxldCBtYXRjaCA9IFJlZ0V4cFdyYXBwZXIuZmlyc3RNYXRjaChOU19QUkVGSVhfUkUsIGVsZW1lbnROYW1lKTtcbiAgcmV0dXJuIFttYXRjaFsxXSwgbWF0Y2hbMl1dO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0TnNQcmVmaXgoZWxlbWVudE5hbWU6IHN0cmluZyk6IHN0cmluZyB7XG4gIHJldHVybiBzcGxpdE5zTmFtZShlbGVtZW50TmFtZSlbMF07XG59XG4iXX0=\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/compiler/html_tags.js\n ** module id = 43\n ** module chunks = 1\n **/","'use strict';var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar di_1 = require('angular2/src/core/di');\r\nvar lang_1 = require('angular2/src/facade/lang');\r\nvar application_tokens_1 = require('angular2/src/core/application_tokens');\r\nvar di_2 = require('angular2/src/core/di');\r\n/**\r\n * Create a {@link UrlResolver} with no package prefix.\r\n */\r\nfunction createWithoutPackagePrefix() {\r\n    return new UrlResolver();\r\n}\r\nexports.createWithoutPackagePrefix = createWithoutPackagePrefix;\r\n/**\r\n * A default provider for {@link PACKAGE_ROOT_URL} that maps to '/'.\r\n */\r\nexports.DEFAULT_PACKAGE_URL_PROVIDER = new di_2.Provider(application_tokens_1.PACKAGE_ROOT_URL, { useValue: \"/\" });\r\n/**\r\n * Used by the {@link Compiler} when resolving HTML and CSS template URLs.\r\n *\r\n * This class can be overridden by the application developer to create custom behavior.\r\n *\r\n * See {@link Compiler}\r\n *\r\n * ## Example\r\n *\r\n * {@example compiler/ts/url_resolver/url_resolver.ts region='url_resolver'}\r\n */\r\nvar UrlResolver = (function () {\r\n    function UrlResolver(packagePrefix) {\r\n        if (packagePrefix === void 0) { packagePrefix = null; }\r\n        if (lang_1.isPresent(packagePrefix)) {\r\n            this._packagePrefix = lang_1.StringWrapper.stripRight(packagePrefix, \"/\") + \"/\";\r\n        }\r\n    }\r\n    /**\r\n     * Resolves the `url` given the `baseUrl`:\r\n     * - when the `url` is null, the `baseUrl` is returned,\r\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\r\n     * `baseUrl` and `url`,\r\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\r\n     * returned as is (ignoring the `baseUrl`)\r\n     *\r\n     * @param {string} baseUrl\r\n     * @param {string} url\r\n     * @returns {string} the resolved URL\r\n     */\r\n    UrlResolver.prototype.resolve = function (baseUrl, url) {\r\n        var resolvedUrl = url;\r\n        if (lang_1.isPresent(baseUrl) && baseUrl.length > 0) {\r\n            resolvedUrl = _resolveUrl(baseUrl, resolvedUrl);\r\n        }\r\n        if (lang_1.isPresent(this._packagePrefix) && getUrlScheme(resolvedUrl) == \"package\") {\r\n            resolvedUrl = resolvedUrl.replace(\"package:\", this._packagePrefix);\r\n        }\r\n        return resolvedUrl;\r\n    };\r\n    UrlResolver = __decorate([\r\n        di_1.Injectable(),\r\n        __param(0, di_1.Inject(application_tokens_1.PACKAGE_ROOT_URL)), \r\n        __metadata('design:paramtypes', [String])\r\n    ], UrlResolver);\r\n    return UrlResolver;\r\n})();\r\nexports.UrlResolver = UrlResolver;\r\n/**\r\n * Extract the scheme of a URL.\r\n */\r\nfunction getUrlScheme(url) {\r\n    var match = _split(url);\r\n    return (match && match[_ComponentIndex.Scheme]) || \"\";\r\n}\r\nexports.getUrlScheme = getUrlScheme;\r\n// The code below is adapted from Traceur:\r\n// https://github.com/google/traceur-compiler/blob/9511c1dafa972bf0de1202a8a863bad02f0f95a8/src/runtime/url.js\r\n/**\r\n * Builds a URI string from already-encoded parts.\r\n *\r\n * No encoding is performed.  Any component may be omitted as either null or\r\n * undefined.\r\n *\r\n * @param {?string=} opt_scheme The scheme such as 'http'.\r\n * @param {?string=} opt_userInfo The user name before the '@'.\r\n * @param {?string=} opt_domain The domain such as 'www.google.com', already\r\n *     URI-encoded.\r\n * @param {(string|null)=} opt_port The port number.\r\n * @param {?string=} opt_path The path, already URI-encoded.  If it is not\r\n *     empty, it must begin with a slash.\r\n * @param {?string=} opt_queryData The URI-encoded query data.\r\n * @param {?string=} opt_fragment The URI-encoded fragment identifier.\r\n * @return {string} The fully combined URI.\r\n */\r\nfunction _buildFromEncodedParts(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {\r\n    var out = [];\r\n    if (lang_1.isPresent(opt_scheme)) {\r\n        out.push(opt_scheme + ':');\r\n    }\r\n    if (lang_1.isPresent(opt_domain)) {\r\n        out.push('//');\r\n        if (lang_1.isPresent(opt_userInfo)) {\r\n            out.push(opt_userInfo + '@');\r\n        }\r\n        out.push(opt_domain);\r\n        if (lang_1.isPresent(opt_port)) {\r\n            out.push(':' + opt_port);\r\n        }\r\n    }\r\n    if (lang_1.isPresent(opt_path)) {\r\n        out.push(opt_path);\r\n    }\r\n    if (lang_1.isPresent(opt_queryData)) {\r\n        out.push('?' + opt_queryData);\r\n    }\r\n    if (lang_1.isPresent(opt_fragment)) {\r\n        out.push('#' + opt_fragment);\r\n    }\r\n    return out.join('');\r\n}\r\n/**\r\n * A regular expression for breaking a URI into its component parts.\r\n *\r\n * {@link http://www.gbiv.com/protocols/uri/rfc/rfc3986.html#RFC2234} says\r\n * As the \"first-match-wins\" algorithm is identical to the \"greedy\"\r\n * disambiguation method used by POSIX regular expressions, it is natural and\r\n * commonplace to use a regular expression for parsing the potential five\r\n * components of a URI reference.\r\n *\r\n * The following line is the regular expression for breaking-down a\r\n * well-formed URI reference into its components.\r\n *\r\n * <pre>\r\n * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\r\n *  12            3  4          5       6  7        8 9\r\n * </pre>\r\n *\r\n * The numbers in the second line above are only to assist readability; they\r\n * indicate the reference points for each subexpression (i.e., each paired\r\n * parenthesis). We refer to the value matched for subexpression <n> as $<n>.\r\n * For example, matching the above expression to\r\n * <pre>\r\n *     http://www.ics.uci.edu/pub/ietf/uri/#Related\r\n * </pre>\r\n * results in the following subexpression matches:\r\n * <pre>\r\n *    $1 = http:\r\n *    $2 = http\r\n *    $3 = //www.ics.uci.edu\r\n *    $4 = www.ics.uci.edu\r\n *    $5 = /pub/ietf/uri/\r\n *    $6 = <undefined>\r\n *    $7 = <undefined>\r\n *    $8 = #Related\r\n *    $9 = Related\r\n * </pre>\r\n * where <undefined> indicates that the component is not present, as is the\r\n * case for the query component in the above example. Therefore, we can\r\n * determine the value of the five components as\r\n * <pre>\r\n *    scheme    = $2\r\n *    authority = $4\r\n *    path      = $5\r\n *    query     = $7\r\n *    fragment  = $9\r\n * </pre>\r\n *\r\n * The regular expression has been modified slightly to expose the\r\n * userInfo, domain, and port separately from the authority.\r\n * The modified version yields\r\n * <pre>\r\n *    $1 = http              scheme\r\n *    $2 = <undefined>       userInfo -\\\r\n *    $3 = www.ics.uci.edu   domain     | authority\r\n *    $4 = <undefined>       port     -/\r\n *    $5 = /pub/ietf/uri/    path\r\n *    $6 = <undefined>       query without ?\r\n *    $7 = Related           fragment without #\r\n * </pre>\r\n * @type {!RegExp}\r\n * @internal\r\n */\r\nvar _splitRe = lang_1.RegExpWrapper.create('^' +\r\n    '(?:' +\r\n    '([^:/?#.]+)' +\r\n    // used by other URL parts such as :,\r\n    // ?, /, #, and .\r\n    ':)?' +\r\n    '(?://' +\r\n    '(?:([^/?#]*)@)?' +\r\n    '([\\\\w\\\\d\\\\-\\\\u0100-\\\\uffff.%]*)' +\r\n    // digits, dashes, dots, percent\r\n    // escapes, and unicode characters.\r\n    '(?::([0-9]+))?' +\r\n    ')?' +\r\n    '([^?#]+)?' +\r\n    '(?:\\\\?([^#]*))?' +\r\n    '(?:#(.*))?' +\r\n    '$');\r\n/**\r\n * The index of each URI component in the return value of goog.uri.utils.split.\r\n * @enum {number}\r\n */\r\nvar _ComponentIndex;\r\n(function (_ComponentIndex) {\r\n    _ComponentIndex[_ComponentIndex[\"Scheme\"] = 1] = \"Scheme\";\r\n    _ComponentIndex[_ComponentIndex[\"UserInfo\"] = 2] = \"UserInfo\";\r\n    _ComponentIndex[_ComponentIndex[\"Domain\"] = 3] = \"Domain\";\r\n    _ComponentIndex[_ComponentIndex[\"Port\"] = 4] = \"Port\";\r\n    _ComponentIndex[_ComponentIndex[\"Path\"] = 5] = \"Path\";\r\n    _ComponentIndex[_ComponentIndex[\"QueryData\"] = 6] = \"QueryData\";\r\n    _ComponentIndex[_ComponentIndex[\"Fragment\"] = 7] = \"Fragment\";\r\n})(_ComponentIndex || (_ComponentIndex = {}));\r\n/**\r\n * Splits a URI into its component parts.\r\n *\r\n * Each component can be accessed via the component indices; for example:\r\n * <pre>\r\n * goog.uri.utils.split(someStr)[goog.uri.utils.CompontentIndex.QUERY_DATA];\r\n * </pre>\r\n *\r\n * @param {string} uri The URI string to examine.\r\n * @return {!Array.<string|undefined>} Each component still URI-encoded.\r\n *     Each component that is present will contain the encoded value, whereas\r\n *     components that are not present will be undefined or empty, depending\r\n *     on the browser's regular expression implementation.  Never null, since\r\n *     arbitrary strings may still look like path names.\r\n */\r\nfunction _split(uri) {\r\n    return lang_1.RegExpWrapper.firstMatch(_splitRe, uri);\r\n}\r\n/**\r\n  * Removes dot segments in given path component, as described in\r\n  * RFC 3986, section 5.2.4.\r\n  *\r\n  * @param {string} path A non-empty path component.\r\n  * @return {string} Path component with removed dot segments.\r\n  */\r\nfunction _removeDotSegments(path) {\r\n    if (path == '/')\r\n        return '/';\r\n    var leadingSlash = path[0] == '/' ? '/' : '';\r\n    var trailingSlash = path[path.length - 1] === '/' ? '/' : '';\r\n    var segments = path.split('/');\r\n    var out = [];\r\n    var up = 0;\r\n    for (var pos = 0; pos < segments.length; pos++) {\r\n        var segment = segments[pos];\r\n        switch (segment) {\r\n            case '':\r\n            case '.':\r\n                break;\r\n            case '..':\r\n                if (out.length > 0) {\r\n                    out.pop();\r\n                }\r\n                else {\r\n                    up++;\r\n                }\r\n                break;\r\n            default:\r\n                out.push(segment);\r\n        }\r\n    }\r\n    if (leadingSlash == '') {\r\n        while (up-- > 0) {\r\n            out.unshift('..');\r\n        }\r\n        if (out.length === 0)\r\n            out.push('.');\r\n    }\r\n    return leadingSlash + out.join('/') + trailingSlash;\r\n}\r\n/**\r\n * Takes an array of the parts from split and canonicalizes the path part\r\n * and then joins all the parts.\r\n * @param {Array.<string?>} parts\r\n * @return {string}\r\n */\r\nfunction _joinAndCanonicalizePath(parts) {\r\n    var path = parts[_ComponentIndex.Path];\r\n    path = lang_1.isBlank(path) ? '' : _removeDotSegments(path);\r\n    parts[_ComponentIndex.Path] = path;\r\n    return _buildFromEncodedParts(parts[_ComponentIndex.Scheme], parts[_ComponentIndex.UserInfo], parts[_ComponentIndex.Domain], parts[_ComponentIndex.Port], path, parts[_ComponentIndex.QueryData], parts[_ComponentIndex.Fragment]);\r\n}\r\n/**\r\n * Resolves a URL.\r\n * @param {string} base The URL acting as the base URL.\r\n * @param {string} to The URL to resolve.\r\n * @return {string}\r\n */\r\nfunction _resolveUrl(base, url) {\r\n    var parts = _split(encodeURI(url));\r\n    var baseParts = _split(base);\r\n    if (lang_1.isPresent(parts[_ComponentIndex.Scheme])) {\r\n        return _joinAndCanonicalizePath(parts);\r\n    }\r\n    else {\r\n        parts[_ComponentIndex.Scheme] = baseParts[_ComponentIndex.Scheme];\r\n    }\r\n    for (var i = _ComponentIndex.Scheme; i <= _ComponentIndex.Port; i++) {\r\n        if (lang_1.isBlank(parts[i])) {\r\n            parts[i] = baseParts[i];\r\n        }\r\n    }\r\n    if (parts[_ComponentIndex.Path][0] == '/') {\r\n        return _joinAndCanonicalizePath(parts);\r\n    }\r\n    var path = baseParts[_ComponentIndex.Path];\r\n    if (lang_1.isBlank(path))\r\n        path = '/';\r\n    var index = path.lastIndexOf('/');\r\n    path = path.substring(0, index + 1) + parts[_ComponentIndex.Path];\r\n    parts[_ComponentIndex.Path] = path;\r\n    return _joinAndCanonicalizePath(parts);\r\n}\r\n//# sourceMappingURL=data:application/json;base64,\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/compiler/url_resolver.js\n ** module id = 44\n ** module chunks = 1\n **/","'use strict';var di_1 = require('angular2/src/core/di');\r\nvar lang_1 = require('angular2/src/facade/lang');\r\n/**\r\n * A DI Token representing the main rendering context. In a browser this is the DOM Document.\r\n *\r\n * Note: Document might not be available in the Application Context when Application and Rendering\r\n * Contexts are not the same (e.g. when running the application into a Web Worker).\r\n */\r\nexports.DOCUMENT = lang_1.CONST_EXPR(new di_1.OpaqueToken('DocumentToken'));\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZG9tX3Rva2Vucy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImFuZ3VsYXIyL3NyYy9wbGF0Zm9ybS9kb20vZG9tX3Rva2Vucy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxtQkFBMEIsc0JBQXNCLENBQUMsQ0FBQTtBQUNqRCxxQkFBeUIsMEJBQTBCLENBQUMsQ0FBQTtBQUVwRDs7Ozs7R0FLRztBQUNVLGdCQUFRLEdBQWdCLGlCQUFVLENBQUMsSUFBSSxnQkFBVyxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge09wYXF1ZVRva2VufSBmcm9tICdhbmd1bGFyMi9zcmMvY29yZS9kaSc7XG5pbXBvcnQge0NPTlNUX0VYUFJ9IGZyb20gJ2FuZ3VsYXIyL3NyYy9mYWNhZGUvbGFuZyc7XG5cbi8qKlxuICogQSBESSBUb2tlbiByZXByZXNlbnRpbmcgdGhlIG1haW4gcmVuZGVyaW5nIGNvbnRleHQuIEluIGEgYnJvd3NlciB0aGlzIGlzIHRoZSBET00gRG9jdW1lbnQuXG4gKlxuICogTm90ZTogRG9jdW1lbnQgbWlnaHQgbm90IGJlIGF2YWlsYWJsZSBpbiB0aGUgQXBwbGljYXRpb24gQ29udGV4dCB3aGVuIEFwcGxpY2F0aW9uIGFuZCBSZW5kZXJpbmdcbiAqIENvbnRleHRzIGFyZSBub3QgdGhlIHNhbWUgKGUuZy4gd2hlbiBydW5uaW5nIHRoZSBhcHBsaWNhdGlvbiBpbnRvIGEgV2ViIFdvcmtlcikuXG4gKi9cbmV4cG9ydCBjb25zdCBET0NVTUVOVDogT3BhcXVlVG9rZW4gPSBDT05TVF9FWFBSKG5ldyBPcGFxdWVUb2tlbignRG9jdW1lbnRUb2tlbicpKTtcbiJdfQ==\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/platform/dom/dom_tokens.js\n ** module id = 53\n ** module chunks = 1\n **/","'use strict';var lang_1 = require('angular2/src/facade/lang');\r\nvar exceptions_1 = require('angular2/src/facade/exceptions');\r\nvar collection_1 = require('angular2/src/facade/collection');\r\nvar change_detection_1 = require('angular2/src/core/change_detection/change_detection');\r\nvar view_1 = require('angular2/src/core/metadata/view');\r\nvar selector_1 = require('angular2/src/compiler/selector');\r\nvar util_1 = require('./util');\r\nvar interfaces_1 = require('angular2/src/core/linker/interfaces');\r\n// group 1: \"property\" from \"[property]\"\r\n// group 2: \"event\" from \"(event)\"\r\nvar HOST_REG_EXP = /^(?:(?:\\[([^\\]]+)\\])|(?:\\(([^\\)]+)\\)))$/g;\r\nvar CompileMetadataWithType = (function () {\r\n    function CompileMetadataWithType() {\r\n    }\r\n    CompileMetadataWithType.fromJson = function (data) {\r\n        return _COMPILE_METADATA_FROM_JSON[data['class']](data);\r\n    };\r\n    Object.defineProperty(CompileMetadataWithType.prototype, \"type\", {\r\n        get: function () { return exceptions_1.unimplemented(); },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return CompileMetadataWithType;\r\n})();\r\nexports.CompileMetadataWithType = CompileMetadataWithType;\r\n/**\r\n * Metadata regarding compilation of a type.\r\n */\r\nvar CompileTypeMetadata = (function () {\r\n    function CompileTypeMetadata(_a) {\r\n        var _b = _a === void 0 ? {} : _a, runtime = _b.runtime, name = _b.name, moduleUrl = _b.moduleUrl, isHost = _b.isHost;\r\n        this.runtime = runtime;\r\n        this.name = name;\r\n        this.moduleUrl = moduleUrl;\r\n        this.isHost = lang_1.normalizeBool(isHost);\r\n    }\r\n    CompileTypeMetadata.fromJson = function (data) {\r\n        return new CompileTypeMetadata({ name: data['name'], moduleUrl: data['moduleUrl'], isHost: data['isHost'] });\r\n    };\r\n    CompileTypeMetadata.prototype.toJson = function () {\r\n        return {\r\n            // Note: Runtime type can't be serialized...\r\n            'name': this.name,\r\n            'moduleUrl': this.moduleUrl,\r\n            'isHost': this.isHost\r\n        };\r\n    };\r\n    return CompileTypeMetadata;\r\n})();\r\nexports.CompileTypeMetadata = CompileTypeMetadata;\r\n/**\r\n * Metadata regarding compilation of a template.\r\n */\r\nvar CompileTemplateMetadata = (function () {\r\n    function CompileTemplateMetadata(_a) {\r\n        var _b = _a === void 0 ? {} : _a, encapsulation = _b.encapsulation, template = _b.template, templateUrl = _b.templateUrl, styles = _b.styles, styleUrls = _b.styleUrls, ngContentSelectors = _b.ngContentSelectors;\r\n        this.encapsulation = lang_1.isPresent(encapsulation) ? encapsulation : view_1.ViewEncapsulation.Emulated;\r\n        this.template = template;\r\n        this.templateUrl = templateUrl;\r\n        this.styles = lang_1.isPresent(styles) ? styles : [];\r\n        this.styleUrls = lang_1.isPresent(styleUrls) ? styleUrls : [];\r\n        this.ngContentSelectors = lang_1.isPresent(ngContentSelectors) ? ngContentSelectors : [];\r\n    }\r\n    CompileTemplateMetadata.fromJson = function (data) {\r\n        return new CompileTemplateMetadata({\r\n            encapsulation: lang_1.isPresent(data['encapsulation']) ?\r\n                view_1.VIEW_ENCAPSULATION_VALUES[data['encapsulation']] :\r\n                data['encapsulation'],\r\n            template: data['template'],\r\n            templateUrl: data['templateUrl'],\r\n            styles: data['styles'],\r\n            styleUrls: data['styleUrls'],\r\n            ngContentSelectors: data['ngContentSelectors']\r\n        });\r\n    };\r\n    CompileTemplateMetadata.prototype.toJson = function () {\r\n        return {\r\n            'encapsulation': lang_1.isPresent(this.encapsulation) ? lang_1.serializeEnum(this.encapsulation) : this.encapsulation,\r\n            'template': this.template,\r\n            'templateUrl': this.templateUrl,\r\n            'styles': this.styles,\r\n            'styleUrls': this.styleUrls,\r\n            'ngContentSelectors': this.ngContentSelectors\r\n        };\r\n    };\r\n    return CompileTemplateMetadata;\r\n})();\r\nexports.CompileTemplateMetadata = CompileTemplateMetadata;\r\n/**\r\n * Metadata regarding compilation of a directive.\r\n */\r\nvar CompileDirectiveMetadata = (function () {\r\n    function CompileDirectiveMetadata(_a) {\r\n        var _b = _a === void 0 ? {} : _a, type = _b.type, isComponent = _b.isComponent, dynamicLoadable = _b.dynamicLoadable, selector = _b.selector, exportAs = _b.exportAs, changeDetection = _b.changeDetection, inputs = _b.inputs, outputs = _b.outputs, hostListeners = _b.hostListeners, hostProperties = _b.hostProperties, hostAttributes = _b.hostAttributes, lifecycleHooks = _b.lifecycleHooks, template = _b.template;\r\n        this.type = type;\r\n        this.isComponent = isComponent;\r\n        this.dynamicLoadable = dynamicLoadable;\r\n        this.selector = selector;\r\n        this.exportAs = exportAs;\r\n        this.changeDetection = changeDetection;\r\n        this.inputs = inputs;\r\n        this.outputs = outputs;\r\n        this.hostListeners = hostListeners;\r\n        this.hostProperties = hostProperties;\r\n        this.hostAttributes = hostAttributes;\r\n        this.lifecycleHooks = lifecycleHooks;\r\n        this.template = template;\r\n    }\r\n    CompileDirectiveMetadata.create = function (_a) {\r\n        var _b = _a === void 0 ? {} : _a, type = _b.type, isComponent = _b.isComponent, dynamicLoadable = _b.dynamicLoadable, selector = _b.selector, exportAs = _b.exportAs, changeDetection = _b.changeDetection, inputs = _b.inputs, outputs = _b.outputs, host = _b.host, lifecycleHooks = _b.lifecycleHooks, template = _b.template;\r\n        var hostListeners = {};\r\n        var hostProperties = {};\r\n        var hostAttributes = {};\r\n        if (lang_1.isPresent(host)) {\r\n            collection_1.StringMapWrapper.forEach(host, function (value, key) {\r\n                var matches = lang_1.RegExpWrapper.firstMatch(HOST_REG_EXP, key);\r\n                if (lang_1.isBlank(matches)) {\r\n                    hostAttributes[key] = value;\r\n                }\r\n                else if (lang_1.isPresent(matches[1])) {\r\n                    hostProperties[matches[1]] = value;\r\n                }\r\n                else if (lang_1.isPresent(matches[2])) {\r\n                    hostListeners[matches[2]] = value;\r\n                }\r\n            });\r\n        }\r\n        var inputsMap = {};\r\n        if (lang_1.isPresent(inputs)) {\r\n            inputs.forEach(function (bindConfig) {\r\n                // canonical syntax: `dirProp: elProp`\r\n                // if there is no `:`, use dirProp = elProp\r\n                var parts = util_1.splitAtColon(bindConfig, [bindConfig, bindConfig]);\r\n                inputsMap[parts[0]] = parts[1];\r\n            });\r\n        }\r\n        var outputsMap = {};\r\n        if (lang_1.isPresent(outputs)) {\r\n            outputs.forEach(function (bindConfig) {\r\n                // canonical syntax: `dirProp: elProp`\r\n                // if there is no `:`, use dirProp = elProp\r\n                var parts = util_1.splitAtColon(bindConfig, [bindConfig, bindConfig]);\r\n                outputsMap[parts[0]] = parts[1];\r\n            });\r\n        }\r\n        return new CompileDirectiveMetadata({\r\n            type: type,\r\n            isComponent: lang_1.normalizeBool(isComponent),\r\n            dynamicLoadable: lang_1.normalizeBool(dynamicLoadable),\r\n            selector: selector,\r\n            exportAs: exportAs,\r\n            changeDetection: changeDetection,\r\n            inputs: inputsMap,\r\n            outputs: outputsMap,\r\n            hostListeners: hostListeners,\r\n            hostProperties: hostProperties,\r\n            hostAttributes: hostAttributes,\r\n            lifecycleHooks: lang_1.isPresent(lifecycleHooks) ? lifecycleHooks : [],\r\n            template: template\r\n        });\r\n    };\r\n    CompileDirectiveMetadata.fromJson = function (data) {\r\n        return new CompileDirectiveMetadata({\r\n            isComponent: data['isComponent'],\r\n            dynamicLoadable: data['dynamicLoadable'],\r\n            selector: data['selector'],\r\n            exportAs: data['exportAs'],\r\n            type: lang_1.isPresent(data['type']) ? CompileTypeMetadata.fromJson(data['type']) : data['type'],\r\n            changeDetection: lang_1.isPresent(data['changeDetection']) ?\r\n                change_detection_1.CHANGE_DETECTION_STRATEGY_VALUES[data['changeDetection']] :\r\n                data['changeDetection'],\r\n            inputs: data['inputs'],\r\n            outputs: data['outputs'],\r\n            hostListeners: data['hostListeners'],\r\n            hostProperties: data['hostProperties'],\r\n            hostAttributes: data['hostAttributes'],\r\n            lifecycleHooks: data['lifecycleHooks'].map(function (hookValue) { return interfaces_1.LIFECYCLE_HOOKS_VALUES[hookValue]; }),\r\n            template: lang_1.isPresent(data['template']) ? CompileTemplateMetadata.fromJson(data['template']) :\r\n                data['template']\r\n        });\r\n    };\r\n    CompileDirectiveMetadata.prototype.toJson = function () {\r\n        return {\r\n            'class': 'Directive',\r\n            'isComponent': this.isComponent,\r\n            'dynamicLoadable': this.dynamicLoadable,\r\n            'selector': this.selector,\r\n            'exportAs': this.exportAs,\r\n            'type': lang_1.isPresent(this.type) ? this.type.toJson() : this.type,\r\n            'changeDetection': lang_1.isPresent(this.changeDetection) ? lang_1.serializeEnum(this.changeDetection) :\r\n                this.changeDetection,\r\n            'inputs': this.inputs,\r\n            'outputs': this.outputs,\r\n            'hostListeners': this.hostListeners,\r\n            'hostProperties': this.hostProperties,\r\n            'hostAttributes': this.hostAttributes,\r\n            'lifecycleHooks': this.lifecycleHooks.map(function (hook) { return lang_1.serializeEnum(hook); }),\r\n            'template': lang_1.isPresent(this.template) ? this.template.toJson() : this.template\r\n        };\r\n    };\r\n    return CompileDirectiveMetadata;\r\n})();\r\nexports.CompileDirectiveMetadata = CompileDirectiveMetadata;\r\n/**\r\n * Construct {@link CompileDirectiveMetadata} from {@link ComponentTypeMetadata} and a selector.\r\n */\r\nfunction createHostComponentMeta(componentType, componentSelector) {\r\n    var template = selector_1.CssSelector.parse(componentSelector)[0].getMatchingElementTemplate();\r\n    return CompileDirectiveMetadata.create({\r\n        type: new CompileTypeMetadata({\r\n            runtime: Object,\r\n            name: \"Host\" + componentType.name,\r\n            moduleUrl: componentType.moduleUrl,\r\n            isHost: true\r\n        }),\r\n        template: new CompileTemplateMetadata({ template: template, templateUrl: '', styles: [], styleUrls: [], ngContentSelectors: [] }),\r\n        changeDetection: change_detection_1.ChangeDetectionStrategy.Default,\r\n        inputs: [],\r\n        outputs: [],\r\n        host: {},\r\n        lifecycleHooks: [],\r\n        isComponent: true,\r\n        dynamicLoadable: false,\r\n        selector: '*'\r\n    });\r\n}\r\nexports.createHostComponentMeta = createHostComponentMeta;\r\nvar CompilePipeMetadata = (function () {\r\n    function CompilePipeMetadata(_a) {\r\n        var _b = _a === void 0 ? {} : _a, type = _b.type, name = _b.name, pure = _b.pure;\r\n        this.type = type;\r\n        this.name = name;\r\n        this.pure = lang_1.normalizeBool(pure);\r\n    }\r\n    CompilePipeMetadata.fromJson = function (data) {\r\n        return new CompilePipeMetadata({\r\n            type: lang_1.isPresent(data['type']) ? CompileTypeMetadata.fromJson(data['type']) : data['type'],\r\n            name: data['name'],\r\n            pure: data['pure']\r\n        });\r\n    };\r\n    CompilePipeMetadata.prototype.toJson = function () {\r\n        return {\r\n            'class': 'Pipe',\r\n            'type': lang_1.isPresent(this.type) ? this.type.toJson() : null,\r\n            'name': this.name,\r\n            'pure': this.pure\r\n        };\r\n    };\r\n    return CompilePipeMetadata;\r\n})();\r\nexports.CompilePipeMetadata = CompilePipeMetadata;\r\nvar _COMPILE_METADATA_FROM_JSON = {\r\n    'Directive': CompileDirectiveMetadata.fromJson,\r\n    'Pipe': CompilePipeMetadata.fromJson\r\n};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlyZWN0aXZlX21ldGFkYXRhLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYW5ndWxhcjIvc3JjL2NvbXBpbGVyL2RpcmVjdGl2ZV9tZXRhZGF0YS50cyJdLCJuYW1lcyI6WyJDb21waWxlTWV0YWRhdGFXaXRoVHlwZSIsIkNvbXBpbGVNZXRhZGF0YVdpdGhUeXBlLmNvbnN0cnVjdG9yIiwiQ29tcGlsZU1ldGFkYXRhV2l0aFR5cGUuZnJvbUpzb24iLCJDb21waWxlTWV0YWRhdGFXaXRoVHlwZS50eXBlIiwiQ29tcGlsZVR5cGVNZXRhZGF0YSIsIkNvbXBpbGVUeXBlTWV0YWRhdGEuY29uc3RydWN0b3IiLCJDb21waWxlVHlwZU1ldGFkYXRhLmZyb21Kc29uIiwiQ29tcGlsZVR5cGVNZXRhZGF0YS50b0pzb24iLCJDb21waWxlVGVtcGxhdGVNZXRhZGF0YSIsIkNvbXBpbGVUZW1wbGF0ZU1ldGFkYXRhLmNvbnN0cnVjdG9yIiwiQ29tcGlsZVRlbXBsYXRlTWV0YWRhdGEuZnJvbUpzb24iLCJDb21waWxlVGVtcGxhdGVNZXRhZGF0YS50b0pzb24iLCJDb21waWxlRGlyZWN0aXZlTWV0YWRhdGEiLCJDb21waWxlRGlyZWN0aXZlTWV0YWRhdGEuY29uc3RydWN0b3IiLCJDb21waWxlRGlyZWN0aXZlTWV0YWRhdGEuY3JlYXRlIiwiQ29tcGlsZURpcmVjdGl2ZU1ldGFkYXRhLmZyb21Kc29uIiwiQ29tcGlsZURpcmVjdGl2ZU1ldGFkYXRhLnRvSnNvbiIsImNyZWF0ZUhvc3RDb21wb25lbnRNZXRhIiwiQ29tcGlsZVBpcGVNZXRhZGF0YSIsIkNvbXBpbGVQaXBlTWV0YWRhdGEuY29uc3RydWN0b3IiLCJDb21waWxlUGlwZU1ldGFkYXRhLmZyb21Kc29uIiwiQ29tcGlsZVBpcGVNZXRhZGF0YS50b0pzb24iXSwibWFwcGluZ3MiOiJBQUFBLHFCQVFPLDBCQUEwQixDQUFDLENBQUE7QUFDbEMsMkJBQTRCLGdDQUFnQyxDQUFDLENBQUE7QUFDN0QsMkJBQStC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SUEsQ0FBQ0EsQ0FBQ0E7SUFDbENBLENBQUNBO0lBRU1ELDRCQUFRQSxHQUFmQSxVQUFnQkEsSUFBMEJBO1FBQ3hDRSxNQUFNQSxDQUFDQSxJQUFJQSxtQkFBbUJBLENBQUNBO1lBQzdCQSxJQUFJQSxFQUFFQSxnQkFBU0EsQ0FBQ0EsSUFBSUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsQ0FBQ0EsR0FBR0EsbUJBQW1CQSxDQUFDQSxRQUFRQSxDQUFDQSxJQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxDQUFDQSxHQUFHQSxJQUFJQSxDQUFDQSxNQUFNQSxDQUFDQTtZQUN6RkEsSUFBSUEsRUFBRUEsSUFBSUEsQ0FBQ0EsTUFBTUEsQ0FBQ0E7WUFDbEJBLElBQUlBLEVBQUVBLElBQUlBLENBQUNBLE1BQU1BLENBQUNBO1NBQ25CQSxDQUFDQSxDQUFDQTtJQUNMQSxDQUFDQTtJQUVERixvQ0FBTUEsR0FBTkE7UUFDRUcsTUFBTUEsQ0FBQ0E7WUFDTEEsT0FBT0EsRUFBRUEsTUFBTUE7WUFDZkEsTUFBTUEsRUFBRUEsZ0JBQVNBLENBQUNBLElBQUlBLENBQUNBLElBQUlBLENBQUNBLEdBQUdBLElBQUlBLENBQUNBLElBQUlBLENBQUNBLE1BQU1BLEVBQUVBLEdBQUdBLElBQUlBO1lBQ3hEQSxNQUFNQSxFQUFFQSxJQUFJQSxDQUFDQSxJQUFJQTtZQUNqQkEsTUFBTUEsRUFBRUEsSUFBSUEsQ0FBQ0EsSUFBSUE7U0FDbEJBLENBQUNBO0lBQ0pBLENBQUNBO0lBQ0hILDBCQUFDQTtBQUFEQSxDQUFDQSxBQTNCRCxJQTJCQztBQTNCWSwyQkFBbUIsc0JBMkIvQixDQUFBO0FBRUQsSUFBSSwyQkFBMkIsR0FBRztJQUNoQyxXQUFXLEVBQUUsd0JBQXdCLENBQUMsUUFBUTtJQUM5QyxNQUFNLEVBQUUsbUJBQW1CLENBQUMsUUFBUTtDQUNyQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgaXNQcmVzZW50LFxuICBpc0JsYW5rLFxuICBub3JtYWxpemVCb29sLFxuICBzZXJpYWxpemVFbnVtLFxuICBUeXBlLFxuICBSZWdFeHBXcmFwcGVyLFxuICBTdHJpbmdXcmFwcGVyXG59IGZyb20gJ2FuZ3VsYXIyL3NyYy9mYWNhZGUvbGFuZyc7XG5pbXBvcnQge3VuaW1wbGVtZW50ZWR9IGZyb20gJ2FuZ3VsYXIyL3NyYy9mYWNhZGUvZXhjZXB0aW9ucyc7XG5pbXBvcnQge1N0cmluZ01hcFdyYXBwZXJ9IGZyb20gJ2FuZ3VsYXIyL3NyYy9mYWNhZGUvY29sbGVjdGlvbic7XG5pbXBvcnQge1xuICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSxcbiAgQ0hBTkdFX0RFVEVDVElPTl9TVFJBVEVHWV9WQUxVRVNcbn0gZnJvbSAnYW5ndWxhcjIvc3JjL2NvcmUvY2hhbmdlX2RldGVjdGlvbi9jaGFuZ2VfZGV0ZWN0aW9uJztcbmltcG9ydCB7Vmlld0VuY2Fwc3VsYXRpb24sIFZJRVdfRU5DQVBTVUxBVElPTl9WQUxVRVN9IGZyb20gJ2FuZ3VsYXIyL3NyYy9jb3JlL21ldGFkYXRhL3ZpZXcnO1xuaW1wb3J0IHtDc3NTZWxlY3Rvcn0gZnJvbSAnYW5ndWxhcjIvc3JjL2NvbXBpbGVyL3NlbGVjdG9yJztcbmltcG9ydCB7c3BsaXRBdENvbG9ufSBmcm9tICcuL3V0aWwnO1xuaW1wb3J0IHtMaWZlY3ljbGVIb29rcywgTElGRUNZQ0xFX0hPT0tTX1ZBTFVFU30gZnJvbSAnYW5ndWxhcjIvc3JjL2NvcmUvbGlua2VyL2ludGVyZmFjZXMnO1xuXG4vLyBncm91cCAxOiBcInByb3BlcnR5XCIgZnJvbSBcIltwcm9wZXJ0eV1cIlxuLy8gZ3JvdXAgMjogXCJldmVudFwiIGZyb20gXCIoZXZlbnQpXCJcbnZhciBIT1NUX1JFR19FWFAgPSAvXig/Oig/OlxcWyhbXlxcXV0rKVxcXSl8KD86XFwoKFteXFwpXSspXFwpKSkkL2c7XG5cbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBDb21waWxlTWV0YWRhdGFXaXRoVHlwZSB7XG4gIHN0YXRpYyBmcm9tSnNvbihkYXRhOiB7W2tleTogc3RyaW5nXTogYW55fSk6IENvbXBpbGVNZXRhZGF0YVdpdGhUeXBlIHtcbiAgICByZXR1cm4gX0NPTVBJTEVfTUVUQURBVEFfRlJPTV9KU09OW2RhdGFbJ2NsYXNzJ11dKGRhdGEpO1xuICB9XG5cbiAgYWJzdHJhY3QgdG9Kc29uKCk6IHtba2V5OiBzdHJpbmddOiBhbnl9O1xuXG4gIGdldCB0eXBlKCk6IENvbXBpbGVUeXBlTWV0YWRhdGEgeyByZXR1cm4gdW5pbXBsZW1lbnRlZCgpOyB9XG59XG5cbi8qKlxuICogTWV0YWRhdGEgcmVnYXJkaW5nIGNvbXBpbGF0aW9uIG9mIGEgdHlwZS5cbiAqL1xuZXhwb3J0IGNsYXNzIENvbXBpbGVUeXBlTWV0YWRhdGEge1xuICBydW50aW1lOiBUeXBlO1xuICBuYW1lOiBzdHJpbmc7XG4gIG1vZHVsZVVybDogc3RyaW5nO1xuICBpc0hvc3Q6IGJvb2xlYW47XG4gIGNvbnN0cnVjdG9yKHtydW50aW1lLCBuYW1lLCBtb2R1bGVVcmwsIGlzSG9zdH06XG4gICAgICAgICAgICAgICAgICB7cnVudGltZT86IFR5cGUsIG5hbWU/OiBzdHJpbmcsIG1vZHVsZVVybD86IHN0cmluZywgaXNIb3N0PzogYm9vbGVhbn0gPSB7fSkge1xuICAgIHRoaXMucnVudGltZSA9IHJ1bnRpbWU7XG4gICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICB0aGlzLm1vZHVsZVVybCA9IG1vZHVsZVVybDtcbiAgICB0aGlzLmlzSG9zdCA9IG5vcm1hbGl6ZUJvb2woaXNIb3N0KTtcbiAgfVxuXG4gIHN0YXRpYyBmcm9tSnNvbihkYXRhOiB7W2tleTogc3RyaW5nXTogYW55fSk6IENvbXBpbGVUeXBlTWV0YWRhdGEge1xuICAgIHJldHVybiBuZXcgQ29tcGlsZVR5cGVNZXRhZGF0YShcbiAgICAgICAge25hbWU6IGRhdGFbJ25hbWUnXSwgbW9kdWxlVXJsOiBkYXRhWydtb2R1bGVVcmwnXSwgaXNIb3N0OiBkYXRhWydpc0hvc3QnXX0pO1xuICB9XG5cbiAgdG9Kc29uKCk6IHtba2V5OiBzdHJpbmddOiBhbnl9IHtcbiAgICByZXR1cm4ge1xuICAgICAgLy8gTm90ZTogUnVudGltZSB0eXBlIGNhbid0IGJlIHNlcmlhbGl6ZWQuLi5cbiAgICAgICduYW1lJzogdGhpcy5uYW1lLFxuICAgICAgJ21vZHVsZVVybCc6IHRoaXMubW9kdWxlVXJsLFxuICAgICAgJ2lzSG9zdCc6IHRoaXMuaXNIb3N0XG4gICAgfTtcbiAgfVxufVxuXG4vKipcbiAqIE1ldGFkYXRhIHJlZ2FyZGluZyBjb21waWxhdGlvbiBvZiBhIHRlbXBsYXRlLlxuICovXG5leHBvcnQgY2xhc3MgQ29tcGlsZVRlbXBsYXRlTWV0YWRhdGEge1xuICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbjtcbiAgdGVtcGxhdGU6IHN0cmluZztcbiAgdGVtcGxhdGVVcmw6IHN0cmluZztcbiAgc3R5bGVzOiBzdHJpbmdbXTtcbiAgc3R5bGVVcmxzOiBzdHJpbmdbXTtcbiAgbmdDb250ZW50U2VsZWN0b3JzOiBzdHJpbmdbXTtcbiAgY29uc3RydWN0b3Ioe2VuY2Fwc3VsYXRpb24sIHRlbXBsYXRlLCB0ZW1wbGF0ZVVybCwgc3R5bGVzLCBzdHlsZVVybHMsIG5nQ29udGVudFNlbGVjdG9yc306IHtcbiAgICBlbmNhcHN1bGF0aW9uPzogVmlld0VuY2Fwc3VsYXRpb24sXG4gICAgdGVtcGxhdGU/OiBzdHJpbmcsXG4gICAgdGVtcGxhdGVVcmw/OiBzdHJpbmcsXG4gICAgc3R5bGVzPzogc3RyaW5nW10sXG4gICAgc3R5bGVVcmxzPzogc3RyaW5nW10sXG4gICAgbmdDb250ZW50U2VsZWN0b3JzPzogc3RyaW5nW11cbiAgfSA9IHt9KSB7XG4gICAgdGhpcy5lbmNhcHN1bGF0aW9uID0gaXNQcmVzZW50KGVuY2Fwc3VsYXRpb24pID8gZW5jYXBzdWxhdGlvbiA6IFZpZXdFbmNhcHN1bGF0aW9uLkVtdWxhdGVkO1xuICAgIHRoaXMudGVtcGxhdGUgPSB0ZW1wbGF0ZTtcbiAgICB0aGlzLnRlbXBsYXRlVXJsID0gdGVtcGxhdGVVcmw7XG4gICAgdGhpcy5zdHlsZXMgPSBpc1ByZXNlbnQoc3R5bGVzKSA/IHN0eWxlcyA6IFtdO1xuICAgIHRoaXMuc3R5bGVVcmxzID0gaXNQcmVzZW50KHN0eWxlVXJscykgPyBzdHlsZVVybHMgOiBbXTtcbiAgICB0aGlzLm5nQ29udGVudFNlbGVjdG9ycyA9IGlzUHJlc2VudChuZ0NvbnRlbnRTZWxlY3RvcnMpID8gbmdDb250ZW50U2VsZWN0b3JzIDogW107XG4gIH1cblxuICBzdGF0aWMgZnJvbUpzb24oZGF0YToge1trZXk6IHN0cmluZ106IGFueX0pOiBDb21waWxlVGVtcGxhdGVNZXRhZGF0YSB7XG4gICAgcmV0dXJuIG5ldyBDb21waWxlVGVtcGxhdGVNZXRhZGF0YSh7XG4gICAgICBlbmNhcHN1bGF0aW9uOiBpc1ByZXNlbnQoZGF0YVsnZW5jYXBzdWxhdGlvbiddKSA/XG4gICAgICAgICAgICAgICAgICAgICAgICAgVklFV19FTkNBUFNVTEFUSU9OX1ZBTFVFU1tkYXRhWydlbmNhcHN1bGF0aW9uJ11dIDpcbiAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhWydlbmNhcHN1bGF0aW9uJ10sXG4gICAgICB0ZW1wbGF0ZTogZGF0YVsndGVtcGxhdGUnXSxcbiAgICAgIHRlbXBsYXRlVXJsOiBkYXRhWyd0ZW1wbGF0ZVVybCddLFxuICAgICAgc3R5bGVzOiBkYXRhWydzdHlsZXMnXSxcbiAgICAgIHN0eWxlVXJsczogZGF0YVsnc3R5bGVVcmxzJ10sXG4gICAgICBuZ0NvbnRlbnRTZWxlY3RvcnM6IGRhdGFbJ25nQ29udGVudFNlbGVjdG9ycyddXG4gICAgfSk7XG4gIH1cblxuICB0b0pzb24oKToge1trZXk6IHN0cmluZ106IGFueX0ge1xuICAgIHJldHVybiB7XG4gICAgICAnZW5jYXBzdWxhdGlvbic6XG4gICAgICAgICAgaXNQcmVzZW50KHRoaXMuZW5jYXBzdWxhdGlvbikgPyBzZXJpYWxpemVFbnVtKHRoaXMuZW5jYXBzdWxhdGlvbikgOiB0aGlzLmVuY2Fwc3VsYXRpb24sXG4gICAgICAndGVtcGxhdGUnOiB0aGlzLnRlbXBsYXRlLFxuICAgICAgJ3RlbXBsYXRlVXJsJzogdGhpcy50ZW1wbGF0ZVVybCxcbiAgICAgICdzdHlsZXMnOiB0aGlzLnN0eWxlcyxcbiAgICAgICdzdHlsZVVybHMnOiB0aGlzLnN0eWxlVXJscyxcbiAgICAgICduZ0NvbnRlbnRTZWxlY3RvcnMnOiB0aGlzLm5nQ29udGVudFNlbGVjdG9yc1xuICAgIH07XG4gIH1cbn1cblxuLyoqXG4gKiBNZXRhZGF0YSByZWdhcmRpbmcgY29tcGlsYXRpb24gb2YgYSBkaXJlY3RpdmUuXG4gKi9cbmV4cG9ydCBjbGFzcyBDb21waWxlRGlyZWN0aXZlTWV0YWRhdGEgaW1wbGVtZW50cyBDb21waWxlTWV0YWRhdGFXaXRoVHlwZSB7XG4gIHN0YXRpYyBjcmVhdGUoe3R5cGUsIGlzQ29tcG9uZW50LCBkeW5hbWljTG9hZGFibGUsIHNlbGVjdG9yLCBleHBvcnRBcywgY2hhbmdlRGV0ZWN0aW9uLCBpbnB1dHMsXG4gICAgICAgICAgICAgICAgIG91dHB1dHMsIGhvc3QsIGxpZmVjeWNsZUhvb2tzLCB0ZW1wbGF0ZX06IHtcbiAgICB0eXBlPzogQ29tcGlsZVR5cGVNZXRhZGF0YSxcbiAgICBpc0NvbXBvbmVudD86IGJvb2xlYW4sXG4gICAgZHluYW1pY0xvYWRhYmxlPzogYm9vbGVhbixcbiAgICBzZWxlY3Rvcj86IHN0cmluZyxcbiAgICBleHBvcnRBcz86IHN0cmluZyxcbiAgICBjaGFuZ2VEZXRlY3Rpb24/OiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSxcbiAgICBpbnB1dHM/OiBzdHJpbmdbXSxcbiAgICBvdXRwdXRzPzogc3RyaW5nW10sXG4gICAgaG9zdD86IHtba2V5OiBzdHJpbmddOiBzdHJpbmd9LFxuICAgIGxpZmVjeWNsZUhvb2tzPzogTGlmZWN5Y2xlSG9va3NbXSxcbiAgICB0ZW1wbGF0ZT86IENvbXBpbGVUZW1wbGF0ZU1ldGFkYXRhXG4gIH0gPSB7fSk6IENvbXBpbGVEaXJlY3RpdmVNZXRhZGF0YSB7XG4gICAgdmFyIGhvc3RMaXN0ZW5lcnM6IHtba2V5OiBzdHJpbmddOiBzdHJpbmd9ID0ge307XG4gICAgdmFyIGhvc3RQcm9wZXJ0aWVzOiB7W2tleTogc3RyaW5nXTogc3RyaW5nfSA9IHt9O1xuICAgIHZhciBob3N0QXR0cmlidXRlczoge1trZXk6IHN0cmluZ106IHN0cmluZ30gPSB7fTtcbiAgICBpZiAoaXNQcmVzZW50KGhvc3QpKSB7XG4gICAgICBTdHJpbmdNYXBXcmFwcGVyLmZvckVhY2goaG9zdCwgKHZhbHVlOiBzdHJpbmcsIGtleTogc3RyaW5nKSA9PiB7XG4gICAgICAgIHZhciBtYXRjaGVzID0gUmVnRXhwV3JhcHBlci5maXJzdE1hdGNoKEhPU1RfUkVHX0VYUCwga2V5KTtcbiAgICAgICAgaWYgKGlzQmxhbmsobWF0Y2hlcykpIHtcbiAgICAgICAgICBob3N0QXR0cmlidXRlc1trZXldID0gdmFsdWU7XG4gICAgICAgIH0gZWxzZSBpZiAoaXNQcmVzZW50KG1hdGNoZXNbMV0pKSB7XG4gICAgICAgICAgaG9zdFByb3BlcnRpZXNbbWF0Y2hlc1sxXV0gPSB2YWx1ZTtcbiAgICAgICAgfSBlbHNlIGlmIChpc1ByZXNlbnQobWF0Y2hlc1syXSkpIHtcbiAgICAgICAgICBob3N0TGlzdGVuZXJzW21hdGNoZXNbMl1dID0gdmFsdWU7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgICB2YXIgaW5wdXRzTWFwOiB7W2tleTogc3RyaW5nXTogc3RyaW5nfSA9IHt9O1xuICAgIGlmIChpc1ByZXNlbnQoaW5wdXRzKSkge1xuICAgICAgaW5wdXRzLmZvckVhY2goKGJpbmRDb25maWc6IHN0cmluZykgPT4ge1xuICAgICAgICAvLyBjYW5vbmljYWwgc3ludGF4OiBgZGlyUHJvcDogZWxQcm9wYFxuICAgICAgICAvLyBpZiB0aGVyZSBpcyBubyBgOmAsIHVzZSBkaXJQcm9wID0gZWxQcm9wXG4gICAgICAgIHZhciBwYXJ0cyA9IHNwbGl0QXRDb2xvbihiaW5kQ29uZmlnLCBbYmluZENvbmZpZywgYmluZENvbmZpZ10pO1xuICAgICAgICBpbnB1dHNNYXBbcGFydHNbMF1dID0gcGFydHNbMV07XG4gICAgICB9KTtcbiAgICB9XG4gICAgdmFyIG91dHB1dHNNYXA6IHtba2V5OiBzdHJpbmddOiBzdHJpbmd9ID0ge307XG4gICAgaWYgKGlzUHJlc2VudChvdXRwdXRzKSkge1xuICAgICAgb3V0cHV0cy5mb3JFYWNoKChiaW5kQ29uZmlnOiBzdHJpbmcpID0+IHtcbiAgICAgICAgLy8gY2Fub25pY2FsIHN5bnRheDogYGRpclByb3A6IGVsUHJvcGBcbiAgICAgICAgLy8gaWYgdGhlcmUgaXMgbm8gYDpgLCB1c2UgZGlyUHJvcCA9IGVsUHJvcFxuICAgICAgICB2YXIgcGFydHMgPSBzcGxpdEF0Q29sb24oYmluZENvbmZpZywgW2JpbmRDb25maWcsIGJpbmRDb25maWddKTtcbiAgICAgICAgb3V0cHV0c01hcFtwYXJ0c1swXV0gPSBwYXJ0c1sxXTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiBuZXcgQ29tcGlsZURpcmVjdGl2ZU1ldGFkYXRhKHtcbiAgICAgIHR5cGU6IHR5cGUsXG4gICAgICBpc0NvbXBvbmVudDogbm9ybWFsaXplQm9vbChpc0NvbXBvbmVudCksXG4gICAgICBkeW5hbWljTG9hZGFibGU6IG5vcm1hbGl6ZUJvb2woZHluYW1pY0xvYWRhYmxlKSxcbiAgICAgIHNlbGVjdG9yOiBzZWxlY3RvcixcbiAgICAgIGV4cG9ydEFzOiBleHBvcnRBcyxcbiAgICAgIGNoYW5nZURldGVjdGlvbjogY2hhbmdlRGV0ZWN0aW9uLFxuICAgICAgaW5wdXRzOiBpbnB1dHNNYXAsXG4gICAgICBvdXRwdXRzOiBvdXRwdXRzTWFwLFxuICAgICAgaG9zdExpc3RlbmVyczogaG9zdExpc3RlbmVycyxcbiAgICAgIGhvc3RQcm9wZXJ0aWVzOiBob3N0UHJvcGVydGllcyxcbiAgICAgIGhvc3RBdHRyaWJ1dGVzOiBob3N0QXR0cmlidXRlcyxcbiAgICAgIGxpZmVjeWNsZUhvb2tzOiBpc1ByZXNlbnQobGlmZWN5Y2xlSG9va3MpID8gbGlmZWN5Y2xlSG9va3MgOiBbXSxcbiAgICAgIHRlbXBsYXRlOiB0ZW1wbGF0ZVxuICAgIH0pO1xuICB9XG5cbiAgdHlwZTogQ29tcGlsZVR5cGVNZXRhZGF0YTtcbiAgaXNDb21wb25lbnQ6IGJvb2xlYW47XG4gIGR5bmFtaWNMb2FkYWJsZTogYm9vbGVhbjtcbiAgc2VsZWN0b3I6IHN0cmluZztcbiAgZXhwb3J0QXM6IHN0cmluZztcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneTtcbiAgaW5wdXRzOiB7W2tleTogc3RyaW5nXTogc3RyaW5nfTtcbiAgb3V0cHV0czoge1trZXk6IHN0cmluZ106IHN0cmluZ307XG4gIGhvc3RMaXN0ZW5lcnM6IHtba2V5OiBzdHJpbmddOiBzdHJpbmd9O1xuICBob3N0UHJvcGVydGllczoge1trZXk6IHN0cmluZ106IHN0cmluZ307XG4gIGhvc3RBdHRyaWJ1dGVzOiB7W2tleTogc3RyaW5nXTogc3RyaW5nfTtcbiAgbGlmZWN5Y2xlSG9va3M6IExpZmVjeWNsZUhvb2tzW107XG4gIHRlbXBsYXRlOiBDb21waWxlVGVtcGxhdGVNZXRhZGF0YTtcbiAgY29uc3RydWN0b3Ioe3R5cGUsIGlzQ29tcG9uZW50LCBkeW5hbWljTG9hZGFibGUsIHNlbGVjdG9yLCBleHBvcnRBcywgY2hhbmdlRGV0ZWN0aW9uLCBpbnB1dHMsXG4gICAgICAgICAgICAgICBvdXRwdXRzLCBob3N0TGlzdGVuZXJzLCBob3N0UHJvcGVydGllcywgaG9zdEF0dHJpYnV0ZXMsIGxpZmVjeWNsZUhvb2tzLCB0ZW1wbGF0ZX06IHtcbiAgICB0eXBlPzogQ29tcGlsZVR5cGVNZXRhZGF0YSxcbiAgICBpc0NvbXBvbmVudD86IGJvb2xlYW4sXG4gICAgZHluYW1pY0xvYWRhYmxlPzogYm9vbGVhbixcbiAgICBzZWxlY3Rvcj86IHN0cmluZyxcbiAgICBleHBvcnRBcz86IHN0cmluZyxcbiAgICBjaGFuZ2VEZXRlY3Rpb24/OiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSxcbiAgICBpbnB1dHM/OiB7W2tleTogc3RyaW5nXTogc3RyaW5nfSxcbiAgICBvdXRwdXRzPzoge1trZXk6IHN0cmluZ106IHN0cmluZ30sXG4gICAgaG9zdExpc3RlbmVycz86IHtba2V5OiBzdHJpbmddOiBzdHJpbmd9LFxuICAgIGhvc3RQcm9wZXJ0aWVzPzoge1trZXk6IHN0cmluZ106IHN0cmluZ30sXG4gICAgaG9zdEF0dHJpYnV0ZXM/OiB7W2tleTogc3RyaW5nXTogc3RyaW5nfSxcbiAgICBsaWZlY3ljbGVIb29rcz86IExpZmVjeWNsZUhvb2tzW10sXG4gICAgdGVtcGxhdGU/OiBDb21waWxlVGVtcGxhdGVNZXRhZGF0YVxuICB9ID0ge30pIHtcbiAgICB0aGlzLnR5cGUgPSB0eXBlO1xuICAgIHRoaXMuaXNDb21wb25lbnQgPSBpc0NvbXBvbmVudDtcbiAgICB0aGlzLmR5bmFtaWNMb2FkYWJsZSA9IGR5bmFtaWNMb2FkYWJsZTtcbiAgICB0aGlzLnNlbGVjdG9yID0gc2VsZWN0b3I7XG4gICAgdGhpcy5leHBvcnRBcyA9IGV4cG9ydEFzO1xuICAgIHRoaXMuY2hhbmdlRGV0ZWN0aW9uID0gY2hhbmdlRGV0ZWN0aW9uO1xuICAgIHRoaXMuaW5wdXRzID0gaW5wdXRzO1xuICAgIHRoaXMub3V0cHV0cyA9IG91dHB1dHM7XG4gICAgdGhpcy5ob3N0TGlzdGVuZXJzID0gaG9zdExpc3RlbmVycztcbiAgICB0aGlzLmhvc3RQcm9wZXJ0aWVzID0gaG9zdFByb3BlcnRpZXM7XG4gICAgdGhpcy5ob3N0QXR0cmlidXRlcyA9IGhvc3RBdHRyaWJ1dGVzO1xuICAgIHRoaXMubGlmZWN5Y2xlSG9va3MgPSBsaWZlY3ljbGVIb29rcztcbiAgICB0aGlzLnRlbXBsYXRlID0gdGVtcGxhdGU7XG4gIH1cblxuICBzdGF0aWMgZnJvbUpzb24oZGF0YToge1trZXk6IHN0cmluZ106IGFueX0pOiBDb21waWxlRGlyZWN0aXZlTWV0YWRhdGEge1xuICAgIHJldHVybiBuZXcgQ29tcGlsZURpcmVjdGl2ZU1ldGFkYXRhKHtcbiAgICAgIGlzQ29tcG9uZW50OiBkYXRhWydpc0NvbXBvbmVudCddLFxuICAgICAgZHluYW1pY0xvYWRhYmxlOiBkYXRhWydkeW5hbWljTG9hZGFibGUnXSxcbiAgICAgIHNlbGVjdG9yOiBkYXRhWydzZWxlY3RvciddLFxuICAgICAgZXhwb3J0QXM6IGRhdGFbJ2V4cG9ydEFzJ10sXG4gICAgICB0eXBlOiBpc1ByZXNlbnQoZGF0YVsndHlwZSddKSA/IENvbXBpbGVUeXBlTWV0YWRhdGEuZnJvbUpzb24oZGF0YVsndHlwZSddKSA6IGRhdGFbJ3R5cGUnXSxcbiAgICAgIGNoYW5nZURldGVjdGlvbjogaXNQcmVzZW50KGRhdGFbJ2NoYW5nZURldGVjdGlvbiddKSA/XG4gICAgICAgICAgICAgICAgICAgICAgICAgICBDSEFOR0VfREVURUNUSU9OX1NUUkFURUdZX1ZBTFVFU1tkYXRhWydjaGFuZ2VEZXRlY3Rpb24nXV0gOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YVsnY2hhbmdlRGV0ZWN0aW9uJ10sXG4gICAgICBpbnB1dHM6IGRhdGFbJ2lucHV0cyddLFxuICAgICAgb3V0cHV0czogZGF0YVsnb3V0cHV0cyddLFxuICAgICAgaG9zdExpc3RlbmVyczogZGF0YVsnaG9zdExpc3RlbmVycyddLFxuICAgICAgaG9zdFByb3BlcnRpZXM6IGRhdGFbJ2hvc3RQcm9wZXJ0aWVzJ10sXG4gICAgICBob3N0QXR0cmlidXRlczogZGF0YVsnaG9zdEF0dHJpYnV0ZXMnXSxcbiAgICAgIGxpZmVjeWNsZUhvb2tzOlxuICAgICAgICAgICg8YW55W10+ZGF0YVsnbGlmZWN5Y2xlSG9va3MnXSkubWFwKGhvb2tWYWx1ZSA9PiBMSUZFQ1lDTEVfSE9PS1NfVkFMVUVTW2hvb2tWYWx1ZV0pLFxuICAgICAgdGVtcGxhdGU6IGlzUHJlc2VudChkYXRhWyd0ZW1wbGF0ZSddKSA/IENvbXBpbGVUZW1wbGF0ZU1ldGFkYXRhLmZyb21Kc29uKGRhdGFbJ3RlbXBsYXRlJ10pIDpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhWyd0ZW1wbGF0ZSddXG4gICAgfSk7XG4gIH1cblxuICB0b0pzb24oKToge1trZXk6IHN0cmluZ106IGFueX0ge1xuICAgIHJldHVybiB7XG4gICAgICAnY2xhc3MnOiAnRGlyZWN0aXZlJyxcbiAgICAgICdpc0NvbXBvbmVudCc6IHRoaXMuaXNDb21wb25lbnQsXG4gICAgICAnZHluYW1pY0xvYWRhYmxlJzogdGhpcy5keW5hbWljTG9hZGFibGUsXG4gICAgICAnc2VsZWN0b3InOiB0aGlzLnNlbGVjdG9yLFxuICAgICAgJ2V4cG9ydEFzJzogdGhpcy5leHBvcnRBcyxcbiAgICAgICd0eXBlJzogaXNQcmVzZW50KHRoaXMudHlwZSkgPyB0aGlzLnR5cGUudG9Kc29uKCkgOiB0aGlzLnR5cGUsXG4gICAgICAnY2hhbmdlRGV0ZWN0aW9uJzogaXNQcmVzZW50KHRoaXMuY2hhbmdlRGV0ZWN0aW9uKSA/IHNlcmlhbGl6ZUVudW0odGhpcy5jaGFuZ2VEZXRlY3Rpb24pIDpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jaGFuZ2VEZXRlY3Rpb24sXG4gICAgICAnaW5wdXRzJzogdGhpcy5pbnB1dHMsXG4gICAgICAnb3V0cHV0cyc6IHRoaXMub3V0cHV0cyxcbiAgICAgICdob3N0TGlzdGVuZXJzJzogdGhpcy5ob3N0TGlzdGVuZXJzLFxuICAgICAgJ2hvc3RQcm9wZXJ0aWVzJzogdGhpcy5ob3N0UHJvcGVydGllcyxcbiAgICAgICdob3N0QXR0cmlidXRlcyc6IHRoaXMuaG9zdEF0dHJpYnV0ZXMsXG4gICAgICAnbGlmZWN5Y2xlSG9va3MnOiB0aGlzLmxpZmVjeWNsZUhvb2tzLm1hcChob29rID0+IHNlcmlhbGl6ZUVudW0oaG9vaykpLFxuICAgICAgJ3RlbXBsYXRlJzogaXNQcmVzZW50KHRoaXMudGVtcGxhdGUpID8gdGhpcy50ZW1wbGF0ZS50b0pzb24oKSA6IHRoaXMudGVtcGxhdGVcbiAgICB9O1xuICB9XG59XG5cbi8qKlxuICogQ29uc3RydWN0IHtAbGluayBDb21waWxlRGlyZWN0aXZlTWV0YWRhdGF9IGZyb20ge0BsaW5rIENvbXBvbmVudFR5cGVNZXRhZGF0YX0gYW5kIGEgc2VsZWN0b3IuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVIb3N0Q29tcG9uZW50TWV0YShjb21wb25lbnRUeXBlOiBDb21waWxlVHlwZU1ldGFkYXRhLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbXBvbmVudFNlbGVjdG9yOiBzdHJpbmcpOiBDb21waWxlRGlyZWN0aXZlTWV0YWRhdGEge1xuICB2YXIgdGVtcGxhdGUgPSBDc3NTZWxlY3Rvci5wYXJzZShjb21wb25lbnRTZWxlY3RvcilbMF0uZ2V0TWF0Y2hpbmdFbGVtZW50VGVtcGxhdGUoKTtcbiAgcmV0dXJuIENvbXBpbGVEaXJlY3RpdmVNZXRhZGF0YS5jcmVhdGUoe1xuICAgIHR5cGU6IG5ldyBDb21waWxlVHlwZU1ldGFkYXRhKHtcbiAgICAgIHJ1bnRpbWU6IE9iamVjdCxcbiAgICAgIG5hbWU6IGBIb3N0JHtjb21wb25lbnRUeXBlLm5hbWV9YCxcbiAgICAgIG1vZHVsZVVybDogY29tcG9uZW50VHlwZS5tb2R1bGVVcmwsXG4gICAgICBpc0hvc3Q6IHRydWVcbiAgICB9KSxcbiAgICB0ZW1wbGF0ZTogbmV3IENvbXBpbGVUZW1wbGF0ZU1ldGFkYXRhKFxuICAgICAgICB7dGVtcGxhdGU6IHRlbXBsYXRlLCB0ZW1wbGF0ZVVybDogJycsIHN0eWxlczogW10sIHN0eWxlVXJsczogW10sIG5nQ29udGVudFNlbGVjdG9yczogW119KSxcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LkRlZmF1bHQsXG4gICAgaW5wdXRzOiBbXSxcbiAgICBvdXRwdXRzOiBbXSxcbiAgICBob3N0OiB7fSxcbiAgICBsaWZlY3ljbGVIb29rczogW10sXG4gICAgaXNDb21wb25lbnQ6IHRydWUsXG4gICAgZHluYW1pY0xvYWRhYmxlOiBmYWxzZSxcbiAgICBzZWxlY3RvcjogJyonXG4gIH0pO1xufVxuXG5cbmV4cG9ydCBjbGFzcyBDb21waWxlUGlwZU1ldGFkYXRhIGltcGxlbWVudHMgQ29tcGlsZU1ldGFkYXRhV2l0aFR5cGUge1xuICB0eXBlOiBDb21waWxlVHlwZU1ldGFkYXRhO1xuICBuYW1lOiBzdHJpbmc7XG4gIHB1cmU6IGJvb2xlYW47XG4gIGNvbnN0cnVjdG9yKHt0eXBlLCBuYW1lLFxuICAgICAgICAgICAgICAgcHVyZX06IHt0eXBlPzogQ29tcGlsZVR5cGVNZXRhZGF0YSwgbmFtZT86IHN0cmluZywgcHVyZT86IGJvb2xlYW59ID0ge30pIHtcbiAgICB0aGlzLnR5cGUgPSB0eXBlO1xuICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICAgdGhpcy5wdXJlID0gbm9ybWFsaXplQm9vbChwdXJlKTtcbiAgfVxuXG4gIHN0YXRpYyBmcm9tSnNvbihkYXRhOiB7W2tleTogc3RyaW5nXTogYW55fSk6IENvbXBpbGVQaXBlTWV0YWRhdGEge1xuICAgIHJldHVybiBuZXcgQ29tcGlsZVBpcGVNZXRhZGF0YSh7XG4gICAgICB0eXBlOiBpc1ByZXNlbnQoZGF0YVsndHlwZSddKSA/IENvbXBpbGVUeXBlTWV0YWRhdGEuZnJvbUpzb24oZGF0YVsndHlwZSddKSA6IGRhdGFbJ3R5cGUnXSxcbiAgICAgIG5hbWU6IGRhdGFbJ25hbWUnXSxcbiAgICAgIHB1cmU6IGRhdGFbJ3B1cmUnXVxuICAgIH0pO1xuICB9XG5cbiAgdG9Kc29uKCk6IHtba2V5OiBzdHJpbmddOiBhbnl9IHtcbiAgICByZXR1cm4ge1xuICAgICAgJ2NsYXNzJzogJ1BpcGUnLFxuICAgICAgJ3R5cGUnOiBpc1ByZXNlbnQodGhpcy50eXBlKSA/IHRoaXMudHlwZS50b0pzb24oKSA6IG51bGwsXG4gICAgICAnbmFtZSc6IHRoaXMubmFtZSxcbiAgICAgICdwdXJlJzogdGhpcy5wdXJlXG4gICAgfTtcbiAgfVxufVxuXG52YXIgX0NPTVBJTEVfTUVUQURBVEFfRlJPTV9KU09OID0ge1xuICAnRGlyZWN0aXZlJzogQ29tcGlsZURpcmVjdGl2ZU1ldGFkYXRhLmZyb21Kc29uLFxuICAnUGlwZSc6IENvbXBpbGVQaXBlTWV0YWRhdGEuZnJvbUpzb25cbn07XG4iXX0=\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/compiler/directive_metadata.js\n ** module id = 59\n ** module chunks = 1\n **/","'use strict';// TODO: vsavkin rename it into TemplateLoader\r\n/**\r\n * An interface for retrieving documents by URL that the compiler uses\r\n * to load templates.\r\n */\r\nvar XHR = (function () {\r\n    function XHR() {\r\n    }\r\n    XHR.prototype.get = function (url) { return null; };\r\n    return XHR;\r\n})();\r\nexports.XHR = XHR;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoieGhyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYW5ndWxhcjIvc3JjL2NvbXBpbGVyL3hoci50cyJdLCJuYW1lcyI6WyJYSFIiLCJYSFIuY29uc3RydWN0b3IiLCJYSFIuZ2V0Il0sIm1hcHBpbmdzIjoiQUFFQSw4Q0FBOEM7QUFDOUM7OztHQUdHO0FBQ0g7SUFBQUE7SUFFQUMsQ0FBQ0E7SUFEQ0QsaUJBQUdBLEdBQUhBLFVBQUlBLEdBQVdBLElBQXFCRSxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQSxDQUFDQSxDQUFDQTtJQUNwREYsVUFBQ0E7QUFBREEsQ0FBQ0EsQUFGRCxJQUVDO0FBRlksV0FBRyxNQUVmLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1Byb21pc2V9IGZyb20gJ2FuZ3VsYXIyL3NyYy9mYWNhZGUvYXN5bmMnO1xuXG4vLyBUT0RPOiB2c2F2a2luIHJlbmFtZSBpdCBpbnRvIFRlbXBsYXRlTG9hZGVyXG4vKipcbiAqIEFuIGludGVyZmFjZSBmb3IgcmV0cmlldmluZyBkb2N1bWVudHMgYnkgVVJMIHRoYXQgdGhlIGNvbXBpbGVyIHVzZXNcbiAqIHRvIGxvYWQgdGVtcGxhdGVzLlxuICovXG5leHBvcnQgY2xhc3MgWEhSIHtcbiAgZ2V0KHVybDogc3RyaW5nKTogUHJvbWlzZTxzdHJpbmc+IHsgcmV0dXJuIG51bGw7IH1cbn1cbiJdfQ==\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/compiler/xhr.js\n ** module id = 60\n ** module chunks = 1\n **/","'use strict';(function (LifecycleHooks) {\r\n    LifecycleHooks[LifecycleHooks[\"OnInit\"] = 0] = \"OnInit\";\r\n    LifecycleHooks[LifecycleHooks[\"OnDestroy\"] = 1] = \"OnDestroy\";\r\n    LifecycleHooks[LifecycleHooks[\"DoCheck\"] = 2] = \"DoCheck\";\r\n    LifecycleHooks[LifecycleHooks[\"OnChanges\"] = 3] = \"OnChanges\";\r\n    LifecycleHooks[LifecycleHooks[\"AfterContentInit\"] = 4] = \"AfterContentInit\";\r\n    LifecycleHooks[LifecycleHooks[\"AfterContentChecked\"] = 5] = \"AfterContentChecked\";\r\n    LifecycleHooks[LifecycleHooks[\"AfterViewInit\"] = 6] = \"AfterViewInit\";\r\n    LifecycleHooks[LifecycleHooks[\"AfterViewChecked\"] = 7] = \"AfterViewChecked\";\r\n})(exports.LifecycleHooks || (exports.LifecycleHooks = {}));\r\nvar LifecycleHooks = exports.LifecycleHooks;\r\n/**\r\n * @internal\r\n */\r\nexports.LIFECYCLE_HOOKS_VALUES = [\r\n    LifecycleHooks.OnInit,\r\n    LifecycleHooks.OnDestroy,\r\n    LifecycleHooks.DoCheck,\r\n    LifecycleHooks.OnChanges,\r\n    LifecycleHooks.AfterContentInit,\r\n    LifecycleHooks.AfterContentChecked,\r\n    LifecycleHooks.AfterViewInit,\r\n    LifecycleHooks.AfterViewChecked\r\n];\r\n//# sourceMappingURL=data:application/json;base64,\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/core/linker/interfaces.js\n ** module id = 63\n ** module chunks = 1\n **/","'use strict';var __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar dom_adapter_1 = require('angular2/src/platform/dom/dom_adapter');\r\nvar di_1 = require('angular2/src/core/di');\r\nvar collection_1 = require('angular2/src/facade/collection');\r\nvar dom_tokens_1 = require('./dom_tokens');\r\nvar SharedStylesHost = (function () {\r\n    function SharedStylesHost() {\r\n        /** @internal */\r\n        this._styles = [];\r\n        /** @internal */\r\n        this._stylesSet = new Set();\r\n    }\r\n    SharedStylesHost.prototype.addStyles = function (styles) {\r\n        var _this = this;\r\n        var additions = [];\r\n        styles.forEach(function (style) {\r\n            if (!collection_1.SetWrapper.has(_this._stylesSet, style)) {\r\n                _this._stylesSet.add(style);\r\n                _this._styles.push(style);\r\n                additions.push(style);\r\n            }\r\n        });\r\n        this.onStylesAdded(additions);\r\n    };\r\n    SharedStylesHost.prototype.onStylesAdded = function (additions) { };\r\n    SharedStylesHost.prototype.getAllStyles = function () { return this._styles; };\r\n    SharedStylesHost = __decorate([\r\n        di_1.Injectable(), \r\n        __metadata('design:paramtypes', [])\r\n    ], SharedStylesHost);\r\n    return SharedStylesHost;\r\n})();\r\nexports.SharedStylesHost = SharedStylesHost;\r\nvar DomSharedStylesHost = (function (_super) {\r\n    __extends(DomSharedStylesHost, _super);\r\n    function DomSharedStylesHost(doc) {\r\n        _super.call(this);\r\n        this._hostNodes = new Set();\r\n        this._hostNodes.add(doc.head);\r\n    }\r\n    /** @internal */\r\n    DomSharedStylesHost.prototype._addStylesToHost = function (styles, host) {\r\n        for (var i = 0; i < styles.length; i++) {\r\n            var style = styles[i];\r\n            dom_adapter_1.DOM.appendChild(host, dom_adapter_1.DOM.createStyleElement(style));\r\n        }\r\n    };\r\n    DomSharedStylesHost.prototype.addHost = function (hostNode) {\r\n        this._addStylesToHost(this._styles, hostNode);\r\n        this._hostNodes.add(hostNode);\r\n    };\r\n    DomSharedStylesHost.prototype.removeHost = function (hostNode) { collection_1.SetWrapper.delete(this._hostNodes, hostNode); };\r\n    DomSharedStylesHost.prototype.onStylesAdded = function (additions) {\r\n        var _this = this;\r\n        this._hostNodes.forEach(function (hostNode) { _this._addStylesToHost(additions, hostNode); });\r\n    };\r\n    DomSharedStylesHost = __decorate([\r\n        di_1.Injectable(),\r\n        __param(0, di_1.Inject(dom_tokens_1.DOCUMENT)), \r\n        __metadata('design:paramtypes', [Object])\r\n    ], DomSharedStylesHost);\r\n    return DomSharedStylesHost;\r\n})(SharedStylesHost);\r\nexports.DomSharedStylesHost = DomSharedStylesHost;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2hhcmVkX3N0eWxlc19ob3N0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYW5ndWxhcjIvc3JjL3BsYXRmb3JtL2RvbS9zaGFyZWRfc3R5bGVzX2hvc3QudHMiXSwibmFtZXMiOlsiU2hhcmVkU3R5bGVzSG9zdCIsIlNoYXJlZFN0eWxlc0hvc3QuY29uc3RydWN0b3IiLCJTaGFyZWRTdHlsZXNIb3N0LmFkZFN0eWxlcyIsIlNoYXJlZFN0eWxlc0hvc3Qub25TdHlsZXNBZGRlZCIsIlNoYXJlZFN0eWxlc0hvc3QuZ2V0QWxsU3R5bGVzIiwiRG9tU2hhcmVkU3R5bGVzSG9zdCIsIkRvbVNoYXJlZFN0eWxlc0hvc3QuY29uc3RydWN0b3IiLCJEb21TaGFyZWRTdHlsZXNIb3N0Ll9hZGRTdHlsZXNUb0hvc3QiLCJEb21TaGFyZWRTdHlsZXNIb3N0LmFkZEhvc3QiLCJEb21TaGFyZWRTdHlsZXNIb3N0LnJlbW92ZUhvc3QiLCJEb21TaGFyZWRTdHlsZXNIb3N0Lm9uU3R5bGVzQWRkZWQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsNEJBQWtCLHVDQUF1QyxDQUFDLENBQUE7QUFDMUQsbUJBQWlDLHNCQUFzQixDQUFDLENBQUE7QUFDeEQsMkJBQXlCLGdDQUFnQyxDQUFDLENBQUE7QUFDMUQsMkJBQXVCLGNBQWMsQ0FBQyxDQUFBO0FBRXRDO0lBT0VBO1FBTEFDLGdCQUFnQkE7UUFDaEJBLFlBQU9BLEdBQWFBLEVBQUVBLENBQUNBO1FBQ3ZCQSxnQkFBZ0JBO1FBQ2hCQSxlQUFVQSxHQUFHQSxJQUFJQSxHQUFHQSxFQUFVQSxDQUFDQTtJQUVoQkEsQ0FBQ0E7SUFFaEJELG9DQUFTQSxHQUFUQSxVQUFVQSxNQUFnQkE7UUFBMUJFLGlCQVVDQTtRQVRDQSxJQUFJQSxTQUFTQSxHQUFHQSxFQUFFQSxDQUFDQTtRQUNuQkEsTUFBTUEsQ0FBQ0EsT0FBT0EsQ0FBQ0EsVUFBQUEsS0FBS0E7WUFDbEJBLEVBQUVBLENBQUNBLENBQUNBLENBQUNB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ZnJvbSAnYW5ndWxhcjIvc3JjL3BsYXRmb3JtL2RvbS9kb21fYWRhcHRlcic7XG5pbXBvcnQge0luamVjdCwgSW5qZWN0YWJsZX0gZnJvbSAnYW5ndWxhcjIvc3JjL2NvcmUvZGknO1xuaW1wb3J0IHtTZXRXcmFwcGVyfSBmcm9tICdhbmd1bGFyMi9zcmMvZmFjYWRlL2NvbGxlY3Rpb24nO1xuaW1wb3J0IHtET0NVTUVOVH0gZnJvbSAnLi9kb21fdG9rZW5zJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFNoYXJlZFN0eWxlc0hvc3Qge1xuICAvKiogQGludGVybmFsICovXG4gIF9zdHlsZXM6IHN0cmluZ1tdID0gW107XG4gIC8qKiBAaW50ZXJuYWwgKi9cbiAgX3N0eWxlc1NldCA9IG5ldyBTZXQ8c3RyaW5nPigpO1xuXG4gIGNvbnN0cnVjdG9yKCkge31cblxuICBhZGRTdHlsZXMoc3R5bGVzOiBzdHJpbmdbXSkge1xuICAgIHZhciBhZGRpdGlvbnMgPSBbXTtcbiAgICBzdHlsZXMuZm9yRWFjaChzdHlsZSA9PiB7XG4gICAgICBpZiAoIVNldFdyYXBwZXIuaGFzKHRoaXMuX3N0eWxlc1NldCwgc3R5bGUpKSB7XG4gICAgICAgIHRoaXMuX3N0eWxlc1NldC5hZGQoc3R5bGUpO1xuICAgICAgICB0aGlzLl9zdHlsZXMucHVzaChzdHlsZSk7XG4gICAgICAgIGFkZGl0aW9ucy5wdXNoKHN0eWxlKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICB0aGlzLm9uU3R5bGVzQWRkZWQoYWRkaXRpb25zKTtcbiAgfVxuXG4gIG9uU3R5bGVzQWRkZWQoYWRkaXRpb25zOiBzdHJpbmdbXSkge31cblxuICBnZXRBbGxTdHlsZXMoKTogc3RyaW5nW10geyByZXR1cm4gdGhpcy5fc3R5bGVzOyB9XG59XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBEb21TaGFyZWRTdHlsZXNIb3N0IGV4dGVuZHMgU2hhcmVkU3R5bGVzSG9zdCB7XG4gIHByaXZhdGUgX2hvc3ROb2RlcyA9IG5ldyBTZXQ8Tm9kZT4oKTtcbiAgY29uc3RydWN0b3IoQEluamVjdChET0NVTUVOVCkgZG9jOiBhbnkpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuX2hvc3ROb2Rlcy5hZGQoZG9jLmhlYWQpO1xuICB9XG4gIC8qKiBAaW50ZXJuYWwgKi9cbiAgX2FkZFN0eWxlc1RvSG9zdChzdHlsZXM6IHN0cmluZ1tdLCBob3N0OiBOb2RlKSB7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBzdHlsZSA9IHN0eWxlc1tpXTtcbiAgICAgIERPTS5hcHBlbmRDaGlsZChob3N0LCBET00uY3JlYXRlU3R5bGVFbGVtZW50KHN0eWxlKSk7XG4gICAgfVxuICB9XG4gIGFkZEhvc3QoaG9zdE5vZGU6IE5vZGUpIHtcbiAgICB0aGlzLl9hZGRTdHlsZXNUb0hvc3QodGhpcy5fc3R5bGVzLCBob3N0Tm9kZSk7XG4gICAgdGhpcy5faG9zdE5vZGVzLmFkZChob3N0Tm9kZSk7XG4gIH1cbiAgcmVtb3ZlSG9zdChob3N0Tm9kZTogTm9kZSkgeyBTZXRXcmFwcGVyLmRlbGV0ZSh0aGlzLl9ob3N0Tm9kZXMsIGhvc3ROb2RlKTsgfVxuXG4gIG9uU3R5bGVzQWRkZWQoYWRkaXRpb25zOiBzdHJpbmdbXSkge1xuICAgIHRoaXMuX2hvc3ROb2Rlcy5mb3JFYWNoKChob3N0Tm9kZSkgPT4geyB0aGlzLl9hZGRTdHlsZXNUb0hvc3QoYWRkaXRpb25zLCBob3N0Tm9kZSk7IH0pO1xuICB9XG59XG4iXX0=\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/platform/dom/shared_styles_host.js\n ** module id = 72\n ** module chunks = 1\n **/","'use strict';var lang_1 = require('angular2/src/facade/lang');\r\nvar HtmlTextAst = (function () {\r\n    function HtmlTextAst(value, sourceSpan) {\r\n        this.value = value;\r\n        this.sourceSpan = sourceSpan;\r\n    }\r\n    HtmlTextAst.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\r\n    return HtmlTextAst;\r\n})();\r\nexports.HtmlTextAst = HtmlTextAst;\r\nvar HtmlAttrAst = (function () {\r\n    function HtmlAttrAst(name, value, sourceSpan) {\r\n        this.name = name;\r\n        this.value = value;\r\n        this.sourceSpan = sourceSpan;\r\n    }\r\n    HtmlAttrAst.prototype.visit = function (visitor, context) { return visitor.visitAttr(this, context); };\r\n    return HtmlAttrAst;\r\n})();\r\nexports.HtmlAttrAst = HtmlAttrAst;\r\nvar HtmlElementAst = (function () {\r\n    function HtmlElementAst(name, attrs, children, sourceSpan) {\r\n        this.name = name;\r\n        this.attrs = attrs;\r\n        this.children = children;\r\n        this.sourceSpan = sourceSpan;\r\n    }\r\n    HtmlElementAst.prototype.visit = function (visitor, context) { return visitor.visitElement(this, context); };\r\n    return HtmlElementAst;\r\n})();\r\nexports.HtmlElementAst = HtmlElementAst;\r\nfunction htmlVisitAll(visitor, asts, context) {\r\n    if (context === void 0) { context = null; }\r\n    var result = [];\r\n    asts.forEach(function (ast) {\r\n        var astResult = ast.visit(visitor, context);\r\n        if (lang_1.isPresent(astResult)) {\r\n            result.push(astResult);\r\n        }\r\n    });\r\n    return result;\r\n}\r\nexports.htmlVisitAll = htmlVisitAll;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaHRtbF9hc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJhbmd1bGFyMi9zcmMvY29tcGlsZXIvaHRtbF9hc3QudHMiXSwibmFtZXMiOlsiSHRtbFRleHRBc3QiLCJIdG1sVGV4dEFzdC5jb25zdHJ1Y3RvciIsIkh0bWxUZXh0QXN0LnZpc2l0IiwiSHRtbEF0dHJBc3QiLCJIdG1sQXR0ckFzdC5jb25zdHJ1Y3RvciIsIkh0bWxBdHRyQXN0LnZpc2l0IiwiSHRtbEVsZW1lbnRBc3QiLCJIdG1sRWxlbWVudEFzdC5jb25zdHJ1Y3RvciIsIkh0bWxFbGVtZW50QXN0LnZpc2l0IiwiaHRtbFZpc2l0QWxsIl0sIm1hcHBpbmdzIjoiQUFBQSxxQkFBd0IsMEJBQTBCLENBQUMsQ0FBQTtBQVNuRDtJQUNFQSxxQkFBbUJBLEtBQWFBLEVBQVNBLFVBQTJCQTtRQUFqREMsVUFBS0EsR0FBTEEsS0FBS0EsQ0FBUUE7UUFBU0EsZUFBVUEsR0FBVkEsVUFBVUEsQ0FBaUJBO0lBQUdBLENBQUNBO0lBQ3hFRCwyQkFBS0EsR0FBTEEsVUFBTUEsT0FBdUJBLEVBQUVBLE9BQVlBLElBQVNFLE1BQU1BLENBQUNBLE9BQU9BLENBQUNBLFNBQVNBLENBQUNBLElBQUlBLEVBQUVBLE9BQU9BLENBQUNBLENBQUNBLENBQUNBLENBQUNBO0lBQ2hHRixrQkFBQ0E7QUFBREEsQ0FBQ0EsQUFIRCxJQUdDO0FBSFksbUJBQVcsY0FHdkIsQ0FBQTtBQUVEO0lBQ0VHLHFCQUFtQkEsSUFBWUEsRUFBU0EsS0FBYUEsRUFBU0EsVUFBMkJBO1FBQXRFQyxTQUFJQSxHQUFKQSxJQUFJQSxDQUFRQTtRQUFTQSxVQUFLQSxHQUFMQSxLQUFLQSxDQUFRQTtRQUFTQSxlQUFVQSxHQUFWQSxVQUFVQSxDQUFpQkE7SUFBR0EsQ0FBQ0E7SUFDN0ZELDJCQUFLQSxHQUFMQSxVQUFNQSxPQUF1QkEsRUFBRUEsT0FBWUEsSUFBU0UsTUFBTUEsQ0FBQ0EsT0FBT0EsQ0FBQ0EsU0FBU0EsQ0FBQ0EsSUFBSUEsRUFBRUEsT0FBT0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7SUFDaEdGLGtCQUFDQTtBQUFEQSxDQUFDQSxBQUhELElBR0M7QUFIWSxtQkFBVyxjQUd2QixDQUFBO0FBRUQ7SUFDRUcsd0JBQW1CQSxJQUFZQSxFQUFTQSxLQUFvQkEsRUFBU0EsUUFBbUJBLEVBQ3JFQSxVQUEyQkE7UUFEM0JDLFNBQUlBLEdBQUpBLElBQUlBLENBQVFBO1FBQVNBLFVBQUtBLEdBQUxBLEtBQUtBLENBQWVBO1FBQVNBLGFBQVFBLEdBQVJBLFFBQVFBLENBQVdBO1FBQ3JFQSxlQUFVQSxHQUFWQSxVQUFVQSxDQUFpQkE7SUFBR0EsQ0FBQ0E7SUFDbERELDhCQUFLQSxHQUFMQSxVQUFNQSxPQUF1QkEsRUFBRUEsT0FBWUEsSUFBU0UsTUFBTUEsQ0FBQ0EsT0FBT0EsQ0FBQ0EsWUFBWUEsQ0FBQ0EsSUFBSUEsRUFBRUEsT0FBT0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7SUFDbkdGLHFCQUFDQTtBQUFEQSxDQUFDQSxBQUpELElBSUM7QUFKWSxzQkFBYyxpQkFJMUIsQ0FBQTtBQVFELHNCQUE2QixPQUF1QixFQUFFLElBQWUsRUFBRSxPQUFtQjtJQUFuQkcsdUJBQW1CQSxHQUFuQkEsY0FBbUJBO0lBQ3hGQSxJQUFJQSxNQUFNQSxHQUFHQSxFQUFFQSxDQUFDQTtJQUNoQkEsSUFBSUEsQ0FBQ0EsT0FBT0EsQ0FBQ0EsVUFBQUEsR0FBR0E7UUFDZEEsSUFBSUEsU0FBU0EsR0FBR0EsR0FBR0EsQ0FBQ0EsS0FBS0EsQ0FBQ0EsT0FBT0EsRUFBRUEsT0FBT0EsQ0FBQ0EsQ0FBQ0E7UUFDNUNBLEVBQUVBLENBQUNBLENBQUNBLGdCQUFTQSxDQUFDQSxTQUFTQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQTtZQUN6QkEsTUFBTUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsU0FBU0EsQ0FBQ0EsQ0FBQ0E7UUFDekJBLENBQUNBO0lBQ0hBLENBQUNBLENBQUNBLENBQUNBO0lBQ0hBLE1BQU1BLENBQUNBLE1BQU1BLENBQUNBO0FBQ2hCQSxDQUFDQTtBQVRlLG9CQUFZLGVBUzNCLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2lzUHJlc2VudH0gZnJvbSAnYW5ndWxhcjIvc3JjL2ZhY2FkZS9sYW5nJztcblxuaW1wb3J0IHtQYXJzZVNvdXJjZVNwYW59IGZyb20gJy4vcGFyc2VfdXRpbCc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgSHRtbEFzdCB7XG4gIHNvdXJjZVNwYW46IFBhcnNlU291cmNlU3BhbjtcbiAgdmlzaXQodmlzaXRvcjogSHRtbEFzdFZpc2l0b3IsIGNvbnRleHQ6IGFueSk6IGFueTtcbn1cblxuZXhwb3J0IGNsYXNzIEh0bWxUZXh0QXN0IGltcGxlbWVudHMgSHRtbEFzdCB7XG4gIGNvbnN0cnVjdG9yKHB1YmxpYyB2YWx1ZTogc3RyaW5nLCBwdWJsaWMgc291cmNlU3BhbjogUGFyc2VTb3VyY2VTcGFuKSB7fVxuICB2aXNpdCh2aXNpdG9yOiBIdG1sQXN0VmlzaXRvciwgY29udGV4dDogYW55KTogYW55IHsgcmV0dXJuIHZpc2l0b3IudmlzaXRUZXh0KHRoaXMsIGNvbnRleHQpOyB9XG59XG5cbmV4cG9ydCBjbGFzcyBIdG1sQXR0ckFzdCBpbXBsZW1lbnRzIEh0bWxBc3Qge1xuICBjb25zdHJ1Y3RvcihwdWJsaWMgbmFtZTogc3RyaW5nLCBwdWJsaWMgdmFsdWU6IHN0cmluZywgcHVibGljIHNvdXJjZVNwYW46IFBhcnNlU291cmNlU3Bhbikge31cbiAgdmlzaXQodmlzaXRvcjogSHRtbEFzdFZpc2l0b3IsIGNvbnRleHQ6IGFueSk6IGFueSB7IHJldHVybiB2aXNpdG9yLnZpc2l0QXR0cih0aGlzLCBjb250ZXh0KTsgfVxufVxuXG5leHBvcnQgY2xhc3MgSHRtbEVsZW1lbnRBc3QgaW1wbGVtZW50cyBIdG1sQXN0IHtcbiAgY29uc3RydWN0b3IocHVibGljIG5hbWU6IHN0cmluZywgcHVibGljIGF0dHJzOiBIdG1sQXR0ckFzdFtdLCBwdWJsaWMgY2hpbGRyZW46IEh0bWxBc3RbXSxcbiAgICAgICAgICAgICAgcHVibGljIHNvdXJjZVNwYW46IFBhcnNlU291cmNlU3Bhbikge31cbiAgdmlzaXQodmlzaXRvcjogSHRtbEFzdFZpc2l0b3IsIGNvbnRleHQ6IGFueSk6IGFueSB7IHJldHVybiB2aXNpdG9yLnZpc2l0RWxlbWVudCh0aGlzLCBjb250ZXh0KTsgfVxufVxuXG5leHBvcnQgaW50ZXJmYWNlIEh0bWxBc3RWaXNpdG9yIHtcbiAgdmlzaXRFbGVtZW50KGFzdDogSHRtbEVsZW1lbnRBc3QsIGNvbnRleHQ6IGFueSk6IGFueTtcbiAgdmlzaXRBdHRyKGFzdDogSHRtbEF0dHJBc3QsIGNvbnRleHQ6IGFueSk6IGFueTtcbiAgdmlzaXRUZXh0KGFzdDogSHRtbFRleHRBc3QsIGNvbnRleHQ6IGFueSk6IGFueTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGh0bWxWaXNpdEFsbCh2aXNpdG9yOiBIdG1sQXN0VmlzaXRvciwgYXN0czogSHRtbEFzdFtdLCBjb250ZXh0OiBhbnkgPSBudWxsKTogYW55W10ge1xuICB2YXIgcmVzdWx0ID0gW107XG4gIGFzdHMuZm9yRWFjaChhc3QgPT4ge1xuICAgIHZhciBhc3RSZXN1bHQgPSBhc3QudmlzaXQodmlzaXRvciwgY29udGV4dCk7XG4gICAgaWYgKGlzUHJlc2VudChhc3RSZXN1bHQpKSB7XG4gICAgICByZXN1bHQucHVzaChhc3RSZXN1bHQpO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiByZXN1bHQ7XG59XG4iXX0=\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/compiler/html_ast.js\n ** module id = 89\n ** module chunks = 1\n **/","'use strict';var __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar lang_1 = require('angular2/src/facade/lang');\r\nvar collection_1 = require('angular2/src/facade/collection');\r\nvar html_ast_1 = require('./html_ast');\r\nvar di_1 = require('angular2/src/core/di');\r\nvar html_lexer_1 = require('./html_lexer');\r\nvar parse_util_1 = require('./parse_util');\r\nvar html_tags_1 = require('./html_tags');\r\nvar HtmlTreeError = (function (_super) {\r\n    __extends(HtmlTreeError, _super);\r\n    function HtmlTreeError(elementName, location, msg) {\r\n        _super.call(this, location, msg);\r\n        this.elementName = elementName;\r\n    }\r\n    HtmlTreeError.create = function (elementName, location, msg) {\r\n        return new HtmlTreeError(elementName, location, msg);\r\n    };\r\n    return HtmlTreeError;\r\n})(parse_util_1.ParseError);\r\nexports.HtmlTreeError = HtmlTreeError;\r\nvar HtmlParseTreeResult = (function () {\r\n    function HtmlParseTreeResult(rootNodes, errors) {\r\n        this.rootNodes = rootNodes;\r\n        this.errors = errors;\r\n    }\r\n    return HtmlParseTreeResult;\r\n})();\r\nexports.HtmlParseTreeResult = HtmlParseTreeResult;\r\nvar HtmlParser = (function () {\r\n    function HtmlParser() {\r\n    }\r\n    HtmlParser.prototype.parse = function (sourceContent, sourceUrl) {\r\n        var tokensAndErrors = html_lexer_1.tokenizeHtml(sourceContent, sourceUrl);\r\n        var treeAndErrors = new TreeBuilder(tokensAndErrors.tokens).build();\r\n        return new HtmlParseTreeResult(treeAndErrors.rootNodes, tokensAndErrors.errors\r\n            .concat(treeAndErrors.errors));\r\n    };\r\n    HtmlParser = __decorate([\r\n        di_1.Injectable(), \r\n        __metadata('design:paramtypes', [])\r\n    ], HtmlParser);\r\n    return HtmlParser;\r\n})();\r\nexports.HtmlParser = HtmlParser;\r\nvar TreeBuilder = (function () {\r\n    function TreeBuilder(tokens) {\r\n        this.tokens = tokens;\r\n        this.index = -1;\r\n        this.rootNodes = [];\r\n        this.errors = [];\r\n        this.elementStack = [];\r\n        this._advance();\r\n    }\r\n    TreeBuilder.prototype.build = function () {\r\n        while (this.peek.type !== html_lexer_1.HtmlTokenType.EOF) {\r\n            if (this.peek.type === html_lexer_1.HtmlTokenType.TAG_OPEN_START) {\r\n                this._consumeStartTag(this._advance());\r\n            }\r\n            else if (this.peek.type === html_lexer_1.HtmlTokenType.TAG_CLOSE) {\r\n                this._consumeEndTag(this._advance());\r\n            }\r\n            else if (this.peek.type === html_lexer_1.HtmlTokenType.CDATA_START) {\r\n                this._closeVoidElement();\r\n                this._consumeCdata(this._advance());\r\n            }\r\n            else if (this.peek.type === html_lexer_1.HtmlTokenType.COMMENT_START) {\r\n                this._closeVoidElement();\r\n                this._consumeComment(this._advance());\r\n            }\r\n            else if (this.peek.type === html_lexer_1.HtmlTokenType.TEXT ||\r\n                this.peek.type === html_lexer_1.HtmlTokenType.RAW_TEXT ||\r\n                this.peek.type === html_lexer_1.HtmlTokenType.ESCAPABLE_RAW_TEXT) {\r\n                this._closeVoidElement();\r\n                this._consumeText(this._advance());\r\n            }\r\n            else {\r\n                // Skip all other tokens...\r\n                this._advance();\r\n            }\r\n        }\r\n        return new HtmlParseTreeResult(this.rootNodes, this.errors);\r\n    };\r\n    TreeBuilder.prototype._advance = function () {\r\n        var prev = this.peek;\r\n        if (this.index < this.tokens.length - 1) {\r\n            // Note: there is always an EOF token at the end\r\n            this.index++;\r\n        }\r\n        this.peek = this.tokens[this.index];\r\n        return prev;\r\n    };\r\n    TreeBuilder.prototype._advanceIf = function (type) {\r\n        if (this.peek.type === type) {\r\n            return this._advance();\r\n        }\r\n        return null;\r\n    };\r\n    TreeBuilder.prototype._consumeCdata = function (startToken) {\r\n        this._consumeText(this._advance());\r\n        this._advanceIf(html_lexer_1.HtmlTokenType.CDATA_END);\r\n    };\r\n    TreeBuilder.prototype._consumeComment = function (startToken) {\r\n        this._advanceIf(html_lexer_1.HtmlTokenType.RAW_TEXT);\r\n        this._advanceIf(html_lexer_1.HtmlTokenType.COMMENT_END);\r\n    };\r\n    TreeBuilder.prototype._consumeText = function (token) {\r\n        var text = token.parts[0];\r\n        if (text.length > 0 && text[0] == '\\n') {\r\n            var parent_1 = this._getParentElement();\r\n            if (lang_1.isPresent(parent_1) && parent_1.children.length == 0 &&\r\n                html_tags_1.getHtmlTagDefinition(parent_1.name).ignoreFirstLf) {\r\n                text = text.substring(1);\r\n            }\r\n        }\r\n        if (text.length > 0) {\r\n            this._addToParent(new html_ast_1.HtmlTextAst(text, token.sourceSpan));\r\n        }\r\n    };\r\n    TreeBuilder.prototype._closeVoidElement = function () {\r\n        if (this.elementStack.length > 0) {\r\n            var el = collection_1.ListWrapper.last(this.elementStack);\r\n            if (html_tags_1.getHtmlTagDefinition(el.name).isVoid) {\r\n                this.elementStack.pop();\r\n            }\r\n        }\r\n    };\r\n    TreeBuilder.prototype._consumeStartTag = function (startTagToken) {\r\n        var prefix = startTagToken.parts[0];\r\n        var name = startTagToken.parts[1];\r\n        var attrs = [];\r\n        while (this.peek.type === html_lexer_1.HtmlTokenType.ATTR_NAME) {\r\n            attrs.push(this._consumeAttr(this._advance()));\r\n        }\r\n        var fullName = getElementFullName(prefix, name, this._getParentElement());\r\n        var selfClosing = false;\r\n        // Note: There could have been a tokenizer error\r\n        // so that we don't get a token for the end tag...\r\n        if (this.peek.type === html_lexer_1.HtmlTokenType.TAG_OPEN_END_VOID) {\r\n            this._advance();\r\n            selfClosing = true;\r\n            if (html_tags_1.getNsPrefix(fullName) == null && !html_tags_1.getHtmlTagDefinition(fullName).isVoid) {\r\n                this.errors.push(HtmlTreeError.create(fullName, startTagToken.sourceSpan.start, \"Only void and foreign elements can be self closed \\\"\" + startTagToken.parts[1] + \"\\\"\"));\r\n            }\r\n        }\r\n        else if (this.peek.type === html_lexer_1.HtmlTokenType.TAG_OPEN_END) {\r\n            this._advance();\r\n            selfClosing = false;\r\n        }\r\n        var end = this.peek.sourceSpan.start;\r\n        var el = new html_ast_1.HtmlElementAst(fullName, attrs, [], new parse_util_1.ParseSourceSpan(startTagToken.sourceSpan.start, end));\r\n        this._pushElement(el);\r\n        if (selfClosing) {\r\n            this._popElement(fullName);\r\n        }\r\n    };\r\n    TreeBuilder.prototype._pushElement = function (el) {\r\n        if (this.elementStack.length > 0) {\r\n            var parentEl = collection_1.ListWrapper.last(this.elementStack);\r\n            if (html_tags_1.getHtmlTagDefinition(parentEl.name).isClosedByChild(el.name)) {\r\n                this.elementStack.pop();\r\n            }\r\n        }\r\n        var tagDef = html_tags_1.getHtmlTagDefinition(el.name);\r\n        var parentEl = this._getParentElement();\r\n        if (tagDef.requireExtraParent(lang_1.isPresent(parentEl) ? parentEl.name : null)) {\r\n            var newParent = new html_ast_1.HtmlElementAst(tagDef.parentToAdd, [], [el], el.sourceSpan);\r\n            this._addToParent(newParent);\r\n            this.elementStack.push(newParent);\r\n            this.elementStack.push(el);\r\n        }\r\n        else {\r\n            this._addToParent(el);\r\n            this.elementStack.push(el);\r\n        }\r\n    };\r\n    TreeBuilder.prototype._consumeEndTag = function (endTagToken) {\r\n        var fullName = getElementFullName(endTagToken.parts[0], endTagToken.parts[1], this._getParentElement());\r\n        if (html_tags_1.getHtmlTagDefinition(fullName).isVoid) {\r\n            this.errors.push(HtmlTreeError.create(fullName, endTagToken.sourceSpan.start, \"Void elements do not have end tags \\\"\" + endTagToken.parts[1] + \"\\\"\"));\r\n        }\r\n        else if (!this._popElement(fullName)) {\r\n            this.errors.push(HtmlTreeError.create(fullName, endTagToken.sourceSpan.start, \"Unexpected closing tag \\\"\" + endTagToken.parts[1] + \"\\\"\"));\r\n        }\r\n    };\r\n    TreeBuilder.prototype._popElement = function (fullName) {\r\n        for (var stackIndex = this.elementStack.length - 1; stackIndex >= 0; stackIndex--) {\r\n            var el = this.elementStack[stackIndex];\r\n            if (el.name == fullName) {\r\n                collection_1.ListWrapper.splice(this.elementStack, stackIndex, this.elementStack.length - stackIndex);\r\n                return true;\r\n            }\r\n            if (!html_tags_1.getHtmlTagDefinition(el.name).closedByParent) {\r\n                return false;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    TreeBuilder.prototype._consumeAttr = function (attrName) {\r\n        var fullName = mergeNsAndName(attrName.parts[0], attrName.parts[1]);\r\n        var end = attrName.sourceSpan.end;\r\n        var value = '';\r\n        if (this.peek.type === html_lexer_1.HtmlTokenType.ATTR_VALUE) {\r\n            var valueToken = this._advance();\r\n            value = valueToken.parts[0];\r\n            end = valueToken.sourceSpan.end;\r\n        }\r\n        return new html_ast_1.HtmlAttrAst(fullName, value, new parse_util_1.ParseSourceSpan(attrName.sourceSpan.start, end));\r\n    };\r\n    TreeBuilder.prototype._getParentElement = function () {\r\n        return this.elementStack.length > 0 ? collection_1.ListWrapper.last(this.elementStack) : null;\r\n    };\r\n    TreeBuilder.prototype._addToParent = function (node) {\r\n        var parent = this._getParentElement();\r\n        if (lang_1.isPresent(parent)) {\r\n            parent.children.push(node);\r\n        }\r\n        else {\r\n            this.rootNodes.push(node);\r\n        }\r\n    };\r\n    return TreeBuilder;\r\n})();\r\nfunction mergeNsAndName(prefix, localName) {\r\n    return lang_1.isPresent(prefix) ? \"@\" + prefix + \":\" + localName : localName;\r\n}\r\nfunction getElementFullName(prefix, localName, parentElement) {\r\n    if (lang_1.isBlank(prefix)) {\r\n        prefix = html_tags_1.getHtmlTagDefinition(localName).implicitNamespacePrefix;\r\n        if (lang_1.isBlank(prefix) && lang_1.isPresent(parentElement)) {\r\n            prefix = html_tags_1.getNsPrefix(parentElement.name);\r\n        }\r\n    }\r\n    return mergeNsAndName(prefix, localName);\r\n}\r\n//# sourceMappingURL=data:application/json;base64,\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/compiler/html_parser.js\n ** module id = 90\n ** module chunks = 1\n **/","'use strict';var ParseLocation = (function () {\r\n    function ParseLocation(file, offset, line, col) {\r\n        this.file = file;\r\n        this.offset = offset;\r\n        this.line = line;\r\n        this.col = col;\r\n    }\r\n    ParseLocation.prototype.toString = function () { return this.file.url + \"@\" + this.line + \":\" + this.col; };\r\n    return ParseLocation;\r\n})();\r\nexports.ParseLocation = ParseLocation;\r\nvar ParseSourceFile = (function () {\r\n    function ParseSourceFile(content, url) {\r\n        this.content = content;\r\n        this.url = url;\r\n    }\r\n    return ParseSourceFile;\r\n})();\r\nexports.ParseSourceFile = ParseSourceFile;\r\nvar ParseError = (function () {\r\n    function ParseError(location, msg) {\r\n        this.location = location;\r\n        this.msg = msg;\r\n    }\r\n    ParseError.prototype.toString = function () {\r\n        var source = this.location.file.content;\r\n        var ctxStart = this.location.offset;\r\n        if (ctxStart > source.length - 1) {\r\n            ctxStart = source.length - 1;\r\n        }\r\n        var ctxEnd = ctxStart;\r\n        var ctxLen = 0;\r\n        var ctxLines = 0;\r\n        while (ctxLen < 100 && ctxStart > 0) {\r\n            ctxStart--;\r\n            ctxLen++;\r\n            if (source[ctxStart] == \"\\n\") {\r\n                if (++ctxLines == 3) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        ctxLen = 0;\r\n        ctxLines = 0;\r\n        while (ctxLen < 100 && ctxEnd < source.length - 1) {\r\n            ctxEnd++;\r\n            ctxLen++;\r\n            if (source[ctxEnd] == \"\\n\") {\r\n                if (++ctxLines == 3) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        var context = source.substring(ctxStart, this.location.offset) + '[ERROR ->]' +\r\n            source.substring(this.location.offset, ctxEnd + 1);\r\n        return this.msg + \" (\\\"\" + context + \"\\\"): \" + this.location;\r\n    };\r\n    return ParseError;\r\n})();\r\nexports.ParseError = ParseError;\r\nvar ParseSourceSpan = (function () {\r\n    function ParseSourceSpan(start, end) {\r\n        this.start = start;\r\n        this.end = end;\r\n    }\r\n    ParseSourceSpan.prototype.toString = function () {\r\n        return this.start.file.content.substring(this.start.offset, this.end.offset);\r\n    };\r\n    return ParseSourceSpan;\r\n})();\r\nexports.ParseSourceSpan = ParseSourceSpan;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFyc2VfdXRpbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImFuZ3VsYXIyL3NyYy9jb21waWxlci9wYXJzZV91dGlsLnRzIl0sIm5hbWVzIjpbIlBhcnNlTG9jYXRpb24iLCJQYXJzZUxvY2F0aW9uLmNvbnN0cnVjdG9yIiwiUGFyc2VMb2NhdGlvbi50b1N0cmluZyIsIlBhcnNlU291cmNlRmlsZSIsIlBhcnNlU291cmNlRmlsZS5jb25zdHJ1Y3RvciIsIlBhcnNlRXJyb3IiLCJQYXJzZUVycm9yLmNvbnN0cnVjdG9yIiwiUGFyc2VFcnJvci50b1N0cmluZyIsIlBhcnNlU291cmNlU3BhbiIsIlBhcnNlU291cmNlU3Bhbi5jb25zdHJ1Y3RvciIsIlBhcnNlU291cmNlU3Bhbi50b1N0cmluZyJdLCJtYXBwaW5ncyI6IkFBQUE7SUFDRUEsdUJBQW1CQSxJQUFxQkEsRUFBU0EsTUFBY0EsRUFBU0EsSUFBWUEsRUFDakVBLEdBQVdBO1FBRFhDLFNBQUlBLEdBQUpBLElBQUlBLENBQWlCQTtRQUFTQSxXQUFNQSxHQUFOQSxNQUFNQSxDQUFRQTtRQUFTQSxTQUFJQSxHQUFKQSxJQUFJQSxDQUFRQTtRQUNqRUEsUUFBR0EsR0FBSEEsR0FBR0EsQ0FBUUE7SUFBR0EsQ0FBQ0E7SUFFbENELGdDQUFRQSxHQUFSQSxjQUFxQkUsTUFBTUEsQ0FBSUEsSUFBSUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsR0FBR0EsU0FBSUEsSUFBSUEsQ0FBQ0EsSUFBSUEsU0FBSUEsSUFBSUEsQ0FBQ0EsR0FBS0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7SUFDNUVGLG9CQUFDQTtBQUFEQSxDQUFDQSxBQUxELElBS0M7QUFMWSxxQkFBYSxnQkFLekIsQ0FBQTtBQUVEO0lBQ0VHLHlCQUFtQkEsT0FBZUEsRUFBU0EsR0FBV0E7UUFBbkNDLFlBQU9BLEdBQVBBLE9BQU9BLENBQVFBO1FBQVNBLFFBQUdBLEdBQUhBLEdBQUdBLENBQVFBO0lBQUdBLENBQUNBO0lBQzVERCxzQkFBQ0E7QUFBREEsQ0FB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QUNBLEtBQUtBLENBQUNBLElBQUlBLENBQUNBLE9BQU9BLENBQUNBLFNBQVNBLENBQUNBLElBQUlBLENBQUNBLEtBQUtBLENBQUNBLE1BQU1BLEVBQUVBLElBQUlBLENBQUNBLEdBQUdBLENBQUNBLE1BQU1BLENBQUNBLENBQUNBO0lBQy9FQSxDQUFDQTtJQUNIRixzQkFBQ0E7QUFBREEsQ0FBQ0EsQUFORCxJQU1DO0FBTlksdUJBQWUsa0JBTTNCLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgUGFyc2VMb2NhdGlvbiB7XG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBmaWxlOiBQYXJzZVNvdXJjZUZpbGUsIHB1YmxpYyBvZmZzZXQ6IG51bWJlciwgcHVibGljIGxpbmU6IG51bWJlcixcbiAgICAgICAgICAgICAgcHVibGljIGNvbDogbnVtYmVyKSB7fVxuXG4gIHRvU3RyaW5nKCk6IHN0cmluZyB7IHJldHVybiBgJHt0aGlzLmZpbGUudXJsfUAke3RoaXMubGluZX06JHt0aGlzLmNvbH1gOyB9XG59XG5cbmV4cG9ydCBjbGFzcyBQYXJzZVNvdXJjZUZpbGUge1xuICBjb25zdHJ1Y3RvcihwdWJsaWMgY29udGVudDogc3RyaW5nLCBwdWJsaWMgdXJsOiBzdHJpbmcpIHt9XG59XG5cbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBQYXJzZUVycm9yIHtcbiAgY29uc3RydWN0b3IocHVibGljIGxvY2F0aW9uOiBQYXJzZUxvY2F0aW9uLCBwdWJsaWMgbXNnOiBzdHJpbmcpIHt9XG5cbiAgdG9TdHJpbmcoKTogc3RyaW5nIHtcbiAgICB2YXIgc291cmNlID0gdGhpcy5sb2NhdGlvbi5maWxlLmNvbnRlbnQ7XG4gICAgdmFyIGN0eFN0YXJ0ID0gdGhpcy5sb2NhdGlvbi5vZmZzZXQ7XG4gICAgaWYgKGN0eFN0YXJ0ID4gc291cmNlLmxlbmd0aCAtIDEpIHtcbiAgICAgIGN0eFN0YXJ0ID0gc291cmNlLmxlbmd0aCAtIDE7XG4gICAgfVxuICAgIHZhciBjdHhFbmQgPSBjdHhTdGFydDtcbiAgICB2YXIgY3R4TGVuID0gMDtcbiAgICB2YXIgY3R4TGluZXMgPSAwO1xuXG4gICAgd2hpbGUgKGN0eExlbiA8IDEwMCAmJiBjdHhTdGFydCA+IDApIHtcbiAgICAgIGN0eFN0YXJ0LS07XG4gICAgICBjdHhMZW4rKztcbiAgICAgIGlmIChzb3VyY2VbY3R4U3RhcnRdID09IFwiXFxuXCIpIHtcbiAgICAgICAgaWYgKCsrY3R4TGluZXMgPT0gMykge1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgY3R4TGVuID0gMDtcbiAgICBjdHhMaW5lcyA9IDA7XG4gICAgd2hpbGUgKGN0eExlbiA8IDEwMCAmJiBjdHhFbmQgPCBzb3VyY2UubGVuZ3RoIC0gMSkge1xuICAgICAgY3R4RW5kKys7XG4gICAgICBjdHhMZW4rKztcbiAgICAgIGlmIChzb3VyY2VbY3R4RW5kXSA9PSBcIlxcblwiKSB7XG4gICAgICAgIGlmICgrK2N0eExpbmVzID09IDMpIHtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGxldCBjb250ZXh0ID0gc291cmNlLnN1YnN0cmluZyhjdHhTdGFydCwgdGhpcy5sb2NhdGlvbi5vZmZzZXQpICsgJ1tFUlJPUiAtPl0nICtcbiAgICAgICAgICAgICAgICAgIHNvdXJjZS5zdWJzdHJpbmcodGhpcy5sb2NhdGlvbi5vZmZzZXQsIGN0eEVuZCArIDEpO1xuXG4gICAgcmV0dXJuIGAke3RoaXMubXNnfSAoXCIke2NvbnRleHR9XCIpOiAke3RoaXMubG9jYXRpb259YDtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgUGFyc2VTb3VyY2VTcGFuIHtcbiAgY29uc3RydWN0b3IocHVibGljIHN0YXJ0OiBQYXJzZUxvY2F0aW9uLCBwdWJsaWMgZW5kOiBQYXJzZUxvY2F0aW9uKSB7fVxuXG4gIHRvU3RyaW5nKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMuc3RhcnQuZmlsZS5jb250ZW50LnN1YnN0cmluZyh0aGlzLnN0YXJ0Lm9mZnNldCwgdGhpcy5lbmQub2Zmc2V0KTtcbiAgfVxufVxuIl19\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/compiler/parse_util.js\n ** module id = 91\n ** module chunks = 1\n **/","'use strict';var __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar lang_1 = require('angular2/src/facade/lang');\r\nvar collection_1 = require('angular2/src/facade/collection');\r\nvar template_ast_1 = require('./template_ast');\r\nvar source_module_1 = require('./source_module');\r\nvar view_1 = require('angular2/src/core/linker/view');\r\nvar view_type_1 = require('angular2/src/core/linker/view_type');\r\nvar element_1 = require('angular2/src/core/linker/element');\r\nvar util_1 = require('./util');\r\nvar di_1 = require('angular2/src/core/di');\r\nexports.PROTO_VIEW_JIT_IMPORTS = lang_1.CONST_EXPR({ 'AppProtoView': view_1.AppProtoView, 'AppProtoElement': element_1.AppProtoElement, 'ViewType': view_type_1.ViewType });\r\n// TODO: have a single file that reexports everything needed for\r\n// codegen explicitly\r\n// - helps understanding what codegen works against\r\n// - less imports in codegen code\r\nexports.APP_VIEW_MODULE_REF = source_module_1.moduleRef('package:angular2/src/core/linker/view' + util_1.MODULE_SUFFIX);\r\nexports.VIEW_TYPE_MODULE_REF = source_module_1.moduleRef('package:angular2/src/core/linker/view_type' + util_1.MODULE_SUFFIX);\r\nexports.APP_EL_MODULE_REF = source_module_1.moduleRef('package:angular2/src/core/linker/element' + util_1.MODULE_SUFFIX);\r\nexports.METADATA_MODULE_REF = source_module_1.moduleRef('package:angular2/src/core/metadata/view' + util_1.MODULE_SUFFIX);\r\nvar IMPLICIT_TEMPLATE_VAR = '\\$implicit';\r\nvar CLASS_ATTR = 'class';\r\nvar STYLE_ATTR = 'style';\r\nvar ProtoViewCompiler = (function () {\r\n    function ProtoViewCompiler() {\r\n    }\r\n    ProtoViewCompiler.prototype.compileProtoViewRuntime = function (metadataCache, component, template, pipes) {\r\n        var protoViewFactory = new RuntimeProtoViewFactory(metadataCache, component, pipes);\r\n        var allProtoViews = [];\r\n        protoViewFactory.createCompileProtoView(template, [], [], allProtoViews);\r\n        return new CompileProtoViews([], allProtoViews);\r\n    };\r\n    ProtoViewCompiler.prototype.compileProtoViewCodeGen = function (resolvedMetadataCacheExpr, component, template, pipes) {\r\n        var protoViewFactory = new CodeGenProtoViewFactory(resolvedMetadataCacheExpr, component, pipes);\r\n        var allProtoViews = [];\r\n        var allStatements = [];\r\n        protoViewFactory.createCompileProtoView(template, [], allStatements, allProtoViews);\r\n        return new CompileProtoViews(allStatements.map(function (stmt) { return stmt.statement; }), allProtoViews);\r\n    };\r\n    ProtoViewCompiler = __decorate([\r\n        di_1.Injectable(), \r\n        __metadata('design:paramtypes', [])\r\n    ], ProtoViewCompiler);\r\n    return ProtoViewCompiler;\r\n})();\r\nexports.ProtoViewCompiler = ProtoViewCompiler;\r\nvar CompileProtoViews = (function () {\r\n    function CompileProtoViews(declarations, protoViews) {\r\n        this.declarations = declarations;\r\n        this.protoViews = protoViews;\r\n    }\r\n    return CompileProtoViews;\r\n})();\r\nexports.CompileProtoViews = CompileProtoViews;\r\nvar CompileProtoView = (function () {\r\n    function CompileProtoView(embeddedTemplateIndex, protoElements, protoView) {\r\n        this.embeddedTemplateIndex = embeddedTemplateIndex;\r\n        this.protoElements = protoElements;\r\n        this.protoView = protoView;\r\n    }\r\n    return CompileProtoView;\r\n})();\r\nexports.CompileProtoView = CompileProtoView;\r\nvar CompileProtoElement = (function () {\r\n    function CompileProtoElement(boundElementIndex, attrNameAndValues, variableNameAndValues, renderEvents, directives, embeddedTemplateIndex, appProtoEl) {\r\n        this.boundElementIndex = boundElementIndex;\r\n        this.attrNameAndValues = attrNameAndValues;\r\n        this.variableNameAndValues = variableNameAndValues;\r\n        this.renderEvents = renderEvents;\r\n        this.directives = directives;\r\n        this.embeddedTemplateIndex = embeddedTemplateIndex;\r\n        this.appProtoEl = appProtoEl;\r\n    }\r\n    return CompileProtoElement;\r\n})();\r\nexports.CompileProtoElement = CompileProtoElement;\r\nfunction visitAndReturnContext(visitor, asts, context) {\r\n    template_ast_1.templateVisitAll(visitor, asts, context);\r\n    return context;\r\n}\r\nvar ProtoViewFactory = (function () {\r\n    function ProtoViewFactory(component) {\r\n        this.component = component;\r\n    }\r\n    ProtoViewFactory.prototype.createCompileProtoView = function (template, templateVariableBindings, targetStatements, targetProtoViews) {\r\n        var embeddedTemplateIndex = targetProtoViews.length;\r\n        // Note: targetProtoViews needs to be in depth first order.\r\n        // So we \"reserve\" a space here that we fill after the recursion is done\r\n        targetProtoViews.push(null);\r\n        var builder = new ProtoViewBuilderVisitor(this, targetStatements, targetProtoViews);\r\n        template_ast_1.templateVisitAll(builder, template);\r\n        var viewType = getViewType(this.component, embeddedTemplateIndex);\r\n        var appProtoView = this.createAppProtoView(embeddedTemplateIndex, viewType, templateVariableBindings, targetStatements);\r\n        var cpv = new CompileProtoView(embeddedTemplateIndex, builder.protoElements, appProtoView);\r\n        targetProtoViews[embeddedTemplateIndex] = cpv;\r\n        return cpv;\r\n    };\r\n    return ProtoViewFactory;\r\n})();\r\nvar CodeGenProtoViewFactory = (function (_super) {\r\n    __extends(CodeGenProtoViewFactory, _super);\r\n    function CodeGenProtoViewFactory(resolvedMetadataCacheExpr, component, pipes) {\r\n        _super.call(this, component);\r\n        this.resolvedMetadataCacheExpr = resolvedMetadataCacheExpr;\r\n        this.pipes = pipes;\r\n        this._nextVarId = 0;\r\n    }\r\n    CodeGenProtoViewFactory.prototype._nextProtoViewVar = function (embeddedTemplateIndex) {\r\n        return \"appProtoView\" + this._nextVarId++ + \"_\" + this.component.type.name + embeddedTemplateIndex;\r\n    };\r\n    CodeGenProtoViewFactory.prototype.createAppProtoView = function (embeddedTemplateIndex, viewType, templateVariableBindings, targetStatements) {\r\n        var protoViewVarName = this._nextProtoViewVar(embeddedTemplateIndex);\r\n        var viewTypeExpr = codeGenViewType(viewType);\r\n        var pipesExpr = embeddedTemplateIndex === 0 ?\r\n            codeGenTypesArray(this.pipes.map(function (pipeMeta) { return pipeMeta.type; })) :\r\n            null;\r\n        var statement = \"var \" + protoViewVarName + \" = \" + exports.APP_VIEW_MODULE_REF + \"AppProtoView.create(\" + this.resolvedMetadataCacheExpr.expression + \", \" + viewTypeExpr + \", \" + pipesExpr + \", \" + util_1.codeGenStringMap(templateVariableBindings) + \");\";\r\n        targetStatements.push(new util_1.Statement(statement));\r\n        return new util_1.Expression(protoViewVarName);\r\n    };\r\n    CodeGenProtoViewFactory.prototype.createAppProtoElement = function (boundElementIndex, attrNameAndValues, variableNameAndValues, directives, targetStatements) {\r\n        var varName = \"appProtoEl\" + this._nextVarId++ + \"_\" + this.component.type.name;\r\n        var value = exports.APP_EL_MODULE_REF + \"AppProtoElement.create(\\n        \" + this.resolvedMetadataCacheExpr.expression + \",\\n        \" + boundElementIndex + \",\\n        \" + util_1.codeGenStringMap(attrNameAndValues) + \",\\n        \" + codeGenDirectivesArray(directives) + \",\\n        \" + util_1.codeGenStringMap(variableNameAndValues) + \"\\n      )\";\r\n        var statement = \"var \" + varName + \" = \" + value + \";\";\r\n        targetStatements.push(new util_1.Statement(statement));\r\n        return new util_1.Expression(varName);\r\n    };\r\n    return CodeGenProtoViewFactory;\r\n})(ProtoViewFactory);\r\nvar RuntimeProtoViewFactory = (function (_super) {\r\n    __extends(RuntimeProtoViewFactory, _super);\r\n    function RuntimeProtoViewFactory(metadataCache, component, pipes) {\r\n        _super.call(this, component);\r\n        this.metadataCache = metadataCache;\r\n        this.pipes = pipes;\r\n    }\r\n    RuntimeProtoViewFactory.prototype.createAppProtoView = function (embeddedTemplateIndex, viewType, templateVariableBindings, targetStatements) {\r\n        var pipes = embeddedTemplateIndex === 0 ? this.pipes.map(function (pipeMeta) { return pipeMeta.type.runtime; }) : [];\r\n        var templateVars = keyValueArrayToStringMap(templateVariableBindings);\r\n        return view_1.AppProtoView.create(this.metadataCache, viewType, pipes, templateVars);\r\n    };\r\n    RuntimeProtoViewFactory.prototype.createAppProtoElement = function (boundElementIndex, attrNameAndValues, variableNameAndValues, directives, targetStatements) {\r\n        var attrs = keyValueArrayToStringMap(attrNameAndValues);\r\n        return element_1.AppProtoElement.create(this.metadataCache, boundElementIndex, attrs, directives.map(function (dirMeta) { return dirMeta.type.runtime; }), keyValueArrayToStringMap(variableNameAndValues));\r\n    };\r\n    return RuntimeProtoViewFactory;\r\n})(ProtoViewFactory);\r\nvar ProtoViewBuilderVisitor = (function () {\r\n    function ProtoViewBuilderVisitor(factory, allStatements, allProtoViews) {\r\n        this.factory = factory;\r\n        this.allStatements = allStatements;\r\n        this.allProtoViews = allProtoViews;\r\n        this.protoElements = [];\r\n        this.boundElementCount = 0;\r\n    }\r\n    ProtoViewBuilderVisitor.prototype._readAttrNameAndValues = function (directives, attrAsts) {\r\n        var attrs = visitAndReturnContext(this, attrAsts, {});\r\n        directives.forEach(function (directiveMeta) {\r\n            collection_1.StringMapWrapper.forEach(directiveMeta.hostAttributes, function (value, name) {\r\n                var prevValue = attrs[name];\r\n                attrs[name] = lang_1.isPresent(prevValue) ? mergeAttributeValue(name, prevValue, value) : value;\r\n            });\r\n        });\r\n        return mapToKeyValueArray(attrs);\r\n    };\r\n    ProtoViewBuilderVisitor.prototype.visitBoundText = function (ast, context) { return null; };\r\n    ProtoViewBuilderVisitor.prototype.visitText = function (ast, context) { return null; };\r\n    ProtoViewBuilderVisitor.prototype.visitNgContent = function (ast, context) { return null; };\r\n    ProtoViewBuilderVisitor.prototype.visitElement = function (ast, context) {\r\n        var _this = this;\r\n        var boundElementIndex = null;\r\n        if (ast.isBound()) {\r\n            boundElementIndex = this.boundElementCount++;\r\n        }\r\n        var component = ast.getComponent();\r\n        var variableNameAndValues = [];\r\n        if (lang_1.isBlank(component)) {\r\n            ast.exportAsVars.forEach(function (varAst) { variableNameAndValues.push([varAst.name, null]); });\r\n        }\r\n        var directives = [];\r\n        var renderEvents = visitAndReturnContext(this, ast.outputs, new Map());\r\n        collection_1.ListWrapper.forEachWithIndex(ast.directives, function (directiveAst, index) {\r\n            directiveAst.visit(_this, new DirectiveContext(index, boundElementIndex, renderEvents, variableNameAndValues, directives));\r\n        });\r\n        var renderEventArray = [];\r\n        renderEvents.forEach(function (eventAst, _) { return renderEventArray.push(eventAst); });\r\n        var attrNameAndValues = this._readAttrNameAndValues(directives, ast.attrs);\r\n        this._addProtoElement(ast.isBound(), boundElementIndex, attrNameAndValues, variableNameAndValues, renderEventArray, directives, null);\r\n        template_ast_1.templateVisitAll(this, ast.children);\r\n        return null;\r\n    };\r\n    ProtoViewBuilderVisitor.prototype.visitEmbeddedTemplate = function (ast, context) {\r\n        var _this = this;\r\n        var boundElementIndex = this.boundElementCount++;\r\n        var directives = [];\r\n        collection_1.ListWrapper.forEachWithIndex(ast.directives, function (directiveAst, index) {\r\n            directiveAst.visit(_this, new DirectiveContext(index, boundElementIndex, new Map(), [], directives));\r\n        });\r\n        var attrNameAndValues = this._readAttrNameAndValues(directives, ast.attrs);\r\n        var templateVariableBindings = ast.vars.map(function (varAst) { return [varAst.value.length > 0 ? varAst.value : IMPLICIT_TEMPLATE_VAR, varAst.name]; });\r\n        var nestedProtoView = this.factory.createCompileProtoView(ast.children, templateVariableBindings, this.allStatements, this.allProtoViews);\r\n        this._addProtoElement(true, boundElementIndex, attrNameAndValues, [], [], directives, nestedProtoView.embeddedTemplateIndex);\r\n        return null;\r\n    };\r\n    ProtoViewBuilderVisitor.prototype._addProtoElement = function (isBound, boundElementIndex, attrNameAndValues, variableNameAndValues, renderEvents, directives, embeddedTemplateIndex) {\r\n        var appProtoEl = null;\r\n        if (isBound) {\r\n            appProtoEl =\r\n                this.factory.createAppProtoElement(boundElementIndex, attrNameAndValues, variableNameAndValues, directives, this.allStatements);\r\n        }\r\n        var compileProtoEl = new CompileProtoElement(boundElementIndex, attrNameAndValues, variableNameAndValues, renderEvents, directives, embeddedTemplateIndex, appProtoEl);\r\n        this.protoElements.push(compileProtoEl);\r\n    };\r\n    ProtoViewBuilderVisitor.prototype.visitVariable = function (ast, ctx) { return null; };\r\n    ProtoViewBuilderVisitor.prototype.visitAttr = function (ast, attrNameAndValues) {\r\n        attrNameAndValues[ast.name] = ast.value;\r\n        return null;\r\n    };\r\n    ProtoViewBuilderVisitor.prototype.visitDirective = function (ast, ctx) {\r\n        ctx.targetDirectives.push(ast.directive);\r\n        template_ast_1.templateVisitAll(this, ast.hostEvents, ctx.hostEventTargetAndNames);\r\n        ast.exportAsVars.forEach(function (varAst) { ctx.targetVariableNameAndValues.push([varAst.name, ctx.index]); });\r\n        return null;\r\n    };\r\n    ProtoViewBuilderVisitor.prototype.visitEvent = function (ast, eventTargetAndNames) {\r\n        eventTargetAndNames.set(ast.fullName, ast);\r\n        return null;\r\n    };\r\n    ProtoViewBuilderVisitor.prototype.visitDirectiveProperty = function (ast, context) { return null; };\r\n    ProtoViewBuilderVisitor.prototype.visitElementProperty = function (ast, context) { return null; };\r\n    return ProtoViewBuilderVisitor;\r\n})();\r\nfunction mapToKeyValueArray(data) {\r\n    var entryArray = [];\r\n    collection_1.StringMapWrapper.forEach(data, function (value, name) { entryArray.push([name, value]); });\r\n    // We need to sort to get a defined output order\r\n    // for tests and for caching generated artifacts...\r\n    collection_1.ListWrapper.sort(entryArray, function (entry1, entry2) { return lang_1.StringWrapper.compare(entry1[0], entry2[0]); });\r\n    var keyValueArray = [];\r\n    entryArray.forEach(function (entry) { keyValueArray.push([entry[0], entry[1]]); });\r\n    return keyValueArray;\r\n}\r\nfunction mergeAttributeValue(attrName, attrValue1, attrValue2) {\r\n    if (attrName == CLASS_ATTR || attrName == STYLE_ATTR) {\r\n        return attrValue1 + \" \" + attrValue2;\r\n    }\r\n    else {\r\n        return attrValue2;\r\n    }\r\n}\r\nvar DirectiveContext = (function () {\r\n    function DirectiveContext(index, boundElementIndex, hostEventTargetAndNames, targetVariableNameAndValues, targetDirectives) {\r\n        this.index = index;\r\n        this.boundElementIndex = boundElementIndex;\r\n        this.hostEventTargetAndNames = hostEventTargetAndNames;\r\n        this.targetVariableNameAndValues = targetVariableNameAndValues;\r\n        this.targetDirectives = targetDirectives;\r\n    }\r\n    return DirectiveContext;\r\n})();\r\nfunction keyValueArrayToStringMap(keyValueArray) {\r\n    var stringMap = {};\r\n    for (var i = 0; i < keyValueArray.length; i++) {\r\n        var entry = keyValueArray[i];\r\n        stringMap[entry[0]] = entry[1];\r\n    }\r\n    return stringMap;\r\n}\r\nfunction codeGenDirectivesArray(directives) {\r\n    var expressions = directives.map(function (directiveType) { return typeRef(directiveType.type); });\r\n    return \"[\" + expressions.join(',') + \"]\";\r\n}\r\nfunction codeGenTypesArray(types) {\r\n    var expressions = types.map(typeRef);\r\n    return \"[\" + expressions.join(',') + \"]\";\r\n}\r\nfunction codeGenViewType(value) {\r\n    if (lang_1.IS_DART) {\r\n        return \"\" + exports.VIEW_TYPE_MODULE_REF + value;\r\n    }\r\n    else {\r\n        return \"\" + value;\r\n    }\r\n}\r\nfunction typeRef(type) {\r\n    return \"\" + source_module_1.moduleRef(type.moduleUrl) + type.name;\r\n}\r\nfunction getViewType(component, embeddedTemplateIndex) {\r\n    if (embeddedTemplateIndex > 0) {\r\n        return view_type_1.ViewType.EMBEDDED;\r\n    }\r\n    else if (component.type.isHost) {\r\n        return view_type_1.ViewType.HOST;\r\n    }\r\n    else {\r\n        return view_type_1.ViewType.COMPONENT;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/compiler/proto_view_compiler.js\n ** module id = 92\n ** module chunks = 1\n **/","'use strict';var ElementSchemaRegistry = (function () {\r\n    function ElementSchemaRegistry() {\r\n    }\r\n    ElementSchemaRegistry.prototype.hasProperty = function (tagName, propName) { return true; };\r\n    ElementSchemaRegistry.prototype.getMappedPropName = function (propName) { return propName; };\r\n    return ElementSchemaRegistry;\r\n})();\r\nexports.ElementSchemaRegistry = ElementSchemaRegistry;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWxlbWVudF9zY2hlbWFfcmVnaXN0cnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJhbmd1bGFyMi9zcmMvY29tcGlsZXIvc2NoZW1hL2VsZW1lbnRfc2NoZW1hX3JlZ2lzdHJ5LnRzIl0sIm5hbWVzIjpbIkVsZW1lbnRTY2hlbWFSZWdpc3RyeSIsIkVsZW1lbnRTY2hlbWFSZWdpc3RyeS5jb25zdHJ1Y3RvciIsIkVsZW1lbnRTY2hlbWFSZWdpc3RyeS5oYXNQcm9wZXJ0eSIsIkVsZW1lbnRTY2hlbWFSZWdpc3RyeS5nZXRNYXBwZWRQcm9wTmFtZSJdLCJtYXBwaW5ncyI6IkFBQUE7SUFBQUE7SUFHQUMsQ0FBQ0E7SUFGQ0QsMkNBQVdBLEdBQVhBLFVBQVlBLE9BQWVBLEVBQUVBLFFBQWdCQSxJQUFhRSxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQSxDQUFDQSxDQUFDQTtJQUN4RUYsaURBQWlCQSxHQUFqQkEsVUFBa0JBLFFBQWdCQSxJQUFZRyxNQUFNQSxDQUFDQSxRQUFRQSxDQUFDQSxDQUFDQSxDQUFDQTtJQUNsRUgsNEJBQUNBO0FBQURBLENBQUNBLEFBSEQsSUFHQztBQUhZLDZCQUFxQix3QkFHakMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBFbGVtZW50U2NoZW1hUmVnaXN0cnkge1xuICBoYXNQcm9wZXJ0eSh0YWdOYW1lOiBzdHJpbmcsIHByb3BOYW1lOiBzdHJpbmcpOiBib29sZWFuIHsgcmV0dXJuIHRydWU7IH1cbiAgZ2V0TWFwcGVkUHJvcE5hbWUocHJvcE5hbWU6IHN0cmluZyk6IHN0cmluZyB7IHJldHVybiBwcm9wTmFtZTsgfVxufVxuIl19\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/compiler/schema/element_schema_registry.js\n ** module id = 93\n ** module chunks = 1\n **/","'use strict';// Some of the code comes from WebComponents.JS\r\n// https://github.com/webcomponents/webcomponentsjs/blob/master/src/HTMLImports/path.js\r\nvar lang_1 = require('angular2/src/facade/lang');\r\nvar StyleWithImports = (function () {\r\n    function StyleWithImports(style, styleUrls) {\r\n        this.style = style;\r\n        this.styleUrls = styleUrls;\r\n    }\r\n    return StyleWithImports;\r\n})();\r\nexports.StyleWithImports = StyleWithImports;\r\nfunction isStyleUrlResolvable(url) {\r\n    if (lang_1.isBlank(url) || url.length === 0 || url[0] == '/')\r\n        return false;\r\n    var schemeMatch = lang_1.RegExpWrapper.firstMatch(_urlWithSchemaRe, url);\r\n    return lang_1.isBlank(schemeMatch) || schemeMatch[1] == 'package' || schemeMatch[1] == 'asset';\r\n}\r\nexports.isStyleUrlResolvable = isStyleUrlResolvable;\r\n/**\r\n * Rewrites stylesheets by resolving and removing the @import urls that\r\n * are either relative or don't have a `package:` scheme\r\n */\r\nfunction extractStyleUrls(resolver, baseUrl, cssText) {\r\n    var foundUrls = [];\r\n    var modifiedCssText = lang_1.StringWrapper.replaceAllMapped(cssText, _cssImportRe, function (m) {\r\n        var url = lang_1.isPresent(m[1]) ? m[1] : m[2];\r\n        if (!isStyleUrlResolvable(url)) {\r\n            // Do not attempt to resolve non-package absolute URLs with URI scheme\r\n            return m[0];\r\n        }\r\n        foundUrls.push(resolver.resolve(baseUrl, url));\r\n        return '';\r\n    });\r\n    return new StyleWithImports(modifiedCssText, foundUrls);\r\n}\r\nexports.extractStyleUrls = extractStyleUrls;\r\nvar _cssImportRe = /@import\\s+(?:url\\()?\\s*(?:(?:['\"]([^'\"]*))|([^;\\)\\s]*))[^;]*;?/g;\r\n// TODO: can't use /^[^:/?#.]+:/g due to clang-format bug:\r\n//       https://github.com/angular/angular/issues/4596\r\nvar _urlWithSchemaRe = /^([a-zA-Z\\-\\+\\.]+):/g;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVfdXJsX3Jlc29sdmVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYW5ndWxhcjIvc3JjL2NvbXBpbGVyL3N0eWxlX3VybF9yZXNvbHZlci50cyJdLCJuYW1lcyI6WyJTdHlsZVdpdGhJbXBvcnRzIiwiU3R5bGVXaXRoSW1wb3J0cy5jb25zdHJ1Y3RvciIsImlzU3R5bGVVcmxSZXNvbHZhYmxlIiwiZXh0cmFjdFN0eWxlVXJscyJdLCJtYXBwaW5ncyI6IkFBQUEsK0NBQStDO0FBQy9DLHVGQUF1RjtBQUV2RixxQkFBdUUsMEJBQTBCLENBQUMsQ0FBQTtBQUdsRztJQUNFQSwwQkFBbUJBLEtBQWFBLEVBQVNBLFNBQW1CQTtRQUF6Q0MsVUFBS0EsR0FBTEEsS0FBS0EsQ0FBUUE7UUFBU0EsY0FBU0EsR0FBVEEsU0FBU0EsQ0FBVUE7SUFBR0EsQ0FBQ0E7SUFDbEVELHVCQUFDQTtBQUFEQSxDQUFDQSxBQUZELElBRUM7QUFGWSx3QkFBZ0IsbUJBRTVCLENBQUE7QUFFRCw4QkFBcUMsR0FBVztJQUM5Q0UsRUFBRUEsQ0FBQ0EsQ0FBQ0EsY0FBT0EsQ0FBQ0EsR0FBR0EsQ0FBQ0EsSUFBSUEsR0FBR0EsQ0FBQ0EsTUFBTUEsS0FBS0EsQ0FBQ0EsSUFBSUEsR0FBR0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsSUFBSUEsR0FBR0EsQ0FBQ0E7UUFBQ0EsTUFBTUEsQ0FBQ0EsS0FBS0EsQ0FBQ0E7SUFDcEVBLElBQUlBLFdBQVdBLEdBQUdBLG9CQUFhQSxDQUFDQSxVQUFVQSxDQUFDQSxnQkFBZ0JBLEVBQUVBLEdBQUdBLENBQUNBLENBQUNBO0lBQ2xFQSxNQUFNQSxDQUFDQSxjQUFPQSxDQUFDQSxXQUFXQSxDQUFDQSxJQUFJQSxXQUFXQSxDQUFDQSxDQUFDQSxDQUFDQSxJQUFJQSxTQUFTQSxJQUFJQSxXQUFXQSxDQUFDQSxDQUFDQSxDQUFDQSxJQUFJQSxPQUFPQSxDQUFDQTtBQUMxRkEsQ0FBQ0E7QUFKZSw0QkFBb0IsdUJBSW5DLENBQUE7QUFFRDs7O0dBR0c7QUFDSCwwQkFBaUMsUUFBcUIsRUFBRSxPQUFlLEVBQ3RDLE9BQWU7SUFDOUNDLElBQUlBLFNBQVNBLEdBQUdBLEVBQUVBLENBQUNBO0lBQ25CQSxJQUFJQSxlQUFlQSxHQUFHQSxvQkFBYUEsQ0FBQ0EsZ0JBQWdCQSxDQUFDQSxPQUFPQSxFQUFFQSxZQUFZQSxFQUFFQSxVQUFDQSxDQUFDQTtRQUM1RUEsSUFBSUEsR0FBR0EsR0FBR0EsZ0JBQVNBLENBQUNBLENBQUNBLENBQUNBLENBQUNBLENBQUNBLENBQUNBLEdBQUdBLENBQUNBLENBQUNBLENBQUNBLENBQUNBLEdBQUdBLENBQUNBLENBQUNBLENBQUNBLENBQUNBLENBQUNBO1FBQ3hDQSxFQUFFQSxDQUFDQSxDQUFDQSxDQUFDQSxvQkFBb0JBLENBQUNBLEdBQUdBLENBQUNBLENBQUNBLENBQUNBLENBQUNBO1lBQy9CQSxzRUFBc0VBO1lBQ3RFQSxNQUFNQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQTtRQUNkQSxDQUFDQTtRQUNEQSxTQUFTQSxDQUFDQSxJQUFJQSxDQUFDQSxRQUFRQSxDQUFDQSxPQUFPQSxDQUFDQSxPQUFPQSxFQUFFQSxHQUFHQSxDQUFDQSxDQUFDQSxDQUFDQTtRQUMvQ0EsTUFBTUEsQ0FBQ0EsRUFBRUEsQ0FBQ0E7SUFDWkEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7SUFDSEEsTUFBTUEsQ0FBQ0EsSUFBSUEsZ0JBQWdCQSxDQUFDQSxlQUFlQSxFQUFFQSxTQUFTQSxDQUFDQSxDQUFDQTtBQUMxREEsQ0FBQ0E7QUFiZSx3QkFBZ0IsbUJBYS9CLENBQUE7QUFFRCxJQUFJLFlBQVksR0FBRyxpRUFBaUUsQ0FBQztBQUNyRiwwREFBMEQ7QUFDMUQsdURBQXVEO0FBQ3ZELElBQUksZ0JBQWdCLEdBQUcsc0JBQXNCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBTb21lIG9mIHRoZSBjb2RlIGNvbWVzIGZyb20gV2ViQ29tcG9uZW50cy5KU1xuLy8gaHR0cHM6Ly9naXRodWIuY29tL3dlYmNvbXBvbmVudHMvd2ViY29tcG9uZW50c2pzL2Jsb2IvbWFzdGVyL3NyYy9IVE1MSW1wb3J0cy9wYXRoLmpzXG5cbmltcG9ydCB7UmVnRXhwLCBSZWdFeHBXcmFwcGVyLCBTdHJpbmdXcmFwcGVyLCBpc1ByZXNlbnQsIGlzQmxhbmt9IGZyb20gJ2FuZ3VsYXIyL3NyYy9mYWNhZGUvbGFuZyc7XG5pbXBvcnQge1VybFJlc29sdmVyfSBmcm9tICdhbmd1bGFyMi9zcmMvY29tcGlsZXIvdXJsX3Jlc29sdmVyJztcblxuZXhwb3J0IGNsYXNzIFN0eWxlV2l0aEltcG9ydHMge1xuICBjb25zdHJ1Y3RvcihwdWJsaWMgc3R5bGU6IHN0cmluZywgcHVibGljIHN0eWxlVXJsczogc3RyaW5nW10pIHt9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc1N0eWxlVXJsUmVzb2x2YWJsZSh1cmw6IHN0cmluZyk6IGJvb2xlYW4ge1xuICBpZiAoaXNCbGFuayh1cmwpIHx8IHVybC5sZW5ndGggPT09IDAgfHwgdXJsWzBdID09ICcvJykgcmV0dXJuIGZhbHNlO1xuICB2YXIgc2NoZW1lTWF0Y2ggPSBSZWdFeHBXcmFwcGVyLmZpcnN0TWF0Y2goX3VybFdpdGhTY2hlbWFSZSwgdXJsKTtcbiAgcmV0dXJuIGlzQmxhbmsoc2NoZW1lTWF0Y2gpIHx8IHNjaGVtZU1hdGNoWzFdID09ICdwYWNrYWdlJyB8fCBzY2hlbWVNYXRjaFsxXSA9PSAnYXNzZXQnO1xufVxuXG4vKipcbiAqIFJld3JpdGVzIHN0eWxlc2hlZXRzIGJ5IHJlc29sdmluZyBhbmQgcmVtb3ZpbmcgdGhlIEBpbXBvcnQgdXJscyB0aGF0XG4gKiBhcmUgZWl0aGVyIHJlbGF0aXZlIG9yIGRvbid0IGhhdmUgYSBgcGFja2FnZTpgIHNjaGVtZVxuICovXG5leHBvcnQgZnVuY3Rpb24gZXh0cmFjdFN0eWxlVXJscyhyZXNvbHZlcjogVXJsUmVzb2x2ZXIsIGJhc2VVcmw6IHN0cmluZyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNzc1RleHQ6IHN0cmluZyk6IFN0eWxlV2l0aEltcG9ydHMge1xuICB2YXIgZm91bmRVcmxzID0gW107XG4gIHZhciBtb2RpZmllZENzc1RleHQgPSBTdHJpbmdXcmFwcGVyLnJlcGxhY2VBbGxNYXBwZWQoY3NzVGV4dCwgX2Nzc0ltcG9ydFJlLCAobSkgPT4ge1xuICAgIHZhciB1cmwgPSBpc1ByZXNlbnQobVsxXSkgPyBtWzFdIDogbVsyXTtcbiAgICBpZiAoIWlzU3R5bGVVcmxSZXNvbHZhYmxlKHVybCkpIHtcbiAgICAgIC8vIERvIG5vdCBhdHRlbXB0IHRvIHJlc29sdmUgbm9uLXBhY2thZ2UgYWJzb2x1dGUgVVJMcyB3aXRoIFVSSSBzY2hlbWVcbiAgICAgIHJldHVybiBtWzBdO1xuICAgIH1cbiAgICBmb3VuZFVybHMucHVzaChyZXNvbHZlci5yZXNvbHZlKGJhc2VVcmwsIHVybCkpO1xuICAgIHJldHVybiAnJztcbiAgfSk7XG4gIHJldHVybiBuZXcgU3R5bGVXaXRoSW1wb3J0cyhtb2RpZmllZENzc1RleHQsIGZvdW5kVXJscyk7XG59XG5cbnZhciBfY3NzSW1wb3J0UmUgPSAvQGltcG9ydFxccysoPzp1cmxcXCgpP1xccyooPzooPzpbJ1wiXShbXidcIl0qKSl8KFteO1xcKVxcc10qKSlbXjtdKjs/L2c7XG4vLyBUT0RPOiBjYW4ndCB1c2UgL15bXjovPyMuXSs6L2cgZHVlIHRvIGNsYW5nLWZvcm1hdCBidWc6XG4vLyAgICAgICBodHRwczovL2dpdGh1Yi5jb20vYW5ndWxhci9hbmd1bGFyL2lzc3Vlcy80NTk2XG52YXIgX3VybFdpdGhTY2hlbWFSZSA9IC9eKFthLXpBLVpcXC1cXCtcXC5dKyk6L2c7XG4iXX0=\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/compiler/style_url_resolver.js\n ** module id = 94\n ** module chunks = 1\n **/","'use strict';var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar lang_1 = require('angular2/src/facade/lang');\r\nvar exceptions_1 = require('angular2/src/facade/exceptions');\r\nvar collection_1 = require('angular2/src/facade/collection');\r\nvar async_1 = require('angular2/src/facade/async');\r\nvar directive_metadata_1 = require('./directive_metadata');\r\nvar template_ast_1 = require('./template_ast');\r\nvar di_1 = require('angular2/src/core/di');\r\nvar source_module_1 = require('./source_module');\r\nvar change_detector_compiler_1 = require('./change_detector_compiler');\r\nvar style_compiler_1 = require('./style_compiler');\r\nvar view_compiler_1 = require('./view_compiler');\r\nvar proto_view_compiler_1 = require('./proto_view_compiler');\r\nvar template_parser_1 = require('./template_parser');\r\nvar template_normalizer_1 = require('./template_normalizer');\r\nvar runtime_metadata_1 = require('./runtime_metadata');\r\nvar view_1 = require('angular2/src/core/linker/view');\r\nvar change_detection_1 = require('angular2/src/core/change_detection/change_detection');\r\nvar resolved_metadata_cache_1 = require('angular2/src/core/linker/resolved_metadata_cache');\r\nvar util_1 = require('./util');\r\nexports.METADATA_CACHE_MODULE_REF = source_module_1.moduleRef('package:angular2/src/core/linker/resolved_metadata_cache' + util_1.MODULE_SUFFIX);\r\n/**\r\n * An internal module of the Angular compiler that begins with component types,\r\n * extracts templates, and eventually produces a compiled version of the component\r\n * ready for linking into an application.\r\n */\r\nvar TemplateCompiler = (function () {\r\n    function TemplateCompiler(_runtimeMetadataResolver, _templateNormalizer, _templateParser, _styleCompiler, _cdCompiler, _protoViewCompiler, _viewCompiler, _resolvedMetadataCache, _genConfig) {\r\n        this._runtimeMetadataResolver = _runtimeMetadataResolver;\r\n        this._templateNormalizer = _templateNormalizer;\r\n        this._templateParser = _templateParser;\r\n        this._styleCompiler = _styleCompiler;\r\n        this._cdCompiler = _cdCompiler;\r\n        this._protoViewCompiler = _protoViewCompiler;\r\n        this._viewCompiler = _viewCompiler;\r\n        this._resolvedMetadataCache = _resolvedMetadataCache;\r\n        this._genConfig = _genConfig;\r\n        this._hostCacheKeys = new Map();\r\n        this._compiledTemplateCache = new Map();\r\n        this._compiledTemplateDone = new Map();\r\n    }\r\n    TemplateCompiler.prototype.normalizeDirectiveMetadata = function (directive) {\r\n        if (!directive.isComponent) {\r\n            // For non components there is nothing to be normalized yet.\r\n            return async_1.PromiseWrapper.resolve(directive);\r\n        }\r\n        return this._templateNormalizer.normalizeTemplate(directive.type, directive.template)\r\n            .then(function (normalizedTemplate) { return new directive_metadata_1.CompileDirectiveMetadata({\r\n            type: directive.type,\r\n            isComponent: directive.isComponent,\r\n            dynamicLoadable: directive.dynamicLoadable,\r\n            selector: directive.selector,\r\n            exportAs: directive.exportAs,\r\n            changeDetection: directive.changeDetection,\r\n            inputs: directive.inputs,\r\n            outputs: directive.outputs,\r\n            hostListeners: directive.hostListeners,\r\n            hostProperties: directive.hostProperties,\r\n            hostAttributes: directive.hostAttributes,\r\n            lifecycleHooks: directive.lifecycleHooks,\r\n            template: normalizedTemplate\r\n        }); });\r\n    };\r\n    TemplateCompiler.prototype.compileHostComponentRuntime = function (type) {\r\n        var compMeta = this._runtimeMetadataResolver.getDirectiveMetadata(type);\r\n        var hostCacheKey = this._hostCacheKeys.get(type);\r\n        if (lang_1.isBlank(hostCacheKey)) {\r\n            hostCacheKey = new Object();\r\n            this._hostCacheKeys.set(type, hostCacheKey);\r\n            assertComponent(compMeta);\r\n            var hostMeta = directive_metadata_1.createHostComponentMeta(compMeta.type, compMeta.selector);\r\n            this._compileComponentRuntime(hostCacheKey, hostMeta, [compMeta], [], []);\r\n        }\r\n        return this._compiledTemplateDone.get(hostCacheKey)\r\n            .then(function (compiledTemplate) {\r\n            return new view_1.HostViewFactory(compMeta.selector, compiledTemplate.viewFactory);\r\n        });\r\n    };\r\n    TemplateCompiler.prototype.clearCache = function () {\r\n        this._styleCompiler.clearCache();\r\n        this._compiledTemplateCache.clear();\r\n        this._compiledTemplateDone.clear();\r\n        this._hostCacheKeys.clear();\r\n    };\r\n    TemplateCompiler.prototype.compileTemplatesCodeGen = function (components) {\r\n        var _this = this;\r\n        if (components.length === 0) {\r\n            throw new exceptions_1.BaseException('No components given');\r\n        }\r\n        var declarations = [];\r\n        components.forEach(function (componentWithDirs) {\r\n            var compMeta = componentWithDirs.component;\r\n            assertComponent(compMeta);\r\n            _this._compileComponentCodeGen(compMeta, componentWithDirs.directives, componentWithDirs.pipes, declarations);\r\n            if (compMeta.dynamicLoadable) {\r\n                var hostMeta = directive_metadata_1.createHostComponentMeta(compMeta.type, compMeta.selector);\r\n                var viewFactoryExpression = _this._compileComponentCodeGen(hostMeta, [compMeta], [], declarations);\r\n                var constructionKeyword = lang_1.IS_DART ? 'const' : 'new';\r\n                var compiledTemplateExpr = constructionKeyword + \" \" + proto_view_compiler_1.APP_VIEW_MODULE_REF + \"HostViewFactory('\" + compMeta.selector + \"',\" + viewFactoryExpression + \")\";\r\n                var varName = codeGenHostViewFactoryName(compMeta.type);\r\n                declarations.push(\"\" + util_1.codeGenExportVariable(varName) + compiledTemplateExpr + \";\");\r\n            }\r\n        });\r\n        var moduleUrl = components[0].component.type.moduleUrl;\r\n        return new source_module_1.SourceModule(\"\" + templateModuleUrl(moduleUrl), declarations.join('\\n'));\r\n    };\r\n    TemplateCompiler.prototype.compileStylesheetCodeGen = function (stylesheetUrl, cssText) {\r\n        return this._styleCompiler.compileStylesheetCodeGen(stylesheetUrl, cssText);\r\n    };\r\n    TemplateCompiler.prototype._compileComponentRuntime = function (cacheKey, compMeta, viewDirectives, pipes, compilingComponentsPath) {\r\n        var _this = this;\r\n        var uniqViewDirectives = removeDuplicates(viewDirectives);\r\n        var uniqViewPipes = removeDuplicates(pipes);\r\n        var compiledTemplate = this._compiledTemplateCache.get(cacheKey);\r\n        var done = this._compiledTemplateDone.get(cacheKey);\r\n        if (lang_1.isBlank(compiledTemplate)) {\r\n            compiledTemplate = new CompiledTemplate();\r\n            this._compiledTemplateCache.set(cacheKey, compiledTemplate);\r\n            done = async_1.PromiseWrapper\r\n                .all([this._styleCompiler.compileComponentRuntime(compMeta.template)].concat(uniqViewDirectives.map(function (dirMeta) { return _this.normalizeDirectiveMetadata(dirMeta); })))\r\n                .then(function (stylesAndNormalizedViewDirMetas) {\r\n                var normalizedViewDirMetas = stylesAndNormalizedViewDirMetas.slice(1);\r\n                var styles = stylesAndNormalizedViewDirMetas[0];\r\n                var parsedTemplate = _this._templateParser.parse(compMeta.template.template, normalizedViewDirMetas, uniqViewPipes, compMeta.type.name);\r\n                var childPromises = [];\r\n                var usedDirectives = DirectiveCollector.findUsedDirectives(parsedTemplate);\r\n                usedDirectives.components.forEach(function (component) { return _this._compileNestedComponentRuntime(component, compilingComponentsPath, childPromises); });\r\n                return async_1.PromiseWrapper.all(childPromises)\r\n                    .then(function (_) {\r\n                    var filteredPipes = filterPipes(parsedTemplate, uniqViewPipes);\r\n                    compiledTemplate.init(_this._createViewFactoryRuntime(compMeta, parsedTemplate, usedDirectives.directives, styles, filteredPipes));\r\n                    return compiledTemplate;\r\n                });\r\n            });\r\n            this._compiledTemplateDone.set(cacheKey, done);\r\n        }\r\n        return compiledTemplate;\r\n    };\r\n    TemplateCompiler.prototype._compileNestedComponentRuntime = function (childComponentDir, parentCompilingComponentsPath, childPromises) {\r\n        var compilingComponentsPath = collection_1.ListWrapper.clone(parentCompilingComponentsPath);\r\n        var childCacheKey = childComponentDir.type.runtime;\r\n        var childViewDirectives = this._runtimeMetadataResolver.getViewDirectivesMetadata(childComponentDir.type.runtime);\r\n        var childViewPipes = this._runtimeMetadataResolver.getViewPipesMetadata(childComponentDir.type.runtime);\r\n        var childIsRecursive = collection_1.ListWrapper.contains(compilingComponentsPath, childCacheKey);\r\n        compilingComponentsPath.push(childCacheKey);\r\n        this._compileComponentRuntime(childCacheKey, childComponentDir, childViewDirectives, childViewPipes, compilingComponentsPath);\r\n        if (!childIsRecursive) {\r\n            // Only wait for a child if it is not a cycle\r\n            childPromises.push(this._compiledTemplateDone.get(childCacheKey));\r\n        }\r\n    };\r\n    TemplateCompiler.prototype._createViewFactoryRuntime = function (compMeta, parsedTemplate, directives, styles, pipes) {\r\n        var _this = this;\r\n        if (lang_1.IS_DART || !this._genConfig.useJit) {\r\n            var changeDetectorFactories = this._cdCompiler.compileComponentRuntime(compMeta.type, compMeta.changeDetection, parsedTemplate);\r\n            var protoViews = this._protoViewCompiler.compileProtoViewRuntime(this._resolvedMetadataCache, compMeta, parsedTemplate, pipes);\r\n            return this._viewCompiler.compileComponentRuntime(compMeta, parsedTemplate, styles, protoViews.protoViews, changeDetectorFactories, function (compMeta) { return _this._getNestedComponentViewFactory(compMeta); });\r\n        }\r\n        else {\r\n            var declarations = [];\r\n            var viewFactoryExpr = this._createViewFactoryCodeGen('resolvedMetadataCache', compMeta, new source_module_1.SourceExpression([], 'styles'), parsedTemplate, pipes, declarations);\r\n            var vars = { 'exports': {}, 'styles': styles, 'resolvedMetadataCache': this._resolvedMetadataCache };\r\n            directives.forEach(function (dirMeta) {\r\n                vars[dirMeta.type.name] = dirMeta.type.runtime;\r\n                if (dirMeta.isComponent && dirMeta.type.runtime !== compMeta.type.runtime) {\r\n                    vars[(\"viewFactory_\" + dirMeta.type.name + \"0\")] = _this._getNestedComponentViewFactory(dirMeta);\r\n                }\r\n            });\r\n            pipes.forEach(function (pipeMeta) { return vars[pipeMeta.type.name] = pipeMeta.type.runtime; });\r\n            var declarationsWithoutImports = source_module_1.SourceModule.getSourceWithoutImports(declarations.join('\\n'));\r\n            return lang_1.evalExpression(\"viewFactory_\" + compMeta.type.name, viewFactoryExpr, declarationsWithoutImports, mergeStringMaps([vars, change_detector_compiler_1.CHANGE_DETECTION_JIT_IMPORTS, proto_view_compiler_1.PROTO_VIEW_JIT_IMPORTS, view_compiler_1.VIEW_JIT_IMPORTS]));\r\n        }\r\n    };\r\n    TemplateCompiler.prototype._getNestedComponentViewFactory = function (compMeta) {\r\n        return this._compiledTemplateCache.get(compMeta.type.runtime).viewFactory;\r\n    };\r\n    TemplateCompiler.prototype._compileComponentCodeGen = function (compMeta, directives, pipes, targetDeclarations) {\r\n        var uniqueDirectives = removeDuplicates(directives);\r\n        var uniqPipes = removeDuplicates(pipes);\r\n        var styleExpr = this._styleCompiler.compileComponentCodeGen(compMeta.template);\r\n        var parsedTemplate = this._templateParser.parse(compMeta.template.template, uniqueDirectives, uniqPipes, compMeta.type.name);\r\n        var filteredPipes = filterPipes(parsedTemplate, uniqPipes);\r\n        return this._createViewFactoryCodeGen(exports.METADATA_CACHE_MODULE_REF + \"CODEGEN_RESOLVED_METADATA_CACHE\", compMeta, styleExpr, parsedTemplate, filteredPipes, targetDeclarations);\r\n    };\r\n    TemplateCompiler.prototype._createViewFactoryCodeGen = function (resolvedMetadataCacheExpr, compMeta, styleExpr, parsedTemplate, pipes, targetDeclarations) {\r\n        var changeDetectorsExprs = this._cdCompiler.compileComponentCodeGen(compMeta.type, compMeta.changeDetection, parsedTemplate);\r\n        var protoViewExprs = this._protoViewCompiler.compileProtoViewCodeGen(new util_1.Expression(resolvedMetadataCacheExpr), compMeta, parsedTemplate, pipes);\r\n        var viewFactoryExpr = this._viewCompiler.compileComponentCodeGen(compMeta, parsedTemplate, styleExpr, protoViewExprs.protoViews, changeDetectorsExprs, codeGenComponentViewFactoryName);\r\n        util_1.addAll(changeDetectorsExprs.declarations, targetDeclarations);\r\n        util_1.addAll(protoViewExprs.declarations, targetDeclarations);\r\n        util_1.addAll(viewFactoryExpr.declarations, targetDeclarations);\r\n        return viewFactoryExpr.expression;\r\n    };\r\n    TemplateCompiler = __decorate([\r\n        di_1.Injectable(), \r\n        __metadata('design:paramtypes', [runtime_metadata_1.RuntimeMetadataResolver, template_normalizer_1.TemplateNormalizer, template_parser_1.TemplateParser, style_compiler_1.StyleCompiler, change_detector_compiler_1.ChangeDetectionCompiler, proto_view_compiler_1.ProtoViewCompiler, view_compiler_1.ViewCompiler, resolved_metadata_cache_1.ResolvedMetadataCache, change_detection_1.ChangeDetectorGenConfig])\r\n    ], TemplateCompiler);\r\n    return TemplateCompiler;\r\n})();\r\nexports.TemplateCompiler = TemplateCompiler;\r\nvar NormalizedComponentWithViewDirectives = (function () {\r\n    function NormalizedComponentWithViewDirectives(component, directives, pipes) {\r\n        this.component = component;\r\n        this.directives = directives;\r\n        this.pipes = pipes;\r\n    }\r\n    return NormalizedComponentWithViewDirectives;\r\n})();\r\nexports.NormalizedComponentWithViewDirectives = NormalizedComponentWithViewDirectives;\r\nvar CompiledTemplate = (function () {\r\n    function CompiledTemplate() {\r\n        this.viewFactory = null;\r\n    }\r\n    CompiledTemplate.prototype.init = function (viewFactory) { this.viewFactory = viewFactory; };\r\n    return CompiledTemplate;\r\n})();\r\nfunction assertComponent(meta) {\r\n    if (!meta.isComponent) {\r\n        throw new exceptions_1.BaseException(\"Could not compile '\" + meta.type.name + \"' because it is not a component.\");\r\n    }\r\n}\r\nfunction templateModuleUrl(moduleUrl) {\r\n    var urlWithoutSuffix = moduleUrl.substring(0, moduleUrl.length - util_1.MODULE_SUFFIX.length);\r\n    return urlWithoutSuffix + \".template\" + util_1.MODULE_SUFFIX;\r\n}\r\nfunction codeGenHostViewFactoryName(type) {\r\n    return \"hostViewFactory_\" + type.name;\r\n}\r\nfunction codeGenComponentViewFactoryName(nestedCompType) {\r\n    return source_module_1.moduleRef(templateModuleUrl(nestedCompType.type.moduleUrl)) + \"viewFactory_\" + nestedCompType.type.name + \"0\";\r\n}\r\nfunction mergeStringMaps(maps) {\r\n    var result = {};\r\n    maps.forEach(function (map) { collection_1.StringMapWrapper.forEach(map, function (value, key) { result[key] = value; }); });\r\n    return result;\r\n}\r\nfunction removeDuplicates(items) {\r\n    var res = [];\r\n    items.forEach(function (item) {\r\n        var hasMatch = res.filter(function (r) { return r.type.name == item.type.name && r.type.moduleUrl == item.type.moduleUrl &&\r\n            r.type.runtime == item.type.runtime; })\r\n            .length > 0;\r\n        if (!hasMatch) {\r\n            res.push(item);\r\n        }\r\n    });\r\n    return res;\r\n}\r\nvar DirectiveCollector = (function () {\r\n    function DirectiveCollector() {\r\n        this.directives = [];\r\n        this.components = [];\r\n    }\r\n    DirectiveCollector.findUsedDirectives = function (parsedTemplate) {\r\n        var collector = new DirectiveCollector();\r\n        template_ast_1.templateVisitAll(collector, parsedTemplate);\r\n        return collector;\r\n    };\r\n    DirectiveCollector.prototype.visitBoundText = function (ast, context) { return null; };\r\n    DirectiveCollector.prototype.visitText = function (ast, context) { return null; };\r\n    DirectiveCollector.prototype.visitNgContent = function (ast, context) { return null; };\r\n    DirectiveCollector.prototype.visitElement = function (ast, context) {\r\n        template_ast_1.templateVisitAll(this, ast.directives);\r\n        template_ast_1.templateVisitAll(this, ast.children);\r\n        return null;\r\n    };\r\n    DirectiveCollector.prototype.visitEmbeddedTemplate = function (ast, context) {\r\n        template_ast_1.templateVisitAll(this, ast.directives);\r\n        template_ast_1.templateVisitAll(this, ast.children);\r\n        return null;\r\n    };\r\n    DirectiveCollector.prototype.visitVariable = function (ast, ctx) { return null; };\r\n    DirectiveCollector.prototype.visitAttr = function (ast, attrNameAndValues) { return null; };\r\n    DirectiveCollector.prototype.visitDirective = function (ast, ctx) {\r\n        if (ast.directive.isComponent) {\r\n            this.components.push(ast.directive);\r\n        }\r\n        this.directives.push(ast.directive);\r\n        return null;\r\n    };\r\n    DirectiveCollector.prototype.visitEvent = function (ast, eventTargetAndNames) {\r\n        return null;\r\n    };\r\n    DirectiveCollector.prototype.visitDirectiveProperty = function (ast, context) { return null; };\r\n    DirectiveCollector.prototype.visitElementProperty = function (ast, context) { return null; };\r\n    return DirectiveCollector;\r\n})();\r\nfunction filterPipes(template, allPipes) {\r\n    var visitor = new PipeVisitor();\r\n    template_ast_1.templateVisitAll(visitor, template);\r\n    return allPipes.filter(function (pipeMeta) { return collection_1.SetWrapper.has(visitor.collector.pipes, pipeMeta.name); });\r\n}\r\nvar PipeVisitor = (function () {\r\n    function PipeVisitor() {\r\n        this.collector = new template_parser_1.PipeCollector();\r\n    }\r\n    PipeVisitor.prototype.visitBoundText = function (ast, context) {\r\n        ast.value.visit(this.collector);\r\n        return null;\r\n    };\r\n    PipeVisitor.prototype.visitText = function (ast, context) { return null; };\r\n    PipeVisitor.prototype.visitNgContent = function (ast, context) { return null; };\r\n    PipeVisitor.prototype.visitElement = function (ast, context) {\r\n        template_ast_1.templateVisitAll(this, ast.inputs);\r\n        template_ast_1.templateVisitAll(this, ast.outputs);\r\n        template_ast_1.templateVisitAll(this, ast.directives);\r\n        template_ast_1.templateVisitAll(this, ast.children);\r\n        return null;\r\n    };\r\n    PipeVisitor.prototype.visitEmbeddedTemplate = function (ast, context) {\r\n        template_ast_1.templateVisitAll(this, ast.outputs);\r\n        template_ast_1.templateVisitAll(this, ast.directives);\r\n        template_ast_1.templateVisitAll(this, ast.children);\r\n        return null;\r\n    };\r\n    PipeVisitor.prototype.visitVariable = function (ast, ctx) { return null; };\r\n    PipeVisitor.prototype.visitAttr = function (ast, attrNameAndValues) { return null; };\r\n    PipeVisitor.prototype.visitDirective = function (ast, ctx) {\r\n        template_ast_1.templateVisitAll(this, ast.inputs);\r\n        template_ast_1.templateVisitAll(this, ast.hostEvents);\r\n        template_ast_1.templateVisitAll(this, ast.hostProperties);\r\n        return null;\r\n    };\r\n    PipeVisitor.prototype.visitEvent = function (ast, eventTargetAndNames) {\r\n        ast.handler.visit(this.collector);\r\n        return null;\r\n    };\r\n    PipeVisitor.prototype.visitDirectiveProperty = function (ast, context) {\r\n        ast.value.visit(this.collector);\r\n        return null;\r\n    };\r\n    PipeVisitor.prototype.visitElementProperty = function (ast, context) {\r\n        ast.value.visit(this.collector);\r\n        return null;\r\n    };\r\n    return PipeVisitor;\r\n})();\r\n//# sourceMappingURL=data:application/json;base64,\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/compiler/template_compiler.js\n ** module id = 95\n ** module chunks = 1\n **/","'use strict';var __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar collection_1 = require('angular2/src/facade/collection');\r\nvar lang_1 = require('angular2/src/facade/lang');\r\nvar core_1 = require('angular2/core');\r\nvar lang_2 = require('angular2/src/facade/lang');\r\nvar exceptions_1 = require('angular2/src/facade/exceptions');\r\nvar change_detection_1 = require('angular2/src/core/change_detection/change_detection');\r\nvar html_parser_1 = require('./html_parser');\r\nvar html_tags_1 = require('./html_tags');\r\nvar parse_util_1 = require('./parse_util');\r\nvar ast_1 = require('angular2/src/core/change_detection/parser/ast');\r\nvar template_ast_1 = require('./template_ast');\r\nvar selector_1 = require('angular2/src/compiler/selector');\r\nvar element_schema_registry_1 = require('angular2/src/compiler/schema/element_schema_registry');\r\nvar template_preparser_1 = require('./template_preparser');\r\nvar style_url_resolver_1 = require('./style_url_resolver');\r\nvar html_ast_1 = require('./html_ast');\r\nvar util_1 = require('./util');\r\n// Group 1 = \"bind-\"\r\n// Group 2 = \"var-\" or \"#\"\r\n// Group 3 = \"on-\"\r\n// Group 4 = \"bindon-\"\r\n// Group 5 = the identifier after \"bind-\", \"var-/#\", or \"on-\"\r\n// Group 6 = identifier inside [()]\r\n// Group 7 = identifier inside []\r\n// Group 8 = identifier inside ()\r\nvar BIND_NAME_REGEXP = /^(?:(?:(?:(bind-)|(var-|#)|(on-)|(bindon-))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$/g;\r\nvar TEMPLATE_ELEMENT = 'template';\r\nvar TEMPLATE_ATTR = 'template';\r\nvar TEMPLATE_ATTR_PREFIX = '*';\r\nvar CLASS_ATTR = 'class';\r\nvar PROPERTY_PARTS_SEPARATOR = '.';\r\nvar ATTRIBUTE_PREFIX = 'attr';\r\nvar CLASS_PREFIX = 'class';\r\nvar STYLE_PREFIX = 'style';\r\nvar TEXT_CSS_SELECTOR = selector_1.CssSelector.parse('*')[0];\r\n/**\r\n * Provides an array of {@link TemplateAstVisitor}s which will be used to transform\r\n * parsed templates before compilation is invoked, allowing custom expression syntax\r\n * and other advanced transformations.\r\n *\r\n * This is currently an internal-only feature and not meant for general use.\r\n */\r\nexports.TEMPLATE_TRANSFORMS = lang_2.CONST_EXPR(new core_1.OpaqueToken('TemplateTransforms'));\r\nvar TemplateParseError = (function (_super) {\r\n    __extends(TemplateParseError, _super);\r\n    function TemplateParseError(message, location) {\r\n        _super.call(this, location, message);\r\n    }\r\n    return TemplateParseError;\r\n})(parse_util_1.ParseError);\r\nexports.TemplateParseError = TemplateParseError;\r\nvar TemplateParser = (function () {\r\n    function TemplateParser(_exprParser, _schemaRegistry, _htmlParser, transforms) {\r\n        this._exprParser = _exprParser;\r\n        this._schemaRegistry = _schemaRegistry;\r\n        this._htmlParser = _htmlParser;\r\n        this.transforms = transforms;\r\n    }\r\n    TemplateParser.prototype.parse = function (template, directives, pipes, templateUrl) {\r\n        var parseVisitor = new TemplateParseVisitor(directives, pipes, this._exprParser, this._schemaRegistry);\r\n        var htmlAstWithErrors = this._htmlParser.parse(template, templateUrl);\r\n        var result = html_ast_1.htmlVisitAll(parseVisitor, htmlAstWithErrors.rootNodes, EMPTY_COMPONENT);\r\n        var errors = htmlAstWithErrors.errors.concat(parseVisitor.errors);\r\n        if (errors.length > 0) {\r\n            var errorString = errors.join('\\n');\r\n            throw new exceptions_1.BaseException(\"Template parse errors:\\n\" + errorString);\r\n        }\r\n        if (lang_1.isPresent(this.transforms)) {\r\n            this.transforms.forEach(function (transform) { result = template_ast_1.templateVisitAll(transform, result); });\r\n        }\r\n        return result;\r\n    };\r\n    TemplateParser = __decorate([\r\n        core_1.Injectable(),\r\n        __param(3, core_1.Optional()),\r\n        __param(3, core_1.Inject(exports.TEMPLATE_TRANSFORMS)), \r\n        __metadata('design:paramtypes', [change_detection_1.Parser, element_schema_registry_1.ElementSchemaRegistry, html_parser_1.HtmlParser, Array])\r\n    ], TemplateParser);\r\n    return TemplateParser;\r\n})();\r\nexports.TemplateParser = TemplateParser;\r\nvar TemplateParseVisitor = (function () {\r\n    function TemplateParseVisitor(directives, pipes, _exprParser, _schemaRegistry) {\r\n        var _this = this;\r\n        this._exprParser = _exprParser;\r\n        this._schemaRegistry = _schemaRegistry;\r\n        this.errors = [];\r\n        this.directivesIndex = new Map();\r\n        this.ngContentCount = 0;\r\n        this.selectorMatcher = new selector_1.SelectorMatcher();\r\n        collection_1.ListWrapper.forEachWithIndex(directives, function (directive, index) {\r\n            var selector = selector_1.CssSelector.parse(directive.selector);\r\n            _this.selectorMatcher.addSelectables(selector, directive);\r\n            _this.directivesIndex.set(directive, index);\r\n        });\r\n        this.pipesByName = new Map();\r\n        pipes.forEach(function (pipe) { return _this.pipesByName.set(pipe.name, pipe); });\r\n    }\r\n    TemplateParseVisitor.prototype._reportError = function (message, sourceSpan) {\r\n        this.errors.push(new TemplateParseError(message, sourceSpan.start));\r\n    };\r\n    TemplateParseVisitor.prototype._parseInterpolation = function (value, sourceSpan) {\r\n        var sourceInfo = sourceSpan.start.toString();\r\n        try {\r\n            var ast = this._exprParser.parseInterpolation(value, sourceInfo);\r\n            this._checkPipes(ast, sourceSpan);\r\n            return ast;\r\n        }\r\n        catch (e) {\r\n            this._reportError(\"\" + e, sourceSpan);\r\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\r\n        }\r\n    };\r\n    TemplateParseVisitor.prototype._parseAction = function (value, sourceSpan) {\r\n        var sourceInfo = sourceSpan.start.toString();\r\n        try {\r\n            var ast = this._exprParser.parseAction(value, sourceInfo);\r\n            this._checkPipes(ast, sourceSpan);\r\n            return ast;\r\n        }\r\n        catch (e) {\r\n            this._reportError(\"\" + e, sourceSpan);\r\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\r\n        }\r\n    };\r\n    TemplateParseVisitor.prototype._parseBinding = function (value, sourceSpan) {\r\n        var sourceInfo = sourceSpan.start.toString();\r\n        try {\r\n            var ast = this._exprParser.parseBinding(value, sourceInfo);\r\n            this._checkPipes(ast, sourceSpan);\r\n            return ast;\r\n        }\r\n        catch (e) {\r\n            this._reportError(\"\" + e, sourceSpan);\r\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\r\n        }\r\n    };\r\n    TemplateParseVisitor.prototype._parseTemplateBindings = function (value, sourceSpan) {\r\n        var _this = this;\r\n        var sourceInfo = sourceSpan.start.toString();\r\n        try {\r\n            var bindings = this._exprParser.parseTemplateBindings(value, sourceInfo);\r\n            bindings.forEach(function (binding) {\r\n                if (lang_1.isPresent(binding.expression)) {\r\n                    _this._checkPipes(binding.expression, sourceSpan);\r\n                }\r\n            });\r\n            return bindings;\r\n        }\r\n        catch (e) {\r\n            this._reportError(\"\" + e, sourceSpan);\r\n            return [];\r\n        }\r\n    };\r\n    TemplateParseVisitor.prototype._checkPipes = function (ast, sourceSpan) {\r\n        var _this = this;\r\n        if (lang_1.isPresent(ast)) {\r\n            var collector = new PipeCollector();\r\n            ast.visit(collector);\r\n            collector.pipes.forEach(function (pipeName) {\r\n                if (!_this.pipesByName.has(pipeName)) {\r\n                    _this._reportError(\"The pipe '\" + pipeName + \"' could not be found\", sourceSpan);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    TemplateParseVisitor.prototype.visitText = function (ast, component) {\r\n        var ngContentIndex = component.findNgContentIndex(TEXT_CSS_SELECTOR);\r\n        var expr = this._parseInterpolation(ast.value, ast.sourceSpan);\r\n        if (lang_1.isPresent(expr)) {\r\n            return new template_ast_1.BoundTextAst(expr, ngContentIndex, ast.sourceSpan);\r\n        }\r\n        else {\r\n            return new template_ast_1.TextAst(ast.value, ngContentIndex, ast.sourceSpan);\r\n        }\r\n    };\r\n    TemplateParseVisitor.prototype.visitAttr = function (ast, contex) {\r\n        return new template_ast_1.AttrAst(ast.name, ast.value, ast.sourceSpan);\r\n    };\r\n    TemplateParseVisitor.prototype.visitElement = function (element, component) {\r\n        var _this = this;\r\n        var nodeName = element.name;\r\n        var preparsedElement = template_preparser_1.preparseElement(element);\r\n        if (preparsedElement.type === template_preparser_1.PreparsedElementType.SCRIPT ||\r\n            preparsedElement.type === template_preparser_1.PreparsedElementType.STYLE) {\r\n            // Skipping <script> for security reasons\r\n            // Skipping <style> as we already processed them\r\n            // in the StyleCompiler\r\n            return null;\r\n        }\r\n        if (preparsedElement.type === template_preparser_1.PreparsedElementType.STYLESHEET &&\r\n            style_url_resolver_1.isStyleUrlResolvable(preparsedElement.hrefAttr)) {\r\n            // Skipping stylesheets with either relative urls or package scheme as we already processed\r\n            // them in the StyleCompiler\r\n            return null;\r\n        }\r\n        var matchableAttrs = [];\r\n        var elementOrDirectiveProps = [];\r\n        var vars = [];\r\n        var events = [];\r\n        var templateElementOrDirectiveProps = [];\r\n        var templateVars = [];\r\n        var templateMatchableAttrs = [];\r\n        var hasInlineTemplates = false;\r\n        var attrs = [];\r\n        element.attrs.forEach(function (attr) {\r\n            var hasBinding = _this._parseAttr(attr, matchableAttrs, elementOrDirectiveProps, events, vars);\r\n            var hasTemplateBinding = _this._parseInlineTemplateBinding(attr, templateMatchableAttrs, templateElementOrDirectiveProps, templateVars);\r\n            if (!hasBinding && !hasTemplateBinding) {\r\n                // don't include the bindings as attributes as well in the AST\r\n                attrs.push(_this.visitAttr(attr, null));\r\n                matchableAttrs.push([attr.name, attr.value]);\r\n            }\r\n            if (hasTemplateBinding) {\r\n                hasInlineTemplates = true;\r\n            }\r\n        });\r\n        var lcElName = html_tags_1.splitNsName(nodeName.toLowerCase())[1];\r\n        var isTemplateElement = lcElName == TEMPLATE_ELEMENT;\r\n        var elementCssSelector = createElementCssSelector(nodeName, matchableAttrs);\r\n        var directives = this._createDirectiveAsts(element.name, this._parseDirectives(this.selectorMatcher, elementCssSelector), elementOrDirectiveProps, isTemplateElement ? [] : vars, element.sourceSpan);\r\n        var elementProps = this._createElementPropertyAsts(element.name, elementOrDirectiveProps, directives);\r\n        var children = html_ast_1.htmlVisitAll(preparsedElement.nonBindable ? NON_BINDABLE_VISITOR : this, element.children, Component.create(directives));\r\n        var elementNgContentIndex = hasInlineTemplates ? null : component.findNgContentIndex(elementCssSelector);\r\n        var parsedElement;\r\n        if (preparsedElement.type === template_preparser_1.PreparsedElementType.NG_CONTENT) {\r\n            if (lang_1.isPresent(element.children) && element.children.length > 0) {\r\n                this._reportError(\"<ng-content> element cannot have content. <ng-content> must be immediately followed by </ng-content>\", element.sourceSpan);\r\n            }\r\n            parsedElement =\r\n                new template_ast_1.NgContentAst(this.ngContentCount++, elementNgContentIndex, element.sourceSpan);\r\n        }\r\n        else if (isTemplateElement) {\r\n            this._assertAllEventsPublishedByDirectives(directives, events);\r\n            this._assertNoComponentsNorElementBindingsOnTemplate(directives, elementProps, element.sourceSpan);\r\n            parsedElement = new template_ast_1.EmbeddedTemplateAst(attrs, events, vars, directives, children, elementNgContentIndex, element.sourceSpan);\r\n        }\r\n        else {\r\n            this._assertOnlyOneComponent(directives, element.sourceSpan);\r\n            var elementExportAsVars = vars.filter(function (varAst) { return varAst.value.length === 0; });\r\n            parsedElement =\r\n                new template_ast_1.ElementAst(nodeName, attrs, elementProps, events, elementExportAsVars, directives, children, elementNgContentIndex, element.sourceSpan);\r\n        }\r\n        if (hasInlineTemplates) {\r\n            var templateCssSelector = createElementCssSelector(TEMPLATE_ELEMENT, templateMatchableAttrs);\r\n            var templateDirectives = this._createDirectiveAsts(element.name, this._parseDirectives(this.selectorMatcher, templateCssSelector), templateElementOrDirectiveProps, [], element.sourceSpan);\r\n            var templateElementProps = this._createElementPropertyAsts(element.name, templateElementOrDirectiveProps, templateDirectives);\r\n            this._assertNoComponentsNorElementBindingsOnTemplate(templateDirectives, templateElementProps, element.sourceSpan);\r\n            parsedElement = new template_ast_1.EmbeddedTemplateAst([], [], templateVars, templateDirectives, [parsedElement], component.findNgContentIndex(templateCssSelector), element.sourceSpan);\r\n        }\r\n        return parsedElement;\r\n    };\r\n    TemplateParseVisitor.prototype._parseInlineTemplateBinding = function (attr, targetMatchableAttrs, targetProps, targetVars) {\r\n        var templateBindingsSource = null;\r\n        if (attr.name == TEMPLATE_ATTR) {\r\n            templateBindingsSource = attr.value;\r\n        }\r\n        else if (attr.name.startsWith(TEMPLATE_ATTR_PREFIX)) {\r\n            var key = attr.name.substring(TEMPLATE_ATTR_PREFIX.length); // remove the star\r\n            templateBindingsSource = (attr.value.length == 0) ? key : key + ' ' + attr.value;\r\n        }\r\n        if (lang_1.isPresent(templateBindingsSource)) {\r\n            var bindings = this._parseTemplateBindings(templateBindingsSource, attr.sourceSpan);\r\n            for (var i = 0; i < bindings.length; i++) {\r\n                var binding = bindings[i];\r\n                if (binding.keyIsVar) {\r\n                    targetVars.push(new template_ast_1.VariableAst(binding.key, binding.name, attr.sourceSpan));\r\n                    targetMatchableAttrs.push([binding.key, binding.name]);\r\n                }\r\n                else if (lang_1.isPresent(binding.expression)) {\r\n                    this._parsePropertyAst(binding.key, binding.expression, attr.sourceSpan, targetMatchableAttrs, targetProps);\r\n                }\r\n                else {\r\n                    targetMatchableAttrs.push([binding.key, '']);\r\n                    this._parseLiteralAttr(binding.key, null, attr.sourceSpan, targetProps);\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    TemplateParseVisitor.prototype._parseAttr = function (attr, targetMatchableAttrs, targetProps, targetEvents, targetVars) {\r\n        var attrName = this._normalizeAttributeName(attr.name);\r\n        var attrValue = attr.value;\r\n        var bindParts = lang_1.RegExpWrapper.firstMatch(BIND_NAME_REGEXP, attrName);\r\n        var hasBinding = false;\r\n        if (lang_1.isPresent(bindParts)) {\r\n            hasBinding = true;\r\n            if (lang_1.isPresent(bindParts[1])) {\r\n                this._parseProperty(bindParts[5], attrValue, attr.sourceSpan, targetMatchableAttrs, targetProps);\r\n            }\r\n            else if (lang_1.isPresent(bindParts[2])) {\r\n                var identifier = bindParts[5];\r\n                this._parseVariable(identifier, attrValue, attr.sourceSpan, targetVars);\r\n            }\r\n            else if (lang_1.isPresent(bindParts[3])) {\r\n                this._parseEvent(bindParts[5], attrValue, attr.sourceSpan, targetMatchableAttrs, targetEvents);\r\n            }\r\n            else if (lang_1.isPresent(bindParts[4])) {\r\n                this._parseProperty(bindParts[5], attrValue, attr.sourceSpan, targetMatchableAttrs, targetProps);\r\n                this._parseAssignmentEvent(bindParts[5], attrValue, attr.sourceSpan, targetMatchableAttrs, targetEvents);\r\n            }\r\n            else if (lang_1.isPresent(bindParts[6])) {\r\n                this._parseProperty(bindParts[6], attrValue, attr.sourceSpan, targetMatchableAttrs, targetProps);\r\n                this._parseAssignmentEvent(bindParts[6], attrValue, attr.sourceSpan, targetMatchableAttrs, targetEvents);\r\n            }\r\n            else if (lang_1.isPresent(bindParts[7])) {\r\n                this._parseProperty(bindParts[7], attrValue, attr.sourceSpan, targetMatchableAttrs, targetProps);\r\n            }\r\n            else if (lang_1.isPresent(bindParts[8])) {\r\n                this._parseEvent(bindParts[8], attrValue, attr.sourceSpan, targetMatchableAttrs, targetEvents);\r\n            }\r\n        }\r\n        else {\r\n            hasBinding = this._parsePropertyInterpolation(attrName, attrValue, attr.sourceSpan, targetMatchableAttrs, targetProps);\r\n        }\r\n        if (!hasBinding) {\r\n            this._parseLiteralAttr(attrName, attrValue, attr.sourceSpan, targetProps);\r\n        }\r\n        return hasBinding;\r\n    };\r\n    TemplateParseVisitor.prototype._normalizeAttributeName = function (attrName) {\r\n        return attrName.toLowerCase().startsWith('data-') ? attrName.substring(5) : attrName;\r\n    };\r\n    TemplateParseVisitor.prototype._parseVariable = function (identifier, value, sourceSpan, targetVars) {\r\n        if (identifier.indexOf('-') > -1) {\r\n            this._reportError(\"\\\"-\\\" is not allowed in variable names\", sourceSpan);\r\n        }\r\n        targetVars.push(new template_ast_1.VariableAst(identifier, value, sourceSpan));\r\n    };\r\n    TemplateParseVisitor.prototype._parseProperty = function (name, expression, sourceSpan, targetMatchableAttrs, targetProps) {\r\n        this._parsePropertyAst(name, this._parseBinding(expression, sourceSpan), sourceSpan, targetMatchableAttrs, targetProps);\r\n    };\r\n    TemplateParseVisitor.prototype._parsePropertyInterpolation = function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\r\n        var expr = this._parseInterpolation(value, sourceSpan);\r\n        if (lang_1.isPresent(expr)) {\r\n            this._parsePropertyAst(name, expr, sourceSpan, targetMatchableAttrs, targetProps);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    TemplateParseVisitor.prototype._parsePropertyAst = function (name, ast, sourceSpan, targetMatchableAttrs, targetProps) {\r\n        targetMatchableAttrs.push([name, ast.source]);\r\n        targetProps.push(new BoundElementOrDirectiveProperty(name, ast, false, sourceSpan));\r\n    };\r\n    TemplateParseVisitor.prototype._parseAssignmentEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\r\n        this._parseEvent(name + \"Change\", expression + \"=$event\", sourceSpan, targetMatchableAttrs, targetEvents);\r\n    };\r\n    TemplateParseVisitor.prototype._parseEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\r\n        // long format: 'target: eventName'\r\n        var parts = util_1.splitAtColon(name, [null, name]);\r\n        var target = parts[0];\r\n        var eventName = parts[1];\r\n        targetEvents.push(new template_ast_1.BoundEventAst(eventName, target, this._parseAction(expression, sourceSpan), sourceSpan));\r\n        // Don't detect directives for event names for now,\r\n        // so don't add the event name to the matchableAttrs\r\n    };\r\n    TemplateParseVisitor.prototype._parseLiteralAttr = function (name, value, sourceSpan, targetProps) {\r\n        targetProps.push(new BoundElementOrDirectiveProperty(name, this._exprParser.wrapLiteralPrimitive(value, ''), true, sourceSpan));\r\n    };\r\n    TemplateParseVisitor.prototype._parseDirectives = function (selectorMatcher, elementCssSelector) {\r\n        var _this = this;\r\n        var directives = [];\r\n        selectorMatcher.match(elementCssSelector, function (selector, directive) { directives.push(directive); });\r\n        // Need to sort the directives so that we get consistent results throughout,\r\n        // as selectorMatcher uses Maps inside.\r\n        // Also need to make components the first directive in the array\r\n        collection_1.ListWrapper.sort(directives, function (dir1, dir2) {\r\n            var dir1Comp = dir1.isComponent;\r\n            var dir2Comp = dir2.isComponent;\r\n            if (dir1Comp && !dir2Comp) {\r\n                return -1;\r\n            }\r\n            else if (!dir1Comp && dir2Comp) {\r\n                return 1;\r\n            }\r\n            else {\r\n                return _this.directivesIndex.get(dir1) - _this.directivesIndex.get(dir2);\r\n            }\r\n        });\r\n        return directives;\r\n    };\r\n    TemplateParseVisitor.prototype._createDirectiveAsts = function (elementName, directives, props, possibleExportAsVars, sourceSpan) {\r\n        var _this = this;\r\n        var matchedVariables = new Set();\r\n        var directiveAsts = directives.map(function (directive) {\r\n            var hostProperties = [];\r\n            var hostEvents = [];\r\n            var directiveProperties = [];\r\n            _this._createDirectiveHostPropertyAsts(elementName, directive.hostProperties, sourceSpan, hostProperties);\r\n            _this._createDirectiveHostEventAsts(directive.hostListeners, sourceSpan, hostEvents);\r\n            _this._createDirectivePropertyAsts(directive.inputs, props, directiveProperties);\r\n            var exportAsVars = [];\r\n            possibleExportAsVars.forEach(function (varAst) {\r\n                if ((varAst.value.length === 0 && directive.isComponent) ||\r\n                    (directive.exportAs == varAst.value)) {\r\n                    exportAsVars.push(varAst);\r\n                    matchedVariables.add(varAst.name);\r\n                }\r\n            });\r\n            return new template_ast_1.DirectiveAst(directive, directiveProperties, hostProperties, hostEvents, exportAsVars, sourceSpan);\r\n        });\r\n        possibleExportAsVars.forEach(function (varAst) {\r\n            if (varAst.value.length > 0 && !collection_1.SetWrapper.has(matchedVariables, varAst.name)) {\r\n                _this._reportError(\"There is no directive with \\\"exportAs\\\" set to \\\"\" + varAst.value + \"\\\"\", varAst.sourceSpan);\r\n            }\r\n        });\r\n        return directiveAsts;\r\n    };\r\n    TemplateParseVisitor.prototype._createDirectiveHostPropertyAsts = function (elementName, hostProps, sourceSpan, targetPropertyAsts) {\r\n        var _this = this;\r\n        if (lang_1.isPresent(hostProps)) {\r\n            collection_1.StringMapWrapper.forEach(hostProps, function (expression, propName) {\r\n                var exprAst = _this._parseBinding(expression, sourceSpan);\r\n                targetPropertyAsts.push(_this._createElementPropertyAst(elementName, propName, exprAst, sourceSpan));\r\n            });\r\n        }\r\n    };\r\n    TemplateParseVisitor.prototype._createDirectiveHostEventAsts = function (hostListeners, sourceSpan, targetEventAsts) {\r\n        var _this = this;\r\n        if (lang_1.isPresent(hostListeners)) {\r\n            collection_1.StringMapWrapper.forEach(hostListeners, function (expression, propName) {\r\n                _this._parseEvent(propName, expression, sourceSpan, [], targetEventAsts);\r\n            });\r\n        }\r\n    };\r\n    TemplateParseVisitor.prototype._createDirectivePropertyAsts = function (directiveProperties, boundProps, targetBoundDirectiveProps) {\r\n        if (lang_1.isPresent(directiveProperties)) {\r\n            var boundPropsByName = new Map();\r\n            boundProps.forEach(function (boundProp) {\r\n                var prevValue = boundPropsByName.get(boundProp.name);\r\n                if (lang_1.isBlank(prevValue) || prevValue.isLiteral) {\r\n                    // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\r\n                    boundPropsByName.set(boundProp.name, boundProp);\r\n                }\r\n            });\r\n            collection_1.StringMapWrapper.forEach(directiveProperties, function (elProp, dirProp) {\r\n                var boundProp = boundPropsByName.get(elProp);\r\n                // Bindings are optional, so this binding only needs to be set up if an expression is given.\r\n                if (lang_1.isPresent(boundProp)) {\r\n                    targetBoundDirectiveProps.push(new template_ast_1.BoundDirectivePropertyAst(dirProp, boundProp.name, boundProp.expression, boundProp.sourceSpan));\r\n                }\r\n            });\r\n        }\r\n    };\r\n    TemplateParseVisitor.prototype._createElementPropertyAsts = function (elementName, props, directives) {\r\n        var _this = this;\r\n        var boundElementProps = [];\r\n        var boundDirectivePropsIndex = new Map();\r\n        directives.forEach(function (directive) {\r\n            directive.inputs.forEach(function (prop) {\r\n                boundDirectivePropsIndex.set(prop.templateName, prop);\r\n            });\r\n        });\r\n        props.forEach(function (prop) {\r\n            if (!prop.isLiteral && lang_1.isBlank(boundDirectivePropsIndex.get(prop.name))) {\r\n                boundElementProps.push(_this._createElementPropertyAst(elementName, prop.name, prop.expression, prop.sourceSpan));\r\n            }\r\n        });\r\n        return boundElementProps;\r\n    };\r\n    TemplateParseVisitor.prototype._createElementPropertyAst = function (elementName, name, ast, sourceSpan) {\r\n        var unit = null;\r\n        var bindingType;\r\n        var boundPropertyName;\r\n        var parts = name.split(PROPERTY_PARTS_SEPARATOR);\r\n        if (parts.length === 1) {\r\n            boundPropertyName = this._schemaRegistry.getMappedPropName(parts[0]);\r\n            bindingType = template_ast_1.PropertyBindingType.Property;\r\n            if (!this._schemaRegistry.hasProperty(elementName, boundPropertyName)) {\r\n                this._reportError(\"Can't bind to '\" + boundPropertyName + \"' since it isn't a known native property\", sourceSpan);\r\n            }\r\n        }\r\n        else {\r\n            if (parts[0] == ATTRIBUTE_PREFIX) {\r\n                boundPropertyName = parts[1];\r\n                bindingType = template_ast_1.PropertyBindingType.Attribute;\r\n            }\r\n            else if (parts[0] == CLASS_PREFIX) {\r\n                boundPropertyName = parts[1];\r\n                bindingType = template_ast_1.PropertyBindingType.Class;\r\n            }\r\n            else if (parts[0] == STYLE_PREFIX) {\r\n                unit = parts.length > 2 ? parts[2] : null;\r\n                boundPropertyName = parts[1];\r\n                bindingType = template_ast_1.PropertyBindingType.Style;\r\n            }\r\n            else {\r\n                this._reportError(\"Invalid property name '\" + name + \"'\", sourceSpan);\r\n                bindingType = null;\r\n            }\r\n        }\r\n        return new template_ast_1.BoundElementPropertyAst(boundPropertyName, bindingType, ast, unit, sourceSpan);\r\n    };\r\n    TemplateParseVisitor.prototype._findComponentDirectiveNames = function (directives) {\r\n        var componentTypeNames = [];\r\n        directives.forEach(function (directive) {\r\n            var typeName = directive.directive.type.name;\r\n            if (directive.directive.isComponent) {\r\n                componentTypeNames.push(typeName);\r\n            }\r\n        });\r\n        return componentTypeNames;\r\n    };\r\n    TemplateParseVisitor.prototype._assertOnlyOneComponent = function (directives, sourceSpan) {\r\n        var componentTypeNames = this._findComponentDirectiveNames(directives);\r\n        if (componentTypeNames.length > 1) {\r\n            this._reportError(\"More than one component: \" + componentTypeNames.join(','), sourceSpan);\r\n        }\r\n    };\r\n    TemplateParseVisitor.prototype._assertNoComponentsNorElementBindingsOnTemplate = function (directives, elementProps, sourceSpan) {\r\n        var _this = this;\r\n        var componentTypeNames = this._findComponentDirectiveNames(directives);\r\n        if (componentTypeNames.length > 0) {\r\n            this._reportError(\"Components on an embedded template: \" + componentTypeNames.join(','), sourceSpan);\r\n        }\r\n        elementProps.forEach(function (prop) {\r\n            _this._reportError(\"Property binding \" + prop.name + \" not used by any directive on an embedded template\", sourceSpan);\r\n        });\r\n    };\r\n    TemplateParseVisitor.prototype._assertAllEventsPublishedByDirectives = function (directives, events) {\r\n        var _this = this;\r\n        var allDirectiveEvents = new Set();\r\n        directives.forEach(function (directive) {\r\n            collection_1.StringMapWrapper.forEach(directive.directive.outputs, function (eventName, _) { allDirectiveEvents.add(eventName); });\r\n        });\r\n        events.forEach(function (event) {\r\n            if (lang_1.isPresent(event.target) || !collection_1.SetWrapper.has(allDirectiveEvents, event.name)) {\r\n                _this._reportError(\"Event binding \" + event.fullName + \" not emitted by any directive on an embedded template\", event.sourceSpan);\r\n            }\r\n        });\r\n    };\r\n    return TemplateParseVisitor;\r\n})();\r\nvar NonBindableVisitor = (function () {\r\n    function NonBindableVisitor() {\r\n    }\r\n    NonBindableVisitor.prototype.visitElement = function (ast, component) {\r\n        var preparsedElement = template_preparser_1.preparseElement(ast);\r\n        if (preparsedElement.type === template_preparser_1.PreparsedElementType.SCRIPT ||\r\n            preparsedElement.type === template_preparser_1.PreparsedElementType.STYLE ||\r\n            preparsedElement.type === template_preparser_1.PreparsedElementType.STYLESHEET) {\r\n            // Skipping <script> for security reasons\r\n            // Skipping <style> and stylesheets as we already processed them\r\n            // in the StyleCompiler\r\n            return null;\r\n        }\r\n        var attrNameAndValues = ast.attrs.map(function (attrAst) { return [attrAst.name, attrAst.value]; });\r\n        var selector = createElementCssSelector(ast.name, attrNameAndValues);\r\n        var ngContentIndex = component.findNgContentIndex(selector);\r\n        var children = html_ast_1.htmlVisitAll(this, ast.children, EMPTY_COMPONENT);\r\n        return new template_ast_1.ElementAst(ast.name, html_ast_1.htmlVisitAll(this, ast.attrs), [], [], [], [], children, ngContentIndex, ast.sourceSpan);\r\n    };\r\n    NonBindableVisitor.prototype.visitAttr = function (ast, context) {\r\n        return new template_ast_1.AttrAst(ast.name, ast.value, ast.sourceSpan);\r\n    };\r\n    NonBindableVisitor.prototype.visitText = function (ast, component) {\r\n        var ngContentIndex = component.findNgContentIndex(TEXT_CSS_SELECTOR);\r\n        return new template_ast_1.TextAst(ast.value, ngContentIndex, ast.sourceSpan);\r\n    };\r\n    return NonBindableVisitor;\r\n})();\r\nvar BoundElementOrDirectiveProperty = (function () {\r\n    function BoundElementOrDirectiveProperty(name, expression, isLiteral, sourceSpan) {\r\n        this.name = name;\r\n        this.expression = expression;\r\n        this.isLiteral = isLiteral;\r\n        this.sourceSpan = sourceSpan;\r\n    }\r\n    return BoundElementOrDirectiveProperty;\r\n})();\r\nfunction splitClasses(classAttrValue) {\r\n    return lang_1.StringWrapper.split(classAttrValue.trim(), /\\s+/g);\r\n}\r\nexports.splitClasses = splitClasses;\r\nvar Component = (function () {\r\n    function Component(ngContentIndexMatcher, wildcardNgContentIndex) {\r\n        this.ngContentIndexMatcher = ngContentIndexMatcher;\r\n        this.wildcardNgContentIndex = wildcardNgContentIndex;\r\n    }\r\n    Component.create = function (directives) {\r\n        if (directives.length === 0 || !directives[0].directive.isComponent) {\r\n            return EMPTY_COMPONENT;\r\n        }\r\n        var matcher = new selector_1.SelectorMatcher();\r\n        var ngContentSelectors = directives[0].directive.template.ngContentSelectors;\r\n        var wildcardNgContentIndex = null;\r\n        for (var i = 0; i < ngContentSelectors.length; i++) {\r\n            var selector = ngContentSelectors[i];\r\n            if (lang_1.StringWrapper.equals(selector, '*')) {\r\n                wildcardNgContentIndex = i;\r\n            }\r\n            else {\r\n                matcher.addSelectables(selector_1.CssSelector.parse(ngContentSelectors[i]), i);\r\n            }\r\n        }\r\n        return new Component(matcher, wildcardNgContentIndex);\r\n    };\r\n    Component.prototype.findNgContentIndex = function (selector) {\r\n        var ngContentIndices = [];\r\n        this.ngContentIndexMatcher.match(selector, function (selector, ngContentIndex) { ngContentIndices.push(ngContentIndex); });\r\n        collection_1.ListWrapper.sort(ngContentIndices);\r\n        if (lang_1.isPresent(this.wildcardNgContentIndex)) {\r\n            ngContentIndices.push(this.wildcardNgContentIndex);\r\n        }\r\n        return ngContentIndices.length > 0 ? ngContentIndices[0] : null;\r\n    };\r\n    return Component;\r\n})();\r\nfunction createElementCssSelector(elementName, matchableAttrs) {\r\n    var cssSelector = new selector_1.CssSelector();\r\n    var elNameNoNs = html_tags_1.splitNsName(elementName)[1];\r\n    cssSelector.setElement(elNameNoNs);\r\n    for (var i = 0; i < matchableAttrs.length; i++) {\r\n        var attrName = matchableAttrs[i][0];\r\n        var attrNameNoNs = html_tags_1.splitNsName(attrName)[1];\r\n        var attrValue = matchableAttrs[i][1];\r\n        cssSelector.addAttribute(attrNameNoNs, attrValue);\r\n        if (attrName.toLowerCase() == CLASS_ATTR) {\r\n            var classes = splitClasses(attrValue);\r\n            classes.forEach(function (className) { return cssSelector.addClassName(className); });\r\n        }\r\n    }\r\n    return cssSelector;\r\n}\r\nvar EMPTY_COMPONENT = new Component(new selector_1.SelectorMatcher(), null);\r\nvar NON_BINDABLE_VISITOR = new NonBindableVisitor();\r\nvar PipeCollector = (function (_super) {\r\n    __extends(PipeCollector, _super);\r\n    function PipeCollector() {\r\n        _super.apply(this, arguments);\r\n        this.pipes = new Set();\r\n    }\r\n    PipeCollector.prototype.visitPipe = function (ast) {\r\n        this.pipes.add(ast.name);\r\n        ast.exp.visit(this);\r\n        this.visitAll(ast.args);\r\n        return null;\r\n    };\r\n    return PipeCollector;\r\n})(ast_1.RecursiveAstVisitor);\r\nexports.PipeCollector = PipeCollector;\r\n//# sourceMappingURL=data:application/json;base64,\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/compiler/template_parser.js\n ** module id = 96\n ** module chunks = 1\n **/","'use strict';var __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar di_1 = require('angular2/src/core/di');\r\nvar animation_builder_1 = require('angular2/src/animate/animation_builder');\r\nvar lang_1 = require('angular2/src/facade/lang');\r\nvar exceptions_1 = require('angular2/src/facade/exceptions');\r\nvar shared_styles_host_1 = require('./shared_styles_host');\r\nvar event_manager_1 = require('./events/event_manager');\r\nvar dom_tokens_1 = require('./dom_tokens');\r\nvar metadata_1 = require('angular2/src/core/metadata');\r\nvar dom_adapter_1 = require('angular2/src/platform/dom/dom_adapter');\r\nvar util_1 = require('./util');\r\nvar NAMESPACE_URIS = lang_1.CONST_EXPR({ 'xlink': 'http://www.w3.org/1999/xlink', 'svg': 'http://www.w3.org/2000/svg' });\r\nvar TEMPLATE_COMMENT_TEXT = 'template bindings={}';\r\nvar TEMPLATE_BINDINGS_EXP = /^template bindings=(.*)$/g;\r\nvar DomRootRenderer = (function () {\r\n    function DomRootRenderer(document, eventManager, sharedStylesHost, animate) {\r\n        this.document = document;\r\n        this.eventManager = eventManager;\r\n        this.sharedStylesHost = sharedStylesHost;\r\n        this.animate = animate;\r\n        this._registeredComponents = new Map();\r\n    }\r\n    DomRootRenderer.prototype.renderComponent = function (componentProto) {\r\n        var renderer = this._registeredComponents.get(componentProto.id);\r\n        if (lang_1.isBlank(renderer)) {\r\n            renderer = new DomRenderer(this, componentProto);\r\n            this._registeredComponents.set(componentProto.id, renderer);\r\n        }\r\n        return renderer;\r\n    };\r\n    return DomRootRenderer;\r\n})();\r\nexports.DomRootRenderer = DomRootRenderer;\r\nvar DomRootRenderer_ = (function (_super) {\r\n    __extends(DomRootRenderer_, _super);\r\n    function DomRootRenderer_(_document, _eventManager, sharedStylesHost, animate) {\r\n        _super.call(this, _document, _eventManager, sharedStylesHost, animate);\r\n    }\r\n    DomRootRenderer_ = __decorate([\r\n        di_1.Injectable(),\r\n        __param(0, di_1.Inject(dom_tokens_1.DOCUMENT)), \r\n        __metadata('design:paramtypes', [Object, event_manager_1.EventManager, shared_styles_host_1.DomSharedStylesHost, animation_builder_1.AnimationBuilder])\r\n    ], DomRootRenderer_);\r\n    return DomRootRenderer_;\r\n})(DomRootRenderer);\r\nexports.DomRootRenderer_ = DomRootRenderer_;\r\nvar DomRenderer = (function () {\r\n    function DomRenderer(_rootRenderer, componentProto) {\r\n        this._rootRenderer = _rootRenderer;\r\n        this.componentProto = componentProto;\r\n        this._styles = _flattenStyles(componentProto.id, componentProto.styles, []);\r\n        if (componentProto.encapsulation !== metadata_1.ViewEncapsulation.Native) {\r\n            this._rootRenderer.sharedStylesHost.addStyles(this._styles);\r\n        }\r\n        if (this.componentProto.encapsulation === metadata_1.ViewEncapsulation.Emulated) {\r\n            this._contentAttr = _shimContentAttribute(componentProto.id);\r\n            this._hostAttr = _shimHostAttribute(componentProto.id);\r\n        }\r\n        else {\r\n            this._contentAttr = null;\r\n            this._hostAttr = null;\r\n        }\r\n    }\r\n    DomRenderer.prototype.renderComponent = function (componentProto) {\r\n        return this._rootRenderer.renderComponent(componentProto);\r\n    };\r\n    DomRenderer.prototype.selectRootElement = function (selector) {\r\n        var el = dom_adapter_1.DOM.querySelector(this._rootRenderer.document, selector);\r\n        if (lang_1.isBlank(el)) {\r\n            throw new exceptions_1.BaseException(\"The selector \\\"\" + selector + \"\\\" did not match any elements\");\r\n        }\r\n        dom_adapter_1.DOM.clearNodes(el);\r\n        return el;\r\n    };\r\n    DomRenderer.prototype.createElement = function (parent, name) {\r\n        var nsAndName = splitNamespace(name);\r\n        var el = lang_1.isPresent(nsAndName[0]) ?\r\n            dom_adapter_1.DOM.createElementNS(NAMESPACE_URIS[nsAndName[0]], nsAndName[1]) :\r\n            dom_adapter_1.DOM.createElement(nsAndName[1]);\r\n        if (lang_1.isPresent(this._contentAttr)) {\r\n            dom_adapter_1.DOM.setAttribute(el, this._contentAttr, '');\r\n        }\r\n        if (lang_1.isPresent(parent)) {\r\n            dom_adapter_1.DOM.appendChild(parent, el);\r\n        }\r\n        return el;\r\n    };\r\n    DomRenderer.prototype.createViewRoot = function (hostElement) {\r\n        var nodesParent;\r\n        if (this.componentProto.encapsulation === metadata_1.ViewEncapsulation.Native) {\r\n            nodesParent = dom_adapter_1.DOM.createShadowRoot(hostElement);\r\n            this._rootRenderer.sharedStylesHost.addHost(nodesParent);\r\n            for (var i = 0; i < this._styles.length; i++) {\r\n                dom_adapter_1.DOM.appendChild(nodesParent, dom_adapter_1.DOM.createStyleElement(this._styles[i]));\r\n            }\r\n        }\r\n        else {\r\n            if (lang_1.isPresent(this._hostAttr)) {\r\n                dom_adapter_1.DOM.setAttribute(hostElement, this._hostAttr, '');\r\n            }\r\n            nodesParent = hostElement;\r\n        }\r\n        return nodesParent;\r\n    };\r\n    DomRenderer.prototype.createTemplateAnchor = function (parentElement) {\r\n        var comment = dom_adapter_1.DOM.createComment(TEMPLATE_COMMENT_TEXT);\r\n        if (lang_1.isPresent(parentElement)) {\r\n            dom_adapter_1.DOM.appendChild(parentElement, comment);\r\n        }\r\n        return comment;\r\n    };\r\n    DomRenderer.prototype.createText = function (parentElement, value) {\r\n        var node = dom_adapter_1.DOM.createTextNode(value);\r\n        if (lang_1.isPresent(parentElement)) {\r\n            dom_adapter_1.DOM.appendChild(parentElement, node);\r\n        }\r\n        return node;\r\n    };\r\n    DomRenderer.prototype.projectNodes = function (parentElement, nodes) {\r\n        if (lang_1.isBlank(parentElement))\r\n            return;\r\n        appendNodes(parentElement, nodes);\r\n    };\r\n    DomRenderer.prototype.attachViewAfter = function (node, viewRootNodes) {\r\n        moveNodesAfterSibling(node, viewRootNodes);\r\n        for (var i = 0; i < viewRootNodes.length; i++)\r\n            this.animateNodeEnter(viewRootNodes[i]);\r\n    };\r\n    DomRenderer.prototype.detachView = function (viewRootNodes) {\r\n        for (var i = 0; i < viewRootNodes.length; i++) {\r\n            var node = viewRootNodes[i];\r\n            dom_adapter_1.DOM.remove(node);\r\n            this.animateNodeLeave(node);\r\n        }\r\n    };\r\n    DomRenderer.prototype.destroyView = function (hostElement, viewAllNodes) {\r\n        if (this.componentProto.encapsulation === metadata_1.ViewEncapsulation.Native && lang_1.isPresent(hostElement)) {\r\n            this._rootRenderer.sharedStylesHost.removeHost(dom_adapter_1.DOM.getShadowRoot(hostElement));\r\n        }\r\n    };\r\n    DomRenderer.prototype.listen = function (renderElement, name, callback) {\r\n        return this._rootRenderer.eventManager.addEventListener(renderElement, name, decoratePreventDefault(callback));\r\n    };\r\n    DomRenderer.prototype.listenGlobal = function (target, name, callback) {\r\n        return this._rootRenderer.eventManager.addGlobalEventListener(target, name, decoratePreventDefault(callback));\r\n    };\r\n    DomRenderer.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\r\n        dom_adapter_1.DOM.setProperty(renderElement, propertyName, propertyValue);\r\n    };\r\n    DomRenderer.prototype.setElementAttribute = function (renderElement, attributeName, attributeValue) {\r\n        var attrNs;\r\n        var nsAndName = splitNamespace(attributeName);\r\n        if (lang_1.isPresent(nsAndName[0])) {\r\n            attributeName = nsAndName[0] + ':' + nsAndName[1];\r\n            attrNs = NAMESPACE_URIS[nsAndName[0]];\r\n        }\r\n        if (lang_1.isPresent(attributeValue)) {\r\n            if (lang_1.isPresent(attrNs)) {\r\n                dom_adapter_1.DOM.setAttributeNS(renderElement, attrNs, attributeName, attributeValue);\r\n            }\r\n            else {\r\n                dom_adapter_1.DOM.setAttribute(renderElement, nsAndName[1], attributeValue);\r\n            }\r\n        }\r\n        else {\r\n            dom_adapter_1.DOM.removeAttribute(renderElement, attributeName);\r\n        }\r\n    };\r\n    DomRenderer.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) {\r\n        var dashCasedPropertyName = util_1.camelCaseToDashCase(propertyName);\r\n        if (dom_adapter_1.DOM.isCommentNode(renderElement)) {\r\n            var existingBindings = lang_1.RegExpWrapper.firstMatch(TEMPLATE_BINDINGS_EXP, lang_1.StringWrapper.replaceAll(dom_adapter_1.DOM.getText(renderElement), /\\n/g, ''));\r\n            var parsedBindings = lang_1.Json.parse(existingBindings[1]);\r\n            parsedBindings[dashCasedPropertyName] = propertyValue;\r\n            dom_adapter_1.DOM.setText(renderElement, lang_1.StringWrapper.replace(TEMPLATE_COMMENT_TEXT, '{}', lang_1.Json.stringify(parsedBindings)));\r\n        }\r\n        else {\r\n            this.setElementAttribute(renderElement, propertyName, propertyValue);\r\n        }\r\n    };\r\n    DomRenderer.prototype.setElementDebugInfo = function (renderElement, info) { };\r\n    DomRenderer.prototype.setElementClass = function (renderElement, className, isAdd) {\r\n        if (isAdd) {\r\n            dom_adapter_1.DOM.addClass(renderElement, className);\r\n        }\r\n        else {\r\n            dom_adapter_1.DOM.removeClass(renderElement, className);\r\n        }\r\n    };\r\n    DomRenderer.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\r\n        if (lang_1.isPresent(styleValue)) {\r\n            dom_adapter_1.DOM.setStyle(renderElement, styleName, lang_1.stringify(styleValue));\r\n        }\r\n        else {\r\n            dom_adapter_1.DOM.removeStyle(renderElement, styleName);\r\n        }\r\n    };\r\n    DomRenderer.prototype.invokeElementMethod = function (renderElement, methodName, args) {\r\n        dom_adapter_1.DOM.invoke(renderElement, methodName, args);\r\n    };\r\n    DomRenderer.prototype.setText = function (renderNode, text) { dom_adapter_1.DOM.setText(renderNode, text); };\r\n    /**\r\n     * Performs animations if necessary\r\n     * @param node\r\n     */\r\n    DomRenderer.prototype.animateNodeEnter = function (node) {\r\n        if (dom_adapter_1.DOM.isElementNode(node) && dom_adapter_1.DOM.hasClass(node, 'ng-animate')) {\r\n            dom_adapter_1.DOM.addClass(node, 'ng-enter');\r\n            this._rootRenderer.animate.css()\r\n                .addAnimationClass('ng-enter-active')\r\n                .start(node)\r\n                .onComplete(function () { dom_adapter_1.DOM.removeClass(node, 'ng-enter'); });\r\n        }\r\n    };\r\n    /**\r\n     * If animations are necessary, performs animations then removes the element; otherwise, it just\r\n     * removes the element.\r\n     * @param node\r\n     */\r\n    DomRenderer.prototype.animateNodeLeave = function (node) {\r\n        if (dom_adapter_1.DOM.isElementNode(node) && dom_adapter_1.DOM.hasClass(node, 'ng-animate')) {\r\n            dom_adapter_1.DOM.addClass(node, 'ng-leave');\r\n            this._rootRenderer.animate.css()\r\n                .addAnimationClass('ng-leave-active')\r\n                .start(node)\r\n                .onComplete(function () {\r\n                dom_adapter_1.DOM.removeClass(node, 'ng-leave');\r\n                dom_adapter_1.DOM.remove(node);\r\n            });\r\n        }\r\n        else {\r\n            dom_adapter_1.DOM.remove(node);\r\n        }\r\n    };\r\n    return DomRenderer;\r\n})();\r\nexports.DomRenderer = DomRenderer;\r\nfunction moveNodesAfterSibling(sibling, nodes) {\r\n    var parent = dom_adapter_1.DOM.parentElement(sibling);\r\n    if (nodes.length > 0 && lang_1.isPresent(parent)) {\r\n        var nextSibling = dom_adapter_1.DOM.nextSibling(sibling);\r\n        if (lang_1.isPresent(nextSibling)) {\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                dom_adapter_1.DOM.insertBefore(nextSibling, nodes[i]);\r\n            }\r\n        }\r\n        else {\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                dom_adapter_1.DOM.appendChild(parent, nodes[i]);\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction appendNodes(parent, nodes) {\r\n    for (var i = 0; i < nodes.length; i++) {\r\n        dom_adapter_1.DOM.appendChild(parent, nodes[i]);\r\n    }\r\n}\r\nfunction decoratePreventDefault(eventHandler) {\r\n    return function (event) {\r\n        var allowDefaultBehavior = eventHandler(event);\r\n        if (allowDefaultBehavior === false) {\r\n            // TODO(tbosch): move preventDefault into event plugins...\r\n            dom_adapter_1.DOM.preventDefault(event);\r\n        }\r\n    };\r\n}\r\nvar COMPONENT_REGEX = /%COMP%/g;\r\nexports.COMPONENT_VARIABLE = '%COMP%';\r\nexports.HOST_ATTR = \"_nghost-\" + exports.COMPONENT_VARIABLE;\r\nexports.CONTENT_ATTR = \"_ngcontent-\" + exports.COMPONENT_VARIABLE;\r\nfunction _shimContentAttribute(componentShortId) {\r\n    return lang_1.StringWrapper.replaceAll(exports.CONTENT_ATTR, COMPONENT_REGEX, componentShortId);\r\n}\r\nfunction _shimHostAttribute(componentShortId) {\r\n    return lang_1.StringWrapper.replaceAll(exports.HOST_ATTR, COMPONENT_REGEX, componentShortId);\r\n}\r\nfunction _flattenStyles(compId, styles, target) {\r\n    for (var i = 0; i < styles.length; i++) {\r\n        var style = styles[i];\r\n        if (lang_1.isArray(style)) {\r\n            _flattenStyles(compId, style, target);\r\n        }\r\n        else {\r\n            style = lang_1.StringWrapper.replaceAll(style, COMPONENT_REGEX, compId);\r\n            target.push(style);\r\n        }\r\n    }\r\n    return target;\r\n}\r\nvar NS_PREFIX_RE = /^@([^:]+):(.+)/g;\r\nfunction splitNamespace(name) {\r\n    if (name[0] != '@') {\r\n        return [null, name];\r\n    }\r\n    var match = lang_1.RegExpWrapper.firstMatch(NS_PREFIX_RE, name);\r\n    return [match[1], match[2]];\r\n}\r\n//# sourceMappingURL=data:application/json;base64,\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/platform/dom/dom_renderer.js\n ** module id = 113\n ** module chunks = 1\n **/","'use strict';function __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n/**\r\n * @module\r\n * @description\r\n * Starting point to import all compiler APIs.\r\n */\r\n__export(require('./src/compiler/url_resolver'));\r\n__export(require('./src/compiler/xhr'));\r\n__export(require('./src/compiler/compiler'));\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcGlsZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJhbmd1bGFyMi9jb21waWxlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQTs7OztHQUlHO0FBQ0gsaUJBQWMsNkJBQTZCLENBQUMsRUFBQTtBQUM1QyxpQkFBYyxvQkFBb0IsQ0FBQyxFQUFBO0FBQ25DLGlCQUFjLHlCQUF5QixDQUFDLEVBQUEiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBtb2R1bGVcbiAqIEBkZXNjcmlwdGlvblxuICogU3RhcnRpbmcgcG9pbnQgdG8gaW1wb3J0IGFsbCBjb21waWxlciBBUElzLlxuICovXG5leHBvcnQgKiBmcm9tICcuL3NyYy9jb21waWxlci91cmxfcmVzb2x2ZXInO1xuZXhwb3J0ICogZnJvbSAnLi9zcmMvY29tcGlsZXIveGhyJztcbmV4cG9ydCAqIGZyb20gJy4vc3JjL2NvbXBpbGVyL2NvbXBpbGVyJzsiXX0=\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/compiler.js\n ** module id = 122\n ** module chunks = 1\n **/","'use strict';function __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n/**\r\n * This is a set of classes and objects that can be used both in the browser and on the server.\r\n */\r\nvar dom_adapter_1 = require('angular2/src/platform/dom/dom_adapter');\r\nexports.DOM = dom_adapter_1.DOM;\r\nexports.setRootDomAdapter = dom_adapter_1.setRootDomAdapter;\r\nexports.DomAdapter = dom_adapter_1.DomAdapter;\r\nvar dom_renderer_1 = require('angular2/src/platform/dom/dom_renderer');\r\nexports.DomRenderer = dom_renderer_1.DomRenderer;\r\nvar dom_tokens_1 = require('angular2/src/platform/dom/dom_tokens');\r\nexports.DOCUMENT = dom_tokens_1.DOCUMENT;\r\nvar shared_styles_host_1 = require('angular2/src/platform/dom/shared_styles_host');\r\nexports.SharedStylesHost = shared_styles_host_1.SharedStylesHost;\r\nexports.DomSharedStylesHost = shared_styles_host_1.DomSharedStylesHost;\r\nvar dom_events_1 = require('angular2/src/platform/dom/events/dom_events');\r\nexports.DomEventsPlugin = dom_events_1.DomEventsPlugin;\r\nvar event_manager_1 = require('angular2/src/platform/dom/events/event_manager');\r\nexports.EVENT_MANAGER_PLUGINS = event_manager_1.EVENT_MANAGER_PLUGINS;\r\nexports.EventManager = event_manager_1.EventManager;\r\nexports.EventManagerPlugin = event_manager_1.EventManagerPlugin;\r\n__export(require('angular2/src/platform/dom/debug/by'));\r\n__export(require('angular2/src/platform/dom/debug/ng_probe'));\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbW9uX2RvbS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImFuZ3VsYXIyL3BsYXRmb3JtL2NvbW1vbl9kb20udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUE7O0dBRUc7QUFDSCw0QkFBaUQsdUNBQXVDLENBQUM7QUFBakYsZ0NBQUc7QUFBRSw0REFBaUI7QUFBRSw4Q0FBeUQ7QUFDekYsNkJBQTBCLHdDQUF3QyxDQUFDO0FBQTNELGlEQUEyRDtBQUNuRSwyQkFBdUIsc0NBQXNDLENBQUM7QUFBdEQseUNBQXNEO0FBQzlELG1DQUFvRCw4Q0FBOEMsQ0FBQztBQUEzRixpRUFBZ0I7QUFBRSx1RUFBeUU7QUFDbkcsMkJBQThCLDZDQUE2QyxDQUFDO0FBQXBFLHVEQUFvRTtBQUM1RSw4QkFJTyxnREFBZ0QsQ0FBQztBQUh0RCxzRUFBcUI7QUFDckIsb0RBQVk7QUFDWixnRUFDc0Q7QUFDeEQsaUJBQWMsb0NBQW9DLENBQUMsRUFBQTtBQUNuRCxpQkFBYywwQ0FBMEMsQ0FBQyxFQUFBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBUaGlzIGlzIGEgc2V0IG9mIGNsYXNzZXMgYW5kIG9iamVjdHMgdGhhdCBjYW4gYmUgdXNlZCBib3RoIGluIHRoZSBicm93c2VyIGFuZCBvbiB0aGUgc2VydmVyLlxuICovXG5leHBvcnQge0RPTSwgc2V0Um9vdERvbUFkYXB0ZXIsIERvbUFkYXB0ZXJ9IGZyb20gJ2FuZ3VsYXIyL3NyYy9wbGF0Zm9ybS9kb20vZG9tX2FkYXB0ZXInO1xuZXhwb3J0IHtEb21SZW5kZXJlcn0gZnJvbSAnYW5ndWxhcjIvc3JjL3BsYXRmb3JtL2RvbS9kb21fcmVuZGVyZXInO1xuZXhwb3J0IHtET0NVTUVOVH0gZnJvbSAnYW5ndWxhcjIvc3JjL3BsYXRmb3JtL2RvbS9kb21fdG9rZW5zJztcbmV4cG9ydCB7U2hhcmVkU3R5bGVzSG9zdCwgRG9tU2hhcmVkU3R5bGVzSG9zdH0gZnJvbSAnYW5ndWxhcjIvc3JjL3BsYXRmb3JtL2RvbS9zaGFyZWRfc3R5bGVzX2hvc3QnO1xuZXhwb3J0IHtEb21FdmVudHNQbHVnaW59IGZyb20gJ2FuZ3VsYXIyL3NyYy9wbGF0Zm9ybS9kb20vZXZlbnRzL2RvbV9ldmVudHMnO1xuZXhwb3J0IHtcbiAgRVZFTlRfTUFOQUdFUl9QTFVHSU5TLFxuICBFdmVudE1hbmFnZXIsXG4gIEV2ZW50TWFuYWdlclBsdWdpblxufSBmcm9tICdhbmd1bGFyMi9zcmMvcGxhdGZvcm0vZG9tL2V2ZW50cy9ldmVudF9tYW5hZ2VyJztcbmV4cG9ydCAqIGZyb20gJ2FuZ3VsYXIyL3NyYy9wbGF0Zm9ybS9kb20vZGVidWcvYnknO1xuZXhwb3J0ICogZnJvbSAnYW5ndWxhcjIvc3JjL3BsYXRmb3JtL2RvbS9kZWJ1Zy9uZ19wcm9iZSc7XG4iXX0=\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/platform/common_dom.js\n ** module id = 123\n ** module chunks = 1\n **/","'use strict';var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar di_1 = require('angular2/src/core/di');\r\nvar css_animation_builder_1 = require('./css_animation_builder');\r\nvar browser_details_1 = require('./browser_details');\r\nvar AnimationBuilder = (function () {\r\n    /**\r\n     * Used for DI\r\n     * @param browserDetails\r\n     */\r\n    function AnimationBuilder(browserDetails) {\r\n        this.browserDetails = browserDetails;\r\n    }\r\n    /**\r\n     * Creates a new CSS Animation\r\n     * @returns {CssAnimationBuilder}\r\n     */\r\n    AnimationBuilder.prototype.css = function () { return new css_animation_builder_1.CssAnimationBuilder(this.browserDetails); };\r\n    AnimationBuilder = __decorate([\r\n        di_1.Injectable(), \r\n        __metadata('design:paramtypes', [browser_details_1.BrowserDetails])\r\n    ], AnimationBuilder);\r\n    return AnimationBuilder;\r\n})();\r\nexports.AnimationBuilder = AnimationBuilder;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5pbWF0aW9uX2J1aWxkZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJhbmd1bGFyMi9zcmMvYW5pbWF0ZS9hbmltYXRpb25fYnVpbGRlci50cyJdLCJuYW1lcyI6WyJBbmltYXRpb25CdWlsZGVyIiwiQW5pbWF0aW9uQnVpbGRlci5jb25zdHJ1Y3RvciIsIkFuaW1hdGlvbkJ1aWxkZXIuY3NzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSxtQkFBeUIsc0JBQXNCLENBQUMsQ0FBQTtBQUVoRCxzQ0FBa0MseUJBQXlCLENBQUMsQ0FBQTtBQUM1RCxnQ0FBNkIsbUJBQW1CLENBQUMsQ0FBQTtBQUVqRDtJQUVFQTs7O09BR0dBO0lBQ0hBLDBCQUFtQkEsY0FBOEJBO1FBQTlCQyxtQkFBY0EsR0FBZEEsY0FBY0EsQ0FBZ0JBO0lBQUdBLENBQUNBO0lBRXJERDs7O09BR0dBO0lBQ0hBLDhCQUFHQSxHQUFIQSxjQUE2QkUsTUFBTUEsQ0FBQ0EsSUFBSUEsMkNBQW1CQSxDQUFDQSxJQUFJQSxDQUFDQSxjQUFjQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQTtJQVpyRkY7UUFBQ0EsZUFBVUEsRUFBRUE7O3lCQWFaQTtJQUFEQSx1QkFBQ0E7QUFBREEsQ0FBQ0EsQUFiRCxJQWFDO0FBWlksd0JBQWdCLG1CQVk1QixDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtJbmplY3RhYmxlfSBmcm9tICdhbmd1bGFyMi9zcmMvY29yZS9kaSc7XG5cbmltcG9ydCB7Q3NzQW5pbWF0aW9uQnVpbGRlcn0gZnJvbSAnLi9jc3NfYW5pbWF0aW9uX2J1aWxkZXInO1xuaW1wb3J0IHtCcm93c2VyRGV0YWlsc30gZnJvbSAnLi9icm93c2VyX2RldGFpbHMnO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgQW5pbWF0aW9uQnVpbGRlciB7XG4gIC8qKlxuICAgKiBVc2VkIGZvciBESVxuICAgKiBAcGFyYW0gYnJvd3NlckRldGFpbHNcbiAgICovXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBicm93c2VyRGV0YWlsczogQnJvd3NlckRldGFpbHMpIHt9XG5cbiAgLyoqXG4gICAqIENyZWF0ZXMgYSBuZXcgQ1NTIEFuaW1hdGlvblxuICAgKiBAcmV0dXJucyB7Q3NzQW5pbWF0aW9uQnVpbGRlcn1cbiAgICovXG4gIGNzcygpOiBDc3NBbmltYXRpb25CdWlsZGVyIHsgcmV0dXJuIG5ldyBDc3NBbmltYXRpb25CdWlsZGVyKHRoaXMuYnJvd3NlckRldGFpbHMpOyB9XG59XG4iXX0=\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/animate/animation_builder.js\n ** module id = 124\n ** module chunks = 1\n **/","'use strict';var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar di_1 = require('angular2/src/core/di');\r\nvar math_1 = require('angular2/src/facade/math');\r\nvar dom_adapter_1 = require('angular2/src/platform/dom/dom_adapter');\r\nvar BrowserDetails = (function () {\r\n    function BrowserDetails() {\r\n        this.elapsedTimeIncludesDelay = false;\r\n        this.doesElapsedTimeIncludesDelay();\r\n    }\r\n    /**\r\n     * Determines if `event.elapsedTime` includes transition delay in the current browser.  At this\r\n     * time, Chrome and Opera seem to be the only browsers that include this.\r\n     */\r\n    BrowserDetails.prototype.doesElapsedTimeIncludesDelay = function () {\r\n        var _this = this;\r\n        var div = dom_adapter_1.DOM.createElement('div');\r\n        dom_adapter_1.DOM.setAttribute(div, 'style', \"position: absolute; top: -9999px; left: -9999px; width: 1px;\\n      height: 1px; transition: all 1ms linear 1ms;\");\r\n        // Firefox requires that we wait for 2 frames for some reason\r\n        this.raf(function (timestamp) {\r\n            dom_adapter_1.DOM.on(div, 'transitionend', function (event) {\r\n                var elapsed = math_1.Math.round(event.elapsedTime * 1000);\r\n                _this.elapsedTimeIncludesDelay = elapsed == 2;\r\n                dom_adapter_1.DOM.remove(div);\r\n            });\r\n            dom_adapter_1.DOM.setStyle(div, 'width', '2px');\r\n        }, 2);\r\n    };\r\n    BrowserDetails.prototype.raf = function (callback, frames) {\r\n        if (frames === void 0) { frames = 1; }\r\n        var queue = new RafQueue(callback, frames);\r\n        return function () { return queue.cancel(); };\r\n    };\r\n    BrowserDetails = __decorate([\r\n        di_1.Injectable(), \r\n        __metadata('design:paramtypes', [])\r\n    ], BrowserDetails);\r\n    return BrowserDetails;\r\n})();\r\nexports.BrowserDetails = BrowserDetails;\r\nvar RafQueue = (function () {\r\n    function RafQueue(callback, frames) {\r\n        this.callback = callback;\r\n        this.frames = frames;\r\n        this._raf();\r\n    }\r\n    RafQueue.prototype._raf = function () {\r\n        var _this = this;\r\n        this.currentFrameId = dom_adapter_1.DOM.requestAnimationFrame(function (timestamp) { return _this._nextFrame(timestamp); });\r\n    };\r\n    RafQueue.prototype._nextFrame = function (timestamp) {\r\n        this.frames--;\r\n        if (this.frames > 0) {\r\n            this._raf();\r\n        }\r\n        else {\r\n            this.callback(timestamp);\r\n        }\r\n    };\r\n    RafQueue.prototype.cancel = function () {\r\n        dom_adapter_1.DOM.cancelAnimationFrame(this.currentFrameId);\r\n        this.currentFrameId = null;\r\n    };\r\n    return RafQueue;\r\n})();\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnJvd3Nlcl9kZXRhaWxzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYW5ndWxhcjIvc3JjL2FuaW1hdGUvYnJvd3Nlcl9kZXRhaWxzLnRzIl0sIm5hbWVzIjpbIkJyb3dzZXJEZXRhaWxzIiwiQnJvd3NlckRldGFpbHMuY29uc3RydWN0b3IiLCJCcm93c2VyRGV0YWlscy5kb2VzRWxhcHNlZFRpbWVJbmNsdWRlc0RlbGF5IiwiQnJvd3NlckRldGFpbHMucmFmIiwiUmFmUXVldWUiLCJSYWZRdWV1ZS5jb25zdHJ1Y3RvciIsIlJhZlF1ZXVlLl9yYWYiLCJSYWZRdWV1ZS5fbmV4dEZyYW1lIiwiUmFmUXVldWUuY2FuY2VsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSxtQkFBeUIsc0JBQXNCLENBQUMsQ0FBQTtBQUNoRCxxQkFBbUIsMEJBQTBCLENBQUMsQ0FBQTtBQUM5Qyw0QkFBa0IsdUNBQXVDLENBQUMsQ0FBQTtBQUUxRDtJQUlFQTtRQUZBQyw2QkFBd0JBLEdBQUdBLEtBQUtBLENBQUNBO1FBRWpCQSxJQUFJQSxDQUFDQSw0QkFBNEJBLEVBQUVBLENBQUNBO0lBQUNBLENBQUNBO0lBRXRERDs7O09BR0dBO0lBQ0hBLHFEQUE0QkEsR0FBNUJBO1FBQUFFLGlCQWFDQTtRQVpDQSxJQUFJQSxHQUFHQSxHQUFHQSxpQkFBR0EsQ0FBQ0EsYUFBYUEsQ0FBQ0EsS0FBS0EsQ0FBQ0EsQ0FBQ0E7UUFDbkNBLGlCQUFHQSxDQUFDQSxZQUFZQSxDQUFDQSxHQUFHQSxFQUFFQSxPQUFPQSxFQUFFQSxrSEFDZ0JBLENBQUNBLENBQUNBO1FBQ2pEQSw2REFBNkRBO1FBQzdEQSxJQUFJQSxDQUFDQSxHQUFHQSxDQUFDQSxVQUFBQSxTQUFTQTtZQUNoQkEsaUJBQUdBLENBQUNBLEVBQUVBLENBQUNBLEdBQUdBLEVBQUVBLGVBQWVBLEVBQUVBLFVBQUNBLEtBQVVBO2dCQUN0Q0EsSUFBSUEsT0FBT0EsR0FBR0EsV0FBSUEsQ0FBQ0EsS0FBS0EsQ0FBQ0EsS0FBS0EsQ0FBQ0EsV0FBV0EsR0FBR0EsSUFBSUEsQ0FBQ0EsQ0FBQ0E7Z0JBQ25EQSxLQUFJQSxDQUFDQSx3QkFBd0JBLEdBQUdBLE9BQU9BLElBQUlBLENBQUNBLENBQUNBO2dCQUM3Q0EsaUJBQUdBLENBQUNBLE1BQU1BLENBQUNBLEdBQUdBLENBQUNBLENBQUNBO1lBQ2xCQSxDQUFDQSxDQUFDQSxDQUFDQTtZQUNIQSxpQkFBR0EsQ0FBQ0EsUUFBUUEsQ0FBQ0EsR0FBR0EsRUFBRUEsT0FBT0EsRUFBRUEsS0FBS0EsQ0FBQ0EsQ0FBQ0E7UUFDcENBLENBQUNBLEVBQUVBLENBQUNBLENBQUNBLENBQUNBO0lBQ1JBLENBQUNBO0lBRURGLDRCQUFHQSxHQUFIQSxVQUFJQSxRQUFrQkEsRUFBRUEsTUFBa0JBO1FBQWxCRyxzQkFBa0JBLEdBQWxCQSxVQUFrQkE7UUFDeENBLElBQUlBLEtBQUtBLEdBQWFBLElBQUlBLFFBQVFBLENBQUNBLFFBQVFBLEVBQUVBLE1BQU1BLENBQUNBLENBQUNBO1FBQ3JEQSxNQUFNQSxDQUFDQSxjQUFNQSxPQUFBQSxLQUFLQSxDQUFDQSxNQUFNQSxFQUFFQSxFQUFkQSxDQUFjQSxDQUFDQTtJQUM5QkEsQ0FBQ0E7SUE1QkhIO1FBQUNBLGVBQVVBLEVBQUVBOzt1QkE2QlpBO0lBQURBLHFCQUFDQTtBQUFEQSxDQUFDQSxBQTdCRCxJQTZCQztBQTVCWSxzQkFBYyxpQkE0QjFCLENBQUE7QUFFRDtJQUVFSSxrQkFBbUJBLFFBQWtCQSxFQUFTQSxNQUFjQTtRQUF6Q0MsYUFBUUEsR0FBUkEsUUFBUUEsQ0FBVUE7UUFBU0EsV0FBTUEsR0FBTkEsTUFBTUEsQ0FBUUE7UUFBSUEsSUFBSUEsQ0FBQ0EsSUFBSUEsRUFBRUEsQ0FBQ0E7SUFBQ0EsQ0FBQ0E7SUFDdEVELHVCQUFJQSxHQUFaQTtRQUFBRSxpQkFFQ0E7UUFEQ0EsSUFBSUEsQ0FBQ0EsY0FBY0EsR0FBR0EsaUJBQUdBLENBQUNBLHFCQUFxQkEsQ0FBQ0EsVUFBQUEsU0FBU0EsSUFBSUEsT0FBQUEsS0FBSUEsQ0FBQ0EsVUFBVUEsQ0FBQ0EsU0FBU0EsQ0FBQ0EsRUFBMUJBLENBQTBCQSxDQUFDQSxDQUFDQTtJQUMzRkEsQ0FBQ0E7SUFDT0YsNkJBQVVBLEdBQWxCQSxVQUFtQkEsU0FBaUJBO1FBQ2xDRyxJQUFJQSxDQUFDQSxNQUFNQSxFQUFFQSxDQUFDQTtRQUNkQSxFQUFFQSxDQUFDQSxDQUFDQSxJQUFJQSxDQUFDQSxNQUFNQSxHQUFHQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQTtZQUNwQkEsSUFBSUEsQ0FBQ0EsSUFBSUEsRUFBRUEsQ0FBQ0E7UUFDZEEsQ0FBQ0E7UUFBQ0EsSUFBSUEsQ0FBQ0EsQ0FBQ0E7WUFDTkEsSUFBSUEsQ0FBQ0EsUUFBUUEsQ0FBQ0EsU0FBU0EsQ0FBQ0EsQ0FBQ0E7UUFDM0JBLENBQUNBO0lBQ0hBLENBQUNBO0lBQ0RILHlCQUFNQSxHQUFOQTtRQUNFSSxpQkFBR0EsQ0FBQ0Esb0JBQW9CQSxDQUFDQSxJQUFJQSxDQUFDQSxjQUFjQSxDQUFDQSxDQUFDQTtRQUM5Q0EsSUFBSUEsQ0FBQ0EsY0FBY0EsR0FBR0EsSUFBSUEsQ0FBQ0E7SUFDN0JBLENBQUNBO0lBQ0hKLGVBQUNBO0FBQURBLENBQUNBLEFBbEJELElBa0JDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtJbmplY3RhYmxlfSBmcm9tICdhbmd1bGFyMi9zcmMvY29yZS9kaSc7XG5pbXBvcnQge01hdGh9IGZyb20gJ2FuZ3VsYXIyL3NyYy9mYWNhZGUvbWF0aCc7XG5pbXBvcnQge0RPTX0gZnJvbSAnYW5ndWxhcjIvc3JjL3BsYXRmb3JtL2RvbS9kb21fYWRhcHRlcic7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBCcm93c2VyRGV0YWlscyB7XG4gIGVsYXBzZWRUaW1lSW5jbHVkZXNEZWxheSA9IGZhbHNlO1xuXG4gIGNvbnN0cnVjdG9yKCkgeyB0aGlzLmRvZXNFbGFwc2VkVGltZUluY2x1ZGVzRGVsYXkoKTsgfVxuXG4gIC8qKlxuICAgKiBEZXRlcm1pbmVzIGlmIGBldmVudC5lbGFwc2VkVGltZWAgaW5jbHVkZXMgdHJhbnNpdGlvbiBkZWxheSBpbiB0aGUgY3VycmVudCBicm93c2VyLiAgQXQgdGhpc1xuICAgKiB0aW1lLCBDaHJvbWUgYW5kIE9wZXJhIHNlZW0gdG8gYmUgdGhlIG9ubHkgYnJvd3NlcnMgdGhhdCBpbmNsdWRlIHRoaXMuXG4gICAqL1xuICBkb2VzRWxhcHNlZFRpbWVJbmNsdWRlc0RlbGF5KCk6IHZvaWQge1xuICAgIHZhciBkaXYgPSBET00uY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgRE9NLnNldEF0dHJpYnV0ZShkaXYsICdzdHlsZScsIGBwb3NpdGlvbjogYWJzb2x1dGU7IHRvcDogLTk5OTlweDsgbGVmdDogLTk5OTlweDsgd2lkdGg6IDFweDtcbiAgICAgIGhlaWdodDogMXB4OyB0cmFuc2l0aW9uOiBhbGwgMW1zIGxpbmVhciAxbXM7YCk7XG4gICAgLy8gRmlyZWZveCByZXF1aXJlcyB0aGF0IHdlIHdhaXQgZm9yIDIgZnJhbWVzIGZvciBzb21lIHJlYXNvblxuICAgIHRoaXMucmFmKHRpbWVzdGFtcCA9PiB7XG4gICAgICBET00ub24oZGl2LCAndHJhbnNpdGlvbmVuZCcsIChldmVudDogYW55KSA9PiB7XG4gICAgICAgIHZhciBlbGFwc2VkID0gTWF0aC5yb3VuZChldmVudC5lbGFwc2VkVGltZSAqIDEwMDApO1xuICAgICAgICB0aGlzLmVsYXBzZWRUaW1lSW5jbHVkZXNEZWxheSA9IGVsYXBzZWQgPT0gMjtcbiAgICAgICAgRE9NLnJlbW92ZShkaXYpO1xuICAgICAgfSk7XG4gICAgICBET00uc2V0U3R5bGUoZGl2LCAnd2lkdGgnLCAnMnB4Jyk7XG4gICAgfSwgMik7XG4gIH1cblxuICByYWYoY2FsbGJhY2s6IEZ1bmN0aW9uLCBmcmFtZXM6IG51bWJlciA9IDEpOiBGdW5jdGlvbiB7XG4gICAgdmFyIHF1ZXVlOiBSYWZRdWV1ZSA9IG5ldyBSYWZRdWV1ZShjYWxsYmFjaywgZnJhbWVzKTtcbiAgICByZXR1cm4gKCkgPT4gcXVldWUuY2FuY2VsKCk7XG4gIH1cbn1cblxuY2xhc3MgUmFmUXVldWUge1xuICBjdXJyZW50RnJhbWVJZDogbnVtYmVyO1xuICBjb25zdHJ1Y3RvcihwdWJsaWMgY2FsbGJhY2s6IEZ1bmN0aW9uLCBwdWJsaWMgZnJhbWVzOiBudW1iZXIpIHsgdGhpcy5fcmFmKCk7IH1cbiAgcHJpdmF0ZSBfcmFmKCkge1xuICAgIHRoaXMuY3VycmVudEZyYW1lSWQgPSBET00ucmVxdWVzdEFuaW1hdGlvbkZyYW1lKHRpbWVzdGFtcCA9PiB0aGlzLl9uZXh0RnJhbWUodGltZXN0YW1wKSk7XG4gIH1cbiAgcHJpdmF0ZSBfbmV4dEZyYW1lKHRpbWVzdGFtcDogbnVtYmVyKSB7XG4gICAgdGhpcy5mcmFtZXMtLTtcbiAgICBpZiAodGhpcy5mcmFtZXMgPiAwKSB7XG4gICAgICB0aGlzLl9yYWYoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5jYWxsYmFjayh0aW1lc3RhbXApO1xuICAgIH1cbiAgfVxuICBjYW5jZWwoKSB7XG4gICAgRE9NLmNhbmNlbEFuaW1hdGlvbkZyYW1lKHRoaXMuY3VycmVudEZyYW1lSWQpO1xuICAgIHRoaXMuY3VycmVudEZyYW1lSWQgPSBudWxsO1xuICB9XG59XG4iXX0=\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/animate/browser_details.js\n ** module id = 125\n ** module chunks = 1\n **/","'use strict';var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar source_module_1 = require('./source_module');\r\nvar change_detection_jit_generator_1 = require('angular2/src/core/change_detection/change_detection_jit_generator');\r\nvar abstract_change_detector_1 = require('angular2/src/core/change_detection/abstract_change_detector');\r\nvar change_detection_util_1 = require('angular2/src/core/change_detection/change_detection_util');\r\nvar constants_1 = require('angular2/src/core/change_detection/constants');\r\nvar change_definition_factory_1 = require('./change_definition_factory');\r\nvar lang_1 = require('angular2/src/facade/lang');\r\nvar change_detection_1 = require('angular2/src/core/change_detection/change_detection');\r\nvar change_detector_codegen_1 = require('angular2/src/transform/template_compiler/change_detector_codegen');\r\nvar util_1 = require('./util');\r\nvar di_1 = require('angular2/src/core/di');\r\nvar ABSTRACT_CHANGE_DETECTOR = \"AbstractChangeDetector\";\r\nvar UTIL = \"ChangeDetectionUtil\";\r\nvar CHANGE_DETECTOR_STATE = \"ChangeDetectorState\";\r\nexports.CHANGE_DETECTION_JIT_IMPORTS = lang_1.CONST_EXPR({\r\n    'AbstractChangeDetector': abstract_change_detector_1.AbstractChangeDetector,\r\n    'ChangeDetectionUtil': change_detection_util_1.ChangeDetectionUtil,\r\n    'ChangeDetectorState': constants_1.ChangeDetectorState\r\n});\r\nvar ABSTRACT_CHANGE_DETECTOR_MODULE = source_module_1.moduleRef(\"package:angular2/src/core/change_detection/abstract_change_detector\" + util_1.MODULE_SUFFIX);\r\nvar UTIL_MODULE = source_module_1.moduleRef(\"package:angular2/src/core/change_detection/change_detection_util\" + util_1.MODULE_SUFFIX);\r\nvar PREGEN_PROTO_CHANGE_DETECTOR_MODULE = source_module_1.moduleRef(\"package:angular2/src/core/change_detection/pregen_proto_change_detector\" + util_1.MODULE_SUFFIX);\r\nvar CONSTANTS_MODULE = source_module_1.moduleRef(\"package:angular2/src/core/change_detection/constants\" + util_1.MODULE_SUFFIX);\r\nvar ChangeDetectionCompiler = (function () {\r\n    function ChangeDetectionCompiler(_genConfig) {\r\n        this._genConfig = _genConfig;\r\n    }\r\n    ChangeDetectionCompiler.prototype.compileComponentRuntime = function (componentType, strategy, parsedTemplate) {\r\n        var _this = this;\r\n        var changeDetectorDefinitions = change_definition_factory_1.createChangeDetectorDefinitions(componentType, strategy, this._genConfig, parsedTemplate);\r\n        return changeDetectorDefinitions.map(function (definition) {\r\n            return _this._createChangeDetectorFactory(definition);\r\n        });\r\n    };\r\n    ChangeDetectionCompiler.prototype._createChangeDetectorFactory = function (definition) {\r\n        var proto = new change_detection_1.DynamicProtoChangeDetector(definition);\r\n        return function () { return proto.instantiate(); };\r\n    };\r\n    ChangeDetectionCompiler.prototype.compileComponentCodeGen = function (componentType, strategy, parsedTemplate) {\r\n        var changeDetectorDefinitions = change_definition_factory_1.createChangeDetectorDefinitions(componentType, strategy, this._genConfig, parsedTemplate);\r\n        var factories = [];\r\n        var index = 0;\r\n        var sourceParts = changeDetectorDefinitions.map(function (definition) {\r\n            var codegen;\r\n            var sourcePart;\r\n            // TODO(tbosch): move the 2 code generators to the same place, one with .dart and one with .ts\r\n            // suffix\r\n            // and have the same API for calling them!\r\n            if (lang_1.IS_DART) {\r\n                codegen = new change_detector_codegen_1.Codegen(PREGEN_PROTO_CHANGE_DETECTOR_MODULE);\r\n                var className = \"_\" + definition.id;\r\n                var typeRef = (index === 0 && componentType.isHost) ?\r\n                    'dynamic' :\r\n                    \"\" + source_module_1.moduleRef(componentType.moduleUrl) + componentType.name;\r\n                codegen.generate(typeRef, className, definition);\r\n                factories.push(className + \".newChangeDetector\");\r\n                sourcePart = codegen.toString();\r\n            }\r\n            else {\r\n                codegen = new change_detection_jit_generator_1.ChangeDetectorJITGenerator(definition, \"\" + UTIL_MODULE + UTIL, \"\" + ABSTRACT_CHANGE_DETECTOR_MODULE + ABSTRACT_CHANGE_DETECTOR, \"\" + CONSTANTS_MODULE + CHANGE_DETECTOR_STATE);\r\n                factories.push(\"function() { return new \" + codegen.typeName + \"(); }\");\r\n                sourcePart = codegen.generateSource();\r\n            }\r\n            index++;\r\n            return sourcePart;\r\n        });\r\n        return new source_module_1.SourceExpressions(sourceParts, factories);\r\n    };\r\n    ChangeDetectionCompiler = __decorate([\r\n        di_1.Injectable(), \r\n        __metadata('design:paramtypes', [change_detection_1.ChangeDetectorGenConfig])\r\n    ], ChangeDetectionCompiler);\r\n    return ChangeDetectionCompiler;\r\n})();\r\nexports.ChangeDetectionCompiler = ChangeDetectionCompiler;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhbmdlX2RldGVjdG9yX2NvbXBpbGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYW5ndWxhcjIvc3JjL2NvbXBpbGVyL2NoYW5nZV9kZXRlY3Rvcl9jb21waWxlci50cyJdLCJuYW1lcyI6WyJDaGFuZ2VEZXRlY3Rpb25Db21waWxlciIsIkNoYW5nZURldGVjdGlvbkNvbXBpbGVyLmNvbnN0cnVjdG9yIiwiQ2hhbmdlRGV0ZWN0aW9uQ29tcGlsZXIuY29tcGlsZUNvbXBvbmVudFJ1bnRpbWUiLCJDaGFuZ2VEZXRlY3Rpb25Db21waWxlci5fY3JlYXRlQ2hhbmdlRGV0ZWN0b3JGYWN0b3J5IiwiQ2hhbmdlRGV0ZWN0aW9uQ29tcGlsZXIuY29tcGlsZUNvbXBvbmVudENvZGVHZW4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUNBLDhCQUEyQyxpQkFBaUIsQ0FBQyxDQUFBO0FBQzdELCtDQUVPLG1FQUFtRSxDQUFDLENBQUE7QUFDM0UseUNBQXFDLDZEQUE2RCxDQUFDLENBQUE7QUFDbkcsc0NBQWtDLDBEQUEwRCxDQUFDLENBQUE7QUFDN0YsMEJBQWtDLDhDQUE4QyxDQUFDLENBQUE7QUFFakYsMENBQThDLDZCQUE2QixDQUFDLENBQUE7QUFDNUUscUJBQThDLDBCQUEwQixDQUFDLENBQUE7QUFFekUsaUNBS08scURBQXFELENBQUMsQ0FBQTtBQUc3RCx3Q0FBc0Isa0VBQWtFLENBQUMsQ0FBQTtBQUN6RixxQkFBNEIsUUFBUSxDQUFDLENBQUE7QUFDckMsbUJBQXlCLHNCQUFzQixDQUFDLENBQUE7QUFFaEQsSUFBTSx3QkFBd0IsR0FBRyx3QkFBd0IsQ0FBQztBQUMxRCxJQUFNLElBQUksR0FBRyxxQkFBcUIsQ0FBQztBQUNuQyxJQUFNLHFCQUFxQixHQUFHLHFCQUFxQixDQUFDO0FBRXZDLG9DQUE0QixHQUFHLGlCQUFVLENBQUM7SUFDckQsd0JBQXdCLEVBQUUsaURBQXNCO0lBQ2hELHFCQUFxQixFQUFFLDJDQUFtQjtJQUMxQyxxQkFBcUIs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T0FBT0EsR0FBR0EsSUFBSUEsMkRBQTBCQSxDQUNwQ0EsVUFBVUEsRUFBRUEsS0FBR0EsV0FBV0EsR0FBR0EsSUFBTUEsRUFDbkNBLEtBQUdBLCtCQUErQkEsR0FBR0Esd0JBQTBCQSxFQUMvREEsS0FBR0EsZ0JBQWdCQSxHQUFHQSxxQkFBdUJBLENBQUNBLENBQUNBO2dCQUNuREEsU0FBU0EsQ0FBQ0EsSUFBSUEsQ0FBQ0EsNkJBQTJCQSxPQUFPQSxDQUFDQSxRQUFRQSxVQUFPQSxDQUFDQSxDQUFDQTtnQkFDbkVBLFVBQVVBLEdBQUdBLE9BQU9BLENBQUNBLGNBQWNBLEVBQUVBLENBQUNBO1lBQ3hDQSxDQUFDQTtZQUNEQSxLQUFLQSxFQUFFQSxDQUFDQTtZQUNSQSxNQUFNQSxDQUFDQSxVQUFVQSxDQUFDQTtRQUNwQkEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7UUFDSEEsTUFBTUEsQ0FBQ0EsSUFBSUEsaUNBQWlCQSxDQUFDQSxXQUFXQSxFQUFFQSxTQUFTQSxDQUFDQSxDQUFDQTtJQUN2REEsQ0FBQ0E7SUFsREhKO1FBQUNBLGVBQVVBLEVBQUVBOztnQ0FtRFpBO0lBQURBLDhCQUFDQTtBQUFEQSxDQUFDQSxBQW5ERCxJQW1EQztBQWxEWSwrQkFBdUIsMEJBa0RuQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21waWxlVHlwZU1ldGFkYXRhfSBmcm9tICcuL2RpcmVjdGl2ZV9tZXRhZGF0YSc7XG5pbXBvcnQge1NvdXJjZUV4cHJlc3Npb25zLCBtb2R1bGVSZWZ9IGZyb20gJy4vc291cmNlX21vZHVsZSc7XG5pbXBvcnQge1xuICBDaGFuZ2VEZXRlY3RvckpJVEdlbmVyYXRvclxufSBmcm9tICdhbmd1bGFyMi9zcmMvY29yZS9jaGFuZ2VfZGV0ZWN0aW9uL2NoYW5nZV9kZXRlY3Rpb25faml0X2dlbmVyYXRvcic7XG5pbXBvcnQge0Fic3RyYWN0Q2hhbmdlRGV0ZWN0b3J9IGZyb20gJ2FuZ3VsYXIyL3NyYy9jb3JlL2NoYW5nZV9kZXRlY3Rpb24vYWJzdHJhY3RfY2hhbmdlX2RldGVjdG9yJztcbmltcG9ydCB7Q2hhbmdlRGV0ZWN0aW9uVXRpbH0gZnJvbSAnYW5ndWxhcjIvc3JjL2NvcmUvY2hhbmdlX2RldGVjdGlvbi9jaGFuZ2VfZGV0ZWN0aW9uX3V0aWwnO1xuaW1wb3J0IHtDaGFuZ2VEZXRlY3RvclN0YXRlfSBmcm9tICdhbmd1bGFyMi9zcmMvY29yZS9jaGFuZ2VfZGV0ZWN0aW9uL2NvbnN0YW50cyc7XG5cbmltcG9ydCB7Y3JlYXRlQ2hhbmdlRGV0ZWN0b3JEZWZpbml0aW9uc30gZnJvbSAnLi9jaGFuZ2VfZGVmaW5pdGlvbl9mYWN0b3J5JztcbmltcG9ydCB7SVNfREFSVCwgaXNKc09iamVjdCwgQ09OU1RfRVhQUn0gZnJvbSAnYW5ndWxhcjIvc3JjL2ZhY2FkZS9sYW5nJztcblxuaW1wb3J0IHtcbiAgQ2hhbmdlRGV0ZWN0b3JHZW5Db25maWcsXG4gIENoYW5nZURldGVjdG9yRGVmaW5pdGlvbixcbiAgRHluYW1pY1Byb3RvQ2hhbmdlRGV0ZWN0b3IsXG4gIENoYW5nZURldGVjdGlvblN0cmF0ZWd5XG59IGZyb20gJ2FuZ3VsYXIyL3NyYy9jb3JlL2NoYW5nZV9kZXRlY3Rpb24vY2hhbmdlX2RldGVjdGlvbic7XG5cbmltcG9ydCB7VGVtcGxhdGVBc3R9IGZyb20gJy4vdGVtcGxhdGVfYXN0JztcbmltcG9ydCB7Q29kZWdlbn0gZnJvbSAnYW5ndWxhcjIvc3JjL3RyYW5zZm9ybS90ZW1wbGF0ZV9jb21waWxlci9jaGFuZ2VfZGV0ZWN0b3JfY29kZWdlbic7XG5pbXBvcnQge01PRFVMRV9TVUZGSVh9IGZyb20gJy4vdXRpbCc7XG5pbXBvcnQge0luamVjdGFibGV9IGZyb20gJ2FuZ3VsYXIyL3NyYy9jb3JlL2RpJztcblxuY29uc3QgQUJTVFJBQ1RfQ0hBTkdFX0RFVEVDVE9SID0gXCJBYnN0cmFjdENoYW5nZURldGVjdG9yXCI7XG5jb25zdCBVVElMID0gXCJDaGFuZ2VEZXRlY3Rpb25VdGlsXCI7XG5jb25zdCBDSEFOR0VfREVURUNUT1JfU1RBVEUgPSBcIkNoYW5nZURldGVjdG9yU3RhdGVcIjtcblxuZXhwb3J0IGNvbnN0IENIQU5HRV9ERVRFQ1RJT05fSklUX0lNUE9SVFMgPSBDT05TVF9FWFBSKHtcbiAgJ0Fic3RyYWN0Q2hhbmdlRGV0ZWN0b3InOiBBYnN0cmFjdENoYW5nZURldGVjdG9yLFxuICAnQ2hhbmdlRGV0ZWN0aW9uVXRpbCc6IENoYW5nZURldGVjdGlvblV0aWwsXG4gICdDaGFuZ2VEZXRlY3RvclN0YXRlJzogQ2hhbmdlRGV0ZWN0b3JTdGF0ZVxufSk7XG5cbnZhciBBQlNUUkFDVF9DSEFOR0VfREVURUNUT1JfTU9EVUxFID0gbW9kdWxlUmVmKFxuICAgIGBwYWNrYWdlOmFuZ3VsYXIyL3NyYy9jb3JlL2NoYW5nZV9kZXRlY3Rpb24vYWJzdHJhY3RfY2hhbmdlX2RldGVjdG9yJHtNT0RVTEVfU1VGRklYfWApO1xudmFyIFVUSUxfTU9EVUxFID1cbiAgICBtb2R1bGVSZWYoYHBhY2thZ2U6YW5ndWxhcjIvc3JjL2NvcmUvY2hhbmdlX2RldGVjdGlvbi9jaGFuZ2VfZGV0ZWN0aW9uX3V0aWwke01PRFVMRV9TVUZGSVh9YCk7XG52YXIgUFJFR0VOX1BST1RPX0NIQU5HRV9ERVRFQ1RPUl9NT0RVTEUgPSBtb2R1bGVSZWYoXG4gICAgYHBhY2thZ2U6YW5ndWxhcjIvc3JjL2NvcmUvY2hhbmdlX2RldGVjdGlvbi9wcmVnZW5fcHJvdG9fY2hhbmdlX2RldGVjdG9yJHtNT0RVTEVfU1VGRklYfWApO1xudmFyIENPTlNUQU5UU19NT0RVTEUgPVxuICAgIG1vZHVsZVJlZihgcGFja2FnZTphbmd1bGFyMi9zcmMvY29yZS9jaGFuZ2VfZGV0ZWN0aW9uL2NvbnN0YW50cyR7TU9EVUxFX1NVRkZJWH1gKTtcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIENoYW5nZURldGVjdGlvbkNvbXBpbGVyIHtcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBfZ2VuQ29uZmlnOiBDaGFuZ2VEZXRlY3RvckdlbkNvbmZpZykge31cblxuICBjb21waWxlQ29tcG9uZW50UnVudGltZShjb21wb25lbnRUeXBlOiBDb21waWxlVHlwZU1ldGFkYXRhLCBzdHJhdGVneTogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHBhcnNlZFRlbXBsYXRlOiBUZW1wbGF0ZUFzdFtdKTogRnVuY3Rpb25bXSB7XG4gICAgdmFyIGNoYW5nZURldGVjdG9yRGVmaW5pdGlvbnMgPVxuICAgICAgICBjcmVhdGVDaGFuZ2VEZXRlY3RvckRlZmluaXRpb25zKGNvbXBvbmVudFR5cGUsIHN0cmF0ZWd5LCB0aGlzLl9nZW5Db25maWcsIHBhcnNlZFRlbXBsYXRlKTtcbiAgICByZXR1cm4gY2hhbmdlRGV0ZWN0b3JEZWZpbml0aW9ucy5tYXAoZGVmaW5pdGlvbiA9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fY3JlYXRlQ2hhbmdlRGV0ZWN0b3JGYWN0b3J5KGRlZmluaXRpb24pKTtcbiAgfVxuXG4gIHByaXZhdGUgX2NyZWF0ZUNoYW5nZURldGVjdG9yRmFjdG9yeShkZWZpbml0aW9uOiBDaGFuZ2VEZXRlY3RvckRlZmluaXRpb24pOiBGdW5jdGlvbiB7XG4gICAgdmFyIHByb3RvID0gbmV3IER5bmFtaWNQcm90b0NoYW5nZURldGVjdG9yKGRlZmluaXRpb24pO1xuICAgIHJldHVybiAoKSA9PiBwcm90by5pbnN0YW50aWF0ZSgpO1xuICB9XG5cbiAgY29tcGlsZUNvbXBvbmVudENvZGVHZW4oY29tcG9uZW50VHlwZTogQ29tcGlsZVR5cGVNZXRhZGF0YSwgc3RyYXRlZ3k6IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxuICAgICAgICAgICAgICAgICAgICAgICAgICBwYXJzZWRUZW1wbGF0ZTogVGVtcGxhdGVBc3RbXSk6IFNvdXJjZUV4cHJlc3Npb25zIHtcbiAgICB2YXIgY2hhbmdlRGV0ZWN0b3JEZWZpbml0aW9ucyA9XG4gICAgICAgIGNyZWF0ZUNoYW5nZURldGVjdG9yRGVmaW5pdGlvbnMoY29tcG9uZW50VHlwZSwgc3RyYXRlZ3ksIHRoaXMuX2dlbkNvbmZpZywgcGFyc2VkVGVtcGxhdGUpO1xuICAgIHZhciBmYWN0b3JpZXMgPSBbXTtcbiAgICB2YXIgaW5kZXggPSAwO1xuICAgIHZhciBzb3VyY2VQYXJ0cyA9IGNoYW5nZURldGVjdG9yRGVmaW5pdGlvbnMubWFwKGRlZmluaXRpb24gPT4ge1xuICAgICAgdmFyIGNvZGVnZW46IGFueTtcbiAgICAgIHZhciBzb3VyY2VQYXJ0OiBzdHJpbmc7XG4gICAgICAvLyBUT0RPKHRib3NjaCk6IG1vdmUgdGhlIDIgY29kZSBnZW5lcmF0b3JzIHRvIHRoZSBzYW1lIHBsYWNlLCBvbmUgd2l0aCAuZGFydCBhbmQgb25lIHdpdGggLnRzXG4gICAgICAvLyBzdWZmaXhcbiAgICAgIC8vIGFuZCBoYXZlIHRoZSBzYW1lIEFQSSBmb3IgY2FsbGluZyB0aGVtIVxuICAgICAgaWYgKElTX0RBUlQpIHtcbiAgICAgICAgY29kZWdlbiA9IG5ldyBDb2RlZ2VuKFBSRUdFTl9QUk9UT19DSEFOR0VfREVURUNUT1JfTU9EVUxFKTtcbiAgICAgICAgdmFyIGNsYXNzTmFtZSA9IGBfJHtkZWZpbml0aW9uLmlkfWA7XG4gICAgICAgIHZhciB0eXBlUmVmID0gKGluZGV4ID09PSAwICYmIGNvbXBvbmVudFR5cGUuaXNIb3N0KSA/XG4gICAgICAgICAgICAgICAgICAgICAgICAgICdkeW5hbWljJyA6XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGAke21vZHVsZVJlZihjb21wb25lbnRUeXBlLm1vZHVsZVVybCl9JHtjb21wb25lbnRUeXBlLm5hbWV9YDtcbiAgICAgICAgY29kZWdlbi5nZW5lcmF0ZSh0eXBlUmVmLCBjbGFzc05hbWUsIGRlZmluaXRpb24pO1xuICAgICAgICBmYWN0b3JpZXMucHVzaChgJHtjbGFzc05hbWV9Lm5ld0NoYW5nZURldGVjdG9yYCk7XG4gICAgICAgIHNvdXJjZVBhcnQgPSBjb2RlZ2VuLnRvU3RyaW5nKCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjb2RlZ2VuID0gbmV3IENoYW5nZURldGVjdG9ySklUR2VuZXJhdG9yKFxuICAgICAgICAgICAgZGVmaW5pdGlvbiwgYCR7VVRJTF9NT0RVTEV9JHtVVElMfWAsXG4gICAgICAgICAgICBgJHtBQlNUUkFDVF9DSEFOR0VfREVURUNUT1JfTU9EVUxFfSR7QUJTVFJBQ1RfQ0hBTkdFX0RFVEVDVE9SfWAsXG4gICAgICAgICAgICBgJHtDT05TVEFOVFNfTU9EVUxFfSR7Q0hBTkdFX0RFVEVDVE9SX1NUQVRFfWApO1xuICAgICAgICBmYWN0b3JpZXMucHVzaChgZnVuY3Rpb24oKSB7IHJldHVybiBuZXcgJHtjb2RlZ2VuLnR5cGVOYW1lfSgpOyB9YCk7XG4gICAgICAgIHNvdXJjZVBhcnQgPSBjb2RlZ2VuLmdlbmVyYXRlU291cmNlKCk7XG4gICAgICB9XG4gICAgICBpbmRleCsrO1xuICAgICAgcmV0dXJuIHNvdXJjZVBhcnQ7XG4gICAgfSk7XG4gICAgcmV0dXJuIG5ldyBTb3VyY2VFeHByZXNzaW9ucyhzb3VyY2VQYXJ0cywgZmFjdG9yaWVzKTtcbiAgfVxufVxuIl19\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/compiler/change_detector_compiler.js\n ** module id = 140\n ** module chunks = 1\n **/","'use strict';var __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar compiler_1 = require('angular2/src/core/linker/compiler');\r\nvar view_ref_1 = require('angular2/src/core/linker/view_ref');\r\nvar template_compiler_1 = require('./template_compiler');\r\nvar di_1 = require('angular2/src/core/di');\r\nvar RuntimeCompiler = (function (_super) {\r\n    __extends(RuntimeCompiler, _super);\r\n    function RuntimeCompiler() {\r\n        _super.apply(this, arguments);\r\n    }\r\n    return RuntimeCompiler;\r\n})(compiler_1.Compiler);\r\nexports.RuntimeCompiler = RuntimeCompiler;\r\nvar RuntimeCompiler_ = (function (_super) {\r\n    __extends(RuntimeCompiler_, _super);\r\n    function RuntimeCompiler_(_templateCompiler) {\r\n        _super.call(this);\r\n        this._templateCompiler = _templateCompiler;\r\n    }\r\n    RuntimeCompiler_.prototype.compileInHost = function (componentType) {\r\n        return this._templateCompiler.compileHostComponentRuntime(componentType)\r\n            .then(function (hostViewFactory) { return new view_ref_1.HostViewFactoryRef_(hostViewFactory); });\r\n    };\r\n    RuntimeCompiler_.prototype.clearCache = function () {\r\n        _super.prototype.clearCache.call(this);\r\n        this._templateCompiler.clearCache();\r\n    };\r\n    RuntimeCompiler_ = __decorate([\r\n        di_1.Injectable(), \r\n        __metadata('design:paramtypes', [template_compiler_1.TemplateCompiler])\r\n    ], RuntimeCompiler_);\r\n    return RuntimeCompiler_;\r\n})(compiler_1.Compiler_);\r\nexports.RuntimeCompiler_ = RuntimeCompiler_;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicnVudGltZV9jb21waWxlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImFuZ3VsYXIyL3NyYy9jb21waWxlci9ydW50aW1lX2NvbXBpbGVyLnRzIl0sIm5hbWVzIjpbIlJ1bnRpbWVDb21waWxlciIsIlJ1bnRpbWVDb21waWxlci5jb25zdHJ1Y3RvciIsIlJ1bnRpbWVDb21waWxlcl8iLCJSdW50aW1lQ29tcGlsZXJfLmNvbnN0cnVjdG9yIiwiUnVudGltZUNvbXBpbGVyXy5jb21waWxlSW5Ib3N0IiwiUnVudGltZUNvbXBpbGVyXy5jbGVhckNhY2hlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFBLHlCQUFrQyxtQ0FBbUMsQ0FBQyxDQUFBO0FBQ3RFLHlCQUFzRCxtQ0FBbUMsQ0FBQyxDQUFBO0FBQzFGLGtDQUErQixxQkFBcUIsQ0FBQyxDQUFBO0FBRXJELG1CQUF5QixzQkFBc0IsQ0FBQyxDQUFBO0FBSWhEO0lBQThDQSxtQ0FBUUE7SUFBdERBO1FBQThDQyw4QkFBUUE7SUFHdERBLENBQUNBO0lBQURELHNCQUFDQTtBQUFEQSxDQUFDQSxBQUhELEVBQThDLG1CQUFRLEVBR3JEO0FBSHFCLHVCQUFlLGtCQUdwQyxDQUFBO0FBRUQ7SUFDc0NFLG9DQUFTQTtJQUM3Q0EsMEJBQW9CQSxpQkFBbUNBO1FBQUlDLGlCQUFPQSxDQUFDQTtRQUEvQ0Esc0JBQWlCQSxHQUFqQkEsaUJBQWlCQSxDQUFrQkE7SUFBYUEsQ0FBQ0E7SUFFckVELHdDQUFhQSxHQUFiQSxVQUFjQSxhQUFtQkE7UUFDL0JFLE1BQU1BLENBQUNBLElBQUlBLENBQUNBLGlCQUFpQkEsQ0FBQ0EsMkJBQTJCQSxDQUFDQSxhQUFhQSxDQUFDQTthQUNuRUEsSUFBSUEsQ0FBQ0EsVUFBQUEsZUFBZUEsSUFBSUEsT0FBQUEsSUFBSUEsOEJBQW1CQSxDQUFDQSxlQUFlQSxDQUFDQSxFQUF4Q0EsQ0FBd0NBLENBQUNBLENBQUNBO0lBQ3pFQSxDQUFDQTtJQUVERixxQ0FBVUEsR0FBVkE7UUFDRUcsZ0JBQUtBLENBQUNBLFVBQVVBLFdBQUVBLENBQUNBO1FBQ25CQSxJQUFJQSxDQUFDQSxpQkFBaUJBLENBQUNBLFVBQVVBLEVBQUVBLENBQUNBO0lBQ3RDQSxDQUFDQTtJQVpISDtRQUFDQSxlQUFVQSxFQUFFQTs7eUJBYVpBO0lBQURBLHVCQUFDQTtBQUFEQSxDQUFDQSxBQWJELEVBQ3NDLG9CQUFTLEVBWTlDO0FBWlksd0JBQWdCLG1CQVk1QixDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21waWxlciwgQ29tcGlsZXJffSBmcm9tICdhbmd1bGFyMi9zcmMvY29yZS9saW5rZXIvY29tcGlsZXInO1xuaW1wb3J0IHtIb3N0Vmlld0ZhY3RvcnlSZWYsIEhvc3RWaWV3RmFjdG9yeVJlZl99IGZyb20gJ2FuZ3VsYXIyL3NyYy9jb3JlL2xpbmtlci92aWV3X3JlZic7XG5pbXBvcnQge1RlbXBsYXRlQ29tcGlsZXJ9IGZyb20gJy4vdGVtcGxhdGVfY29tcGlsZXInO1xuXG5pbXBvcnQge0luamVjdGFibGV9IGZyb20gJ2FuZ3VsYXIyL3NyYy9jb3JlL2RpJztcbmltcG9ydCB7VHlwZX0gZnJvbSAnYW5ndWxhcjIvc3JjL2ZhY2FkZS9sYW5nJztcbmltcG9ydCB7UHJvbWlzZSwgUHJvbWlzZVdyYXBwZXJ9IGZyb20gJ2FuZ3VsYXIyL3NyYy9mYWNhZGUvYXN5bmMnO1xuXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgUnVudGltZUNvbXBpbGVyIGV4dGVuZHMgQ29tcGlsZXIge1xuICBhYnN0cmFjdCBjb21waWxlSW5Ib3N0KGNvbXBvbmVudFR5cGU6IFR5cGUpOiBQcm9taXNlPEhvc3RWaWV3RmFjdG9yeVJlZj47XG4gIGFic3RyYWN0IGNsZWFyQ2FjaGUoKTtcbn1cblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFJ1bnRpbWVDb21waWxlcl8gZXh0ZW5kcyBDb21waWxlcl8gaW1wbGVtZW50cyBSdW50aW1lQ29tcGlsZXIge1xuICBjb25zdHJ1Y3Rvcihwcml2YXRlIF90ZW1wbGF0ZUNvbXBpbGVyOiBUZW1wbGF0ZUNvbXBpbGVyKSB7IHN1cGVyKCk7IH1cblxuICBjb21waWxlSW5Ib3N0KGNvbXBvbmVudFR5cGU6IFR5cGUpOiBQcm9taXNlPEhvc3RWaWV3RmFjdG9yeVJlZl8+IHtcbiAgICByZXR1cm4gdGhpcy5fdGVtcGxhdGVDb21waWxlci5jb21waWxlSG9zdENvbXBvbmVudFJ1bnRpbWUoY29tcG9uZW50VHlwZSlcbiAgICAgICAgLnRoZW4oaG9zdFZpZXdGYWN0b3J5ID0+IG5ldyBIb3N0Vmlld0ZhY3RvcnlSZWZfKGhvc3RWaWV3RmFjdG9yeSkpO1xuICB9XG5cbiAgY2xlYXJDYWNoZSgpIHtcbiAgICBzdXBlci5jbGVhckNhY2hlKCk7XG4gICAgdGhpcy5fdGVtcGxhdGVDb21waWxlci5jbGVhckNhY2hlKCk7XG4gIH1cbn1cbiJdfQ==\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/compiler/runtime_compiler.js\n ** module id = 141\n ** module chunks = 1\n **/","'use strict';var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar di_1 = require('angular2/src/core/di');\r\nvar lang_1 = require('angular2/src/facade/lang');\r\nvar exceptions_1 = require('angular2/src/facade/exceptions');\r\nvar cpl = require('./directive_metadata');\r\nvar md = require('angular2/src/core/metadata/directives');\r\nvar directive_resolver_1 = require('angular2/src/core/linker/directive_resolver');\r\nvar pipe_resolver_1 = require('angular2/src/core/linker/pipe_resolver');\r\nvar view_resolver_1 = require('angular2/src/core/linker/view_resolver');\r\nvar directive_lifecycle_reflector_1 = require('angular2/src/core/linker/directive_lifecycle_reflector');\r\nvar interfaces_1 = require('angular2/src/core/linker/interfaces');\r\nvar reflection_1 = require('angular2/src/core/reflection/reflection');\r\nvar di_2 = require('angular2/src/core/di');\r\nvar platform_directives_and_pipes_1 = require('angular2/src/core/platform_directives_and_pipes');\r\nvar util_1 = require('./util');\r\nvar url_resolver_1 = require('angular2/src/compiler/url_resolver');\r\nvar RuntimeMetadataResolver = (function () {\r\n    function RuntimeMetadataResolver(_directiveResolver, _pipeResolver, _viewResolver, _platformDirectives, _platformPipes) {\r\n        this._directiveResolver = _directiveResolver;\r\n        this._pipeResolver = _pipeResolver;\r\n        this._viewResolver = _viewResolver;\r\n        this._platformDirectives = _platformDirectives;\r\n        this._platformPipes = _platformPipes;\r\n        this._directiveCache = new Map();\r\n        this._pipeCache = new Map();\r\n    }\r\n    RuntimeMetadataResolver.prototype.getDirectiveMetadata = function (directiveType) {\r\n        var meta = this._directiveCache.get(directiveType);\r\n        if (lang_1.isBlank(meta)) {\r\n            var dirMeta = this._directiveResolver.resolve(directiveType);\r\n            var moduleUrl = null;\r\n            var templateMeta = null;\r\n            var changeDetectionStrategy = null;\r\n            if (dirMeta instanceof md.ComponentMetadata) {\r\n                var cmpMeta = dirMeta;\r\n                moduleUrl = calcModuleUrl(directiveType, cmpMeta);\r\n                var viewMeta = this._viewResolver.resolve(directiveType);\r\n                templateMeta = new cpl.CompileTemplateMetadata({\r\n                    encapsulation: viewMeta.encapsulation,\r\n                    template: viewMeta.template,\r\n                    templateUrl: viewMeta.templateUrl,\r\n                    styles: viewMeta.styles,\r\n                    styleUrls: viewMeta.styleUrls\r\n                });\r\n                changeDetectionStrategy = cmpMeta.changeDetection;\r\n            }\r\n            meta = cpl.CompileDirectiveMetadata.create({\r\n                selector: dirMeta.selector,\r\n                exportAs: dirMeta.exportAs,\r\n                isComponent: lang_1.isPresent(templateMeta),\r\n                dynamicLoadable: true,\r\n                type: new cpl.CompileTypeMetadata({ name: lang_1.stringify(directiveType), moduleUrl: moduleUrl, runtime: directiveType }),\r\n                template: templateMeta,\r\n                changeDetection: changeDetectionStrategy,\r\n                inputs: dirMeta.inputs,\r\n                outputs: dirMeta.outputs,\r\n                host: dirMeta.host,\r\n                lifecycleHooks: interfaces_1.LIFECYCLE_HOOKS_VALUES.filter(function (hook) { return directive_lifecycle_reflector_1.hasLifecycleHook(hook, directiveType); })\r\n            });\r\n            this._directiveCache.set(directiveType, meta);\r\n        }\r\n        return meta;\r\n    };\r\n    RuntimeMetadataResolver.prototype.getPipeMetadata = function (pipeType) {\r\n        var meta = this._pipeCache.get(pipeType);\r\n        if (lang_1.isBlank(meta)) {\r\n            var pipeMeta = this._pipeResolver.resolve(pipeType);\r\n            var moduleUrl = reflection_1.reflector.importUri(pipeType);\r\n            meta = new cpl.CompilePipeMetadata({\r\n                type: new cpl.CompileTypeMetadata({ name: lang_1.stringify(pipeType), moduleUrl: moduleUrl, runtime: pipeType }),\r\n                name: pipeMeta.name,\r\n                pure: pipeMeta.pure\r\n            });\r\n            this._pipeCache.set(pipeType, meta);\r\n        }\r\n        return meta;\r\n    };\r\n    RuntimeMetadataResolver.prototype.getViewDirectivesMetadata = function (component) {\r\n        var _this = this;\r\n        var view = this._viewResolver.resolve(component);\r\n        var directives = flattenDirectives(view, this._platformDirectives);\r\n        for (var i = 0; i < directives.length; i++) {\r\n            if (!isValidType(directives[i])) {\r\n                throw new exceptions_1.BaseException(\"Unexpected directive value '\" + lang_1.stringify(directives[i]) + \"' on the View of component '\" + lang_1.stringify(component) + \"'\");\r\n            }\r\n        }\r\n        return directives.map(function (type) { return _this.getDirectiveMetadata(type); });\r\n    };\r\n    RuntimeMetadataResolver.prototype.getViewPipesMetadata = function (component) {\r\n        var _this = this;\r\n        var view = this._viewResolver.resolve(component);\r\n        var pipes = flattenPipes(view, this._platformPipes);\r\n        for (var i = 0; i < pipes.length; i++) {\r\n            if (!isValidType(pipes[i])) {\r\n                throw new exceptions_1.BaseException(\"Unexpected piped value '\" + lang_1.stringify(pipes[i]) + \"' on the View of component '\" + lang_1.stringify(component) + \"'\");\r\n            }\r\n        }\r\n        return pipes.map(function (type) { return _this.getPipeMetadata(type); });\r\n    };\r\n    RuntimeMetadataResolver = __decorate([\r\n        di_2.Injectable(),\r\n        __param(3, di_2.Optional()),\r\n        __param(3, di_2.Inject(platform_directives_and_pipes_1.PLATFORM_DIRECTIVES)),\r\n        __param(4, di_2.Optional()),\r\n        __param(4, di_2.Inject(platform_directives_and_pipes_1.PLATFORM_PIPES)), \r\n        __metadata('design:paramtypes', [directive_resolver_1.DirectiveResolver, pipe_resolver_1.PipeResolver, view_resolver_1.ViewResolver, Array, Array])\r\n    ], RuntimeMetadataResolver);\r\n    return RuntimeMetadataResolver;\r\n})();\r\nexports.RuntimeMetadataResolver = RuntimeMetadataResolver;\r\nfunction flattenDirectives(view, platformDirectives) {\r\n    var directives = [];\r\n    if (lang_1.isPresent(platformDirectives)) {\r\n        flattenArray(platformDirectives, directives);\r\n    }\r\n    if (lang_1.isPresent(view.directives)) {\r\n        flattenArray(view.directives, directives);\r\n    }\r\n    return directives;\r\n}\r\nfunction flattenPipes(view, platformPipes) {\r\n    var pipes = [];\r\n    if (lang_1.isPresent(platformPipes)) {\r\n        flattenArray(platformPipes, pipes);\r\n    }\r\n    if (lang_1.isPresent(view.pipes)) {\r\n        flattenArray(view.pipes, pipes);\r\n    }\r\n    return pipes;\r\n}\r\nfunction flattenArray(tree, out) {\r\n    for (var i = 0; i < tree.length; i++) {\r\n        var item = di_1.resolveForwardRef(tree[i]);\r\n        if (lang_1.isArray(item)) {\r\n            flattenArray(item, out);\r\n        }\r\n        else {\r\n            out.push(item);\r\n        }\r\n    }\r\n}\r\nfunction isValidType(value) {\r\n    return lang_1.isPresent(value) && (value instanceof lang_1.Type);\r\n}\r\nfunction calcModuleUrl(type, cmpMetadata) {\r\n    var moduleId = cmpMetadata.moduleId;\r\n    if (lang_1.isPresent(moduleId)) {\r\n        var scheme = url_resolver_1.getUrlScheme(moduleId);\r\n        return lang_1.isPresent(scheme) && scheme.length > 0 ? moduleId :\r\n            \"package:\" + moduleId + util_1.MODULE_SUFFIX;\r\n    }\r\n    else {\r\n        return reflection_1.reflector.importUri(type);\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/compiler/runtime_metadata.js\n ** module id = 142\n ** module chunks = 1\n **/","'use strict';var collection_1 = require('angular2/src/facade/collection');\r\nvar lang_1 = require('angular2/src/facade/lang');\r\nvar exceptions_1 = require('angular2/src/facade/exceptions');\r\nvar _EMPTY_ATTR_VALUE = '';\r\n// TODO: Can't use `const` here as\r\n// in Dart this is not transpiled into `final` yet...\r\nvar _SELECTOR_REGEXP = lang_1.RegExpWrapper.create('(\\\\:not\\\\()|' +\r\n    '([-\\\\w]+)|' +\r\n    '(?:\\\\.([-\\\\w]+))|' +\r\n    '(?:\\\\[([-\\\\w*]+)(?:=([^\\\\]]*))?\\\\])|' +\r\n    '(\\\\))|' +\r\n    '(\\\\s*,\\\\s*)'); // \",\"\r\n/**\r\n * A css selector contains an element name,\r\n * css classes and attribute/value pairs with the purpose\r\n * of selecting subsets out of them.\r\n */\r\nvar CssSelector = (function () {\r\n    function CssSelector() {\r\n        this.element = null;\r\n        this.classNames = [];\r\n        this.attrs = [];\r\n        this.notSelectors = [];\r\n    }\r\n    CssSelector.parse = function (selector) {\r\n        var results = [];\r\n        var _addResult = function (res, cssSel) {\r\n            if (cssSel.notSelectors.length > 0 && lang_1.isBlank(cssSel.element) &&\r\n                collection_1.ListWrapper.isEmpty(cssSel.classNames) && collection_1.ListWrapper.isEmpty(cssSel.attrs)) {\r\n                cssSel.element = \"*\";\r\n            }\r\n            res.push(cssSel);\r\n        };\r\n        var cssSelector = new CssSelector();\r\n        var matcher = lang_1.RegExpWrapper.matcher(_SELECTOR_REGEXP, selector);\r\n        var match;\r\n        var current = cssSelector;\r\n        var inNot = false;\r\n        while (lang_1.isPresent(match = lang_1.RegExpMatcherWrapper.next(matcher))) {\r\n            if (lang_1.isPresent(match[1])) {\r\n                if (inNot) {\r\n                    throw new exceptions_1.BaseException('Nesting :not is not allowed in a selector');\r\n                }\r\n                inNot = true;\r\n                current = new CssSelector();\r\n                cssSelector.notSelectors.push(current);\r\n            }\r\n            if (lang_1.isPresent(match[2])) {\r\n                current.setElement(match[2]);\r\n            }\r\n            if (lang_1.isPresent(match[3])) {\r\n                current.addClassName(match[3]);\r\n            }\r\n            if (lang_1.isPresent(match[4])) {\r\n                current.addAttribute(match[4], match[5]);\r\n            }\r\n            if (lang_1.isPresent(match[6])) {\r\n                inNot = false;\r\n                current = cssSelector;\r\n            }\r\n            if (lang_1.isPresent(match[7])) {\r\n                if (inNot) {\r\n                    throw new exceptions_1.BaseException('Multiple selectors in :not are not supported');\r\n                }\r\n                _addResult(results, cssSelector);\r\n                cssSelector = current = new CssSelector();\r\n            }\r\n        }\r\n        _addResult(results, cssSelector);\r\n        return results;\r\n    };\r\n    CssSelector.prototype.isElementSelector = function () {\r\n        return lang_1.isPresent(this.element) && collection_1.ListWrapper.isEmpty(this.classNames) &&\r\n            collection_1.ListWrapper.isEmpty(this.attrs) && this.notSelectors.length === 0;\r\n    };\r\n    CssSelector.prototype.setElement = function (element) {\r\n        if (element === void 0) { element = null; }\r\n        this.element = element;\r\n    };\r\n    /** Gets a template string for an element that matches the selector. */\r\n    CssSelector.prototype.getMatchingElementTemplate = function () {\r\n        var tagName = lang_1.isPresent(this.element) ? this.element : 'div';\r\n        var classAttr = this.classNames.length > 0 ? \" class=\\\"\" + this.classNames.join(' ') + \"\\\"\" : '';\r\n        var attrs = '';\r\n        for (var i = 0; i < this.attrs.length; i += 2) {\r\n            var attrName = this.attrs[i];\r\n            var attrValue = this.attrs[i + 1] !== '' ? \"=\\\"\" + this.attrs[i + 1] + \"\\\"\" : '';\r\n            attrs += \" \" + attrName + attrValue;\r\n        }\r\n        return \"<\" + tagName + classAttr + attrs + \"></\" + tagName + \">\";\r\n    };\r\n    CssSelector.prototype.addAttribute = function (name, value) {\r\n        if (value === void 0) { value = _EMPTY_ATTR_VALUE; }\r\n        this.attrs.push(name);\r\n        if (lang_1.isPresent(value)) {\r\n            value = value.toLowerCase();\r\n        }\r\n        else {\r\n            value = _EMPTY_ATTR_VALUE;\r\n        }\r\n        this.attrs.push(value);\r\n    };\r\n    CssSelector.prototype.addClassName = function (name) { this.classNames.push(name.toLowerCase()); };\r\n    CssSelector.prototype.toString = function () {\r\n        var res = '';\r\n        if (lang_1.isPresent(this.element)) {\r\n            res += this.element;\r\n        }\r\n        if (lang_1.isPresent(this.classNames)) {\r\n            for (var i = 0; i < this.classNames.length; i++) {\r\n                res += '.' + this.classNames[i];\r\n            }\r\n        }\r\n        if (lang_1.isPresent(this.attrs)) {\r\n            for (var i = 0; i < this.attrs.length;) {\r\n                var attrName = this.attrs[i++];\r\n                var attrValue = this.attrs[i++];\r\n                res += '[' + attrName;\r\n                if (attrValue.length > 0) {\r\n                    res += '=' + attrValue;\r\n                }\r\n                res += ']';\r\n            }\r\n        }\r\n        this.notSelectors.forEach(function (notSelector) { return res += \":not(\" + notSelector + \")\"; });\r\n        return res;\r\n    };\r\n    return CssSelector;\r\n})();\r\nexports.CssSelector = CssSelector;\r\n/**\r\n * Reads a list of CssSelectors and allows to calculate which ones\r\n * are contained in a given CssSelector.\r\n */\r\nvar SelectorMatcher = (function () {\r\n    function SelectorMatcher() {\r\n        this._elementMap = new collection_1.Map();\r\n        this._elementPartialMap = new collection_1.Map();\r\n        this._classMap = new collection_1.Map();\r\n        this._classPartialMap = new collection_1.Map();\r\n        this._attrValueMap = new collection_1.Map();\r\n        this._attrValuePartialMap = new collection_1.Map();\r\n        this._listContexts = [];\r\n    }\r\n    SelectorMatcher.createNotMatcher = function (notSelectors) {\r\n        var notMatcher = new SelectorMatcher();\r\n        notMatcher.addSelectables(notSelectors, null);\r\n        return notMatcher;\r\n    };\r\n    SelectorMatcher.prototype.addSelectables = function (cssSelectors, callbackCtxt) {\r\n        var listContext = null;\r\n        if (cssSelectors.length > 1) {\r\n            listContext = new SelectorListContext(cssSelectors);\r\n            this._listContexts.push(listContext);\r\n        }\r\n        for (var i = 0; i < cssSelectors.length; i++) {\r\n            this._addSelectable(cssSelectors[i], callbackCtxt, listContext);\r\n        }\r\n    };\r\n    /**\r\n     * Add an object that can be found later on by calling `match`.\r\n     * @param cssSelector A css selector\r\n     * @param callbackCtxt An opaque object that will be given to the callback of the `match` function\r\n     */\r\n    SelectorMatcher.prototype._addSelectable = function (cssSelector, callbackCtxt, listContext) {\r\n        var matcher = this;\r\n        var element = cssSelector.element;\r\n        var classNames = cssSelector.classNames;\r\n        var attrs = cssSelector.attrs;\r\n        var selectable = new SelectorContext(cssSelector, callbackCtxt, listContext);\r\n        if (lang_1.isPresent(element)) {\r\n            var isTerminal = attrs.length === 0 && classNames.length === 0;\r\n            if (isTerminal) {\r\n                this._addTerminal(matcher._elementMap, element, selectable);\r\n            }\r\n            else {\r\n                matcher = this._addPartial(matcher._elementPartialMap, element);\r\n            }\r\n        }\r\n        if (lang_1.isPresent(classNames)) {\r\n            for (var index = 0; index < classNames.length; index++) {\r\n                var isTerminal = attrs.length === 0 && index === classNames.length - 1;\r\n                var className = classNames[index];\r\n                if (isTerminal) {\r\n                    this._addTerminal(matcher._classMap, className, selectable);\r\n                }\r\n                else {\r\n                    matcher = this._addPartial(matcher._classPartialMap, className);\r\n                }\r\n            }\r\n        }\r\n        if (lang_1.isPresent(attrs)) {\r\n            for (var index = 0; index < attrs.length;) {\r\n                var isTerminal = index === attrs.length - 2;\r\n                var attrName = attrs[index++];\r\n                var attrValue = attrs[index++];\r\n                if (isTerminal) {\r\n                    var terminalMap = matcher._attrValueMap;\r\n                    var terminalValuesMap = terminalMap.get(attrName);\r\n                    if (lang_1.isBlank(terminalValuesMap)) {\r\n                        terminalValuesMap = new collection_1.Map();\r\n                        terminalMap.set(attrName, terminalValuesMap);\r\n                    }\r\n                    this._addTerminal(terminalValuesMap, attrValue, selectable);\r\n                }\r\n                else {\r\n                    var parttialMap = matcher._attrValuePartialMap;\r\n                    var partialValuesMap = parttialMap.get(attrName);\r\n                    if (lang_1.isBlank(partialValuesMap)) {\r\n                        partialValuesMap = new collection_1.Map();\r\n                        parttialMap.set(attrName, partialValuesMap);\r\n                    }\r\n                    matcher = this._addPartial(partialValuesMap, attrValue);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    SelectorMatcher.prototype._addTerminal = function (map, name, selectable) {\r\n        var terminalList = map.get(name);\r\n        if (lang_1.isBlank(terminalList)) {\r\n            terminalList = [];\r\n            map.set(name, terminalList);\r\n        }\r\n        terminalList.push(selectable);\r\n    };\r\n    SelectorMatcher.prototype._addPartial = function (map, name) {\r\n        var matcher = map.get(name);\r\n        if (lang_1.isBlank(matcher)) {\r\n            matcher = new SelectorMatcher();\r\n            map.set(name, matcher);\r\n        }\r\n        return matcher;\r\n    };\r\n    /**\r\n     * Find the objects that have been added via `addSelectable`\r\n     * whose css selector is contained in the given css selector.\r\n     * @param cssSelector A css selector\r\n     * @param matchedCallback This callback will be called with the object handed into `addSelectable`\r\n     * @return boolean true if a match was found\r\n    */\r\n    SelectorMatcher.prototype.match = function (cssSelector, matchedCallback) {\r\n        var result = false;\r\n        var element = cssSelector.element;\r\n        var classNames = cssSelector.classNames;\r\n        var attrs = cssSelector.attrs;\r\n        for (var i = 0; i < this._listContexts.length; i++) {\r\n            this._listContexts[i].alreadyMatched = false;\r\n        }\r\n        result = this._matchTerminal(this._elementMap, element, cssSelector, matchedCallback) || result;\r\n        result = this._matchPartial(this._elementPartialMap, element, cssSelector, matchedCallback) ||\r\n            result;\r\n        if (lang_1.isPresent(classNames)) {\r\n            for (var index = 0; index < classNames.length; index++) {\r\n                var className = classNames[index];\r\n                result =\r\n                    this._matchTerminal(this._classMap, className, cssSelector, matchedCallback) || result;\r\n                result =\r\n                    this._matchPartial(this._classPartialMap, className, cssSelector, matchedCallback) ||\r\n                        result;\r\n            }\r\n        }\r\n        if (lang_1.isPresent(attrs)) {\r\n            for (var index = 0; index < attrs.length;) {\r\n                var attrName = attrs[index++];\r\n                var attrValue = attrs[index++];\r\n                var terminalValuesMap = this._attrValueMap.get(attrName);\r\n                if (!lang_1.StringWrapper.equals(attrValue, _EMPTY_ATTR_VALUE)) {\r\n                    result = this._matchTerminal(terminalValuesMap, _EMPTY_ATTR_VALUE, cssSelector, matchedCallback) ||\r\n                        result;\r\n                }\r\n                result = this._matchTerminal(terminalValuesMap, attrValue, cssSelector, matchedCallback) ||\r\n                    result;\r\n                var partialValuesMap = this._attrValuePartialMap.get(attrName);\r\n                if (!lang_1.StringWrapper.equals(attrValue, _EMPTY_ATTR_VALUE)) {\r\n                    result = this._matchPartial(partialValuesMap, _EMPTY_ATTR_VALUE, cssSelector, matchedCallback) ||\r\n                        result;\r\n                }\r\n                result =\r\n                    this._matchPartial(partialValuesMap, attrValue, cssSelector, matchedCallback) || result;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    /** @internal */\r\n    SelectorMatcher.prototype._matchTerminal = function (map, name, cssSelector, matchedCallback) {\r\n        if (lang_1.isBlank(map) || lang_1.isBlank(name)) {\r\n            return false;\r\n        }\r\n        var selectables = map.get(name);\r\n        var starSelectables = map.get(\"*\");\r\n        if (lang_1.isPresent(starSelectables)) {\r\n            selectables = selectables.concat(starSelectables);\r\n        }\r\n        if (lang_1.isBlank(selectables)) {\r\n            return false;\r\n        }\r\n        var selectable;\r\n        var result = false;\r\n        for (var index = 0; index < selectables.length; index++) {\r\n            selectable = selectables[index];\r\n            result = selectable.finalize(cssSelector, matchedCallback) || result;\r\n        }\r\n        return result;\r\n    };\r\n    /** @internal */\r\n    SelectorMatcher.prototype._matchPartial = function (map, name, cssSelector, matchedCallback /*: (c: CssSelector, a: any) => void*/) {\r\n        if (lang_1.isBlank(map) || lang_1.isBlank(name)) {\r\n            return false;\r\n        }\r\n        var nestedSelector = map.get(name);\r\n        if (lang_1.isBlank(nestedSelector)) {\r\n            return false;\r\n        }\r\n        // TODO(perf): get rid of recursion and measure again\r\n        // TODO(perf): don't pass the whole selector into the recursion,\r\n        // but only the not processed parts\r\n        return nestedSelector.match(cssSelector, matchedCallback);\r\n    };\r\n    return SelectorMatcher;\r\n})();\r\nexports.SelectorMatcher = SelectorMatcher;\r\nvar SelectorListContext = (function () {\r\n    function SelectorListContext(selectors) {\r\n        this.selectors = selectors;\r\n        this.alreadyMatched = false;\r\n    }\r\n    return SelectorListContext;\r\n})();\r\nexports.SelectorListContext = SelectorListContext;\r\n// Store context to pass back selector and context when a selector is matched\r\nvar SelectorContext = (function () {\r\n    function SelectorContext(selector, cbContext, listContext) {\r\n        this.selector = selector;\r\n        this.cbContext = cbContext;\r\n        this.listContext = listContext;\r\n        this.notSelectors = selector.notSelectors;\r\n    }\r\n    SelectorContext.prototype.finalize = function (cssSelector, callback) {\r\n        var result = true;\r\n        if (this.notSelectors.length > 0 &&\r\n            (lang_1.isBlank(this.listContext) || !this.listContext.alreadyMatched)) {\r\n            var notMatcher = SelectorMatcher.createNotMatcher(this.notSelectors);\r\n            result = !notMatcher.match(cssSelector, null);\r\n        }\r\n        if (result && lang_1.isPresent(callback) &&\r\n            (lang_1.isBlank(this.listContext) || !this.listContext.alreadyMatched)) {\r\n            if (lang_1.isPresent(this.listContext)) {\r\n                this.listContext.alreadyMatched = true;\r\n            }\r\n            callback(this.selector, this.cbContext);\r\n        }\r\n        return result;\r\n    };\r\n    return SelectorContext;\r\n})();\r\nexports.SelectorContext = SelectorContext;\r\n//# sourceMappingURL=data:application/json;base64,\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/compiler/selector.js\n ** module id = 143\n ** module chunks = 1\n **/","'use strict';var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar source_module_1 = require('./source_module');\r\nvar view_1 = require('angular2/src/core/metadata/view');\r\nvar xhr_1 = require('angular2/src/compiler/xhr');\r\nvar lang_1 = require('angular2/src/facade/lang');\r\nvar async_1 = require('angular2/src/facade/async');\r\nvar shadow_css_1 = require('angular2/src/compiler/shadow_css');\r\nvar url_resolver_1 = require('angular2/src/compiler/url_resolver');\r\nvar style_url_resolver_1 = require('./style_url_resolver');\r\nvar util_1 = require('./util');\r\nvar di_1 = require('angular2/src/core/di');\r\nvar COMPONENT_VARIABLE = '%COMP%';\r\nvar HOST_ATTR = \"_nghost-\" + COMPONENT_VARIABLE;\r\nvar CONTENT_ATTR = \"_ngcontent-\" + COMPONENT_VARIABLE;\r\nvar StyleCompiler = (function () {\r\n    function StyleCompiler(_xhr, _urlResolver) {\r\n        this._xhr = _xhr;\r\n        this._urlResolver = _urlResolver;\r\n        this._styleCache = new Map();\r\n        this._shadowCss = new shadow_css_1.ShadowCss();\r\n    }\r\n    StyleCompiler.prototype.compileComponentRuntime = function (template) {\r\n        var styles = template.styles;\r\n        var styleAbsUrls = template.styleUrls;\r\n        return this._loadStyles(styles, styleAbsUrls, template.encapsulation === view_1.ViewEncapsulation.Emulated);\r\n    };\r\n    StyleCompiler.prototype.compileComponentCodeGen = function (template) {\r\n        var shim = template.encapsulation === view_1.ViewEncapsulation.Emulated;\r\n        return this._styleCodeGen(template.styles, template.styleUrls, shim);\r\n    };\r\n    StyleCompiler.prototype.compileStylesheetCodeGen = function (stylesheetUrl, cssText) {\r\n        var styleWithImports = style_url_resolver_1.extractStyleUrls(this._urlResolver, stylesheetUrl, cssText);\r\n        return [\r\n            this._styleModule(stylesheetUrl, false, this._styleCodeGen([styleWithImports.style], styleWithImports.styleUrls, false)),\r\n            this._styleModule(stylesheetUrl, true, this._styleCodeGen([styleWithImports.style], styleWithImports.styleUrls, true))\r\n        ];\r\n    };\r\n    StyleCompiler.prototype.clearCache = function () { this._styleCache.clear(); };\r\n    StyleCompiler.prototype._loadStyles = function (plainStyles, absUrls, encapsulate) {\r\n        var _this = this;\r\n        var promises = absUrls.map(function (absUrl) {\r\n            var cacheKey = \"\" + absUrl + (encapsulate ? '.shim' : '');\r\n            var result = _this._styleCache.get(cacheKey);\r\n            if (lang_1.isBlank(result)) {\r\n                result = _this._xhr.get(absUrl).then(function (style) {\r\n                    var styleWithImports = style_url_resolver_1.extractStyleUrls(_this._urlResolver, absUrl, style);\r\n                    return _this._loadStyles([styleWithImports.style], styleWithImports.styleUrls, encapsulate);\r\n                });\r\n                _this._styleCache.set(cacheKey, result);\r\n            }\r\n            return result;\r\n        });\r\n        return async_1.PromiseWrapper.all(promises).then(function (nestedStyles) {\r\n            var result = plainStyles.map(function (plainStyle) { return _this._shimIfNeeded(plainStyle, encapsulate); });\r\n            nestedStyles.forEach(function (styles) { return result.push(styles); });\r\n            return result;\r\n        });\r\n    };\r\n    StyleCompiler.prototype._styleCodeGen = function (plainStyles, absUrls, shim) {\r\n        var _this = this;\r\n        var arrayPrefix = lang_1.IS_DART ? \"const\" : '';\r\n        var styleExpressions = plainStyles.map(function (plainStyle) { return util_1.escapeSingleQuoteString(_this._shimIfNeeded(plainStyle, shim)); });\r\n        for (var i = 0; i < absUrls.length; i++) {\r\n            var moduleUrl = this._createModuleUrl(absUrls[i], shim);\r\n            styleExpressions.push(source_module_1.moduleRef(moduleUrl) + \"STYLES\");\r\n        }\r\n        var expressionSource = arrayPrefix + \" [\" + styleExpressions.join(',') + \"]\";\r\n        return new source_module_1.SourceExpression([], expressionSource);\r\n    };\r\n    StyleCompiler.prototype._styleModule = function (stylesheetUrl, shim, expression) {\r\n        var moduleSource = \"\\n      \" + expression.declarations.join('\\n') + \"\\n      \" + util_1.codeGenExportVariable('STYLES') + expression.expression + \";\\n    \";\r\n        return new source_module_1.SourceModule(this._createModuleUrl(stylesheetUrl, shim), moduleSource);\r\n    };\r\n    StyleCompiler.prototype._shimIfNeeded = function (style, shim) {\r\n        return shim ? this._shadowCss.shimCssText(style, CONTENT_ATTR, HOST_ATTR) : style;\r\n    };\r\n    StyleCompiler.prototype._createModuleUrl = function (stylesheetUrl, shim) {\r\n        return shim ? stylesheetUrl + \".shim\" + util_1.MODULE_SUFFIX : \"\" + stylesheetUrl + util_1.MODULE_SUFFIX;\r\n    };\r\n    StyleCompiler = __decorate([\r\n        di_1.Injectable(), \r\n        __metadata('design:paramtypes', [xhr_1.XHR, url_resolver_1.UrlResolver])\r\n    ], StyleCompiler);\r\n    return StyleCompiler;\r\n})();\r\nexports.StyleCompiler = StyleCompiler;\r\n//# sourceMappingURL=data:application/json;base64,\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/compiler/style_compiler.js\n ** module id = 144\n ** module chunks = 1\n **/","'use strict';var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar directive_metadata_1 = require('./directive_metadata');\r\nvar lang_1 = require('angular2/src/facade/lang');\r\nvar exceptions_1 = require('angular2/src/facade/exceptions');\r\nvar async_1 = require('angular2/src/facade/async');\r\nvar xhr_1 = require('angular2/src/compiler/xhr');\r\nvar url_resolver_1 = require('angular2/src/compiler/url_resolver');\r\nvar style_url_resolver_1 = require('./style_url_resolver');\r\nvar di_1 = require('angular2/src/core/di');\r\nvar view_1 = require('angular2/src/core/metadata/view');\r\nvar html_ast_1 = require('./html_ast');\r\nvar html_parser_1 = require('./html_parser');\r\nvar template_preparser_1 = require('./template_preparser');\r\nvar TemplateNormalizer = (function () {\r\n    function TemplateNormalizer(_xhr, _urlResolver, _htmlParser) {\r\n        this._xhr = _xhr;\r\n        this._urlResolver = _urlResolver;\r\n        this._htmlParser = _htmlParser;\r\n    }\r\n    TemplateNormalizer.prototype.normalizeTemplate = function (directiveType, template) {\r\n        var _this = this;\r\n        if (lang_1.isPresent(template.template)) {\r\n            return async_1.PromiseWrapper.resolve(this.normalizeLoadedTemplate(directiveType, template, template.template, directiveType.moduleUrl));\r\n        }\r\n        else if (lang_1.isPresent(template.templateUrl)) {\r\n            var sourceAbsUrl = this._urlResolver.resolve(directiveType.moduleUrl, template.templateUrl);\r\n            return this._xhr.get(sourceAbsUrl)\r\n                .then(function (templateContent) { return _this.normalizeLoadedTemplate(directiveType, template, templateContent, sourceAbsUrl); });\r\n        }\r\n        else {\r\n            throw new exceptions_1.BaseException(\"No template specified for component \" + directiveType.name);\r\n        }\r\n    };\r\n    TemplateNormalizer.prototype.normalizeLoadedTemplate = function (directiveType, templateMeta, template, templateAbsUrl) {\r\n        var _this = this;\r\n        var rootNodesAndErrors = this._htmlParser.parse(template, directiveType.name);\r\n        if (rootNodesAndErrors.errors.length > 0) {\r\n            var errorString = rootNodesAndErrors.errors.join('\\n');\r\n            throw new exceptions_1.BaseException(\"Template parse errors:\\n\" + errorString);\r\n        }\r\n        var visitor = new TemplatePreparseVisitor();\r\n        html_ast_1.htmlVisitAll(visitor, rootNodesAndErrors.rootNodes);\r\n        var allStyles = templateMeta.styles.concat(visitor.styles);\r\n        var allStyleAbsUrls = visitor.styleUrls.filter(style_url_resolver_1.isStyleUrlResolvable)\r\n            .map(function (url) { return _this._urlResolver.resolve(templateAbsUrl, url); })\r\n            .concat(templateMeta.styleUrls.filter(style_url_resolver_1.isStyleUrlResolvable)\r\n            .map(function (url) { return _this._urlResolver.resolve(directiveType.moduleUrl, url); }));\r\n        var allResolvedStyles = allStyles.map(function (style) {\r\n            var styleWithImports = style_url_resolver_1.extractStyleUrls(_this._urlResolver, templateAbsUrl, style);\r\n            styleWithImports.styleUrls.forEach(function (styleUrl) { return allStyleAbsUrls.push(styleUrl); });\r\n            return styleWithImports.style;\r\n        });\r\n        var encapsulation = templateMeta.encapsulation;\r\n        if (encapsulation === view_1.ViewEncapsulation.Emulated && allResolvedStyles.length === 0 &&\r\n            allStyleAbsUrls.length === 0) {\r\n            encapsulation = view_1.ViewEncapsulation.None;\r\n        }\r\n        return new directive_metadata_1.CompileTemplateMetadata({\r\n            encapsulation: encapsulation,\r\n            template: template,\r\n            templateUrl: templateAbsUrl,\r\n            styles: allResolvedStyles,\r\n            styleUrls: allStyleAbsUrls,\r\n            ngContentSelectors: visitor.ngContentSelectors\r\n        });\r\n    };\r\n    TemplateNormalizer = __decorate([\r\n        di_1.Injectable(), \r\n        __metadata('design:paramtypes', [xhr_1.XHR, url_resolver_1.UrlResolver, html_parser_1.HtmlParser])\r\n    ], TemplateNormalizer);\r\n    return TemplateNormalizer;\r\n})();\r\nexports.TemplateNormalizer = TemplateNormalizer;\r\nvar TemplatePreparseVisitor = (function () {\r\n    function TemplatePreparseVisitor() {\r\n        this.ngContentSelectors = [];\r\n        this.styles = [];\r\n        this.styleUrls = [];\r\n        this.ngNonBindableStackCount = 0;\r\n    }\r\n    TemplatePreparseVisitor.prototype.visitElement = function (ast, context) {\r\n        var preparsedElement = template_preparser_1.preparseElement(ast);\r\n        switch (preparsedElement.type) {\r\n            case template_preparser_1.PreparsedElementType.NG_CONTENT:\r\n                if (this.ngNonBindableStackCount === 0) {\r\n                    this.ngContentSelectors.push(preparsedElement.selectAttr);\r\n                }\r\n                break;\r\n            case template_preparser_1.PreparsedElementType.STYLE:\r\n                var textContent = '';\r\n                ast.children.forEach(function (child) {\r\n                    if (child instanceof html_ast_1.HtmlTextAst) {\r\n                        textContent += child.value;\r\n                    }\r\n                });\r\n                this.styles.push(textContent);\r\n                break;\r\n            case template_preparser_1.PreparsedElementType.STYLESHEET:\r\n                this.styleUrls.push(preparsedElement.hrefAttr);\r\n                break;\r\n            default:\r\n                // DDC reports this as error. See:\r\n                // https://github.com/dart-lang/dev_compiler/issues/428\r\n                break;\r\n        }\r\n        if (preparsedElement.nonBindable) {\r\n            this.ngNonBindableStackCount++;\r\n        }\r\n        html_ast_1.htmlVisitAll(this, ast.children);\r\n        if (preparsedElement.nonBindable) {\r\n            this.ngNonBindableStackCount--;\r\n        }\r\n        return null;\r\n    };\r\n    TemplatePreparseVisitor.prototype.visitAttr = function (ast, context) { return null; };\r\n    TemplatePreparseVisitor.prototype.visitText = function (ast, context) { return null; };\r\n    return TemplatePreparseVisitor;\r\n})();\r\n//# sourceMappingURL=data:application/json;base64,\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/compiler/template_normalizer.js\n ** module id = 145\n ** module chunks = 1\n **/","'use strict';var lang_1 = require('angular2/src/facade/lang');\r\nvar html_tags_1 = require('./html_tags');\r\nvar NG_CONTENT_SELECT_ATTR = 'select';\r\nvar NG_CONTENT_ELEMENT = 'ng-content';\r\nvar LINK_ELEMENT = 'link';\r\nvar LINK_STYLE_REL_ATTR = 'rel';\r\nvar LINK_STYLE_HREF_ATTR = 'href';\r\nvar LINK_STYLE_REL_VALUE = 'stylesheet';\r\nvar STYLE_ELEMENT = 'style';\r\nvar SCRIPT_ELEMENT = 'script';\r\nvar NG_NON_BINDABLE_ATTR = 'ngNonBindable';\r\nfunction preparseElement(ast) {\r\n    var selectAttr = null;\r\n    var hrefAttr = null;\r\n    var relAttr = null;\r\n    var nonBindable = false;\r\n    ast.attrs.forEach(function (attr) {\r\n        var lcAttrName = attr.name.toLowerCase();\r\n        if (lcAttrName == NG_CONTENT_SELECT_ATTR) {\r\n            selectAttr = attr.value;\r\n        }\r\n        else if (lcAttrName == LINK_STYLE_HREF_ATTR) {\r\n            hrefAttr = attr.value;\r\n        }\r\n        else if (lcAttrName == LINK_STYLE_REL_ATTR) {\r\n            relAttr = attr.value;\r\n        }\r\n        else if (attr.name == NG_NON_BINDABLE_ATTR) {\r\n            nonBindable = true;\r\n        }\r\n    });\r\n    selectAttr = normalizeNgContentSelect(selectAttr);\r\n    var nodeName = ast.name.toLowerCase();\r\n    var type = PreparsedElementType.OTHER;\r\n    if (html_tags_1.splitNsName(nodeName)[1] == NG_CONTENT_ELEMENT) {\r\n        type = PreparsedElementType.NG_CONTENT;\r\n    }\r\n    else if (nodeName == STYLE_ELEMENT) {\r\n        type = PreparsedElementType.STYLE;\r\n    }\r\n    else if (nodeName == SCRIPT_ELEMENT) {\r\n        type = PreparsedElementType.SCRIPT;\r\n    }\r\n    else if (nodeName == LINK_ELEMENT && relAttr == LINK_STYLE_REL_VALUE) {\r\n        type = PreparsedElementType.STYLESHEET;\r\n    }\r\n    return new PreparsedElement(type, selectAttr, hrefAttr, nonBindable);\r\n}\r\nexports.preparseElement = preparseElement;\r\n(function (PreparsedElementType) {\r\n    PreparsedElementType[PreparsedElementType[\"NG_CONTENT\"] = 0] = \"NG_CONTENT\";\r\n    PreparsedElementType[PreparsedElementType[\"STYLE\"] = 1] = \"STYLE\";\r\n    PreparsedElementType[PreparsedElementType[\"STYLESHEET\"] = 2] = \"STYLESHEET\";\r\n    PreparsedElementType[PreparsedElementType[\"SCRIPT\"] = 3] = \"SCRIPT\";\r\n    PreparsedElementType[PreparsedElementType[\"OTHER\"] = 4] = \"OTHER\";\r\n})(exports.PreparsedElementType || (exports.PreparsedElementType = {}));\r\nvar PreparsedElementType = exports.PreparsedElementType;\r\nvar PreparsedElement = (function () {\r\n    function PreparsedElement(type, selectAttr, hrefAttr, nonBindable) {\r\n        this.type = type;\r\n        this.selectAttr = selectAttr;\r\n        this.hrefAttr = hrefAttr;\r\n        this.nonBindable = nonBindable;\r\n    }\r\n    return PreparsedElement;\r\n})();\r\nexports.PreparsedElement = PreparsedElement;\r\nfunction normalizeNgContentSelect(selectAttr) {\r\n    if (lang_1.isBlank(selectAttr) || selectAttr.length === 0) {\r\n        return '*';\r\n    }\r\n    return selectAttr;\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVtcGxhdGVfcHJlcGFyc2VyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYW5ndWxhcjIvc3JjL2NvbXBpbGVyL3RlbXBsYXRlX3ByZXBhcnNlci50cyJdLCJuYW1lcyI6WyJwcmVwYXJzZUVsZW1lbnQiLCJQcmVwYXJzZWRFbGVtZW50VHlwZSIsIlByZXBhcnNlZEVsZW1lbnQiLCJQcmVwYXJzZWRFbGVtZW50LmNvbnN0cnVjdG9yIiwibm9ybWFsaXplTmdDb250ZW50U2VsZWN0Il0sIm1hcHBpbmdzIjoiQUFDQSxxQkFBaUMsMEJBQTBCLENBQUMsQ0FBQTtBQUM1RCwwQkFBMEIsYUFBYSxDQUFDLENBQUE7QUFFeEMsSUFBTSxzQkFBc0IsR0FBRyxRQUFRLENBQUM7QUFDeEMsSUFBTSxrQkFBa0IsR0FBRyxZQUFZLENBQUM7QUFDeEMsSUFBTSxZQUFZLEdBQUcsTUFBTSxDQUFDO0FBQzVCLElBQU0sbUJBQW1CLEdBQUcsS0FBSyxDQUFDO0FBQ2xDLElBQU0sb0JBQW9CLEdBQUcsTUFBTSxDQUFDO0FBQ3BDLElBQU0sb0JBQW9CLEdBQUcsWUFBWSxDQUFDO0FBQzFDLElBQU0sYUFBYSxHQUFHLE9BQU8sQ0FBQztBQUM5QixJQUFNLGNBQWMsR0FBRyxRQUFRLENBQUM7QUFDaEMsSUFBTSxvQkFBb0IsR0FBRyxlQUFlLENBQUM7QUFFN0MseUJBQWdDLEdBQW1CO0lBQ2pEQSxJQUFJQSxVQUFVQSxHQUFHQSxJQUFJQSxDQUFDQTtJQUN0QkEsSUFBSUEsUUFBUUEsR0FBR0EsSUFBSUEsQ0FBQ0E7SUFDcEJBLElBQUlBLE9BQU9BLEdBQUdBLElBQUlBLENBQUNBO0lBQ25CQSxJQUFJQSxXQUFXQSxHQUFHQSxLQUFLQSxDQUFDQTtJQUN4QkEsR0FBR0EsQ0FBQ0EsS0FBS0EsQ0FBQ0EsT0FBT0EsQ0FBQ0EsVUFBQUEsSUFBSUE7UUFDcEJBLElBQUlBLFVBQVVBLEdBQUdBLElBQUlBLENBQUNBLElBQUlBLENBQUNBLFdBQVdBLEVBQUVBLENBQUNBO1FBQ3pD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QkFBQ0E7QUFBREEsQ0FBQ0EsQUFIRCxJQUdDO0FBSFksd0JBQWdCLG1CQUc1QixDQUFBO0FBR0Qsa0NBQWtDLFVBQWtCO0lBQ2xERSxFQUFFQSxDQUFDQSxDQUFDQSxjQUFPQSxDQUFDQSxVQUFVQSxDQUFDQSxJQUFJQSxVQUFVQSxDQUFDQSxNQUFNQSxLQUFLQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQTtRQUNuREEsTUFBTUEsQ0FBQ0EsR0FBR0EsQ0FBQ0E7SUFDYkEsQ0FBQ0E7SUFDREEsTUFBTUEsQ0FBQ0EsVUFBVUEsQ0FBQ0E7QUFDcEJBLENBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtIdG1sRWxlbWVudEFzdH0gZnJvbSAnLi9odG1sX2FzdCc7XG5pbXBvcnQge2lzQmxhbmssIGlzUHJlc2VudH0gZnJvbSAnYW5ndWxhcjIvc3JjL2ZhY2FkZS9sYW5nJztcbmltcG9ydCB7c3BsaXROc05hbWV9IGZyb20gJy4vaHRtbF90YWdzJztcblxuY29uc3QgTkdfQ09OVEVOVF9TRUxFQ1RfQVRUUiA9ICdzZWxlY3QnO1xuY29uc3QgTkdfQ09OVEVOVF9FTEVNRU5UID0gJ25nLWNvbnRlbnQnO1xuY29uc3QgTElOS19FTEVNRU5UID0gJ2xpbmsnO1xuY29uc3QgTElOS19TVFlMRV9SRUxfQVRUUiA9ICdyZWwnO1xuY29uc3QgTElOS19TVFlMRV9IUkVGX0FUVFIgPSAnaHJlZic7XG5jb25zdCBMSU5LX1NUWUxFX1JFTF9WQUxVRSA9ICdzdHlsZXNoZWV0JztcbmNvbnN0IFNUWUxFX0VMRU1FTlQgPSAnc3R5bGUnO1xuY29uc3QgU0NSSVBUX0VMRU1FTlQgPSAnc2NyaXB0JztcbmNvbnN0IE5HX05PTl9CSU5EQUJMRV9BVFRSID0gJ25nTm9uQmluZGFibGUnO1xuXG5leHBvcnQgZnVuY3Rpb24gcHJlcGFyc2VFbGVtZW50KGFzdDogSHRtbEVsZW1lbnRBc3QpOiBQcmVwYXJzZWRFbGVtZW50IHtcbiAgdmFyIHNlbGVjdEF0dHIgPSBudWxsO1xuICB2YXIgaHJlZkF0dHIgPSBudWxsO1xuICB2YXIgcmVsQXR0ciA9IG51bGw7XG4gIHZhciBub25CaW5kYWJsZSA9IGZhbHNlO1xuICBhc3QuYXR0cnMuZm9yRWFjaChhdHRyID0+IHtcbiAgICBsZXQgbGNBdHRyTmFtZSA9IGF0dHIubmFtZS50b0xvd2VyQ2FzZSgpO1xuICAgIGlmIChsY0F0dHJOYW1lID09IE5HX0NPTlRFTlRfU0VMRUNUX0FUVFIpIHtcbiAgICAgIHNlbGVjdEF0dHIgPSBhdHRyLnZhbHVlO1xuICAgIH0gZWxzZSBpZiAobGNBdHRyTmFtZSA9PSBMSU5LX1NUWUxFX0hSRUZfQVRUUikge1xuICAgICAgaHJlZkF0dHIgPSBhdHRyLnZhbHVlO1xuICAgIH0gZWxzZSBpZiAobGNBdHRyTmFtZSA9PSBMSU5LX1NUWUxFX1JFTF9BVFRSKSB7XG4gICAgICByZWxBdHRyID0gYXR0ci52YWx1ZTtcbiAgICB9IGVsc2UgaWYgKGF0dHIubmFtZSA9PSBOR19OT05fQklOREFCTEVfQVRUUikge1xuICAgICAgbm9uQmluZGFibGUgPSB0cnVlO1xuICAgIH1cbiAgfSk7XG4gIHNlbGVjdEF0dHIgPSBub3JtYWxpemVOZ0NvbnRlbnRTZWxlY3Qoc2VsZWN0QXR0cik7XG4gIHZhciBub2RlTmFtZSA9IGFzdC5uYW1lLnRvTG93ZXJDYXNlKCk7XG4gIHZhciB0eXBlID0gUHJlcGFyc2VkRWxlbWVudFR5cGUuT1RIRVI7XG4gIGlmIChzcGxpdE5zTmFtZShub2RlTmFtZSlbMV0gPT0gTkdfQ09OVEVOVF9FTEVNRU5UKSB7XG4gICAgdHlwZSA9IFByZXBhcnNlZEVsZW1lbnRUeXBlLk5HX0NPTlRFTlQ7XG4gIH0gZWxzZSBpZiAobm9kZU5hbWUgPT0gU1RZTEVfRUxFTUVOVCkge1xuICAgIHR5cGUgPSBQcmVwYXJzZWRFbGVtZW50VHlwZS5TVFlMRTtcbiAgfSBlbHNlIGlmIChub2RlTmFtZSA9PSBTQ1JJUFRfRUxFTUVOVCkge1xuICAgIHR5cGUgPSBQcmVwYXJzZWRFbGVtZW50VHlwZS5TQ1JJUFQ7XG4gIH0gZWxzZSBpZiAobm9kZU5hbWUgPT0gTElOS19FTEVNRU5UICYmIHJlbEF0dHIgPT0gTElOS19TVFlMRV9SRUxfVkFMVUUpIHtcbiAgICB0eXBlID0gUHJlcGFyc2VkRWxlbWVudFR5cGUuU1RZTEVTSEVFVDtcbiAgfVxuICByZXR1cm4gbmV3IFByZXBhcnNlZEVsZW1lbnQodHlwZSwgc2VsZWN0QXR0ciwgaHJlZkF0dHIsIG5vbkJpbmRhYmxlKTtcbn1cblxuZXhwb3J0IGVudW0gUHJlcGFyc2VkRWxlbWVudFR5cGUge1xuICBOR19DT05URU5ULFxuICBTVFlMRSxcbiAgU1RZTEVTSEVFVCxcbiAgU0NSSVBULFxuICBPVEhFUlxufVxuXG5leHBvcnQgY2xhc3MgUHJlcGFyc2VkRWxlbWVudCB7XG4gIGNvbnN0cnVjdG9yKHB1YmxpYyB0eXBlOiBQcmVwYXJzZWRFbGVtZW50VHlwZSwgcHVibGljIHNlbGVjdEF0dHI6IHN0cmluZywgcHVibGljIGhyZWZBdHRyOiBzdHJpbmcsXG4gICAgICAgICAgICAgIHB1YmxpYyBub25CaW5kYWJsZTogYm9vbGVhbikge31cbn1cblxuXG5mdW5jdGlvbiBub3JtYWxpemVOZ0NvbnRlbnRTZWxlY3Qoc2VsZWN0QXR0cjogc3RyaW5nKTogc3RyaW5nIHtcbiAgaWYgKGlzQmxhbmsoc2VsZWN0QXR0cikgfHwgc2VsZWN0QXR0ci5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gJyonO1xuICB9XG4gIHJldHVybiBzZWxlY3RBdHRyO1xufVxuIl19\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/compiler/template_preparser.js\n ** module id = 146\n ** module chunks = 1\n **/","'use strict';var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar lang_1 = require('angular2/src/facade/lang');\r\nvar collection_1 = require('angular2/src/facade/collection');\r\nvar template_ast_1 = require('./template_ast');\r\nvar source_module_1 = require('./source_module');\r\nvar view_1 = require('angular2/src/core/linker/view');\r\nvar view_type_1 = require('angular2/src/core/linker/view_type');\r\nvar element_1 = require('angular2/src/core/linker/element');\r\nvar view_2 = require('angular2/src/core/metadata/view');\r\nvar util_1 = require('./util');\r\nvar di_1 = require('angular2/src/core/di');\r\nvar proto_view_compiler_1 = require('./proto_view_compiler');\r\nexports.VIEW_JIT_IMPORTS = lang_1.CONST_EXPR({\r\n    'AppView': view_1.AppView,\r\n    'AppElement': element_1.AppElement,\r\n    'flattenNestedViewRenderNodes': view_1.flattenNestedViewRenderNodes,\r\n    'checkSlotCount': view_1.checkSlotCount\r\n});\r\nvar ViewCompiler = (function () {\r\n    function ViewCompiler() {\r\n    }\r\n    ViewCompiler.prototype.compileComponentRuntime = function (component, template, styles, protoViews, changeDetectorFactories, componentViewFactory) {\r\n        var viewFactory = new RuntimeViewFactory(component, styles, protoViews, changeDetectorFactories, componentViewFactory);\r\n        return viewFactory.createViewFactory(template, 0, []);\r\n    };\r\n    ViewCompiler.prototype.compileComponentCodeGen = function (component, template, styles, protoViews, changeDetectorFactoryExpressions, componentViewFactory) {\r\n        var viewFactory = new CodeGenViewFactory(component, styles, protoViews, changeDetectorFactoryExpressions, componentViewFactory);\r\n        var targetStatements = [];\r\n        var viewFactoryExpression = viewFactory.createViewFactory(template, 0, targetStatements);\r\n        return new source_module_1.SourceExpression(targetStatements.map(function (stmt) { return stmt.statement; }), viewFactoryExpression.expression);\r\n    };\r\n    ViewCompiler = __decorate([\r\n        di_1.Injectable(), \r\n        __metadata('design:paramtypes', [])\r\n    ], ViewCompiler);\r\n    return ViewCompiler;\r\n})();\r\nexports.ViewCompiler = ViewCompiler;\r\nvar CodeGenViewFactory = (function () {\r\n    function CodeGenViewFactory(component, styles, protoViews, changeDetectorExpressions, componentViewFactory) {\r\n        this.component = component;\r\n        this.styles = styles;\r\n        this.protoViews = protoViews;\r\n        this.changeDetectorExpressions = changeDetectorExpressions;\r\n        this.componentViewFactory = componentViewFactory;\r\n        this._nextVarId = 0;\r\n    }\r\n    CodeGenViewFactory.prototype._nextVar = function (prefix) {\r\n        return \"\" + prefix + this._nextVarId++ + \"_\" + this.component.type.name;\r\n    };\r\n    CodeGenViewFactory.prototype._nextRenderVar = function () { return this._nextVar('render'); };\r\n    CodeGenViewFactory.prototype._nextAppVar = function () { return this._nextVar('app'); };\r\n    CodeGenViewFactory.prototype._nextDisposableVar = function () {\r\n        return \"disposable\" + this._nextVarId++ + \"_\" + this.component.type.name;\r\n    };\r\n    CodeGenViewFactory.prototype.createText = function (renderer, parent, text, targetStatements) {\r\n        var varName = this._nextRenderVar();\r\n        var statement = \"var \" + varName + \" = \" + renderer.expression + \".createText(\" + (lang_1.isPresent(parent) ? parent.expression : null) + \", \" + util_1.escapeSingleQuoteString(text) + \");\";\r\n        targetStatements.push(new util_1.Statement(statement));\r\n        return new util_1.Expression(varName);\r\n    };\r\n    CodeGenViewFactory.prototype.createElement = function (renderer, parentRenderNode, name, rootSelector, targetStatements) {\r\n        var varName = this._nextRenderVar();\r\n        var valueExpr;\r\n        if (lang_1.isPresent(rootSelector)) {\r\n            valueExpr = rootSelector.expression + \" == null ?\\n        \" + renderer.expression + \".createElement(\" + (lang_1.isPresent(parentRenderNode) ? parentRenderNode.expression : null) + \", \" + util_1.escapeSingleQuoteString(name) + \") :\\n        \" + renderer.expression + \".selectRootElement(\" + rootSelector.expression + \");\";\r\n        }\r\n        else {\r\n            valueExpr =\r\n                renderer.expression + \".createElement(\" + (lang_1.isPresent(parentRenderNode) ? parentRenderNode.expression : null) + \", \" + util_1.escapeSingleQuoteString(name) + \")\";\r\n        }\r\n        var statement = \"var \" + varName + \" = \" + valueExpr + \";\";\r\n        targetStatements.push(new util_1.Statement(statement));\r\n        return new util_1.Expression(varName);\r\n    };\r\n    CodeGenViewFactory.prototype.createTemplateAnchor = function (renderer, parentRenderNode, targetStatements) {\r\n        var varName = this._nextRenderVar();\r\n        var valueExpr = renderer.expression + \".createTemplateAnchor(\" + (lang_1.isPresent(parentRenderNode) ? parentRenderNode.expression : null) + \");\";\r\n        targetStatements.push(new util_1.Statement(\"var \" + varName + \" = \" + valueExpr));\r\n        return new util_1.Expression(varName);\r\n    };\r\n    CodeGenViewFactory.prototype.createGlobalEventListener = function (renderer, appView, boundElementIndex, eventAst, targetStatements) {\r\n        var disposableVar = this._nextDisposableVar();\r\n        var eventHandlerExpr = codeGenEventHandler(appView, boundElementIndex, eventAst.fullName);\r\n        targetStatements.push(new util_1.Statement(\"var \" + disposableVar + \" = \" + renderer.expression + \".listenGlobal(\" + util_1.escapeValue(eventAst.target) + \", \" + util_1.escapeValue(eventAst.name) + \", \" + eventHandlerExpr + \");\"));\r\n        return new util_1.Expression(disposableVar);\r\n    };\r\n    CodeGenViewFactory.prototype.createElementEventListener = function (renderer, appView, boundElementIndex, renderNode, eventAst, targetStatements) {\r\n        var disposableVar = this._nextDisposableVar();\r\n        var eventHandlerExpr = codeGenEventHandler(appView, boundElementIndex, eventAst.fullName);\r\n        targetStatements.push(new util_1.Statement(\"var \" + disposableVar + \" = \" + renderer.expression + \".listen(\" + renderNode.expression + \", \" + util_1.escapeValue(eventAst.name) + \", \" + eventHandlerExpr + \");\"));\r\n        return new util_1.Expression(disposableVar);\r\n    };\r\n    CodeGenViewFactory.prototype.setElementAttribute = function (renderer, renderNode, attrName, attrValue, targetStatements) {\r\n        targetStatements.push(new util_1.Statement(renderer.expression + \".setElementAttribute(\" + renderNode.expression + \", \" + util_1.escapeSingleQuoteString(attrName) + \", \" + util_1.escapeSingleQuoteString(attrValue) + \");\"));\r\n    };\r\n    CodeGenViewFactory.prototype.createAppElement = function (appProtoEl, appView, renderNode, parentAppEl, embeddedViewFactory, targetStatements) {\r\n        var appVar = this._nextAppVar();\r\n        var varValue = \"new \" + proto_view_compiler_1.APP_EL_MODULE_REF + \"AppElement(\" + appProtoEl.expression + \", \" + appView.expression + \",\\n      \" + (lang_1.isPresent(parentAppEl) ? parentAppEl.expression : null) + \", \" + renderNode.expression + \", \" + (lang_1.isPresent(embeddedViewFactory) ? embeddedViewFactory.expression : null) + \")\";\r\n        targetStatements.push(new util_1.Statement(\"var \" + appVar + \" = \" + varValue + \";\"));\r\n        return new util_1.Expression(appVar);\r\n    };\r\n    CodeGenViewFactory.prototype.createAndSetComponentView = function (renderer, viewManager, view, appEl, component, contentNodesByNgContentIndex, targetStatements) {\r\n        var codeGenContentNodes;\r\n        if (this.component.type.isHost) {\r\n            codeGenContentNodes = view.expression + \".projectableNodes\";\r\n        }\r\n        else {\r\n            codeGenContentNodes =\r\n                \"[\" + contentNodesByNgContentIndex.map(function (nodes) { return util_1.codeGenFlatArray(nodes); }).join(',') + \"]\";\r\n        }\r\n        targetStatements.push(new util_1.Statement(this.componentViewFactory(component) + \"(\" + renderer.expression + \", \" + viewManager.expression + \", \" + appEl.expression + \", \" + codeGenContentNodes + \", null, null, null);\"));\r\n    };\r\n    CodeGenViewFactory.prototype.getProjectedNodes = function (projectableNodes, ngContentIndex) {\r\n        return new util_1.Expression(projectableNodes.expression + \"[\" + ngContentIndex + \"]\", true);\r\n    };\r\n    CodeGenViewFactory.prototype.appendProjectedNodes = function (renderer, parent, nodes, targetStatements) {\r\n        targetStatements.push(new util_1.Statement(renderer.expression + \".projectNodes(\" + parent.expression + \", \" + proto_view_compiler_1.APP_VIEW_MODULE_REF + \"flattenNestedViewRenderNodes(\" + nodes.expression + \"));\"));\r\n    };\r\n    CodeGenViewFactory.prototype.createViewFactory = function (asts, embeddedTemplateIndex, targetStatements) {\r\n        var compileProtoView = this.protoViews[embeddedTemplateIndex];\r\n        var isHostView = this.component.type.isHost;\r\n        var isComponentView = embeddedTemplateIndex === 0 && !isHostView;\r\n        var visitor = new ViewBuilderVisitor(new util_1.Expression('renderer'), new util_1.Expression('viewManager'), new util_1.Expression('projectableNodes'), isHostView ? new util_1.Expression('rootSelector') : null, new util_1.Expression('view'), compileProtoView, targetStatements, this);\r\n        template_ast_1.templateVisitAll(visitor, asts, new ParentElement(isComponentView ? new util_1.Expression('parentRenderNode') : null, null, null));\r\n        var appProtoView = compileProtoView.protoView.expression;\r\n        var viewFactoryName = codeGenViewFactoryName(this.component, embeddedTemplateIndex);\r\n        var changeDetectorFactory = this.changeDetectorExpressions.expressions[embeddedTemplateIndex];\r\n        var factoryArgs = [\r\n            'parentRenderer',\r\n            'viewManager',\r\n            'containerEl',\r\n            'projectableNodes',\r\n            'rootSelector',\r\n            'dynamicallyCreatedProviders',\r\n            'rootInjector'\r\n        ];\r\n        var initRendererStmts = [];\r\n        var rendererExpr = \"parentRenderer\";\r\n        if (embeddedTemplateIndex === 0) {\r\n            var renderCompTypeVar = this._nextVar('renderType');\r\n            targetStatements.push(new util_1.Statement(\"var \" + renderCompTypeVar + \" = null;\"));\r\n            var stylesVar = this._nextVar('styles');\r\n            targetStatements.push(new util_1.Statement(util_1.CONST_VAR + \" \" + stylesVar + \" = \" + this.styles.expression + \";\"));\r\n            var encapsulation = this.component.template.encapsulation;\r\n            initRendererStmts.push(\"if (\" + renderCompTypeVar + \" == null) {\\n        \" + renderCompTypeVar + \" = viewManager.createRenderComponentType(\" + codeGenViewEncapsulation(encapsulation) + \", \" + stylesVar + \");\\n      }\");\r\n            rendererExpr = \"parentRenderer.renderComponent(\" + renderCompTypeVar + \")\";\r\n        }\r\n        var statement = \"\\n\" + util_1.codeGenFnHeader(factoryArgs, viewFactoryName) + \"{\\n  \" + initRendererStmts.join('\\n') + \"\\n  var renderer = \" + rendererExpr + \";\\n  var view = new \" + proto_view_compiler_1.APP_VIEW_MODULE_REF + \"AppView(\\n    \" + appProtoView + \", renderer, viewManager,\\n    projectableNodes,\\n    containerEl,\\n    dynamicallyCreatedProviders, rootInjector,\\n    \" + changeDetectorFactory + \"()\\n  );\\n  \" + proto_view_compiler_1.APP_VIEW_MODULE_REF + \"checkSlotCount(\" + util_1.escapeValue(this.component.type.name) + \", \" + this.component.template.ngContentSelectors.length + \", projectableNodes);\\n  \" + (isComponentView ? 'var parentRenderNode = renderer.createViewRoot(view.containerAppElement.nativeElement);' : '') + \"\\n  \" + visitor.renderStmts.map(function (stmt) { return stmt.statement; }).join('\\n') + \"\\n  \" + visitor.appStmts.map(function (stmt) { return stmt.statement; }).join('\\n') + \"\\n\\n  view.init(\" + util_1.codeGenFlatArray(visitor.rootNodesOrAppElements) + \", \" + util_1.codeGenArray(visitor.renderNodes) + \", \" + util_1.codeGenArray(visitor.appDisposables) + \",\\n            \" + util_1.codeGenArray(visitor.appElements) + \");\\n  return view;\\n}\";\r\n        targetStatements.push(new util_1.Statement(statement));\r\n        return new util_1.Expression(viewFactoryName);\r\n    };\r\n    return CodeGenViewFactory;\r\n})();\r\nvar RuntimeViewFactory = (function () {\r\n    function RuntimeViewFactory(component, styles, protoViews, changeDetectorFactories, componentViewFactory) {\r\n        this.component = component;\r\n        this.styles = styles;\r\n        this.protoViews = protoViews;\r\n        this.changeDetectorFactories = changeDetectorFactories;\r\n        this.componentViewFactory = componentViewFactory;\r\n    }\r\n    RuntimeViewFactory.prototype.createText = function (renderer, parent, text, targetStatements) {\r\n        return renderer.createText(parent, text);\r\n    };\r\n    RuntimeViewFactory.prototype.createElement = function (renderer, parent, name, rootSelector, targetStatements) {\r\n        var el;\r\n        if (lang_1.isPresent(rootSelector)) {\r\n            el = renderer.selectRootElement(rootSelector);\r\n        }\r\n        else {\r\n            el = renderer.createElement(parent, name);\r\n        }\r\n        return el;\r\n    };\r\n    RuntimeViewFactory.prototype.createTemplateAnchor = function (renderer, parent, targetStatements) {\r\n        return renderer.createTemplateAnchor(parent);\r\n    };\r\n    RuntimeViewFactory.prototype.createGlobalEventListener = function (renderer, appView, boundElementIndex, eventAst, targetStatements) {\r\n        return renderer.listenGlobal(eventAst.target, eventAst.name, function (event) { return appView.triggerEventHandlers(eventAst.fullName, event, boundElementIndex); });\r\n    };\r\n    RuntimeViewFactory.prototype.createElementEventListener = function (renderer, appView, boundElementIndex, renderNode, eventAst, targetStatements) {\r\n        return renderer.listen(renderNode, eventAst.name, function (event) { return appView.triggerEventHandlers(eventAst.fullName, event, boundElementIndex); });\r\n    };\r\n    RuntimeViewFactory.prototype.setElementAttribute = function (renderer, renderNode, attrName, attrValue, targetStatements) {\r\n        renderer.setElementAttribute(renderNode, attrName, attrValue);\r\n    };\r\n    RuntimeViewFactory.prototype.createAppElement = function (appProtoEl, appView, renderNode, parentAppEl, embeddedViewFactory, targetStatements) {\r\n        return new element_1.AppElement(appProtoEl, appView, parentAppEl, renderNode, embeddedViewFactory);\r\n    };\r\n    RuntimeViewFactory.prototype.createAndSetComponentView = function (renderer, viewManager, appView, appEl, component, contentNodesByNgContentIndex, targetStatements) {\r\n        var flattenedContentNodes;\r\n        if (this.component.type.isHost) {\r\n            flattenedContentNodes = appView.projectableNodes;\r\n        }\r\n        else {\r\n            flattenedContentNodes = collection_1.ListWrapper.createFixedSize(contentNodesByNgContentIndex.length);\r\n            for (var i = 0; i < contentNodesByNgContentIndex.length; i++) {\r\n                flattenedContentNodes[i] = util_1.flattenArray(contentNodesByNgContentIndex[i], []);\r\n            }\r\n        }\r\n        this.componentViewFactory(component)(renderer, viewManager, appEl, flattenedContentNodes);\r\n    };\r\n    RuntimeViewFactory.prototype.getProjectedNodes = function (projectableNodes, ngContentIndex) {\r\n        return projectableNodes[ngContentIndex];\r\n    };\r\n    RuntimeViewFactory.prototype.appendProjectedNodes = function (renderer, parent, nodes, targetStatements) {\r\n        renderer.projectNodes(parent, view_1.flattenNestedViewRenderNodes(nodes));\r\n    };\r\n    RuntimeViewFactory.prototype.createViewFactory = function (asts, embeddedTemplateIndex, targetStatements) {\r\n        var _this = this;\r\n        var compileProtoView = this.protoViews[embeddedTemplateIndex];\r\n        var isComponentView = compileProtoView.protoView.type === view_type_1.ViewType.COMPONENT;\r\n        var renderComponentType = null;\r\n        return function (parentRenderer, viewManager, containerEl, projectableNodes, rootSelector, dynamicallyCreatedProviders, rootInjector) {\r\n            if (rootSelector === void 0) { rootSelector = null; }\r\n            if (dynamicallyCreatedProviders === void 0) { dynamicallyCreatedProviders = null; }\r\n            if (rootInjector === void 0) { rootInjector = null; }\r\n            view_1.checkSlotCount(_this.component.type.name, _this.component.template.ngContentSelectors.length, projectableNodes);\r\n            var renderer;\r\n            if (embeddedTemplateIndex === 0) {\r\n                if (lang_1.isBlank(renderComponentType)) {\r\n                    renderComponentType = viewManager.createRenderComponentType(_this.component.template.encapsulation, _this.styles);\r\n                }\r\n                renderer = parentRenderer.renderComponent(renderComponentType);\r\n            }\r\n            else {\r\n                renderer = parentRenderer;\r\n            }\r\n            var changeDetector = _this.changeDetectorFactories[embeddedTemplateIndex]();\r\n            var view = new view_1.AppView(compileProtoView.protoView, renderer, viewManager, projectableNodes, containerEl, dynamicallyCreatedProviders, rootInjector, changeDetector);\r\n            var visitor = new ViewBuilderVisitor(renderer, viewManager, projectableNodes, rootSelector, view, compileProtoView, [], _this);\r\n            var parentRenderNode = isComponentView ? renderer.createViewRoot(containerEl.nativeElement) : null;\r\n            template_ast_1.templateVisitAll(visitor, asts, new ParentElement(parentRenderNode, null, null));\r\n            view.init(util_1.flattenArray(visitor.rootNodesOrAppElements, []), visitor.renderNodes, visitor.appDisposables, visitor.appElements);\r\n            return view;\r\n        };\r\n    };\r\n    return RuntimeViewFactory;\r\n})();\r\nvar ParentElement = (function () {\r\n    function ParentElement(renderNode, appEl, component) {\r\n        this.renderNode = renderNode;\r\n        this.appEl = appEl;\r\n        this.component = component;\r\n        if (lang_1.isPresent(component)) {\r\n            this.contentNodesByNgContentIndex =\r\n                collection_1.ListWrapper.createFixedSize(component.template.ngContentSelectors.length);\r\n            for (var i = 0; i < this.contentNodesByNgContentIndex.length; i++) {\r\n                this.contentNodesByNgContentIndex[i] = [];\r\n            }\r\n        }\r\n        else {\r\n            this.contentNodesByNgContentIndex = null;\r\n        }\r\n    }\r\n    ParentElement.prototype.addContentNode = function (ngContentIndex, nodeExpr) {\r\n        this.contentNodesByNgContentIndex[ngContentIndex].push(nodeExpr);\r\n    };\r\n    return ParentElement;\r\n})();\r\nvar ViewBuilderVisitor = (function () {\r\n    function ViewBuilderVisitor(renderer, viewManager, projectableNodes, rootSelector, view, protoView, targetStatements, factory) {\r\n        this.renderer = renderer;\r\n        this.viewManager = viewManager;\r\n        this.projectableNodes = projectableNodes;\r\n        this.rootSelector = rootSelector;\r\n        this.view = view;\r\n        this.protoView = protoView;\r\n        this.targetStatements = targetStatements;\r\n        this.factory = factory;\r\n        this.renderStmts = [];\r\n        this.renderNodes = [];\r\n        this.appStmts = [];\r\n        this.appElements = [];\r\n        this.appDisposables = [];\r\n        this.rootNodesOrAppElements = [];\r\n        this.elementCount = 0;\r\n    }\r\n    ViewBuilderVisitor.prototype._addRenderNode = function (renderNode, appEl, ngContentIndex, parent) {\r\n        this.renderNodes.push(renderNode);\r\n        if (lang_1.isPresent(parent.component)) {\r\n            if (lang_1.isPresent(ngContentIndex)) {\r\n                parent.addContentNode(ngContentIndex, lang_1.isPresent(appEl) ? appEl : renderNode);\r\n            }\r\n        }\r\n        else if (lang_1.isBlank(parent.renderNode)) {\r\n            this.rootNodesOrAppElements.push(lang_1.isPresent(appEl) ? appEl : renderNode);\r\n        }\r\n    };\r\n    ViewBuilderVisitor.prototype._getParentRenderNode = function (ngContentIndex, parent) {\r\n        return lang_1.isPresent(parent.component) &&\r\n            parent.component.template.encapsulation !== view_2.ViewEncapsulation.Native ?\r\n            null :\r\n            parent.renderNode;\r\n    };\r\n    ViewBuilderVisitor.prototype.visitBoundText = function (ast, parent) {\r\n        return this._visitText('', ast.ngContentIndex, parent);\r\n    };\r\n    ViewBuilderVisitor.prototype.visitText = function (ast, parent) {\r\n        return this._visitText(ast.value, ast.ngContentIndex, parent);\r\n    };\r\n    ViewBuilderVisitor.prototype._visitText = function (value, ngContentIndex, parent) {\r\n        var renderNode = this.factory.createText(this.renderer, this._getParentRenderNode(ngContentIndex, parent), value, this.renderStmts);\r\n        this._addRenderNode(renderNode, null, ngContentIndex, parent);\r\n        return null;\r\n    };\r\n    ViewBuilderVisitor.prototype.visitNgContent = function (ast, parent) {\r\n        var nodesExpression = this.factory.getProjectedNodes(this.projectableNodes, ast.index);\r\n        if (lang_1.isPresent(parent.component)) {\r\n            if (lang_1.isPresent(ast.ngContentIndex)) {\r\n                parent.addContentNode(ast.ngContentIndex, nodesExpression);\r\n            }\r\n        }\r\n        else {\r\n            if (lang_1.isPresent(parent.renderNode)) {\r\n                this.factory.appendProjectedNodes(this.renderer, parent.renderNode, nodesExpression, this.renderStmts);\r\n            }\r\n            else {\r\n                this.rootNodesOrAppElements.push(nodesExpression);\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    ViewBuilderVisitor.prototype.visitElement = function (ast, parent) {\r\n        var _this = this;\r\n        var renderNode = this.factory.createElement(this.renderer, this._getParentRenderNode(ast.ngContentIndex, parent), ast.name, this.rootSelector, this.renderStmts);\r\n        var component = ast.getComponent();\r\n        var elementIndex = this.elementCount++;\r\n        var protoEl = this.protoView.protoElements[elementIndex];\r\n        protoEl.renderEvents.forEach(function (eventAst) {\r\n            var disposable;\r\n            if (lang_1.isPresent(eventAst.target)) {\r\n                disposable = _this.factory.createGlobalEventListener(_this.renderer, _this.view, protoEl.boundElementIndex, eventAst, _this.renderStmts);\r\n            }\r\n            else {\r\n                disposable = _this.factory.createElementEventListener(_this.renderer, _this.view, protoEl.boundElementIndex, renderNode, eventAst, _this.renderStmts);\r\n            }\r\n            _this.appDisposables.push(disposable);\r\n        });\r\n        for (var i = 0; i < protoEl.attrNameAndValues.length; i++) {\r\n            var attrName = protoEl.attrNameAndValues[i][0];\r\n            var attrValue = protoEl.attrNameAndValues[i][1];\r\n            this.factory.setElementAttribute(this.renderer, renderNode, attrName, attrValue, this.renderStmts);\r\n        }\r\n        var appEl = null;\r\n        if (lang_1.isPresent(protoEl.appProtoEl)) {\r\n            appEl = this.factory.createAppElement(protoEl.appProtoEl, this.view, renderNode, parent.appEl, null, this.appStmts);\r\n            this.appElements.push(appEl);\r\n        }\r\n        this._addRenderNode(renderNode, appEl, ast.ngContentIndex, parent);\r\n        var newParent = new ParentElement(renderNode, lang_1.isPresent(appEl) ? appEl : parent.appEl, component);\r\n        template_ast_1.templateVisitAll(this, ast.children, newParent);\r\n        if (lang_1.isPresent(appEl) && lang_1.isPresent(component)) {\r\n            this.factory.createAndSetComponentView(this.renderer, this.viewManager, this.view, appEl, component, newParent.contentNodesByNgContentIndex, this.appStmts);\r\n        }\r\n        return null;\r\n    };\r\n    ViewBuilderVisitor.prototype.visitEmbeddedTemplate = function (ast, parent) {\r\n        var renderNode = this.factory.createTemplateAnchor(this.renderer, this._getParentRenderNode(ast.ngContentIndex, parent), this.renderStmts);\r\n        var elementIndex = this.elementCount++;\r\n        var protoEl = this.protoView.protoElements[elementIndex];\r\n        var embeddedViewFactory = this.factory.createViewFactory(ast.children, protoEl.embeddedTemplateIndex, this.targetStatements);\r\n        var appEl = this.factory.createAppElement(protoEl.appProtoEl, this.view, renderNode, parent.appEl, embeddedViewFactory, this.appStmts);\r\n        this._addRenderNode(renderNode, appEl, ast.ngContentIndex, parent);\r\n        this.appElements.push(appEl);\r\n        return null;\r\n    };\r\n    ViewBuilderVisitor.prototype.visitVariable = function (ast, ctx) { return null; };\r\n    ViewBuilderVisitor.prototype.visitAttr = function (ast, ctx) { return null; };\r\n    ViewBuilderVisitor.prototype.visitDirective = function (ast, ctx) { return null; };\r\n    ViewBuilderVisitor.prototype.visitEvent = function (ast, ctx) { return null; };\r\n    ViewBuilderVisitor.prototype.visitDirectiveProperty = function (ast, context) { return null; };\r\n    ViewBuilderVisitor.prototype.visitElementProperty = function (ast, context) { return null; };\r\n    return ViewBuilderVisitor;\r\n})();\r\nfunction codeGenEventHandler(view, boundElementIndex, eventName) {\r\n    return util_1.codeGenValueFn(['event'], view.expression + \".triggerEventHandlers(\" + util_1.escapeValue(eventName) + \", event, \" + boundElementIndex + \")\");\r\n}\r\nfunction codeGenViewFactoryName(component, embeddedTemplateIndex) {\r\n    return \"viewFactory_\" + component.type.name + embeddedTemplateIndex;\r\n}\r\nfunction codeGenViewEncapsulation(value) {\r\n    if (lang_1.IS_DART) {\r\n        return \"\" + proto_view_compiler_1.METADATA_MODULE_REF + value;\r\n    }\r\n    else {\r\n        return \"\" + value;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/compiler/view_compiler.js\n ** module id = 147\n ** module chunks = 1\n **/","'use strict';var lang_1 = require('angular2/src/facade/lang');\r\nexports.Math = lang_1.global.Math;\r\nexports.NaN = typeof exports.NaN;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWF0aC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImFuZ3VsYXIyL3NyYy9mYWNhZGUvbWF0aC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxxQkFBcUIsMEJBQTBCLENBQUMsQ0FBQTtBQUVyQyxZQUFJLEdBQUcsYUFBTSxDQUFDLElBQUksQ0FBQztBQUNuQixXQUFHLEdBQUcsT0FBTyxXQUFHLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2dsb2JhbH0gZnJvbSAnYW5ndWxhcjIvc3JjL2ZhY2FkZS9sYW5nJztcblxuZXhwb3J0IHZhciBNYXRoID0gZ2xvYmFsLk1hdGg7XG5leHBvcnQgdmFyIE5hTiA9IHR5cGVvZiBOYU47XG4iXX0=\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/facade/math.js\n ** module id = 172\n ** module chunks = 1\n **/","'use strict';var __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar collection_1 = require('angular2/src/facade/collection');\r\nvar lang_1 = require('angular2/src/facade/lang');\r\nvar dom_adapter_1 = require('angular2/src/platform/dom/dom_adapter');\r\nvar generic_browser_adapter_1 = require('./generic_browser_adapter');\r\nvar _attrToPropMap = {\r\n    'class': 'className',\r\n    'innerHtml': 'innerHTML',\r\n    'readonly': 'readOnly',\r\n    'tabindex': 'tabIndex'\r\n};\r\nvar DOM_KEY_LOCATION_NUMPAD = 3;\r\n// Map to convert some key or keyIdentifier values to what will be returned by getEventKey\r\nvar _keyMap = {\r\n    // The following values are here for cross-browser compatibility and to match the W3C standard\r\n    // cf http://www.w3.org/TR/DOM-Level-3-Events-key/\r\n    '\\b': 'Backspace',\r\n    '\\t': 'Tab',\r\n    '\\x7F': 'Delete',\r\n    '\\x1B': 'Escape',\r\n    'Del': 'Delete',\r\n    'Esc': 'Escape',\r\n    'Left': 'ArrowLeft',\r\n    'Right': 'ArrowRight',\r\n    'Up': 'ArrowUp',\r\n    'Down': 'ArrowDown',\r\n    'Menu': 'ContextMenu',\r\n    'Scroll': 'ScrollLock',\r\n    'Win': 'OS'\r\n};\r\n// There is a bug in Chrome for numeric keypad keys:\r\n// https://code.google.com/p/chromium/issues/detail?id=155654\r\n// 1, 2, 3 ... are reported as A, B, C ...\r\nvar _chromeNumKeyPadMap = {\r\n    'A': '1',\r\n    'B': '2',\r\n    'C': '3',\r\n    'D': '4',\r\n    'E': '5',\r\n    'F': '6',\r\n    'G': '7',\r\n    'H': '8',\r\n    'I': '9',\r\n    'J': '*',\r\n    'K': '+',\r\n    'M': '-',\r\n    'N': '.',\r\n    'O': '/',\r\n    '\\x60': '0',\r\n    '\\x90': 'NumLock'\r\n};\r\n/**\r\n * A `DomAdapter` powered by full browser DOM APIs.\r\n */\r\n/* tslint:disable:requireParameterType */\r\nvar BrowserDomAdapter = (function (_super) {\r\n    __extends(BrowserDomAdapter, _super);\r\n    function BrowserDomAdapter() {\r\n        _super.apply(this, arguments);\r\n    }\r\n    BrowserDomAdapter.prototype.parse = function (templateHtml) { throw new Error(\"parse not implemented\"); };\r\n    BrowserDomAdapter.makeCurrent = function () { dom_adapter_1.setRootDomAdapter(new BrowserDomAdapter()); };\r\n    BrowserDomAdapter.prototype.hasProperty = function (element, name) { return name in element; };\r\n    BrowserDomAdapter.prototype.setProperty = function (el, name, value) { el[name] = value; };\r\n    BrowserDomAdapter.prototype.getProperty = function (el, name) { return el[name]; };\r\n    BrowserDomAdapter.prototype.invoke = function (el, methodName, args) {\r\n        el[methodName].apply(el, args);\r\n    };\r\n    // TODO(tbosch): move this into a separate environment class once we have it\r\n    BrowserDomAdapter.prototype.logError = function (error) {\r\n        if (window.console.error) {\r\n            window.console.error(error);\r\n        }\r\n        else {\r\n            window.console.log(error);\r\n        }\r\n    };\r\n    BrowserDomAdapter.prototype.log = function (error) { window.console.log(error); };\r\n    BrowserDomAdapter.prototype.logGroup = function (error) {\r\n        if (window.console.group) {\r\n            window.console.group(error);\r\n            this.logError(error);\r\n        }\r\n        else {\r\n            window.console.log(error);\r\n        }\r\n    };\r\n    BrowserDomAdapter.prototype.logGroupEnd = function () {\r\n        if (window.console.groupEnd) {\r\n            window.console.groupEnd();\r\n        }\r\n    };\r\n    Object.defineProperty(BrowserDomAdapter.prototype, \"attrToPropMap\", {\r\n        get: function () { return _attrToPropMap; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    BrowserDomAdapter.prototype.query = function (selector) { return document.querySelector(selector); };\r\n    BrowserDomAdapter.prototype.querySelector = function (el, selector) { return el.querySelector(selector); };\r\n    BrowserDomAdapter.prototype.querySelectorAll = function (el, selector) { return el.querySelectorAll(selector); };\r\n    BrowserDomAdapter.prototype.on = function (el, evt, listener) { el.addEventListener(evt, listener, false); };\r\n    BrowserDomAdapter.prototype.onAndCancel = function (el, evt, listener) {\r\n        el.addEventListener(evt, listener, false);\r\n        // Needed to follow Dart's subscription semantic, until fix of\r\n        // https://code.google.com/p/dart/issues/detail?id=17406\r\n        return function () { el.removeEventListener(evt, listener, false); };\r\n    };\r\n    BrowserDomAdapter.prototype.dispatchEvent = function (el, evt) { el.dispatchEvent(evt); };\r\n    BrowserDomAdapter.prototype.createMouseEvent = function (eventType) {\r\n        var evt = document.createEvent('MouseEvent');\r\n        evt.initEvent(eventType, true, true);\r\n        return evt;\r\n    };\r\n    BrowserDomAdapter.prototype.createEvent = function (eventType) {\r\n        var evt = document.createEvent('Event');\r\n        evt.initEvent(eventType, true, true);\r\n        return evt;\r\n    };\r\n    BrowserDomAdapter.prototype.preventDefault = function (evt) {\r\n        evt.preventDefault();\r\n        evt.returnValue = false;\r\n    };\r\n    BrowserDomAdapter.prototype.isPrevented = function (evt) {\r\n        return evt.defaultPrevented || lang_1.isPresent(evt.returnValue) && !evt.returnValue;\r\n    };\r\n    BrowserDomAdapter.prototype.getInnerHTML = function (el) { return el.innerHTML; };\r\n    BrowserDomAdapter.prototype.getOuterHTML = function (el) { return el.outerHTML; };\r\n    BrowserDomAdapter.prototype.nodeName = function (node) { return node.nodeName; };\r\n    BrowserDomAdapter.prototype.nodeValue = function (node) { return node.nodeValue; };\r\n    BrowserDomAdapter.prototype.type = function (node) { return node.type; };\r\n    BrowserDomAdapter.prototype.content = function (node) {\r\n        if (this.hasProperty(node, \"content\")) {\r\n            return node.content;\r\n        }\r\n        else {\r\n            return node;\r\n        }\r\n    };\r\n    BrowserDomAdapter.prototype.firstChild = function (el) { return el.firstChild; };\r\n    BrowserDomAdapter.prototype.nextSibling = function (el) { return el.nextSibling; };\r\n    BrowserDomAdapter.prototype.parentElement = function (el) { return el.parentNode; };\r\n    BrowserDomAdapter.prototype.childNodes = function (el) { return el.childNodes; };\r\n    BrowserDomAdapter.prototype.childNodesAsList = function (el) {\r\n        var childNodes = el.childNodes;\r\n        var res = collection_1.ListWrapper.createFixedSize(childNodes.length);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            res[i] = childNodes[i];\r\n        }\r\n        return res;\r\n    };\r\n    BrowserDomAdapter.prototype.clearNodes = function (el) {\r\n        while (el.firstChild) {\r\n            el.removeChild(el.firstChild);\r\n        }\r\n    };\r\n    BrowserDomAdapter.prototype.appendChild = function (el, node) { el.appendChild(node); };\r\n    BrowserDomAdapter.prototype.removeChild = function (el, node) { el.removeChild(node); };\r\n    BrowserDomAdapter.prototype.replaceChild = function (el, newChild, oldChild) { el.replaceChild(newChild, oldChild); };\r\n    BrowserDomAdapter.prototype.remove = function (node) {\r\n        if (node.parentNode) {\r\n            node.parentNode.removeChild(node);\r\n        }\r\n        return node;\r\n    };\r\n    BrowserDomAdapter.prototype.insertBefore = function (el, node) { el.parentNode.insertBefore(node, el); };\r\n    BrowserDomAdapter.prototype.insertAllBefore = function (el, nodes) { nodes.forEach(function (n) { return el.parentNode.insertBefore(n, el); }); };\r\n    BrowserDomAdapter.prototype.insertAfter = function (el, node) { el.parentNode.insertBefore(node, el.nextSibling); };\r\n    BrowserDomAdapter.prototype.setInnerHTML = function (el, value) { el.innerHTML = value; };\r\n    BrowserDomAdapter.prototype.getText = function (el) { return el.textContent; };\r\n    // TODO(vicb): removed Element type because it does not support StyleElement\r\n    BrowserDomAdapter.prototype.setText = function (el, value) { el.textContent = value; };\r\n    BrowserDomAdapter.prototype.getValue = function (el) { return el.value; };\r\n    BrowserDomAdapter.prototype.setValue = function (el, value) { el.value = value; };\r\n    BrowserDomAdapter.prototype.getChecked = function (el) { return el.checked; };\r\n    BrowserDomAdapter.prototype.setChecked = function (el, value) { el.checked = value; };\r\n    BrowserDomAdapter.prototype.createComment = function (text) { return document.createComment(text); };\r\n    BrowserDomAdapter.prototype.createTemplate = function (html) {\r\n        var t = document.createElement('template');\r\n        t.innerHTML = html;\r\n        return t;\r\n    };\r\n    BrowserDomAdapter.prototype.createElement = function (tagName, doc) {\r\n        if (doc === void 0) { doc = document; }\r\n        return doc.createElement(tagName);\r\n    };\r\n    BrowserDomAdapter.prototype.createElementNS = function (ns, tagName, doc) {\r\n        if (doc === void 0) { doc = document; }\r\n        return doc.createElementNS(ns, tagName);\r\n    };\r\n    BrowserDomAdapter.prototype.createTextNode = function (text, doc) {\r\n        if (doc === void 0) { doc = document; }\r\n        return doc.createTextNode(text);\r\n    };\r\n    BrowserDomAdapter.prototype.createScriptTag = function (attrName, attrValue, doc) {\r\n        if (doc === void 0) { doc = document; }\r\n        var el = doc.createElement('SCRIPT');\r\n        el.setAttribute(attrName, attrValue);\r\n        return el;\r\n    };\r\n    BrowserDomAdapter.prototype.createStyleElement = function (css, doc) {\r\n        if (doc === void 0) { doc = document; }\r\n        var style = doc.createElement('style');\r\n        this.appendChild(style, this.createTextNode(css));\r\n        return style;\r\n    };\r\n    BrowserDomAdapter.prototype.createShadowRoot = function (el) { return el.createShadowRoot(); };\r\n    BrowserDomAdapter.prototype.getShadowRoot = function (el) { return el.shadowRoot; };\r\n    BrowserDomAdapter.prototype.getHost = function (el) { return el.host; };\r\n    BrowserDomAdapter.prototype.clone = function (node) { return node.cloneNode(true); };\r\n    BrowserDomAdapter.prototype.getElementsByClassName = function (element, name) {\r\n        return element.getElementsByClassName(name);\r\n    };\r\n    BrowserDomAdapter.prototype.getElementsByTagName = function (element, name) {\r\n        return element.getElementsByTagName(name);\r\n    };\r\n    BrowserDomAdapter.prototype.classList = function (element) { return Array.prototype.slice.call(element.classList, 0); };\r\n    BrowserDomAdapter.prototype.addClass = function (element, className) { element.classList.add(className); };\r\n    BrowserDomAdapter.prototype.removeClass = function (element, className) { element.classList.remove(className); };\r\n    BrowserDomAdapter.prototype.hasClass = function (element, className) { return element.classList.contains(className); };\r\n    BrowserDomAdapter.prototype.setStyle = function (element, styleName, styleValue) {\r\n        element.style[styleName] = styleValue;\r\n    };\r\n    BrowserDomAdapter.prototype.removeStyle = function (element, stylename) { element.style[stylename] = null; };\r\n    BrowserDomAdapter.prototype.getStyle = function (element, stylename) { return element.style[stylename]; };\r\n    BrowserDomAdapter.prototype.hasStyle = function (element, styleName, styleValue) {\r\n        if (styleValue === void 0) { styleValue = null; }\r\n        var value = this.getStyle(element, styleName) || '';\r\n        return styleValue ? value == styleValue : value.length > 0;\r\n    };\r\n    BrowserDomAdapter.prototype.tagName = function (element) { return element.tagName; };\r\n    BrowserDomAdapter.prototype.attributeMap = function (element) {\r\n        var res = new Map();\r\n        var elAttrs = element.attributes;\r\n        for (var i = 0; i < elAttrs.length; i++) {\r\n            var attrib = elAttrs[i];\r\n            res.set(attrib.name, attrib.value);\r\n        }\r\n        return res;\r\n    };\r\n    BrowserDomAdapter.prototype.hasAttribute = function (element, attribute) { return element.hasAttribute(attribute); };\r\n    BrowserDomAdapter.prototype.getAttribute = function (element, attribute) { return element.getAttribute(attribute); };\r\n    BrowserDomAdapter.prototype.setAttribute = function (element, name, value) { element.setAttribute(name, value); };\r\n    BrowserDomAdapter.prototype.setAttributeNS = function (element, ns, name, value) {\r\n        element.setAttributeNS(ns, name, value);\r\n    };\r\n    BrowserDomAdapter.prototype.removeAttribute = function (element, attribute) { element.removeAttribute(attribute); };\r\n    BrowserDomAdapter.prototype.templateAwareRoot = function (el) { return this.isTemplateElement(el) ? this.content(el) : el; };\r\n    BrowserDomAdapter.prototype.createHtmlDocument = function () {\r\n        return document.implementation.createHTMLDocument('fakeTitle');\r\n    };\r\n    BrowserDomAdapter.prototype.defaultDoc = function () { return document; };\r\n    BrowserDomAdapter.prototype.getBoundingClientRect = function (el) {\r\n        try {\r\n            return el.getBoundingClientRect();\r\n        }\r\n        catch (e) {\r\n            return { top: 0, bottom: 0, left: 0, right: 0, width: 0, height: 0 };\r\n        }\r\n    };\r\n    BrowserDomAdapter.prototype.getTitle = function () { return document.title; };\r\n    BrowserDomAdapter.prototype.setTitle = function (newTitle) { document.title = newTitle || ''; };\r\n    BrowserDomAdapter.prototype.elementMatches = function (n, selector) {\r\n        var matches = false;\r\n        if (n instanceof HTMLElement) {\r\n            if (n.matches) {\r\n                matches = n.matches(selector);\r\n            }\r\n            else if (n.msMatchesSelector) {\r\n                matches = n.msMatchesSelector(selector);\r\n            }\r\n            else if (n.webkitMatchesSelector) {\r\n                matches = n.webkitMatchesSelector(selector);\r\n            }\r\n        }\r\n        return matches;\r\n    };\r\n    BrowserDomAdapter.prototype.isTemplateElement = function (el) {\r\n        return el instanceof HTMLElement && el.nodeName == \"TEMPLATE\";\r\n    };\r\n    BrowserDomAdapter.prototype.isTextNode = function (node) { return node.nodeType === Node.TEXT_NODE; };\r\n    BrowserDomAdapter.prototype.isCommentNode = function (node) { return node.nodeType === Node.COMMENT_NODE; };\r\n    BrowserDomAdapter.prototype.isElementNode = function (node) { return node.nodeType === Node.ELEMENT_NODE; };\r\n    BrowserDomAdapter.prototype.hasShadowRoot = function (node) { return node instanceof HTMLElement && lang_1.isPresent(node.shadowRoot); };\r\n    BrowserDomAdapter.prototype.isShadowRoot = function (node) { return node instanceof DocumentFragment; };\r\n    BrowserDomAdapter.prototype.importIntoDoc = function (node) {\r\n        var toImport = node;\r\n        if (this.isTemplateElement(node)) {\r\n            toImport = this.content(node);\r\n        }\r\n        return document.importNode(toImport, true);\r\n    };\r\n    BrowserDomAdapter.prototype.adoptNode = function (node) { return document.adoptNode(node); };\r\n    BrowserDomAdapter.prototype.getHref = function (el) { return el.href; };\r\n    BrowserDomAdapter.prototype.getEventKey = function (event) {\r\n        var key = event.key;\r\n        if (lang_1.isBlank(key)) {\r\n            key = event.keyIdentifier;\r\n            // keyIdentifier is defined in the old draft of DOM Level 3 Events implemented by Chrome and\r\n            // Safari\r\n            // cf\r\n            // http://www.w3.org/TR/2007/WD-DOM-Level-3-Events-20071221/events.html#Events-KeyboardEvents-Interfaces\r\n            if (lang_1.isBlank(key)) {\r\n                return 'Unidentified';\r\n            }\r\n            if (key.startsWith('U+')) {\r\n                key = String.fromCharCode(parseInt(key.substring(2), 16));\r\n                if (event.location === DOM_KEY_LOCATION_NUMPAD && _chromeNumKeyPadMap.hasOwnProperty(key)) {\r\n                    // There is a bug in Chrome for numeric keypad keys:\r\n                    // https://code.google.com/p/chromium/issues/detail?id=155654\r\n                    // 1, 2, 3 ... are reported as A, B, C ...\r\n                    key = _chromeNumKeyPadMap[key];\r\n                }\r\n            }\r\n        }\r\n        if (_keyMap.hasOwnProperty(key)) {\r\n            key = _keyMap[key];\r\n        }\r\n        return key;\r\n    };\r\n    BrowserDomAdapter.prototype.getGlobalEventTarget = function (target) {\r\n        if (target == \"window\") {\r\n            return window;\r\n        }\r\n        else if (target == \"document\") {\r\n            return document;\r\n        }\r\n        else if (target == \"body\") {\r\n            return document.body;\r\n        }\r\n    };\r\n    BrowserDomAdapter.prototype.getHistory = function () { return window.history; };\r\n    BrowserDomAdapter.prototype.getLocation = function () { return window.location; };\r\n    BrowserDomAdapter.prototype.getBaseHref = function () {\r\n        var href = getBaseElementHref();\r\n        if (lang_1.isBlank(href)) {\r\n            return null;\r\n        }\r\n        return relativePath(href);\r\n    };\r\n    BrowserDomAdapter.prototype.resetBaseElement = function () { baseElement = null; };\r\n    BrowserDomAdapter.prototype.getUserAgent = function () { return window.navigator.userAgent; };\r\n    BrowserDomAdapter.prototype.setData = function (element, name, value) {\r\n        this.setAttribute(element, 'data-' + name, value);\r\n    };\r\n    BrowserDomAdapter.prototype.getData = function (element, name) { return this.getAttribute(element, 'data-' + name); };\r\n    BrowserDomAdapter.prototype.getComputedStyle = function (element) { return getComputedStyle(element); };\r\n    // TODO(tbosch): move this into a separate environment class once we have it\r\n    BrowserDomAdapter.prototype.setGlobalVar = function (path, value) { lang_1.setValueOnPath(lang_1.global, path, value); };\r\n    BrowserDomAdapter.prototype.requestAnimationFrame = function (callback) { return window.requestAnimationFrame(callback); };\r\n    BrowserDomAdapter.prototype.cancelAnimationFrame = function (id) { window.cancelAnimationFrame(id); };\r\n    BrowserDomAdapter.prototype.performanceNow = function () {\r\n        // performance.now() is not available in all browsers, see\r\n        // http://caniuse.com/#search=performance.now\r\n        if (lang_1.isPresent(window.performance) && lang_1.isPresent(window.performance.now)) {\r\n            return window.performance.now();\r\n        }\r\n        else {\r\n            return lang_1.DateWrapper.toMillis(lang_1.DateWrapper.now());\r\n        }\r\n    };\r\n    return BrowserDomAdapter;\r\n})(generic_browser_adapter_1.GenericBrowserDomAdapter);\r\nexports.BrowserDomAdapter = BrowserDomAdapter;\r\nvar baseElement = null;\r\nfunction getBaseElementHref() {\r\n    if (lang_1.isBlank(baseElement)) {\r\n        baseElement = document.querySelector('base');\r\n        if (lang_1.isBlank(baseElement)) {\r\n            return null;\r\n        }\r\n    }\r\n    return baseElement.getAttribute('href');\r\n}\r\n// based on urlUtils.js in AngularJS 1\r\nvar urlParsingNode = null;\r\nfunction relativePath(url) {\r\n    if (lang_1.isBlank(urlParsingNode)) {\r\n        urlParsingNode = document.createElement(\"a\");\r\n    }\r\n    urlParsingNode.setAttribute('href', url);\r\n    return (urlParsingNode.pathname.charAt(0) === '/') ? urlParsingNode.pathname :\r\n        '/' + urlParsingNode.pathname;\r\n}\r\n//# sourceMappingURL=data:application/json;base64,\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/platform/browser/browser_adapter.js\n ** module id = 173\n ** module chunks = 1\n **/","'use strict';var __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar promise_1 = require('angular2/src/facade/promise');\r\nvar lang_1 = require('angular2/src/facade/lang');\r\nvar xhr_1 = require('angular2/src/compiler/xhr');\r\nvar XHRImpl = (function (_super) {\r\n    __extends(XHRImpl, _super);\r\n    function XHRImpl() {\r\n        _super.apply(this, arguments);\r\n    }\r\n    XHRImpl.prototype.get = function (url) {\r\n        var completer = promise_1.PromiseWrapper.completer();\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open('GET', url, true);\r\n        xhr.responseType = 'text';\r\n        xhr.onload = function () {\r\n            // responseText is the old-school way of retrieving response (supported by IE8 & 9)\r\n            // response/responseType properties were introduced in XHR Level2 spec (supported by IE10)\r\n            var response = lang_1.isPresent(xhr.response) ? xhr.response : xhr.responseText;\r\n            // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\r\n            var status = xhr.status === 1223 ? 204 : xhr.status;\r\n            // fix status code when it is 0 (0 status is undocumented).\r\n            // Occurs when accessing file resources or on Android 4.1 stock browser\r\n            // while retrieving files from application cache.\r\n            if (status === 0) {\r\n                status = response ? 200 : 0;\r\n            }\r\n            if (200 <= status && status <= 300) {\r\n                completer.resolve(response);\r\n            }\r\n            else {\r\n                completer.reject(\"Failed to load \" + url, null);\r\n            }\r\n        };\r\n        xhr.onerror = function () { completer.reject(\"Failed to load \" + url, null); };\r\n        xhr.send();\r\n        return completer.promise;\r\n    };\r\n    return XHRImpl;\r\n})(xhr_1.XHR);\r\nexports.XHRImpl = XHRImpl;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoieGhyX2ltcGwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJhbmd1bGFyMi9zcmMvcGxhdGZvcm0vYnJvd3Nlci94aHJfaW1wbC50cyJdLCJuYW1lcyI6WyJYSFJJbXBsIiwiWEhSSW1wbC5jb25zdHJ1Y3RvciIsIlhIUkltcGwuZ2V0Il0sIm1hcHBpbmdzIjoiOzs7OztBQUFBLHdCQUF3RCw2QkFBNkIsQ0FBQyxDQUFBO0FBQ3RGLHFCQUF3QiwwQkFBMEIsQ0FBQyxDQUFBO0FBQ25ELG9CQUFrQiwyQkFBMkIsQ0FBQyxDQUFBO0FBRTlDO0lBQTZCQSwyQkFBR0E7SUFBaENBO1FBQTZCQyw4QkFBR0E7SUFrQ2hDQSxDQUFDQTtJQWpDQ0QscUJBQUdBLEdBQUhBLFVBQUlBLEdBQVdBO1FBQ2JFLElBQUlBLFNBQVNBLEdBQStCQSx3QkFBY0EsQ0FBQ0EsU0FBU0EsRUFBRUEsQ0FBQ0E7UUFDdkVBLElBQUlBLEdBQUdBLEdBQUdBLElBQUlBLGNBQWNBLEVBQUVBLENBQUNBO1FBQy9CQSxHQUFHQSxDQUFDQSxJQUFJQSxDQUFDQSxLQUFLQSxFQUFFQSxHQUFHQSxFQUFFQSxJQUFJQSxDQUFDQSxDQUFDQTtRQUMzQkEsR0FBR0EsQ0FBQ0EsWUFBWUEsR0FBR0EsTUFBTUEsQ0FBQ0E7UUFFMUJBLEdBQUdBLENBQUNBLE1BQU1BLEdBQUdBO1lBQ1gsbUZBQW1GO1lBQ25GLDBGQUEwRjtZQUMxRixJQUFJLFFBQVEsR0FBRyxnQkFBUyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsR0FBRyxHQUFHLENBQUMsUUFBUSxHQUFHLEdBQUcsQ0FBQyxZQUFZLENBQUM7WUFFekUseURBQXlEO1lBQ3pELElBQUksTUFBTSxHQUFHLEdBQUcsQ0FBQyxNQUFNLEtBQUssSUFBSSxHQUFHLEdBQUcsR0FBRyxHQUFHLENBQUMsTUFBTSxDQUFDO1lBRXBELDJEQUEyRDtZQUMzRCx1RUFBdUU7WUFDdkUsaURBQWlEO1lBQ2pELEVBQUUsQ0FBQyxDQUFDLE1BQU0sS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUNqQixNQUFNLEdBQUcsUUFBUSxHQUFHLEdBQUcsR0FBRyxDQUFDLENBQUM7WUFDOUIsQ0FBQztZQUVELEVBQUUsQ0FBQyxDQUFDLEdBQUcsSUFBSSxNQUFNLElBQUksTUFBTSxJQUFJLEdBQUcsQ0FBQyxDQUFDLENBQUM7Z0JBQ25DLFNBQVMsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7WUFDOUIsQ0FBQztZQUFDLElBQUksQ0FBQyxDQUFDO2dCQUNOLFNBQVMsQ0FBQyxNQUFNLENBQUMsb0JBQWtCLEdBQUssRUFBRSxJQUFJLENBQUMsQ0FBQztZQUNsRCxDQUFDO1FBQ0gsQ0FBQyxDQUFDQTtRQUVGQSxHQUFHQSxDQUFDQSxPQUFPQSxHQUFHQSxjQUFhLFNBQVMsQ0FBQyxNQUFNLENBQUMsb0JBQWtCLEdBQUssRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQ0E7UUFFOUVBLEdBQUdBLENBQUNBLElBQUlBLEVBQUVBLENBQUNBO1FBQ1hBLE1BQU1BLENBQUNBLFNBQVNBLENBQUNBLE9BQU9BLENBQUNBO0lBQzNCQSxDQUFDQTtJQUNIRixjQUFDQTtBQUFEQSxDQUFDQSxBQWxDRCxFQUE2QixTQUFHLEVBa0MvQjtBQWxDWSxlQUFPLFVBa0NuQixDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtQcm9taXNlLCBQcm9taXNlV3JhcHBlciwgUHJvbWlzZUNvbXBsZXRlcn0gZnJvbSAnYW5ndWxhcjIvc3JjL2ZhY2FkZS9wcm9taXNlJztcbmltcG9ydCB7aXNQcmVzZW50fSBmcm9tICdhbmd1bGFyMi9zcmMvZmFjYWRlL2xhbmcnO1xuaW1wb3J0IHtYSFJ9IGZyb20gJ2FuZ3VsYXIyL3NyYy9jb21waWxlci94aHInO1xuXG5leHBvcnQgY2xhc3MgWEhSSW1wbCBleHRlbmRzIFhIUiB7XG4gIGdldCh1cmw6IHN0cmluZyk6IFByb21pc2U8c3RyaW5nPiB7XG4gICAgdmFyIGNvbXBsZXRlcjogUHJvbWlzZUNvbXBsZXRlciA8IHN0cmluZyA+PSBQcm9taXNlV3JhcHBlci5jb21wbGV0ZXIoKTtcbiAgICB2YXIgeGhyID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XG4gICAgeGhyLm9wZW4oJ0dFVCcsIHVybCwgdHJ1ZSk7XG4gICAgeGhyLnJlc3BvbnNlVHlwZSA9ICd0ZXh0JztcblxuICAgIHhoci5vbmxvYWQgPSBmdW5jdGlvbigpIHtcbiAgICAgIC8vIHJlc3BvbnNlVGV4dCBpcyB0aGUgb2xkLXNjaG9vbCB3YXkgb2YgcmV0cmlldmluZyByZXNwb25zZSAoc3VwcG9ydGVkIGJ5IElFOCAmIDkpXG4gICAgICAvLyByZXNwb25zZS9yZXNwb25zZVR5cGUgcHJvcGVydGllcyB3ZXJlIGludHJvZHVjZWQgaW4gWEhSIExldmVsMiBzcGVjIChzdXBwb3J0ZWQgYnkgSUUxMClcbiAgICAgIHZhciByZXNwb25zZSA9IGlzUHJlc2VudCh4aHIucmVzcG9uc2UpID8geGhyLnJlc3BvbnNlIDogeGhyLnJlc3BvbnNlVGV4dDtcblxuICAgICAgLy8gbm9ybWFsaXplIElFOSBidWcgKGh0dHA6Ly9idWdzLmpxdWVyeS5jb20vdGlja2V0LzE0NTApXG4gICAgICB2YXIgc3RhdHVzID0geGhyLnN0YXR1cyA9PT0gMTIyMyA/IDIwNCA6IHhoci5zdGF0dXM7XG5cbiAgICAgIC8vIGZpeCBzdGF0dXMgY29kZSB3aGVuIGl0IGlzIDAgKDAgc3RhdHVzIGlzIHVuZG9jdW1lbnRlZCkuXG4gICAgICAvLyBPY2N1cnMgd2hlbiBhY2Nlc3NpbmcgZmlsZSByZXNvdXJjZXMgb3Igb24gQW5kcm9pZCA0LjEgc3RvY2sgYnJvd3NlclxuICAgICAgLy8gd2hpbGUgcmV0cmlldmluZyBmaWxlcyBmcm9tIGFwcGxpY2F0aW9uIGNhY2hlLlxuICAgICAgaWYgKHN0YXR1cyA9PT0gMCkge1xuICAgICAgICBzdGF0dXMgPSByZXNwb25zZSA/IDIwMCA6IDA7XG4gICAgICB9XG5cbiAgICAgIGlmICgyMDAgPD0gc3RhdHVzICYmIHN0YXR1cyA8PSAzMDApIHtcbiAgICAgICAgY29tcGxldGVyLnJlc29sdmUocmVzcG9uc2UpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29tcGxldGVyLnJlamVjdChgRmFpbGVkIHRvIGxvYWQgJHt1cmx9YCwgbnVsbCk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIHhoci5vbmVycm9yID0gZnVuY3Rpb24oKSB7IGNvbXBsZXRlci5yZWplY3QoYEZhaWxlZCB0byBsb2FkICR7dXJsfWAsIG51bGwpOyB9O1xuXG4gICAgeGhyLnNlbmQoKTtcbiAgICByZXR1cm4gY29tcGxldGVyLnByb21pc2U7XG4gIH1cbn1cbiJdfQ==\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/platform/browser/xhr_impl.js\n ** module id = 174\n ** module chunks = 1\n **/","'use strict';var lang_1 = require('angular2/src/facade/lang');\r\nvar di_1 = require('angular2/src/core/di');\r\nvar core_1 = require(\"angular2/core\");\r\nvar common_1 = require(\"angular2/common\");\r\nvar testability_1 = require('angular2/src/core/testability/testability');\r\nvar dom_adapter_1 = require('angular2/src/platform/dom/dom_adapter');\r\nvar dom_events_1 = require('angular2/src/platform/dom/events/dom_events');\r\nvar key_events_1 = require('angular2/src/platform/dom/events/key_events');\r\nvar hammer_gestures_1 = require('angular2/src/platform/dom/events/hammer_gestures');\r\nvar dom_tokens_1 = require('angular2/src/platform/dom/dom_tokens');\r\nvar dom_renderer_1 = require('angular2/src/platform/dom/dom_renderer');\r\nvar shared_styles_host_1 = require('angular2/src/platform/dom/shared_styles_host');\r\nvar shared_styles_host_2 = require(\"angular2/src/platform/dom/shared_styles_host\");\r\nvar browser_details_1 = require(\"angular2/src/animate/browser_details\");\r\nvar animation_builder_1 = require(\"angular2/src/animate/animation_builder\");\r\nvar browser_adapter_1 = require('./browser/browser_adapter');\r\nvar testability_2 = require('angular2/src/platform/browser/testability');\r\nvar wtf_init_1 = require('angular2/src/core/profile/wtf_init');\r\nvar event_manager_1 = require(\"angular2/src/platform/dom/events/event_manager\");\r\nvar common_dom_1 = require('angular2/platform/common_dom');\r\nvar dom_tokens_2 = require('angular2/src/platform/dom/dom_tokens');\r\nexports.DOCUMENT = dom_tokens_2.DOCUMENT;\r\nvar title_1 = require('angular2/src/platform/browser/title');\r\nexports.Title = title_1.Title;\r\nvar common_dom_2 = require('angular2/platform/common_dom');\r\nexports.ELEMENT_PROBE_PROVIDERS = common_dom_2.ELEMENT_PROBE_PROVIDERS;\r\nexports.ELEMENT_PROBE_PROVIDERS_PROD_MODE = common_dom_2.ELEMENT_PROBE_PROVIDERS_PROD_MODE;\r\nexports.inspectNativeElement = common_dom_2.inspectNativeElement;\r\nexports.By = common_dom_2.By;\r\nvar browser_adapter_2 = require('./browser/browser_adapter');\r\nexports.BrowserDomAdapter = browser_adapter_2.BrowserDomAdapter;\r\nvar tools_1 = require('angular2/src/platform/browser/tools/tools');\r\nexports.enableDebugTools = tools_1.enableDebugTools;\r\nexports.disableDebugTools = tools_1.disableDebugTools;\r\n/**\r\n * A set of providers to initialize the Angular platform in a web browser.\r\n *\r\n * Used automatically by `bootstrap`, or can be passed to {@link platform}.\r\n */\r\nexports.BROWSER_PROVIDERS = lang_1.CONST_EXPR([\r\n    core_1.PLATFORM_COMMON_PROVIDERS,\r\n    new di_1.Provider(core_1.PLATFORM_INITIALIZER, { useValue: initDomAdapter, multi: true }),\r\n]);\r\nfunction _exceptionHandler() {\r\n    // !IS_DART is required because we must rethrow exceptions in JS,\r\n    // but must not rethrow exceptions in Dart\r\n    return new core_1.ExceptionHandler(dom_adapter_1.DOM, !lang_1.IS_DART);\r\n}\r\nfunction _document() {\r\n    return dom_adapter_1.DOM.defaultDoc();\r\n}\r\n/**\r\n * A set of providers to initialize an Angular application in a web browser.\r\n *\r\n * Used automatically by `bootstrap`, or can be passed to {@link PlatformRef.application}.\r\n */\r\nexports.BROWSER_APP_COMMON_PROVIDERS = lang_1.CONST_EXPR([\r\n    core_1.APPLICATION_COMMON_PROVIDERS,\r\n    common_1.FORM_PROVIDERS,\r\n    new di_1.Provider(core_1.PLATFORM_PIPES, { useValue: common_1.COMMON_PIPES, multi: true }),\r\n    new di_1.Provider(core_1.PLATFORM_DIRECTIVES, { useValue: common_1.COMMON_DIRECTIVES, multi: true }),\r\n    new di_1.Provider(core_1.ExceptionHandler, { useFactory: _exceptionHandler, deps: [] }),\r\n    new di_1.Provider(dom_tokens_1.DOCUMENT, { useFactory: _document, deps: [] }),\r\n    new di_1.Provider(event_manager_1.EVENT_MANAGER_PLUGINS, { useClass: dom_events_1.DomEventsPlugin, multi: true }),\r\n    new di_1.Provider(event_manager_1.EVENT_MANAGER_PLUGINS, { useClass: key_events_1.KeyEventsPlugin, multi: true }),\r\n    new di_1.Provider(event_manager_1.EVENT_MANAGER_PLUGINS, { useClass: hammer_gestures_1.HammerGesturesPlugin, multi: true }),\r\n    new di_1.Provider(dom_renderer_1.DomRootRenderer, { useClass: dom_renderer_1.DomRootRenderer_ }),\r\n    new di_1.Provider(core_1.RootRenderer, { useExisting: dom_renderer_1.DomRootRenderer }),\r\n    new di_1.Provider(shared_styles_host_2.SharedStylesHost, { useExisting: shared_styles_host_1.DomSharedStylesHost }),\r\n    shared_styles_host_1.DomSharedStylesHost,\r\n    testability_1.Testability,\r\n    browser_details_1.BrowserDetails,\r\n    animation_builder_1.AnimationBuilder,\r\n    event_manager_1.EventManager,\r\n    common_dom_1.ELEMENT_PROBE_PROVIDERS\r\n]);\r\nfunction initDomAdapter() {\r\n    browser_adapter_1.BrowserDomAdapter.makeCurrent();\r\n    wtf_init_1.wtfInit();\r\n    testability_2.BrowserGetTestability.init();\r\n}\r\nexports.initDomAdapter = initDomAdapter;\r\n//# sourceMappingURL=data:application/json;base64,\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/platform/browser_common.js\n ** module id = 175\n ** module chunks = 1\n **/","'use strict';var __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar dom_adapter_1 = require('angular2/src/platform/dom/dom_adapter');\r\nvar core_1 = require('angular2/core');\r\nvar event_manager_1 = require('./event_manager');\r\nvar DomEventsPlugin = (function (_super) {\r\n    __extends(DomEventsPlugin, _super);\r\n    function DomEventsPlugin() {\r\n        _super.apply(this, arguments);\r\n    }\r\n    // This plugin should come last in the list of plugins, because it accepts all\r\n    // events.\r\n    DomEventsPlugin.prototype.supports = function (eventName) { return true; };\r\n    DomEventsPlugin.prototype.addEventListener = function (element, eventName, handler) {\r\n        var zone = this.manager.getZone();\r\n        var outsideHandler = function (event) { return zone.run(function () { return handler(event); }); };\r\n        return this.manager.getZone().runOutsideAngular(function () { return dom_adapter_1.DOM.onAndCancel(element, eventName, outsideHandler); });\r\n    };\r\n    DomEventsPlugin.prototype.addGlobalEventListener = function (target, eventName, handler) {\r\n        var element = dom_adapter_1.DOM.getGlobalEventTarget(target);\r\n        var zone = this.manager.getZone();\r\n        var outsideHandler = function (event) { return zone.run(function () { return handler(event); }); };\r\n        return this.manager.getZone().runOutsideAngular(function () { return dom_adapter_1.DOM.onAndCancel(element, eventName, outsideHandler); });\r\n    };\r\n    DomEventsPlugin = __decorate([\r\n        core_1.Injectable(), \r\n        __metadata('design:paramtypes', [])\r\n    ], DomEventsPlugin);\r\n    return DomEventsPlugin;\r\n})(event_manager_1.EventManagerPlugin);\r\nexports.DomEventsPlugin = DomEventsPlugin;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZG9tX2V2ZW50cy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImFuZ3VsYXIyL3NyYy9wbGF0Zm9ybS9kb20vZXZlbnRzL2RvbV9ldmVudHMudHMiXSwibmFtZXMiOlsiRG9tRXZlbnRzUGx1Z2luIiwiRG9tRXZlbnRzUGx1Z2luLmNvbnN0cnVjdG9yIiwiRG9tRXZlbnRzUGx1Z2luLnN1cHBvcnRzIiwiRG9tRXZlbnRzUGx1Z2luLmFkZEV2ZW50TGlzdGVuZXIiLCJEb21FdmVudHNQbHVnaW4uYWRkR2xvYmFsRXZlbnRMaXN0ZW5lciJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBQSw0QkFBa0IsdUNBQXVDLENBQUMsQ0FBQTtBQUMxRCxxQkFBeUIsZUFBZSxDQUFDLENBQUE7QUFDekMsOEJBQStDLGlCQUFpQixDQUFDLENBQUE7QUFFakU7SUFDcUNBLG1DQUFrQkE7SUFEdkRBO1FBQ3FDQyw4QkFBa0JBO0lBbUJ2REEsQ0FBQ0E7SUFsQkNELDhFQUE4RUE7SUFDOUVBLFVBQVVBO0lBQ1ZBLGtDQUFRQSxHQUFSQSxVQUFTQSxTQUFpQkEsSUFBYUUsTUFBTUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7SUFFckRGLDBDQUFnQkEsR0FBaEJBLFVBQWlCQSxPQUFvQkEsRUFBRUEsU0FBaUJBLEVBQUVBLE9BQWlCQTtRQUN6RUcsSUFBSUEsSUFBSUEsR0FBR0EsSUFBSUEsQ0FBQ0EsT0FBT0EsQ0FBQ0EsT0FBT0EsRUFBRUEsQ0FBQ0E7UUFDbENBLElBQUlBLGNBQWNBLEdBQUdBLFVBQUNBLEtBQUtBLElBQUtBLE9BQUFBLElBQUlBLENBQUNBLEdBQUdBLENBQUNBLGNBQU1BLE9BQUFBLE9BQU9BLENBQUNBLEtBQUtBLENBQUNBLEVBQWRBLENBQWNBLENBQUNBLEVBQTlCQSxDQUE4QkEsQ0FBQ0E7UUFDL0RBLE1BQU1BLENBQUNBLElBQUlBLENBQUNBLE9BQU9BLENBQUNBLE9BQU9BLEVBQUVBLENBQUNBLGlCQUFpQkEsQ0FDM0NBLGNBQU1BLE9BQUFBLGlCQUFHQSxDQUFDQSxXQUFXQSxDQUFDQSxPQUFPQSxFQUFFQSxTQUFTQSxFQUFFQSxjQUFjQSxDQUFDQSxFQUFuREEsQ0FBbURBLENBQUNBLENBQUNBO0lBQ2pFQSxDQUFDQTtJQUVESCxnREFBc0JBLEdBQXRCQSxVQUF1QkEsTUFBY0EsRUFBRUEsU0FBaUJBLEVBQUVBLE9BQWlCQTtRQUN6RUksSUFBSUEsT0FBT0EsR0FBR0EsaUJBQUdBLENBQUNBLG9CQUFvQkEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsQ0FBQ0E7UUFDL0NBLElBQUlBLElBQUlBLEdBQUdBLElBQUlBLENBQUNBLE9BQU9BLENBQUNBLE9BQU9BLEVBQUVBLENBQUNBO1FBQ2xDQSxJQUFJQSxjQUFjQSxHQUFHQSxVQUFDQSxLQUFLQSxJQUFLQSxPQUFBQSxJQUFJQSxDQUFDQSxHQUFHQSxDQUFDQSxjQUFNQSxPQUFBQSxPQUFPQSxDQUFDQSxLQUFLQSxDQUFDQSxFQUFkQSxDQUFjQSxDQUFDQSxFQUE5QkEsQ0FBOEJBLENBQUNBO1FBQy9EQSxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQSxPQUFPQSxDQUFDQSxPQUFPQSxFQUFFQSxDQUFDQSxpQkFBaUJBLENBQzNDQSxjQUFNQSxPQUFBQSxpQkFBR0EsQ0FBQ0EsV0FBV0EsQ0FBQ0EsT0FBT0EsRUFBRUEsU0FBU0EsRUFBRUEsY0FBY0EsQ0FBQ0EsRUFBbkRBLENBQW1EQSxDQUFDQSxDQUFDQTtJQUNqRUEsQ0FBQ0E7SUFuQkhKO1FBQUNBLGlCQUFVQSxFQUFFQTs7d0JBb0JaQTtJQUFEQSxzQkFBQ0E7QUFBREEsQ0FBQ0EsQUFwQkQsRUFDcUMsa0NBQWtCLEVBbUJ0RDtBQW5CWSx1QkFBZSxrQkFtQjNCLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0RPTX0gZnJvbSAnYW5ndWxhcjIvc3JjL3BsYXRmb3JtL2RvbS9kb21fYWRhcHRlcic7XG5pbXBvcnQge0luamVjdGFibGV9IGZyb20gJ2FuZ3VsYXIyL2NvcmUnO1xuaW1wb3J0IHtFdmVudE1hbmFnZXJQbHVnaW4sIEV2ZW50TWFuYWdlcn0gZnJvbSAnLi9ldmVudF9tYW5hZ2VyJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIERvbUV2ZW50c1BsdWdpbiBleHRlbmRzIEV2ZW50TWFuYWdlclBsdWdpbiB7XG4gIC8vIFRoaXMgcGx1Z2luIHNob3VsZCBjb21lIGxhc3QgaW4gdGhlIGxpc3Qgb2YgcGx1Z2lucywgYmVjYXVzZSBpdCBhY2NlcHRzIGFsbFxuICAvLyBldmVudHMuXG4gIHN1cHBvcnRzKGV2ZW50TmFtZTogc3RyaW5nKTogYm9vbGVhbiB7IHJldHVybiB0cnVlOyB9XG5cbiAgYWRkRXZlbnRMaXN0ZW5lcihlbGVtZW50OiBIVE1MRWxlbWVudCwgZXZlbnROYW1lOiBzdHJpbmcsIGhhbmRsZXI6IEZ1bmN0aW9uKTogRnVuY3Rpb24ge1xuICAgIHZhciB6b25lID0gdGhpcy5tYW5hZ2VyLmdldFpvbmUoKTtcbiAgICB2YXIgb3V0c2lkZUhhbmRsZXIgPSAoZXZlbnQpID0+IHpvbmUucnVuKCgpID0+IGhhbmRsZXIoZXZlbnQpKTtcbiAgICByZXR1cm4gdGhpcy5tYW5hZ2VyLmdldFpvbmUoKS5ydW5PdXRzaWRlQW5ndWxhcihcbiAgICAgICAgKCkgPT4gRE9NLm9uQW5kQ2FuY2VsKGVsZW1lbnQsIGV2ZW50TmFtZSwgb3V0c2lkZUhhbmRsZXIpKTtcbiAgfVxuXG4gIGFkZEdsb2JhbEV2ZW50TGlzdGVuZXIodGFyZ2V0OiBzdHJpbmcsIGV2ZW50TmFtZTogc3RyaW5nLCBoYW5kbGVyOiBGdW5jdGlvbik6IEZ1bmN0aW9uIHtcbiAgICB2YXIgZWxlbWVudCA9IERPTS5nZXRHbG9iYWxFdmVudFRhcmdldCh0YXJnZXQpO1xuICAgIHZhciB6b25lID0gdGhpcy5tYW5hZ2VyLmdldFpvbmUoKTtcbiAgICB2YXIgb3V0c2lkZUhhbmRsZXIgPSAoZXZlbnQpID0+IHpvbmUucnVuKCgpID0+IGhhbmRsZXIoZXZlbnQpKTtcbiAgICByZXR1cm4gdGhpcy5tYW5hZ2VyLmdldFpvbmUoKS5ydW5PdXRzaWRlQW5ndWxhcihcbiAgICAgICAgKCkgPT4gRE9NLm9uQW5kQ2FuY2VsKGVsZW1lbnQsIGV2ZW50TmFtZSwgb3V0c2lkZUhhbmRsZXIpKTtcbiAgfVxufVxuIl19\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/platform/dom/events/dom_events.js\n ** module id = 176\n ** module chunks = 1\n **/","'use strict';var lang_1 = require('angular2/src/facade/lang');\r\nvar CAMEL_CASE_REGEXP = /([A-Z])/g;\r\nvar DASH_CASE_REGEXP = /-([a-z])/g;\r\nfunction camelCaseToDashCase(input) {\r\n    return lang_1.StringWrapper.replaceAllMapped(input, CAMEL_CASE_REGEXP, function (m) { return '-' + m[1].toLowerCase(); });\r\n}\r\nexports.camelCaseToDashCase = camelCaseToDashCase;\r\nfunction dashCaseToCamelCase(input) {\r\n    return lang_1.StringWrapper.replaceAllMapped(input, DASH_CASE_REGEXP, function (m) { return m[1].toUpperCase(); });\r\n}\r\nexports.dashCaseToCamelCase = dashCaseToCamelCase;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImFuZ3VsYXIyL3NyYy9wbGF0Zm9ybS9kb20vdXRpbC50cyJdLCJuYW1lcyI6WyJjYW1lbENhc2VUb0Rhc2hDYXNlIiwiZGFzaENhc2VUb0NhbWVsQ2FzZSJdLCJtYXBwaW5ncyI6IkFBQUEscUJBQTRCLDBCQUEwQixDQUFDLENBQUE7QUFFdkQsSUFBSSxpQkFBaUIsR0FBRyxVQUFVLENBQUM7QUFDbkMsSUFBSSxnQkFBZ0IsR0FBRyxXQUFXLENBQUM7QUFHbkMsNkJBQW9DLEtBQWE7SUFDL0NBLE1BQU1BLENBQUNBLG9CQUFhQSxDQUFDQSxnQkFBZ0JBLENBQUNBLEtBQUtBLEVBQUVBLGlCQUFpQkEsRUFDeEJBLFVBQUNBLENBQUNBLElBQU9BLE1BQU1BLENBQUNBLEdBQUdBLEdBQUdBLENBQUNBLENBQUNBLENBQUNBLENBQUNBLENBQUNBLFdBQVdBLEVBQUVBLENBQUNBLENBQUNBLENBQUNBLENBQUNBLENBQUNBO0FBQ3JGQSxDQUFDQTtBQUhlLDJCQUFtQixzQkFHbEMsQ0FBQTtBQUVELDZCQUFvQyxLQUFhO0lBQy9DQyxNQUFNQSxDQUFDQSxvQkFBYUEsQ0FBQ0EsZ0JBQWdCQSxDQUFDQSxLQUFLQSxFQUFFQSxnQkFBZ0JBLEVBQ3ZCQSxVQUFDQSxDQUFDQSxJQUFPQSxNQUFNQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQSxXQUFXQSxFQUFFQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQTtBQUMvRUEsQ0FBQ0E7QUFIZSwyQkFBbUIsc0JBR2xDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1N0cmluZ1dyYXBwZXJ9IGZyb20gJ2FuZ3VsYXIyL3NyYy9mYWNhZGUvbGFuZyc7XG5cbnZhciBDQU1FTF9DQVNFX1JFR0VYUCA9IC8oW0EtWl0pL2c7XG52YXIgREFTSF9DQVNFX1JFR0VYUCA9IC8tKFthLXpdKS9nO1xuXG5cbmV4cG9ydCBmdW5jdGlvbiBjYW1lbENhc2VUb0Rhc2hDYXNlKGlucHV0OiBzdHJpbmcpOiBzdHJpbmcge1xuICByZXR1cm4gU3RyaW5nV3JhcHBlci5yZXBsYWNlQWxsTWFwcGVkKGlucHV0LCBDQU1FTF9DQVNFX1JFR0VYUCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAobSkgPT4geyByZXR1cm4gJy0nICsgbVsxXS50b0xvd2VyQ2FzZSgpOyB9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGRhc2hDYXNlVG9DYW1lbENhc2UoaW5wdXQ6IHN0cmluZyk6IHN0cmluZyB7XG4gIHJldHVybiBTdHJpbmdXcmFwcGVyLnJlcGxhY2VBbGxNYXBwZWQoaW5wdXQsIERBU0hfQ0FTRV9SRUdFWFAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKG0pID0+IHsgcmV0dXJuIG1bMV0udG9VcHBlckNhc2UoKTsgfSk7XG59XG4iXX0=\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/platform/dom/util.js\n ** module id = 177\n ** module chunks = 1\n **/","'use strict';var angular_entrypoint_1 = require('angular2/src/core/angular_entrypoint');\r\nexports.AngularEntrypoint = angular_entrypoint_1.AngularEntrypoint;\r\nvar browser_common_1 = require('angular2/src/platform/browser_common');\r\nexports.BROWSER_PROVIDERS = browser_common_1.BROWSER_PROVIDERS;\r\nexports.ELEMENT_PROBE_PROVIDERS = browser_common_1.ELEMENT_PROBE_PROVIDERS;\r\nexports.ELEMENT_PROBE_PROVIDERS_PROD_MODE = browser_common_1.ELEMENT_PROBE_PROVIDERS_PROD_MODE;\r\nexports.inspectNativeElement = browser_common_1.inspectNativeElement;\r\nexports.BrowserDomAdapter = browser_common_1.BrowserDomAdapter;\r\nexports.By = browser_common_1.By;\r\nexports.Title = browser_common_1.Title;\r\nexports.DOCUMENT = browser_common_1.DOCUMENT;\r\nexports.enableDebugTools = browser_common_1.enableDebugTools;\r\nexports.disableDebugTools = browser_common_1.disableDebugTools;\r\nvar lang_1 = require('angular2/src/facade/lang');\r\nvar browser_common_2 = require('angular2/src/platform/browser_common');\r\nvar compiler_1 = require('angular2/compiler');\r\nvar core_1 = require('angular2/core');\r\nvar reflection_capabilities_1 = require('angular2/src/core/reflection/reflection_capabilities');\r\nvar xhr_impl_1 = require(\"angular2/src/platform/browser/xhr_impl\");\r\nvar compiler_2 = require('angular2/compiler');\r\nvar di_1 = require('angular2/src/core/di');\r\n/**\r\n * An array of providers that should be passed into `application()` when bootstrapping a component.\r\n */\r\nexports.BROWSER_APP_PROVIDERS = lang_1.CONST_EXPR([\r\n    browser_common_2.BROWSER_APP_COMMON_PROVIDERS,\r\n    compiler_1.COMPILER_PROVIDERS,\r\n    new di_1.Provider(compiler_2.XHR, { useClass: xhr_impl_1.XHRImpl }),\r\n]);\r\n/**\r\n * Bootstrapping for Angular applications.\r\n *\r\n * You instantiate an Angular application by explicitly specifying a component to use\r\n * as the root component for your application via the `bootstrap()` method.\r\n *\r\n * ## Simple Example\r\n *\r\n * Assuming this `index.html`:\r\n *\r\n * ```html\r\n * <html>\r\n *   <!-- load Angular script tags here. -->\r\n *   <body>\r\n *     <my-app>loading...</my-app>\r\n *   </body>\r\n * </html>\r\n * ```\r\n *\r\n * An application is bootstrapped inside an existing browser DOM, typically `index.html`.\r\n * Unlike Angular 1, Angular 2 does not compile/process providers in `index.html`. This is\r\n * mainly for security reasons, as well as architectural changes in Angular 2. This means\r\n * that `index.html` can safely be processed using server-side technologies such as\r\n * providers. Bindings can thus use double-curly `{{ syntax }}` without collision from\r\n * Angular 2 component double-curly `{{ syntax }}`.\r\n *\r\n * We can use this script code:\r\n *\r\n * {@example core/ts/bootstrap/bootstrap.ts region='bootstrap'}\r\n *\r\n * When the app developer invokes `bootstrap()` with the root component `MyApp` as its\r\n * argument, Angular performs the following tasks:\r\n *\r\n *  1. It uses the component's `selector` property to locate the DOM element which needs\r\n *     to be upgraded into the angular component.\r\n *  2. It creates a new child injector (from the platform injector). Optionally, you can\r\n *     also override the injector configuration for an app by invoking `bootstrap` with the\r\n *     `componentInjectableBindings` argument.\r\n *  3. It creates a new `Zone` and connects it to the angular application's change detection\r\n *     domain instance.\r\n *  4. It creates an emulated or shadow DOM on the selected component's host element and loads the\r\n *     template into it.\r\n *  5. It instantiates the specified component.\r\n *  6. Finally, Angular performs change detection to apply the initial data providers for the\r\n *     application.\r\n *\r\n *\r\n * ## Bootstrapping Multiple Applications\r\n *\r\n * When working within a browser window, there are many singleton resources: cookies, title,\r\n * location, and others. Angular services that represent these resources must likewise be\r\n * shared across all Angular applications that occupy the same browser window. For this\r\n * reason, Angular creates exactly one global platform object which stores all shared\r\n * services, and each angular application injector has the platform injector as its parent.\r\n *\r\n * Each application has its own private injector as well. When there are multiple\r\n * applications on a page, Angular treats each application injector's services as private\r\n * to that application.\r\n *\r\n * ## API\r\n *\r\n * - `appComponentType`: The root component which should act as the application. This is\r\n *   a reference to a `Type` which is annotated with `@Component(...)`.\r\n * - `customProviders`: An additional set of providers that can be added to the\r\n *   app injector to override default injection behavior.\r\n *\r\n * Returns a `Promise` of {@link ComponentRef}.\r\n */\r\nfunction bootstrap(appComponentType, customProviders) {\r\n    core_1.reflector.reflectionCapabilities = new reflection_capabilities_1.ReflectionCapabilities();\r\n    var appProviders = lang_1.isPresent(customProviders) ? [exports.BROWSER_APP_PROVIDERS, customProviders] : exports.BROWSER_APP_PROVIDERS;\r\n    return core_1.platform(browser_common_2.BROWSER_PROVIDERS).application(appProviders).bootstrap(appComponentType);\r\n}\r\nexports.bootstrap = bootstrap;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnJvd3Nlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImFuZ3VsYXIyL3BsYXRmb3JtL2Jyb3dzZXIudHMiXSwibmFtZXMiOlsiYm9vdHN0cmFwIl0sIm1hcHBpbmdzIjoiQUFBQSxtQ0FBZ0Msc0NBQXNDLENBQUM7QUFBL0QsbUVBQStEO0FBQ3ZFLCtCQVdPLHNDQUFzQyxDQUFDO0FBVjVDLCtEQUFpQjtBQUNqQiwyRUFBdUI7QUFDdkIsK0ZBQWlDO0FBQ2pDLHFFQUFvQjtBQUNwQiwrREFBaUI7QUFDakIsaUNBQUU7QUFDRix1Q0FBSztBQUNMLDZDQUFRO0FBQ1IsNkRBQWdCO0FBQ2hCLCtEQUM0QztBQUU5QyxxQkFBMEMsMEJBQTBCLENBQUMsQ0FBQTtBQUVyRSwrQkFHTyxzQ0FBc0MsQ0FBQyxDQUFBO0FBQzlDLHlCQUFpQyxtQkFBbUIsQ0FBQyxDQUFBO0FBQ3JELHFCQUFnRCxlQUFlLENBQUMsQ0FBQTtBQUNoRSx3Q0FBcUMsc0RBQXNELENBQUMsQ0FBQTtBQUM1Rix5QkFBc0Isd0NBQXdDLENBQUMsQ0FBQTtBQUMvRCx5QkFBa0IsbUJBQW1CLENBQUMsQ0FBQTtBQUN0QyxtQkFBdUIsc0JBQXNCLENBQUMsQ0FBQTtBQUU5Qzs7R0FFRztBQUNVLDZCQUFxQixHQUEyQyxpQkFBVSxDQUFDO0lBQ3RGLDZDQUE0QjtJQUM1Qiw2QkFBa0I7SUFDbEIsSUFBSSxhQUFRLENBQUMsY0FBRyxFQUFFLEVBQUMsUUFBUSxFQUFFLGtCQUFPLEVBQUMsQ0FBQztDQUN2QyxDQUFDLENBQUM7QUFFSDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQW1FRztBQUNILG1CQUNJLGdCQUFzQixFQUN0QixlQUF3RDtJQUMxREEsZ0JBQVNBLENBQUNBLHNCQUFzQkEsR0FBR0EsSUFBSUEsZ0RBQXNCQSxFQUFFQSxDQUFDQTtJQUNoRUEsSUFBSUEsWUFBWUEsR0FDWkEsZ0JBQVNBLENBQUNBLGVBQWVBLENBQUNBLEdBQUdBLENBQUNBLDZCQUFxQkEsRUFBRUEsZUFBZUEsQ0FBQ0EsR0FBR0EsNkJBQXFCQSxDQUFDQTtJQUNsR0EsTUFBTUEsQ0FBQ0EsZUFBUUEsQ0FBQ0Esa0NBQWlCQSxDQUFDQSxDQUFDQSxXQUFXQSxDQUFDQSxZQUFZQSxDQUFDQSxDQUFDQSxTQUFTQSxDQUFDQSxnQkFBZ0JBLENBQUNBLENBQUNBO0FBQzNGQSxDQUFDQTtBQVBlLGlCQUFTLFlBT3hCLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge0FuZ3VsYXJFbnRyeXBvaW50fSBmcm9tICdhbmd1bGFyMi9zcmMvY29yZS9hbmd1bGFyX2VudHJ5cG9pbnQnO1xuZXhwb3J0IHtcbiAgQlJPV1NFUl9QUk9WSURFUlMsXG4gIEVMRU1FTlRfUFJPQkVfUFJPVklERVJTLFxuICBFTEVNRU5UX1BST0JFX1BST1ZJREVSU19QUk9EX01PREUsXG4gIGluc3BlY3ROYXRpdmVFbGVtZW50LFxuICBCcm93c2VyRG9tQWRhcHRlcixcbiAgQnksXG4gIFRpdGxlLFxuICBET0NVTUVOVCxcbiAgZW5hYmxlRGVidWdUb29scyxcbiAgZGlzYWJsZURlYnVnVG9vbHNcbn0gZnJvbSAnYW5ndWxhcjIvc3JjL3BsYXRmb3JtL2Jyb3dzZXJfY29tbW9uJztcblxuaW1wb3J0IHtUeXBlLCBpc1ByZXNlbnQsIENPTlNUX0VYUFJ9IGZyb20gJ2FuZ3VsYXIyL3NyYy9mYWNhZGUvbGFuZyc7XG5pbXBvcnQge1Byb21pc2V9IGZyb20gJ2FuZ3VsYXIyL3NyYy9mYWNhZGUvcHJvbWlzZSc7XG5pbXBvcnQge1xuICBCUk9XU0VSX1BST1ZJREVSUyxcbiAgQlJPV1NFUl9BUFBfQ09NTU9OX1BST1ZJREVSU1xufSBmcm9tICdhbmd1bGFyMi9zcmMvcGxhdGZvcm0vYnJvd3Nlcl9jb21tb24nO1xuaW1wb3J0IHtDT01QSUxFUl9QUk9WSURFUlN9IGZyb20gJ2FuZ3VsYXIyL2NvbXBpbGVyJztcbmltcG9ydCB7Q29tcG9uZW50UmVmLCBwbGF0Zm9ybSwgcmVmbGVjdG9yfSBmcm9tICdhbmd1bGFyMi9jb3JlJztcbmltcG9ydCB7UmVmbGVjdGlvbkNhcGFiaWxpdGllc30gZnJvbSAnYW5ndWxhcjIvc3JjL2NvcmUvcmVmbGVjdGlvbi9yZWZsZWN0aW9uX2NhcGFiaWxpdGllcyc7XG5pbXBvcnQge1hIUkltcGx9IGZyb20gXCJhbmd1bGFyMi9zcmMvcGxhdGZvcm0vYnJvd3Nlci94aHJfaW1wbFwiO1xuaW1wb3J0IHtYSFJ9IGZyb20gJ2FuZ3VsYXIyL2NvbXBpbGVyJztcbmltcG9ydCB7UHJvdmlkZXJ9IGZyb20gJ2FuZ3VsYXIyL3NyYy9jb3JlL2RpJztcblxuLyoqXG4gKiBBbiBhcnJheSBvZiBwcm92aWRlcnMgdGhhdCBzaG91bGQgYmUgcGFzc2VkIGludG8gYGFwcGxpY2F0aW9uKClgIHdoZW4gYm9vdHN0cmFwcGluZyBhIGNvbXBvbmVudC5cbiAqL1xuZXhwb3J0IGNvbnN0IEJST1dTRVJfQVBQX1BST1ZJREVSUzogQXJyYXk8YW55IC8qVHlwZSB8IFByb3ZpZGVyIHwgYW55W10qLz4gPSBDT05TVF9FWFBSKFtcbiAgQlJPV1NFUl9BUFBfQ09NTU9OX1BST1ZJREVSUyxcbiAgQ09NUElMRVJfUFJPVklERVJTLFxuICBuZXcgUHJvdmlkZXIoWEhSLCB7dXNlQ2xhc3M6IFhIUkltcGx9KSxcbl0pO1xuXG4vKipcbiAqIEJvb3RzdHJhcHBpbmcgZm9yIEFuZ3VsYXIgYXBwbGljYXRpb25zLlxuICpcbiAqIFlvdSBpbnN0YW50aWF0ZSBhbiBBbmd1bGFyIGFwcGxpY2F0aW9uIGJ5IGV4cGxpY2l0bHkgc3BlY2lmeWluZyBhIGNvbXBvbmVudCB0byB1c2VcbiAqIGFzIHRoZSByb290IGNvbXBvbmVudCBmb3IgeW91ciBhcHBsaWNhdGlvbiB2aWEgdGhlIGBib290c3RyYXAoKWAgbWV0aG9kLlxuICpcbiAqICMjIFNpbXBsZSBFeGFtcGxlXG4gKlxuICogQXNzdW1pbmcgdGhpcyBgaW5kZXguaHRtbGA6XG4gKlxuICogYGBgaHRtbFxuICogPGh0bWw+XG4gKiAgIDwhLS0gbG9hZCBBbmd1bGFyIHNjcmlwdCB0YWdzIGhlcmUuIC0tPlxuICogICA8Ym9keT5cbiAqICAgICA8bXktYXBwPmxvYWRpbmcuLi48L215LWFwcD5cbiAqICAgPC9ib2R5PlxuICogPC9odG1sPlxuICogYGBgXG4gKlxuICogQW4gYXBwbGljYXRpb24gaXMgYm9vdHN0cmFwcGVkIGluc2lkZSBhbiBleGlzdGluZyBicm93c2VyIERPTSwgdHlwaWNhbGx5IGBpbmRleC5odG1sYC5cbiAqIFVubGlrZSBBbmd1bGFyIDEsIEFuZ3VsYXIgMiBkb2VzIG5vdCBjb21waWxlL3Byb2Nlc3MgcHJvdmlkZXJzIGluIGBpbmRleC5odG1sYC4gVGhpcyBpc1xuICogbWFpbmx5IGZvciBzZWN1cml0eSByZWFzb25zLCBhcyB3ZWxsIGFzIGFyY2hpdGVjdHVyYWwgY2hhbmdlcyBpbiBBbmd1bGFyIDIuIFRoaXMgbWVhbnNcbiAqIHRoYXQgYGluZGV4Lmh0bWxgIGNhbiBzYWZlbHkgYmUgcHJvY2Vzc2VkIHVzaW5nIHNlcnZlci1zaWRlIHRlY2hub2xvZ2llcyBzdWNoIGFzXG4gKiBwcm92aWRlcnMuIEJpbmRpbmdzIGNhbiB0aHVzIHVzZSBkb3VibGUtY3VybHkgYHt7IHN5bnRheCB9fWAgd2l0aG91dCBjb2xsaXNpb24gZnJvbVxuICogQW5ndWxhciAyIGNvbXBvbmVudCBkb3VibGUtY3VybHkgYHt7IHN5bnRheCB9fWAuXG4gKlxuICogV2UgY2FuIHVzZSB0aGlzIHNjcmlwdCBjb2RlOlxuICpcbiAqIHtAZXhhbXBsZSBjb3JlL3RzL2Jvb3RzdHJhcC9ib290c3RyYXAudHMgcmVnaW9uPSdib290c3RyYXAnfVxuICpcbiAqIFdoZW4gdGhlIGFwcCBkZXZlbG9wZXIgaW52b2tlcyBgYm9vdHN0cmFwKClgIHdpdGggdGhlIHJvb3QgY29tcG9uZW50IGBNeUFwcGAgYXMgaXRzXG4gKiBhcmd1bWVudCwgQW5ndWxhciBwZXJmb3JtcyB0aGUgZm9sbG93aW5nIHRhc2tzOlxuICpcbiAqICAxLiBJdCB1c2VzIHRoZSBjb21wb25lbnQncyBgc2VsZWN0b3JgIHByb3BlcnR5IHRvIGxvY2F0ZSB0aGUgRE9NIGVsZW1lbnQgd2hpY2ggbmVlZHNcbiAqICAgICB0byBiZSB1cGdyYWRlZCBpbnRvIHRoZSBhbmd1bGFyIGNvbXBvbmVudC5cbiAqICAyLiBJdCBjcmVhdGVzIGEgbmV3IGNoaWxkIGluamVjdG9yIChmcm9tIHRoZSBwbGF0Zm9ybSBpbmplY3RvcikuIE9wdGlvbmFsbHksIHlvdSBjYW5cbiAqICAgICBhbHNvIG92ZXJyaWRlIHRoZSBpbmplY3RvciBjb25maWd1cmF0aW9uIGZvciBhbiBhcHAgYnkgaW52b2tpbmcgYGJvb3RzdHJhcGAgd2l0aCB0aGVcbiAqICAgICBgY29tcG9uZW50SW5qZWN0YWJsZUJpbmRpbmdzYCBhcmd1bWVudC5cbiAqICAzLiBJdCBjcmVhdGVzIGEgbmV3IGBab25lYCBhbmQgY29ubmVjdHMgaXQgdG8gdGhlIGFuZ3VsYXIgYXBwbGljYXRpb24ncyBjaGFuZ2UgZGV0ZWN0aW9uXG4gKiAgICAgZG9tYWluIGluc3RhbmNlLlxuICogIDQuIEl0IGNyZWF0ZXMgYW4gZW11bGF0ZWQgb3Igc2hhZG93IERPTSBvbiB0aGUgc2VsZWN0ZWQgY29tcG9uZW50J3MgaG9zdCBlbGVtZW50IGFuZCBsb2FkcyB0aGVcbiAqICAgICB0ZW1wbGF0ZSBpbnRvIGl0LlxuICogIDUuIEl0IGluc3RhbnRpYXRlcyB0aGUgc3BlY2lmaWVkIGNvbXBvbmVudC5cbiAqICA2LiBGaW5hbGx5LCBBbmd1bGFyIHBlcmZvcm1zIGNoYW5nZSBkZXRlY3Rpb24gdG8gYXBwbHkgdGhlIGluaXRpYWwgZGF0YSBwcm92aWRlcnMgZm9yIHRoZVxuICogICAgIGFwcGxpY2F0aW9uLlxuICpcbiAqXG4gKiAjIyBCb290c3RyYXBwaW5nIE11bHRpcGxlIEFwcGxpY2F0aW9uc1xuICpcbiAqIFdoZW4gd29ya2luZyB3aXRoaW4gYSBicm93c2VyIHdpbmRvdywgdGhlcmUgYXJlIG1hbnkgc2luZ2xldG9uIHJlc291cmNlczogY29va2llcywgdGl0bGUsXG4gKiBsb2NhdGlvbiwgYW5kIG90aGVycy4gQW5ndWxhciBzZXJ2aWNlcyB0aGF0IHJlcHJlc2VudCB0aGVzZSByZXNvdXJjZXMgbXVzdCBsaWtld2lzZSBiZVxuICogc2hhcmVkIGFjcm9zcyBhbGwgQW5ndWxhciBhcHBsaWNhdGlvbnMgdGhhdCBvY2N1cHkgdGhlIHNhbWUgYnJvd3NlciB3aW5kb3cuIEZvciB0aGlzXG4gKiByZWFzb24sIEFuZ3VsYXIgY3JlYXRlcyBleGFjdGx5IG9uZSBnbG9iYWwgcGxhdGZvcm0gb2JqZWN0IHdoaWNoIHN0b3JlcyBhbGwgc2hhcmVkXG4gKiBzZXJ2aWNlcywgYW5kIGVhY2ggYW5ndWxhciBhcHBsaWNhdGlvbiBpbmplY3RvciBoYXMgdGhlIHBsYXRmb3JtIGluamVjdG9yIGFzIGl0cyBwYXJlbnQuXG4gKlxuICogRWFjaCBhcHBsaWNhdGlvbiBoYXMgaXRzIG93biBwcml2YXRlIGluamVjdG9yIGFzIHdlbGwuIFdoZW4gdGhlcmUgYXJlIG11bHRpcGxlXG4gKiBhcHBsaWNhdGlvbnMgb24gYSBwYWdlLCBBbmd1bGFyIHRyZWF0cyBlYWNoIGFwcGxpY2F0aW9uIGluamVjdG9yJ3Mgc2VydmljZXMgYXMgcHJpdmF0ZVxuICogdG8gdGhhdCBhcHBsaWNhdGlvbi5cbiAqXG4gKiAjIyBBUElcbiAqXG4gKiAtIGBhcHBDb21wb25lbnRUeXBlYDogVGhlIHJvb3QgY29tcG9uZW50IHdoaWNoIHNob3VsZCBhY3QgYXMgdGhlIGFwcGxpY2F0aW9uLiBUaGlzIGlzXG4gKiAgIGEgcmVmZXJlbmNlIHRvIGEgYFR5cGVgIHdoaWNoIGlzIGFubm90YXRlZCB3aXRoIGBAQ29tcG9uZW50KC4uLilgLlxuICogLSBgY3VzdG9tUHJvdmlkZXJzYDogQW4gYWRkaXRpb25hbCBzZXQgb2YgcHJvdmlkZXJzIHRoYXQgY2FuIGJlIGFkZGVkIHRvIHRoZVxuICogICBhcHAgaW5qZWN0b3IgdG8gb3ZlcnJpZGUgZGVmYXVsdCBpbmplY3Rpb24gYmVoYXZpb3IuXG4gKlxuICogUmV0dXJucyBhIGBQcm9taXNlYCBvZiB7QGxpbmsgQ29tcG9uZW50UmVmfS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGJvb3RzdHJhcChcbiAgICBhcHBDb21wb25lbnRUeXBlOiBUeXBlLFxuICAgIGN1c3RvbVByb3ZpZGVycz86IEFycmF5PGFueSAvKlR5cGUgfCBQcm92aWRlciB8IGFueVtdKi8+KTogUHJvbWlzZTxDb21wb25lbnRSZWY+IHtcbiAgcmVmbGVjdG9yLnJlZmxlY3Rpb25DYXBhYmlsaXRpZXMgPSBuZXcgUmVmbGVjdGlvbkNhcGFiaWxpdGllcygpO1xuICBsZXQgYXBwUHJvdmlkZXJzID1cbiAgICAgIGlzUHJlc2VudChjdXN0b21Qcm92aWRlcnMpID8gW0JST1dTRVJfQVBQX1BST1ZJREVSUywgY3VzdG9tUHJvdmlkZXJzXSA6IEJST1dTRVJfQVBQX1BST1ZJREVSUztcbiAgcmV0dXJuIHBsYXRmb3JtKEJST1dTRVJfUFJPVklERVJTKS5hcHBsaWNhdGlvbihhcHBQcm92aWRlcnMpLmJvb3RzdHJhcChhcHBDb21wb25lbnRUeXBlKTtcbn1cbiJdfQ==\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/platform/browser.js\n ** module id = 194\n ** module chunks = 1\n **/","'use strict';var lang_1 = require('angular2/src/facade/lang');\r\nvar math_1 = require('angular2/src/facade/math');\r\nvar util_1 = require('angular2/src/platform/dom/util');\r\nvar collection_1 = require('angular2/src/facade/collection');\r\nvar dom_adapter_1 = require('angular2/src/platform/dom/dom_adapter');\r\nvar Animation = (function () {\r\n    /**\r\n     * Stores the start time and starts the animation\r\n     * @param element\r\n     * @param data\r\n     * @param browserDetails\r\n     */\r\n    function Animation(element, data, browserDetails) {\r\n        var _this = this;\r\n        this.element = element;\r\n        this.data = data;\r\n        this.browserDetails = browserDetails;\r\n        /** functions to be called upon completion */\r\n        this.callbacks = [];\r\n        /** functions for removing event listeners */\r\n        this.eventClearFunctions = [];\r\n        /** flag used to track whether or not the animation has finished */\r\n        this.completed = false;\r\n        this._stringPrefix = '';\r\n        this.startTime = lang_1.DateWrapper.toMillis(lang_1.DateWrapper.now());\r\n        this._stringPrefix = dom_adapter_1.DOM.getAnimationPrefix();\r\n        this.setup();\r\n        this.wait(function (timestamp) { return _this.start(); });\r\n    }\r\n    Object.defineProperty(Animation.prototype, \"totalTime\", {\r\n        /** total amount of time that the animation should take including delay */\r\n        get: function () {\r\n            var delay = this.computedDelay != null ? this.computedDelay : 0;\r\n            var duration = this.computedDuration != null ? this.computedDuration : 0;\r\n            return delay + duration;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Animation.prototype.wait = function (callback) {\r\n        // Firefox requires 2 frames for some reason\r\n        this.browserDetails.raf(callback, 2);\r\n    };\r\n    /**\r\n     * Sets up the initial styles before the animation is started\r\n     */\r\n    Animation.prototype.setup = function () {\r\n        if (this.data.fromStyles != null)\r\n            this.applyStyles(this.data.fromStyles);\r\n        if (this.data.duration != null)\r\n            this.applyStyles({ 'transitionDuration': this.data.duration.toString() + 'ms' });\r\n        if (this.data.delay != null)\r\n            this.applyStyles({ 'transitionDelay': this.data.delay.toString() + 'ms' });\r\n    };\r\n    /**\r\n     * After the initial setup has occurred, this method adds the animation styles\r\n     */\r\n    Animation.prototype.start = function () {\r\n        this.addClasses(this.data.classesToAdd);\r\n        this.addClasses(this.data.animationClasses);\r\n        this.removeClasses(this.data.classesToRemove);\r\n        if (this.data.toStyles != null)\r\n            this.applyStyles(this.data.toStyles);\r\n        var computedStyles = dom_adapter_1.DOM.getComputedStyle(this.element);\r\n        this.computedDelay =\r\n            math_1.Math.max(this.parseDurationString(computedStyles.getPropertyValue(this._stringPrefix + 'transition-delay')), this.parseDurationString(this.element.style.getPropertyValue(this._stringPrefix + 'transition-delay')));\r\n        this.computedDuration = math_1.Math.max(this.parseDurationString(computedStyles.getPropertyValue(this._stringPrefix + 'transition-duration')), this.parseDurationString(this.element.style.getPropertyValue(this._stringPrefix + 'transition-duration')));\r\n        this.addEvents();\r\n    };\r\n    /**\r\n     * Applies the provided styles to the element\r\n     * @param styles\r\n     */\r\n    Animation.prototype.applyStyles = function (styles) {\r\n        var _this = this;\r\n        collection_1.StringMapWrapper.forEach(styles, function (value, key) {\r\n            var dashCaseKey = util_1.camelCaseToDashCase(key);\r\n            if (lang_1.isPresent(dom_adapter_1.DOM.getStyle(_this.element, dashCaseKey))) {\r\n                dom_adapter_1.DOM.setStyle(_this.element, dashCaseKey, value.toString());\r\n            }\r\n            else {\r\n                dom_adapter_1.DOM.setStyle(_this.element, _this._stringPrefix + dashCaseKey, value.toString());\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Adds the provided classes to the element\r\n     * @param classes\r\n     */\r\n    Animation.prototype.addClasses = function (classes) {\r\n        for (var i = 0, len = classes.length; i < len; i++)\r\n            dom_adapter_1.DOM.addClass(this.element, classes[i]);\r\n    };\r\n    /**\r\n     * Removes the provided classes from the element\r\n     * @param classes\r\n     */\r\n    Animation.prototype.removeClasses = function (classes) {\r\n        for (var i = 0, len = classes.length; i < len; i++)\r\n            dom_adapter_1.DOM.removeClass(this.element, classes[i]);\r\n    };\r\n    /**\r\n     * Adds events to track when animations have finished\r\n     */\r\n    Animation.prototype.addEvents = function () {\r\n        var _this = this;\r\n        if (this.totalTime > 0) {\r\n            this.eventClearFunctions.push(dom_adapter_1.DOM.onAndCancel(this.element, dom_adapter_1.DOM.getTransitionEnd(), function (event) { return _this.handleAnimationEvent(event); }));\r\n        }\r\n        else {\r\n            this.handleAnimationCompleted();\r\n        }\r\n    };\r\n    Animation.prototype.handleAnimationEvent = function (event) {\r\n        var elapsedTime = math_1.Math.round(event.elapsedTime * 1000);\r\n        if (!this.browserDetails.elapsedTimeIncludesDelay)\r\n            elapsedTime += this.computedDelay;\r\n        event.stopPropagation();\r\n        if (elapsedTime >= this.totalTime)\r\n            this.handleAnimationCompleted();\r\n    };\r\n    /**\r\n     * Runs all animation callbacks and removes temporary classes\r\n     */\r\n    Animation.prototype.handleAnimationCompleted = function () {\r\n        this.removeClasses(this.data.animationClasses);\r\n        this.callbacks.forEach(function (callback) { return callback(); });\r\n        this.callbacks = [];\r\n        this.eventClearFunctions.forEach(function (fn) { return fn(); });\r\n        this.eventClearFunctions = [];\r\n        this.completed = true;\r\n    };\r\n    /**\r\n     * Adds animation callbacks to be called upon completion\r\n     * @param callback\r\n     * @returns {Animation}\r\n     */\r\n    Animation.prototype.onComplete = function (callback) {\r\n        if (this.completed) {\r\n            callback();\r\n        }\r\n        else {\r\n            this.callbacks.push(callback);\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Converts the duration string to the number of milliseconds\r\n     * @param duration\r\n     * @returns {number}\r\n     */\r\n    Animation.prototype.parseDurationString = function (duration) {\r\n        var maxValue = 0;\r\n        // duration must have at least 2 characters to be valid. (number + type)\r\n        if (duration == null || duration.length < 2) {\r\n            return maxValue;\r\n        }\r\n        else if (duration.substring(duration.length - 2) == 'ms') {\r\n            var value = lang_1.NumberWrapper.parseInt(this.stripLetters(duration), 10);\r\n            if (value > maxValue)\r\n                maxValue = value;\r\n        }\r\n        else if (duration.substring(duration.length - 1) == 's') {\r\n            var ms = lang_1.NumberWrapper.parseFloat(this.stripLetters(duration)) * 1000;\r\n            var value = math_1.Math.floor(ms);\r\n            if (value > maxValue)\r\n                maxValue = value;\r\n        }\r\n        return maxValue;\r\n    };\r\n    /**\r\n     * Strips the letters from the duration string\r\n     * @param str\r\n     * @returns {string}\r\n     */\r\n    Animation.prototype.stripLetters = function (str) {\r\n        return lang_1.StringWrapper.replaceAll(str, lang_1.RegExpWrapper.create('[^0-9]+$', ''), '');\r\n    };\r\n    return Animation;\r\n})();\r\nexports.Animation = Animation;\r\n//# sourceMappingURL=data:application/json;base64,\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/animate/animation.js\n ** module id = 195\n ** module chunks = 1\n **/","'use strict';var css_animation_options_1 = require('./css_animation_options');\r\nvar animation_1 = require('./animation');\r\nvar CssAnimationBuilder = (function () {\r\n    /**\r\n     * Accepts public properties for CssAnimationBuilder\r\n     */\r\n    function CssAnimationBuilder(browserDetails) {\r\n        this.browserDetails = browserDetails;\r\n        /** @type {CssAnimationOptions} */\r\n        this.data = new css_animation_options_1.CssAnimationOptions();\r\n    }\r\n    /**\r\n     * Adds a temporary class that will be removed at the end of the animation\r\n     * @param className\r\n     */\r\n    CssAnimationBuilder.prototype.addAnimationClass = function (className) {\r\n        this.data.animationClasses.push(className);\r\n        return this;\r\n    };\r\n    /**\r\n     * Adds a class that will remain on the element after the animation has finished\r\n     * @param className\r\n     */\r\n    CssAnimationBuilder.prototype.addClass = function (className) {\r\n        this.data.classesToAdd.push(className);\r\n        return this;\r\n    };\r\n    /**\r\n     * Removes a class from the element\r\n     * @param className\r\n     */\r\n    CssAnimationBuilder.prototype.removeClass = function (className) {\r\n        this.data.classesToRemove.push(className);\r\n        return this;\r\n    };\r\n    /**\r\n     * Sets the animation duration (and overrides any defined through CSS)\r\n     * @param duration\r\n     */\r\n    CssAnimationBuilder.prototype.setDuration = function (duration) {\r\n        this.data.duration = duration;\r\n        return this;\r\n    };\r\n    /**\r\n     * Sets the animation delay (and overrides any defined through CSS)\r\n     * @param delay\r\n     */\r\n    CssAnimationBuilder.prototype.setDelay = function (delay) {\r\n        this.data.delay = delay;\r\n        return this;\r\n    };\r\n    /**\r\n     * Sets styles for both the initial state and the destination state\r\n     * @param from\r\n     * @param to\r\n     */\r\n    CssAnimationBuilder.prototype.setStyles = function (from, to) {\r\n        return this.setFromStyles(from).setToStyles(to);\r\n    };\r\n    /**\r\n     * Sets the initial styles for the animation\r\n     * @param from\r\n     */\r\n    CssAnimationBuilder.prototype.setFromStyles = function (from) {\r\n        this.data.fromStyles = from;\r\n        return this;\r\n    };\r\n    /**\r\n     * Sets the destination styles for the animation\r\n     * @param to\r\n     */\r\n    CssAnimationBuilder.prototype.setToStyles = function (to) {\r\n        this.data.toStyles = to;\r\n        return this;\r\n    };\r\n    /**\r\n     * Starts the animation and returns a promise\r\n     * @param element\r\n     */\r\n    CssAnimationBuilder.prototype.start = function (element) {\r\n        return new animation_1.Animation(element, this.data, this.browserDetails);\r\n    };\r\n    return CssAnimationBuilder;\r\n})();\r\nexports.CssAnimationBuilder = CssAnimationBuilder;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3NzX2FuaW1hdGlvbl9idWlsZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYW5ndWxhcjIvc3JjL2FuaW1hdGUvY3NzX2FuaW1hdGlvbl9idWlsZGVyLnRzIl0sIm5hbWVzIjpbIkNzc0FuaW1hdGlvbkJ1aWxkZXIiLCJDc3NBbmltYXRpb25CdWlsZGVyLmNvbnN0cnVjdG9yIiwiQ3NzQW5pbWF0aW9uQnVpbGRlci5hZGRBbmltYXRpb25DbGFzcyIsIkNzc0FuaW1hdGlvbkJ1aWxkZXIuYWRkQ2xhc3MiLCJDc3NBbmltYXRpb25CdWlsZGVyLnJlbW92ZUNsYXNzIiwiQ3NzQW5pbWF0aW9uQnVpbGRlci5zZXREdXJhdGlvbiIsIkNzc0FuaW1hdGlvbkJ1aWxkZXIuc2V0RGVsYXkiLCJDc3NBbmltYXRpb25CdWlsZGVyLnNldFN0eWxlcyIsIkNzc0FuaW1hdGlvbkJ1aWxkZXIuc2V0RnJvbVN0eWxlcyIsIkNzc0FuaW1hdGlvbkJ1aWxkZXIuc2V0VG9TdHlsZXMiLCJDc3NBbmltYXRpb25CdWlsZGVyLnN0YXJ0Il0sIm1hcHBpbmdzIjoiQUFBQSxzQ0FBa0MseUJBQXlCLENBQUMsQ0FBQTtBQUM1RCwwQkFBd0IsYUFBYSxDQUFDLENBQUE7QUFHdEM7SUFJRUE7O09BRUdBO0lBQ0hBLDZCQUFtQkEsY0FBOEJBO1FBQTlCQyxtQkFBY0EsR0FBZEEsY0FBY0EsQ0FBZ0JBO1FBTmpEQSxrQ0FBa0NBO1FBQ2xDQSxTQUFJQSxHQUF3QkEsSUFBSUEsMkNBQW1CQSxFQUFFQSxDQUFDQTtJQUtGQSxDQUFDQTtJQUVyREQ7OztPQUdHQTtJQUNIQSwrQ0FBaUJBLEdBQWpCQSxVQUFrQkEsU0FBaUJBO1FBQ2pDRSxJQUFJQSxDQUFDQSxJQUFJQSxDQUFDQSxnQkFBZ0JBLENBQUNBLElBQUlBLENBQUNBLFNBQVNBLENBQUNBLENBQUNBO1FBQzNDQSxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQTtJQUNkQSxDQUFDQTtJQUVERjs7O09BR0dBO0lBQ0hBLHNDQUFRQSxHQUFSQSxVQUFTQSxTQUFpQkE7UUFDeEJHLElBQUlBLENBQUNBLElBQUlBLENBQUNBLFlBQVlBLENBQUNBLElBQUlBLENBQUNBLFNBQVNBLENBQUNBLENBQUNBO1FBQ3ZDQSxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQTtJQUNkQSxDQUFDQTtJQUVESDs7O09BR0dBO0lBQ0hBLHlDQUFXQSxHQUFYQSxVQUFZQSxTQUFpQkE7UUFDM0JJLElBQUlBLENBQUNBLElBQUlBLENBQUNBLGVBQWVBLENBQUNBLElBQUlBLENBQUNBLFNBQVNBLENBQUNBLENBQUNBO1FBQzFDQSxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQTtJQUNkQSxDQUFDQTtJQUVESjs7O09BR0dBO0lBQ0hBLHlDQUFXQSxHQUFYQSxVQUFZQSxRQUFnQkE7UUFDMUJLLElBQUlBLENBQUNBLElBQUlBLENBQUNBLFFBQVFBLEdBQUdBLFFBQVFBLENBQUNBO1FBQzlCQSxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQTtJQUNkQSxDQUFDQTtJQUVETDs7O09BR0dBO0lBQ0hBLHNDQUFRQSxHQUFSQSxVQUFTQSxLQUFhQTtRQUNwQk0sSUFBSUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsS0FBS0EsR0FBR0EsS0FBS0EsQ0FBQ0E7UUFDeEJBLE1BQU1BLENBQUNBLElBQUlBLENBQUNBO0lBQ2RBLENBQUNBO0lBRUROOzs7O09BSUdBO0lBQ0hBLHVDQUFTQSxHQUFUQSxVQUFVQSxJQUEwQkEsRUFBRUEsRUFBd0JBO1FBQzVETyxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQSxhQUFhQSxDQUFDQSxJQUFJQSxDQUFDQSxDQUFDQSxXQUFXQSxDQUFDQSxFQUFFQSxDQUFDQSxDQUFDQTtJQUNsREEsQ0FBQ0E7SUFFRFA7OztPQUdHQTtJQUNIQSwyQ0FBYUEsR0FBYkEsVUFBY0EsSUFBMEJBO1FBQ3RDUSxJQUFJQSxDQUFDQSxJQUFJQSxDQUFDQSxVQUFVQSxHQUFHQSxJQUFJQSxDQUFDQTtRQUM1QkEsTUFBTUEsQ0FBQ0EsSUFBSUEsQ0FBQ0E7SUFDZEEsQ0FBQ0E7SUFFRFI7OztPQUdHQTtJQUNIQSx5Q0FBV0EsR0FBWEEsVUFBWUEsRUFBd0JBO1FBQ2xDUyxJQUFJQSxDQUFDQSxJQUFJQSxDQUFDQSxRQUFRQSxHQUFHQSxFQUFFQSxDQUFDQTtRQUN4QkEsTUFBTUEsQ0FBQ0EsSUFBSUEsQ0FBQ0E7SUFDZEEsQ0FBQ0E7SUFFRFQ7OztPQUdHQTtJQUNIQSxtQ0FBS0EsR0FBTEEsVUFBTUEsT0FBb0JBO1FBQ3hCVSxNQUFNQSxDQUFDQSxJQUFJQSxxQkFBU0EsQ0FBQ0EsT0FBT0EsRUFBRUEsSUFBSUEsQ0FBQ0EsSUFBSUEsRUFBRUEsSUFBSUEsQ0FBQ0EsY0FBY0EsQ0FBQ0EsQ0FBQ0E7SUFDaEVBLENBQUNBO0lBQ0hWLDBCQUFDQTtBQUFEQSxDQUFDQSxBQXhGRCxJQXdGQztBQXhGWSwyQkFBbUIsc0JBd0YvQixDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDc3NBbmltYXRpb25PcHRpb25zfSBmcm9tICcuL2Nzc19hbmltYXRpb25fb3B0aW9ucyc7XG5pbXBvcnQge0FuaW1hdGlvbn0gZnJvbSAnLi9hbmltYXRpb24nO1xuaW1wb3J0IHtCcm93c2VyRGV0YWlsc30gZnJvbSAnLi9icm93c2VyX2RldGFpbHMnO1xuXG5leHBvcnQgY2xhc3MgQ3NzQW5pbWF0aW9uQnVpbGRlciB7XG4gIC8qKiBAdHlwZSB7Q3NzQW5pbWF0aW9uT3B0aW9uc30gKi9cbiAgZGF0YTogQ3NzQW5pbWF0aW9uT3B0aW9ucyA9IG5ldyBDc3NBbmltYXRpb25PcHRpb25zKCk7XG5cbiAgLyoqXG4gICAqIEFjY2VwdHMgcHVibGljIHByb3BlcnRpZXMgZm9yIENzc0FuaW1hdGlvbkJ1aWxkZXJcbiAgICovXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBicm93c2VyRGV0YWlsczogQnJvd3NlckRldGFpbHMpIHt9XG5cbiAgLyoqXG4gICAqIEFkZHMgYSB0ZW1wb3JhcnkgY2xhc3MgdGhhdCB3aWxsIGJlIHJlbW92ZWQgYXQgdGhlIGVuZCBvZiB0aGUgYW5pbWF0aW9uXG4gICAqIEBwYXJhbSBjbGFzc05hbWVcbiAgICovXG4gIGFkZEFuaW1hdGlvbkNsYXNzKGNsYXNzTmFtZTogc3RyaW5nKTogQ3NzQW5pbWF0aW9uQnVpbGRlciB7XG4gICAgdGhpcy5kYXRhLmFuaW1hdGlvbkNsYXNzZXMucHVzaChjbGFzc05hbWUpO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgLyoqXG4gICAqIEFkZHMgYSBjbGFzcyB0aGF0IHdpbGwgcmVtYWluIG9uIHRoZSBlbGVtZW50IGFmdGVyIHRoZSBhbmltYXRpb24gaGFzIGZpbmlzaGVkXG4gICAqIEBwYXJhbSBjbGFzc05hbWVcbiAgICovXG4gIGFkZENsYXNzKGNsYXNzTmFtZTogc3RyaW5nKTogQ3NzQW5pbWF0aW9uQnVpbGRlciB7XG4gICAgdGhpcy5kYXRhLmNsYXNzZXNUb0FkZC5wdXNoKGNsYXNzTmFtZSk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICAvKipcbiAgICogUmVtb3ZlcyBhIGNsYXNzIGZyb20gdGhlIGVsZW1lbnRcbiAgICogQHBhcmFtIGNsYXNzTmFtZVxuICAgKi9cbiAgcmVtb3ZlQ2xhc3MoY2xhc3NOYW1lOiBzdHJpbmcpOiBDc3NBbmltYXRpb25CdWlsZGVyIHtcbiAgICB0aGlzLmRhdGEuY2xhc3Nlc1RvUmVtb3ZlLnB1c2goY2xhc3NOYW1lKTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIC8qKlxuICAgKiBTZXRzIHRoZSBhbmltYXRpb24gZHVyYXRpb24gKGFuZCBvdmVycmlkZXMgYW55IGRlZmluZWQgdGhyb3VnaCBDU1MpXG4gICAqIEBwYXJhbSBkdXJhdGlvblxuICAgKi9cbiAgc2V0RHVyYXRpb24oZHVyYXRpb246IG51bWJlcik6IENzc0FuaW1hdGlvbkJ1aWxkZXIge1xuICAgIHRoaXMuZGF0YS5kdXJhdGlvbiA9IGR1cmF0aW9uO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgLyoqXG4gICAqIFNldHMgdGhlIGFuaW1hdGlvbiBkZWxheSAoYW5kIG92ZXJyaWRlcyBhbnkgZGVmaW5lZCB0aHJvdWdoIENTUylcbiAgICogQHBhcmFtIGRlbGF5XG4gICAqL1xuICBzZXREZWxheShkZWxheTogbnVtYmVyKTogQ3NzQW5pbWF0aW9uQnVpbGRlciB7XG4gICAgdGhpcy5kYXRhLmRlbGF5ID0gZGVsYXk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICAvKipcbiAgICogU2V0cyBzdHlsZXMgZm9yIGJvdGggdGhlIGluaXRpYWwgc3RhdGUgYW5kIHRoZSBkZXN0aW5hdGlvbiBzdGF0ZVxuICAgKiBAcGFyYW0gZnJvbVxuICAgKiBAcGFyYW0gdG9cbiAgICovXG4gIHNldFN0eWxlcyhmcm9tOiB7W2tleTogc3RyaW5nXTogYW55fSwgdG86IHtba2V5OiBzdHJpbmddOiBhbnl9KTogQ3NzQW5pbWF0aW9uQnVpbGRlciB7XG4gICAgcmV0dXJuIHRoaXMuc2V0RnJvbVN0eWxlcyhmcm9tKS5zZXRUb1N0eWxlcyh0byk7XG4gIH1cblxuICAvKipcbiAgICogU2V0cyB0aGUgaW5pdGlhbCBzdHlsZXMgZm9yIHRoZSBhbmltYXRpb25cbiAgICogQHBhcmFtIGZyb21cbiAgICovXG4gIHNldEZyb21TdHlsZXMoZnJvbToge1trZXk6IHN0cmluZ106IGFueX0pOiBDc3NBbmltYXRpb25CdWlsZGVyIHtcbiAgICB0aGlzLmRhdGEuZnJvbVN0eWxlcyA9IGZyb207XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICAvKipcbiAgICogU2V0cyB0aGUgZGVzdGluYXRpb24gc3R5bGVzIGZvciB0aGUgYW5pbWF0aW9uXG4gICAqIEBwYXJhbSB0b1xuICAgKi9cbiAgc2V0VG9TdHlsZXModG86IHtba2V5OiBzdHJpbmddOiBhbnl9KTogQ3NzQW5pbWF0aW9uQnVpbGRlciB7XG4gICAgdGhpcy5kYXRhLnRvU3R5bGVzID0gdG87XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICAvKipcbiAgICogU3RhcnRzIHRoZSBhbmltYXRpb24gYW5kIHJldHVybnMgYSBwcm9taXNlXG4gICAqIEBwYXJhbSBlbGVtZW50XG4gICAqL1xuICBzdGFydChlbGVtZW50OiBIVE1MRWxlbWVudCk6IEFuaW1hdGlvbiB7XG4gICAgcmV0dXJuIG5ldyBBbmltYXRpb24oZWxlbWVudCwgdGhpcy5kYXRhLCB0aGlzLmJyb3dzZXJEZXRhaWxzKTtcbiAgfVxufVxuIl19\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/animate/css_animation_builder.js\n ** module id = 196\n ** module chunks = 1\n **/","'use strict';var CssAnimationOptions = (function () {\r\n    function CssAnimationOptions() {\r\n        /** classes to be added to the element */\r\n        this.classesToAdd = [];\r\n        /** classes to be removed from the element */\r\n        this.classesToRemove = [];\r\n        /** classes to be added for the duration of the animation */\r\n        this.animationClasses = [];\r\n    }\r\n    return CssAnimationOptions;\r\n})();\r\nexports.CssAnimationOptions = CssAnimationOptions;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3NzX2FuaW1hdGlvbl9vcHRpb25zLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYW5ndWxhcjIvc3JjL2FuaW1hdGUvY3NzX2FuaW1hdGlvbl9vcHRpb25zLnRzIl0sIm5hbWVzIjpbIkNzc0FuaW1hdGlvbk9wdGlvbnMiLCJDc3NBbmltYXRpb25PcHRpb25zLmNvbnN0cnVjdG9yIl0sIm1hcHBpbmdzIjoiQUFBQTtJQUFBQTtRQU9FQyx5Q0FBeUNBO1FBQ3pDQSxpQkFBWUEsR0FBYUEsRUFBRUEsQ0FBQ0E7UUFFNUJBLDZDQUE2Q0E7UUFDN0NBLG9CQUFlQSxHQUFhQSxFQUFFQSxDQUFDQTtRQUUvQkEsNERBQTREQTtRQUM1REEscUJBQWdCQSxHQUFhQSxFQUFFQSxDQUFDQTtJQU9sQ0EsQ0FBQ0E7SUFBREQsMEJBQUNBO0FBQURBLENBQUNBLEFBckJELElBcUJDO0FBckJZLDJCQUFtQixzQkFxQi9CLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgQ3NzQW5pbWF0aW9uT3B0aW9ucyB7XG4gIC8qKiBpbml0aWFsIHN0eWxlcyBmb3IgdGhlIGVsZW1lbnQgKi9cbiAgZnJvbVN0eWxlczoge1trZXk6IHN0cmluZ106IGFueX07XG5cbiAgLyoqIGRlc3RpbmF0aW9uIHN0eWxlcyBmb3IgdGhlIGVsZW1lbnQgKi9cbiAgdG9TdHlsZXM6IHtba2V5OiBzdHJpbmddOiBhbnl9O1xuXG4gIC8qKiBjbGFzc2VzIHRvIGJlIGFkZGVkIHRvIHRoZSBlbGVtZW50ICovXG4gIGNsYXNzZXNUb0FkZDogc3RyaW5nW10gPSBbXTtcblxuICAvKiogY2xhc3NlcyB0byBiZSByZW1vdmVkIGZyb20gdGhlIGVsZW1lbnQgKi9cbiAgY2xhc3Nlc1RvUmVtb3ZlOiBzdHJpbmdbXSA9IFtdO1xuXG4gIC8qKiBjbGFzc2VzIHRvIGJlIGFkZGVkIGZvciB0aGUgZHVyYXRpb24gb2YgdGhlIGFuaW1hdGlvbiAqL1xuICBhbmltYXRpb25DbGFzc2VzOiBzdHJpbmdbXSA9IFtdO1xuXG4gIC8qKiBvdmVycmlkZSB0aGUgZHVyYXRpb24gb2YgdGhlIGFuaW1hdGlvbiAoaW4gbWlsbGlzZWNvbmRzKSAqL1xuICBkdXJhdGlvbjogbnVtYmVyO1xuXG4gIC8qKiBvdmVycmlkZSB0aGUgdHJhbnNpdGlvbiBkZWxheSAoaW4gbWlsbGlzZWNvbmRzKSAqL1xuICBkZWxheTogbnVtYmVyO1xufVxuIl19\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/animate/css_animation_options.js\n ** module id = 197\n ** module chunks = 1\n **/","'use strict';var collection_1 = require('angular2/src/facade/collection');\r\nvar lang_1 = require('angular2/src/facade/lang');\r\nvar reflection_1 = require('angular2/src/core/reflection/reflection');\r\nvar change_detection_1 = require('angular2/src/core/change_detection/change_detection');\r\nvar template_ast_1 = require('./template_ast');\r\nvar interfaces_1 = require('angular2/src/core/linker/interfaces');\r\nfunction createChangeDetectorDefinitions(componentType, componentStrategy, genConfig, parsedTemplate) {\r\n    var pvVisitors = [];\r\n    var visitor = new ProtoViewVisitor(null, pvVisitors, componentStrategy);\r\n    template_ast_1.templateVisitAll(visitor, parsedTemplate);\r\n    return createChangeDefinitions(pvVisitors, componentType, genConfig);\r\n}\r\nexports.createChangeDetectorDefinitions = createChangeDetectorDefinitions;\r\nvar ProtoViewVisitor = (function () {\r\n    function ProtoViewVisitor(parent, allVisitors, strategy) {\r\n        this.parent = parent;\r\n        this.allVisitors = allVisitors;\r\n        this.strategy = strategy;\r\n        this.nodeCount = 0;\r\n        this.boundElementCount = 0;\r\n        this.variableNames = [];\r\n        this.bindingRecords = [];\r\n        this.eventRecords = [];\r\n        this.directiveRecords = [];\r\n        this.viewIndex = allVisitors.length;\r\n        allVisitors.push(this);\r\n    }\r\n    ProtoViewVisitor.prototype.visitEmbeddedTemplate = function (ast, context) {\r\n        this.nodeCount++;\r\n        this.boundElementCount++;\r\n        template_ast_1.templateVisitAll(this, ast.outputs);\r\n        for (var i = 0; i < ast.directives.length; i++) {\r\n            ast.directives[i].visit(this, i);\r\n        }\r\n        var childVisitor = new ProtoViewVisitor(this, this.allVisitors, change_detection_1.ChangeDetectionStrategy.Default);\r\n        // Attention: variables present on an embedded template count towards\r\n        // the embedded template and not the template anchor!\r\n        template_ast_1.templateVisitAll(childVisitor, ast.vars);\r\n        template_ast_1.templateVisitAll(childVisitor, ast.children);\r\n        return null;\r\n    };\r\n    ProtoViewVisitor.prototype.visitElement = function (ast, context) {\r\n        this.nodeCount++;\r\n        if (ast.isBound()) {\r\n            this.boundElementCount++;\r\n        }\r\n        template_ast_1.templateVisitAll(this, ast.inputs, null);\r\n        template_ast_1.templateVisitAll(this, ast.outputs);\r\n        template_ast_1.templateVisitAll(this, ast.exportAsVars);\r\n        for (var i = 0; i < ast.directives.length; i++) {\r\n            ast.directives[i].visit(this, i);\r\n        }\r\n        template_ast_1.templateVisitAll(this, ast.children);\r\n        return null;\r\n    };\r\n    ProtoViewVisitor.prototype.visitNgContent = function (ast, context) { return null; };\r\n    ProtoViewVisitor.prototype.visitVariable = function (ast, context) {\r\n        this.variableNames.push(ast.name);\r\n        return null;\r\n    };\r\n    ProtoViewVisitor.prototype.visitEvent = function (ast, directiveRecord) {\r\n        var bindingRecord = lang_1.isPresent(directiveRecord) ?\r\n            change_detection_1.BindingRecord.createForHostEvent(ast.handler, ast.fullName, directiveRecord) :\r\n            change_detection_1.BindingRecord.createForEvent(ast.handler, ast.fullName, this.boundElementCount - 1);\r\n        this.eventRecords.push(bindingRecord);\r\n        return null;\r\n    };\r\n    ProtoViewVisitor.prototype.visitElementProperty = function (ast, directiveRecord) {\r\n        var boundElementIndex = this.boundElementCount - 1;\r\n        var dirIndex = lang_1.isPresent(directiveRecord) ? directiveRecord.directiveIndex : null;\r\n        var bindingRecord;\r\n        if (ast.type === template_ast_1.PropertyBindingType.Property) {\r\n            bindingRecord =\r\n                lang_1.isPresent(dirIndex) ?\r\n                    change_detection_1.BindingRecord.createForHostProperty(dirIndex, ast.value, ast.name) :\r\n                    change_detection_1.BindingRecord.createForElementProperty(ast.value, boundElementIndex, ast.name);\r\n        }\r\n        else if (ast.type === template_ast_1.PropertyBindingType.Attribute) {\r\n            bindingRecord =\r\n                lang_1.isPresent(dirIndex) ?\r\n                    change_detection_1.BindingRecord.createForHostAttribute(dirIndex, ast.value, ast.name) :\r\n                    change_detection_1.BindingRecord.createForElementAttribute(ast.value, boundElementIndex, ast.name);\r\n        }\r\n        else if (ast.type === template_ast_1.PropertyBindingType.Class) {\r\n            bindingRecord =\r\n                lang_1.isPresent(dirIndex) ?\r\n                    change_detection_1.BindingRecord.createForHostClass(dirIndex, ast.value, ast.name) :\r\n                    change_detection_1.BindingRecord.createForElementClass(ast.value, boundElementIndex, ast.name);\r\n        }\r\n        else if (ast.type === template_ast_1.PropertyBindingType.Style) {\r\n            bindingRecord =\r\n                lang_1.isPresent(dirIndex) ?\r\n                    change_detection_1.BindingRecord.createForHostStyle(dirIndex, ast.value, ast.name, ast.unit) :\r\n                    change_detection_1.BindingRecord.createForElementStyle(ast.value, boundElementIndex, ast.name, ast.unit);\r\n        }\r\n        this.bindingRecords.push(bindingRecord);\r\n        return null;\r\n    };\r\n    ProtoViewVisitor.prototype.visitAttr = function (ast, context) { return null; };\r\n    ProtoViewVisitor.prototype.visitBoundText = function (ast, context) {\r\n        var nodeIndex = this.nodeCount++;\r\n        this.bindingRecords.push(change_detection_1.BindingRecord.createForTextNode(ast.value, nodeIndex));\r\n        return null;\r\n    };\r\n    ProtoViewVisitor.prototype.visitText = function (ast, context) {\r\n        this.nodeCount++;\r\n        return null;\r\n    };\r\n    ProtoViewVisitor.prototype.visitDirective = function (ast, directiveIndexAsNumber) {\r\n        var directiveIndex = new change_detection_1.DirectiveIndex(this.boundElementCount - 1, directiveIndexAsNumber);\r\n        var directiveMetadata = ast.directive;\r\n        var outputsArray = [];\r\n        collection_1.StringMapWrapper.forEach(ast.directive.outputs, function (eventName, dirProperty) { return outputsArray.push([dirProperty, eventName]); });\r\n        var directiveRecord = new change_detection_1.DirectiveRecord({\r\n            directiveIndex: directiveIndex,\r\n            callAfterContentInit: directiveMetadata.lifecycleHooks.indexOf(interfaces_1.LifecycleHooks.AfterContentInit) !== -1,\r\n            callAfterContentChecked: directiveMetadata.lifecycleHooks.indexOf(interfaces_1.LifecycleHooks.AfterContentChecked) !== -1,\r\n            callAfterViewInit: directiveMetadata.lifecycleHooks.indexOf(interfaces_1.LifecycleHooks.AfterViewInit) !== -1,\r\n            callAfterViewChecked: directiveMetadata.lifecycleHooks.indexOf(interfaces_1.LifecycleHooks.AfterViewChecked) !== -1,\r\n            callOnChanges: directiveMetadata.lifecycleHooks.indexOf(interfaces_1.LifecycleHooks.OnChanges) !== -1,\r\n            callDoCheck: directiveMetadata.lifecycleHooks.indexOf(interfaces_1.LifecycleHooks.DoCheck) !== -1,\r\n            callOnInit: directiveMetadata.lifecycleHooks.indexOf(interfaces_1.LifecycleHooks.OnInit) !== -1,\r\n            callOnDestroy: directiveMetadata.lifecycleHooks.indexOf(interfaces_1.LifecycleHooks.OnDestroy) !== -1,\r\n            changeDetection: directiveMetadata.changeDetection,\r\n            outputs: outputsArray\r\n        });\r\n        this.directiveRecords.push(directiveRecord);\r\n        template_ast_1.templateVisitAll(this, ast.inputs, directiveRecord);\r\n        var bindingRecords = this.bindingRecords;\r\n        if (directiveRecord.callOnChanges) {\r\n            bindingRecords.push(change_detection_1.BindingRecord.createDirectiveOnChanges(directiveRecord));\r\n        }\r\n        if (directiveRecord.callOnInit) {\r\n            bindingRecords.push(change_detection_1.BindingRecord.createDirectiveOnInit(directiveRecord));\r\n        }\r\n        if (directiveRecord.callDoCheck) {\r\n            bindingRecords.push(change_detection_1.BindingRecord.createDirectiveDoCheck(directiveRecord));\r\n        }\r\n        template_ast_1.templateVisitAll(this, ast.hostProperties, directiveRecord);\r\n        template_ast_1.templateVisitAll(this, ast.hostEvents, directiveRecord);\r\n        template_ast_1.templateVisitAll(this, ast.exportAsVars);\r\n        return null;\r\n    };\r\n    ProtoViewVisitor.prototype.visitDirectiveProperty = function (ast, directiveRecord) {\r\n        // TODO: these setters should eventually be created by change detection, to make\r\n        // it monomorphic!\r\n        var setter = reflection_1.reflector.setter(ast.directiveName);\r\n        this.bindingRecords.push(change_detection_1.BindingRecord.createForDirective(ast.value, ast.directiveName, setter, directiveRecord));\r\n        return null;\r\n    };\r\n    return ProtoViewVisitor;\r\n})();\r\nfunction createChangeDefinitions(pvVisitors, componentType, genConfig) {\r\n    var pvVariableNames = _collectNestedProtoViewsVariableNames(pvVisitors);\r\n    return pvVisitors.map(function (pvVisitor) {\r\n        var id = componentType.name + \"_\" + pvVisitor.viewIndex;\r\n        return new change_detection_1.ChangeDetectorDefinition(id, pvVisitor.strategy, pvVariableNames[pvVisitor.viewIndex], pvVisitor.bindingRecords, pvVisitor.eventRecords, pvVisitor.directiveRecords, genConfig);\r\n    });\r\n}\r\nfunction _collectNestedProtoViewsVariableNames(pvVisitors) {\r\n    var nestedPvVariableNames = collection_1.ListWrapper.createFixedSize(pvVisitors.length);\r\n    pvVisitors.forEach(function (pv) {\r\n        var parentVariableNames = lang_1.isPresent(pv.parent) ? nestedPvVariableNames[pv.parent.viewIndex] : [];\r\n        nestedPvVariableNames[pv.viewIndex] = parentVariableNames.concat(pv.variableNames);\r\n    });\r\n    return nestedPvVariableNames;\r\n}\r\n//# sourceMappingURL=data:application/json;base64,\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/compiler/change_definition_factory.js\n ** module id = 205\n ** module chunks = 1\n **/","'use strict';function __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nvar runtime_compiler_1 = require(\"./runtime_compiler\");\r\nvar template_compiler_1 = require('./template_compiler');\r\nexports.TemplateCompiler = template_compiler_1.TemplateCompiler;\r\nvar directive_metadata_1 = require('./directive_metadata');\r\nexports.CompileDirectiveMetadata = directive_metadata_1.CompileDirectiveMetadata;\r\nexports.CompileTypeMetadata = directive_metadata_1.CompileTypeMetadata;\r\nexports.CompileTemplateMetadata = directive_metadata_1.CompileTemplateMetadata;\r\nvar source_module_1 = require('./source_module');\r\nexports.SourceModule = source_module_1.SourceModule;\r\nexports.SourceWithImports = source_module_1.SourceWithImports;\r\nvar platform_directives_and_pipes_1 = require('angular2/src/core/platform_directives_and_pipes');\r\nexports.PLATFORM_DIRECTIVES = platform_directives_and_pipes_1.PLATFORM_DIRECTIVES;\r\nexports.PLATFORM_PIPES = platform_directives_and_pipes_1.PLATFORM_PIPES;\r\n__export(require('angular2/src/compiler/template_ast'));\r\nvar template_parser_1 = require('angular2/src/compiler/template_parser');\r\nexports.TEMPLATE_TRANSFORMS = template_parser_1.TEMPLATE_TRANSFORMS;\r\nvar lang_1 = require('angular2/src/facade/lang');\r\nvar di_1 = require('angular2/src/core/di');\r\nvar template_parser_2 = require('angular2/src/compiler/template_parser');\r\nvar html_parser_1 = require('angular2/src/compiler/html_parser');\r\nvar template_normalizer_1 = require('angular2/src/compiler/template_normalizer');\r\nvar runtime_metadata_1 = require('angular2/src/compiler/runtime_metadata');\r\nvar change_detector_compiler_1 = require('angular2/src/compiler/change_detector_compiler');\r\nvar style_compiler_1 = require('angular2/src/compiler/style_compiler');\r\nvar view_compiler_1 = require('angular2/src/compiler/view_compiler');\r\nvar proto_view_compiler_1 = require('angular2/src/compiler/proto_view_compiler');\r\nvar template_compiler_2 = require('angular2/src/compiler/template_compiler');\r\nvar change_detection_1 = require('angular2/src/core/change_detection/change_detection');\r\nvar compiler_1 = require('angular2/src/core/linker/compiler');\r\nvar runtime_compiler_2 = require('angular2/src/compiler/runtime_compiler');\r\nvar element_schema_registry_1 = require('angular2/src/compiler/schema/element_schema_registry');\r\nvar dom_element_schema_registry_1 = require('angular2/src/compiler/schema/dom_element_schema_registry');\r\nvar url_resolver_1 = require('angular2/src/compiler/url_resolver');\r\nvar change_detection_2 = require('angular2/src/core/change_detection/change_detection');\r\nfunction _createChangeDetectorGenConfig() {\r\n    return new change_detection_1.ChangeDetectorGenConfig(lang_1.assertionsEnabled(), false, true);\r\n}\r\n/**\r\n * A set of providers that provide `RuntimeCompiler` and its dependencies to use for\r\n * template compilation.\r\n */\r\nexports.COMPILER_PROVIDERS = lang_1.CONST_EXPR([\r\n    change_detection_2.Lexer,\r\n    change_detection_2.Parser,\r\n    html_parser_1.HtmlParser,\r\n    template_parser_2.TemplateParser,\r\n    template_normalizer_1.TemplateNormalizer,\r\n    runtime_metadata_1.RuntimeMetadataResolver,\r\n    url_resolver_1.DEFAULT_PACKAGE_URL_PROVIDER,\r\n    style_compiler_1.StyleCompiler,\r\n    proto_view_compiler_1.ProtoViewCompiler,\r\n    view_compiler_1.ViewCompiler,\r\n    change_detector_compiler_1.ChangeDetectionCompiler,\r\n    new di_1.Provider(change_detection_1.ChangeDetectorGenConfig, { useFactory: _createChangeDetectorGenConfig, deps: [] }),\r\n    template_compiler_2.TemplateCompiler,\r\n    new di_1.Provider(runtime_compiler_2.RuntimeCompiler, { useClass: runtime_compiler_1.RuntimeCompiler_ }),\r\n    new di_1.Provider(compiler_1.Compiler, { useExisting: runtime_compiler_2.RuntimeCompiler }),\r\n    dom_element_schema_registry_1.DomElementSchemaRegistry,\r\n    new di_1.Provider(element_schema_registry_1.ElementSchemaRegistry, { useExisting: dom_element_schema_registry_1.DomElementSchemaRegistry }),\r\n    url_resolver_1.UrlResolver\r\n]);\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcGlsZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJhbmd1bGFyMi9zcmMvY29tcGlsZXIvY29tcGlsZXIudHMiXSwibmFtZXMiOlsiX2NyZWF0ZUNoYW5nZURldGVjdG9yR2VuQ29uZmlnIl0sIm1hcHBpbmdzIjoiOzs7QUFBQSxpQ0FBK0Isb0JBQW9CLENBQUMsQ0FBQTtBQUNwRCxrQ0FBK0IscUJBQXFCLENBQUM7QUFBN0MsZ0VBQTZDO0FBQ3JELG1DQUlPLHNCQUFzQixDQUFDO0FBSDVCLGlGQUF3QjtBQUN4Qix1RUFBbUI7QUFDbkIsK0VBQzRCO0FBQzlCLDhCQUE4QyxpQkFBaUIsQ0FBQztBQUF4RCxvREFBWTtBQUFFLDhEQUEwQztBQUNoRSw4Q0FBa0QsaURBQWlELENBQUM7QUFBNUYsa0ZBQW1CO0FBQUUsd0VBQXVFO0FBQ3BHLGlCQUFjLG9DQUFvQyxDQUFDLEVBQUE7QUFDbkQsZ0NBQWtDLHVDQUF1QyxDQUFDO0FBQWxFLG9FQUFrRTtBQUMxRSxxQkFBa0QsMEJBQTBCLENBQUMsQ0FBQTtBQUM3RSxtQkFBZ0Msc0JBQXNCLENBQUMsQ0FBQTtBQUN2RCxnQ0FBNkIsdUNBQXVDLENBQUMsQ0FBQTtBQUNyRSw0QkFBeUIsbUNBQW1DLENBQUMsQ0FBQTtBQUM3RCxvQ0FBaUMsMkNBQTJDLENBQUMsQ0FBQTtBQUM3RSxpQ0FBc0Msd0NBQXdDLENBQUMsQ0FBQTtBQUMvRSx5Q0FBc0MsZ0RBQWdELENBQUMsQ0FBQTtBQUN2RiwrQkFBNEIsc0NBQXNDLENBQUMsQ0FBQTtBQUNuRSw4QkFBMkIscUNBQXFDLENBQUMsQ0FBQTtBQUNqRSxvQ0FBZ0MsMkNBQTJDLENBQUMsQ0FBQTtBQUM1RSxrQ0FBK0IseUNBQXlDLENBQUMsQ0FBQTtBQUN6RSxpQ0FBc0MscURBQXFELENBQUMsQ0FBQTtBQUM1Rix5QkFBdUIsbUNBQW1DLENBQUMsQ0FBQTtBQUMzRCxpQ0FBOEIsd0NBQXdDLENBQUMsQ0FBQTtBQUN2RSx3Q0FBb0Msc0RBQXNELENBQUMsQ0FBQTtBQUMzRiw0Q0FBdUMsMERBQTBELENBQUMsQ0FBQTtBQUNsRyw2QkFBd0Qsb0NBQW9DLENBQUMsQ0FBQTtBQUM3RixpQ0FBNEIscURBQXFELENBQUMsQ0FBQTtBQUVsRjtJQUNFQSxNQUFNQSxDQUFDQSxJQUFJQSwwQ0FBdUJBLENBQUNBLHdCQUFpQkEsRUFBRUEsRUFBRUEsS0FBS0EsRUFBRUEsSUFBSUEsQ0FBQ0EsQ0FBQ0E7QUFDdkVBLENBQUNBO0FBRUQ7OztHQUdHO0FBQ1UsMEJBQWtCLEdBQW1DLGlCQUFVLENBQUM7SUFDM0Usd0JBQUs7SUFDTCx5QkFBTTtJQUNOLHdCQUFVO0lBQ1YsZ0NBQWM7SUFDZCx3Q0FBa0I7SUFDbEIsMENBQXVCO0lBQ3ZCLDJDQUE0QjtJQUM1Qiw4QkFBYTtJQUNiLHVDQUFpQjtJQUNqQiw0QkFBWTtJQUNaLGtEQUF1QjtJQUN2QixJQUFJLGFBQVEsQ0FBQywwQ0FBdUIsRUFBRSxFQUFDLFVBQVUsRUFBRSw4QkFBOEIsRUFBRSxJQUFJLEVBQUUsRUFBRSxFQUFDLENBQUM7SUFDN0Ysb0NBQWdCO0lBQ2hCLElBQUksYUFBUSxDQUFDLGtDQUFlLEVBQUUsRUFBQyxRQUFRLEVBQUUsbUNBQWdCLEVBQUMsQ0FBQztJQUMzRCxJQUFJLGFBQVEsQ0FBQyxtQkFBUSxFQUFFLEVBQUMsV0FBVyxFQUFFLGtDQUFlLEVBQUMsQ0FBQztJQUN0RCxzREFBd0I7SUFDeEIsSUFBSSxhQUFRLENBQUMsK0NBQXFCLEVBQUUsRUFBQyxXQUFXLEVBQUUsc0RBQXdCLEVBQUMsQ0FBQztJQUM1RSwwQkFBVztDQUNaLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7UnVudGltZUNvbXBpbGVyX30gZnJvbSBcIi4vcnVudGltZV9jb21waWxlclwiO1xuZXhwb3J0IHtUZW1wbGF0ZUNvbXBpbGVyfSBmcm9tICcuL3RlbXBsYXRlX2NvbXBpbGVyJztcbmV4cG9ydCB7XG4gIENvbXBpbGVEaXJlY3RpdmVNZXRhZGF0YSxcbiAgQ29tcGlsZVR5cGVNZXRhZGF0YSxcbiAgQ29tcGlsZVRlbXBsYXRlTWV0YWRhdGFcbn0gZnJvbSAnLi9kaXJlY3RpdmVfbWV0YWRhdGEnO1xuZXhwb3J0IHtTb3VyY2VNb2R1bGUsIFNvdXJjZVdpdGhJbXBvcnRzfSBmcm9tICcuL3NvdXJjZV9tb2R1bGUnO1xuZXhwb3J0IHtQTEFURk9STV9ESVJFQ1RJVkVTLCBQTEFURk9STV9QSVBFU30gZnJvbSAnYW5ndWxhcjIvc3JjL2NvcmUvcGxhdGZvcm1fZGlyZWN0aXZlc19hbmRfcGlwZXMnO1xuZXhwb3J0ICogZnJvbSAnYW5ndWxhcjIvc3JjL2NvbXBpbGVyL3RlbXBsYXRlX2FzdCc7XG5leHBvcnQge1RFTVBMQVRFX1RSQU5TRk9STVN9IGZyb20gJ2FuZ3VsYXIyL3NyYy9jb21waWxlci90ZW1wbGF0ZV9wYXJzZXInO1xuaW1wb3J0IHthc3NlcnRpb25zRW5hYmxlZCwgVHlwZSwgQ09OU1RfRVhQUn0gZnJvbSAnYW5ndWxhcjIvc3JjL2ZhY2FkZS9sYW5nJztcbmltcG9ydCB7cHJvdmlkZSwgUHJvdmlkZXJ9IGZyb20gJ2FuZ3VsYXIyL3NyYy9jb3JlL2RpJztcbmltcG9ydCB7VGVtcGxhdGVQYXJzZXJ9IGZyb20gJ2FuZ3VsYXIyL3NyYy9jb21waWxlci90ZW1wbGF0ZV9wYXJzZXInO1xuaW1wb3J0IHtIdG1sUGFyc2VyfSBmcm9tICdhbmd1bGFyMi9zcmMvY29tcGlsZXIvaHRtbF9wYXJzZXInO1xuaW1wb3J0IHtUZW1wbGF0ZU5vcm1hbGl6ZXJ9IGZyb20gJ2FuZ3VsYXIyL3NyYy9jb21waWxlci90ZW1wbGF0ZV9ub3JtYWxpemVyJztcbmltcG9ydCB7UnVudGltZU1ldGFkYXRhUmVzb2x2ZXJ9IGZyb20gJ2FuZ3VsYXIyL3NyYy9jb21waWxlci9ydW50aW1lX21ldGFkYXRhJztcbmltcG9ydCB7Q2hhbmdlRGV0ZWN0aW9uQ29tcGlsZXJ9IGZyb20gJ2FuZ3VsYXIyL3NyYy9jb21waWxlci9jaGFuZ2VfZGV0ZWN0b3JfY29tcGlsZXInO1xuaW1wb3J0IHtTdHlsZUNvbXBpbGVyfSBmcm9tICdhbmd1bGFyMi9zcmMvY29tcGlsZXIvc3R5bGVfY29tcGlsZXInO1xuaW1wb3J0IHtWaWV3Q29tcGlsZXJ9IGZyb20gJ2FuZ3VsYXIyL3NyYy9jb21waWxlci92aWV3X2NvbXBpbGVyJztcbmltcG9ydCB7UHJvdG9WaWV3Q29tcGlsZXJ9IGZyb20gJ2FuZ3VsYXIyL3NyYy9jb21waWxlci9wcm90b192aWV3X2NvbXBpbGVyJztcbmltcG9ydCB7VGVtcGxhdGVDb21waWxlcn0gZnJvbSAnYW5ndWxhcjIvc3JjL2NvbXBpbGVyL3RlbXBsYXRlX2NvbXBpbGVyJztcbmltcG9ydCB7Q2hhbmdlRGV0ZWN0b3JHZW5Db25maWd9IGZyb20gJ2FuZ3VsYXIyL3NyYy9jb3JlL2NoYW5nZV9kZXRlY3Rpb24vY2hhbmdlX2RldGVjdGlvbic7XG5pbXBvcnQge0NvbXBpbGVyfSBmcm9tICdhbmd1bGFyMi9zcmMvY29yZS9saW5rZXIvY29tcGlsZXInO1xuaW1wb3J0IHtSdW50aW1lQ29tcGlsZXJ9IGZyb20gJ2FuZ3VsYXIyL3NyYy9jb21waWxlci9ydW50aW1lX2NvbXBpbGVyJztcbmltcG9ydCB7RWxlbWVudFNjaGVtYVJlZ2lzdHJ5fSBmcm9tICdhbmd1bGFyMi9zcmMvY29tcGlsZXIvc2NoZW1hL2VsZW1lbnRfc2NoZW1hX3JlZ2lzdHJ5JztcbmltcG9ydCB7RG9tRWxlbWVudFNjaGVtYVJlZ2lzdHJ5fSBmcm9tICdhbmd1bGFyMi9zcmMvY29tcGlsZXIvc2NoZW1hL2RvbV9lbGVtZW50X3NjaGVtYV9yZWdpc3RyeSc7XG5pbXBvcnQge1VybFJlc29sdmVyLCBERUZBVUxUX1BBQ0tBR0VfVVJMX1BST1ZJREVSfSBmcm9tICdhbmd1bGFyMi9zcmMvY29tcGlsZXIvdXJsX3Jlc29sdmVyJztcbmltcG9ydCB7UGFyc2VyLCBMZXhlcn0gZnJvbSAnYW5ndWxhcjIvc3JjL2NvcmUvY2hhbmdlX2RldGVjdGlvbi9jaGFuZ2VfZGV0ZWN0aW9uJztcblxuZnVuY3Rpb24gX2NyZWF0ZUNoYW5nZURldGVjdG9yR2VuQ29uZmlnKCkge1xuICByZXR1cm4gbmV3IENoYW5nZURldGVjdG9yR2VuQ29uZmlnKGFzc2VydGlvbnNFbmFibGVkKCksIGZhbHNlLCB0cnVlKTtcbn1cblxuLyoqXG4gKiBBIHNldCBvZiBwcm92aWRlcnMgdGhhdCBwcm92aWRlIGBSdW50aW1lQ29tcGlsZXJgIGFuZCBpdHMgZGVwZW5kZW5jaWVzIHRvIHVzZSBmb3JcbiAqIHRlbXBsYXRlIGNvbXBpbGF0aW9uLlxuICovXG5leHBvcnQgY29uc3QgQ09NUElMRVJfUFJPVklERVJTOiBBcnJheTxUeXBlIHwgUHJvdmlkZXIgfCBhbnlbXT4gPSBDT05TVF9FWFBSKFtcbiAgTGV4ZXIsXG4gIFBhcnNlcixcbiAgSHRtbFBhcnNlcixcbiAgVGVtcGxhdGVQYXJzZXIsXG4gIFRlbXBsYXRlTm9ybWFsaXplcixcbiAgUnVudGltZU1ldGFkYXRhUmVzb2x2ZXIsXG4gIERFRkFVTFRfUEFDS0FHRV9VUkxfUFJPVklERVIsXG4gIFN0eWxlQ29tcGlsZXIsXG4gIFByb3RvVmlld0NvbXBpbGVyLFxuICBWaWV3Q29tcGlsZXIsXG4gIENoYW5nZURldGVjdGlvbkNvbXBpbGVyLFxuICBuZXcgUHJvdmlkZXIoQ2hhbmdlRGV0ZWN0b3JHZW5Db25maWcsIHt1c2VGYWN0b3J5OiBfY3JlYXRlQ2hhbmdlRGV0ZWN0b3JHZW5Db25maWcsIGRlcHM6IFtdfSksXG4gIFRlbXBsYXRlQ29tcGlsZXIsXG4gIG5ldyBQcm92aWRlcihSdW50aW1lQ29tcGlsZXIsIHt1c2VDbGFzczogUnVudGltZUNvbXBpbGVyX30pLFxuICBuZXcgUHJvdmlkZXIoQ29tcGlsZXIsIHt1c2VFeGlzdGluZzogUnVudGltZUNvbXBpbGVyfSksXG4gIERvbUVsZW1lbnRTY2hlbWFSZWdpc3RyeSxcbiAgbmV3IFByb3ZpZGVyKEVsZW1lbnRTY2hlbWFSZWdpc3RyeSwge3VzZUV4aXN0aW5nOiBEb21FbGVtZW50U2NoZW1hUmVnaXN0cnl9KSxcbiAgVXJsUmVzb2x2ZXJcbl0pO1xuIl19\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/compiler/compiler.js\n ** module id = 206\n ** module chunks = 1\n **/","'use strict';var __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar lang_1 = require('angular2/src/facade/lang');\r\nvar collection_1 = require('angular2/src/facade/collection');\r\nvar parse_util_1 = require('./parse_util');\r\nvar html_tags_1 = require('./html_tags');\r\n(function (HtmlTokenType) {\r\n    HtmlTokenType[HtmlTokenType[\"TAG_OPEN_START\"] = 0] = \"TAG_OPEN_START\";\r\n    HtmlTokenType[HtmlTokenType[\"TAG_OPEN_END\"] = 1] = \"TAG_OPEN_END\";\r\n    HtmlTokenType[HtmlTokenType[\"TAG_OPEN_END_VOID\"] = 2] = \"TAG_OPEN_END_VOID\";\r\n    HtmlTokenType[HtmlTokenType[\"TAG_CLOSE\"] = 3] = \"TAG_CLOSE\";\r\n    HtmlTokenType[HtmlTokenType[\"TEXT\"] = 4] = \"TEXT\";\r\n    HtmlTokenType[HtmlTokenType[\"ESCAPABLE_RAW_TEXT\"] = 5] = \"ESCAPABLE_RAW_TEXT\";\r\n    HtmlTokenType[HtmlTokenType[\"RAW_TEXT\"] = 6] = \"RAW_TEXT\";\r\n    HtmlTokenType[HtmlTokenType[\"COMMENT_START\"] = 7] = \"COMMENT_START\";\r\n    HtmlTokenType[HtmlTokenType[\"COMMENT_END\"] = 8] = \"COMMENT_END\";\r\n    HtmlTokenType[HtmlTokenType[\"CDATA_START\"] = 9] = \"CDATA_START\";\r\n    HtmlTokenType[HtmlTokenType[\"CDATA_END\"] = 10] = \"CDATA_END\";\r\n    HtmlTokenType[HtmlTokenType[\"ATTR_NAME\"] = 11] = \"ATTR_NAME\";\r\n    HtmlTokenType[HtmlTokenType[\"ATTR_VALUE\"] = 12] = \"ATTR_VALUE\";\r\n    HtmlTokenType[HtmlTokenType[\"DOC_TYPE\"] = 13] = \"DOC_TYPE\";\r\n    HtmlTokenType[HtmlTokenType[\"EOF\"] = 14] = \"EOF\";\r\n})(exports.HtmlTokenType || (exports.HtmlTokenType = {}));\r\nvar HtmlTokenType = exports.HtmlTokenType;\r\nvar HtmlToken = (function () {\r\n    function HtmlToken(type, parts, sourceSpan) {\r\n        this.type = type;\r\n        this.parts = parts;\r\n        this.sourceSpan = sourceSpan;\r\n    }\r\n    return HtmlToken;\r\n})();\r\nexports.HtmlToken = HtmlToken;\r\nvar HtmlTokenError = (function (_super) {\r\n    __extends(HtmlTokenError, _super);\r\n    function HtmlTokenError(errorMsg, tokenType, location) {\r\n        _super.call(this, location, errorMsg);\r\n        this.tokenType = tokenType;\r\n    }\r\n    return HtmlTokenError;\r\n})(parse_util_1.ParseError);\r\nexports.HtmlTokenError = HtmlTokenError;\r\nvar HtmlTokenizeResult = (function () {\r\n    function HtmlTokenizeResult(tokens, errors) {\r\n        this.tokens = tokens;\r\n        this.errors = errors;\r\n    }\r\n    return HtmlTokenizeResult;\r\n})();\r\nexports.HtmlTokenizeResult = HtmlTokenizeResult;\r\nfunction tokenizeHtml(sourceContent, sourceUrl) {\r\n    return new _HtmlTokenizer(new parse_util_1.ParseSourceFile(sourceContent, sourceUrl)).tokenize();\r\n}\r\nexports.tokenizeHtml = tokenizeHtml;\r\nvar $EOF = 0;\r\nvar $TAB = 9;\r\nvar $LF = 10;\r\nvar $FF = 12;\r\nvar $CR = 13;\r\nvar $SPACE = 32;\r\nvar $BANG = 33;\r\nvar $DQ = 34;\r\nvar $HASH = 35;\r\nvar $$ = 36;\r\nvar $AMPERSAND = 38;\r\nvar $SQ = 39;\r\nvar $MINUS = 45;\r\nvar $SLASH = 47;\r\nvar $0 = 48;\r\nvar $SEMICOLON = 59;\r\nvar $9 = 57;\r\nvar $COLON = 58;\r\nvar $LT = 60;\r\nvar $EQ = 61;\r\nvar $GT = 62;\r\nvar $QUESTION = 63;\r\nvar $LBRACKET = 91;\r\nvar $RBRACKET = 93;\r\nvar $A = 65;\r\nvar $F = 70;\r\nvar $X = 88;\r\nvar $Z = 90;\r\nvar $a = 97;\r\nvar $f = 102;\r\nvar $z = 122;\r\nvar $x = 120;\r\nvar $NBSP = 160;\r\nvar CR_OR_CRLF_REGEXP = /\\r\\n?/g;\r\nfunction unexpectedCharacterErrorMsg(charCode) {\r\n    var char = charCode === $EOF ? 'EOF' : lang_1.StringWrapper.fromCharCode(charCode);\r\n    return \"Unexpected character \\\"\" + char + \"\\\"\";\r\n}\r\nfunction unknownEntityErrorMsg(entitySrc) {\r\n    return \"Unknown entity \\\"\" + entitySrc + \"\\\" - use the \\\"&#<decimal>;\\\" or  \\\"&#x<hex>;\\\" syntax\";\r\n}\r\nvar ControlFlowError = (function () {\r\n    function ControlFlowError(error) {\r\n        this.error = error;\r\n    }\r\n    return ControlFlowError;\r\n})();\r\n// See http://www.w3.org/TR/html51/syntax.html#writing\r\nvar _HtmlTokenizer = (function () {\r\n    function _HtmlTokenizer(file) {\r\n        this.file = file;\r\n        // Note: this is always lowercase!\r\n        this.peek = -1;\r\n        this.index = -1;\r\n        this.line = 0;\r\n        this.column = -1;\r\n        this.tokens = [];\r\n        this.errors = [];\r\n        this.input = file.content;\r\n        this.length = file.content.length;\r\n        this._advance();\r\n    }\r\n    _HtmlTokenizer.prototype._processCarriageReturns = function (content) {\r\n        // http://www.w3.org/TR/html5/syntax.html#preprocessing-the-input-stream\r\n        // In order to keep the original position in the source, we can not pre-process it.\r\n        // Instead CRs are processed right before instantiating the tokens.\r\n        return lang_1.StringWrapper.replaceAll(content, CR_OR_CRLF_REGEXP, '\\n');\r\n    };\r\n    _HtmlTokenizer.prototype.tokenize = function () {\r\n        while (this.peek !== $EOF) {\r\n            var start = this._getLocation();\r\n            try {\r\n                if (this._attemptCharCode($LT)) {\r\n                    if (this._attemptCharCode($BANG)) {\r\n                        if (this._attemptCharCode($LBRACKET)) {\r\n                            this._consumeCdata(start);\r\n                        }\r\n                        else if (this._attemptCharCode($MINUS)) {\r\n                            this._consumeComment(start);\r\n                        }\r\n                        else {\r\n                            this._consumeDocType(start);\r\n                        }\r\n                    }\r\n                    else if (this._attemptCharCode($SLASH)) {\r\n                        this._consumeTagClose(start);\r\n                    }\r\n                    else {\r\n                        this._consumeTagOpen(start);\r\n                    }\r\n                }\r\n                else {\r\n                    this._consumeText();\r\n                }\r\n            }\r\n            catch (e) {\r\n                if (e instanceof ControlFlowError) {\r\n                    this.errors.push(e.error);\r\n                }\r\n                else {\r\n                    throw e;\r\n                }\r\n            }\r\n        }\r\n        this._beginToken(HtmlTokenType.EOF);\r\n        this._endToken([]);\r\n        return new HtmlTokenizeResult(mergeTextTokens(this.tokens), this.errors);\r\n    };\r\n    _HtmlTokenizer.prototype._getLocation = function () {\r\n        return new parse_util_1.ParseLocation(this.file, this.index, this.line, this.column);\r\n    };\r\n    _HtmlTokenizer.prototype._beginToken = function (type, start) {\r\n        if (start === void 0) { start = null; }\r\n        if (lang_1.isBlank(start)) {\r\n            start = this._getLocation();\r\n        }\r\n        this.currentTokenStart = start;\r\n        this.currentTokenType = type;\r\n    };\r\n    _HtmlTokenizer.prototype._endToken = function (parts, end) {\r\n        if (end === void 0) { end = null; }\r\n        if (lang_1.isBlank(end)) {\r\n            end = this._getLocation();\r\n        }\r\n        var token = new HtmlToken(this.currentTokenType, parts, new parse_util_1.ParseSourceSpan(this.currentTokenStart, end));\r\n        this.tokens.push(token);\r\n        this.currentTokenStart = null;\r\n        this.currentTokenType = null;\r\n        return token;\r\n    };\r\n    _HtmlTokenizer.prototype._createError = function (msg, position) {\r\n        var error = new HtmlTokenError(msg, this.currentTokenType, position);\r\n        this.currentTokenStart = null;\r\n        this.currentTokenType = null;\r\n        return new ControlFlowError(error);\r\n    };\r\n    _HtmlTokenizer.prototype._advance = function () {\r\n        if (this.index >= this.length) {\r\n            throw this._createError(unexpectedCharacterErrorMsg($EOF), this._getLocation());\r\n        }\r\n        if (this.peek === $LF) {\r\n            this.line++;\r\n            this.column = 0;\r\n        }\r\n        else if (this.peek !== $LF && this.peek !== $CR) {\r\n            this.column++;\r\n        }\r\n        this.index++;\r\n        this.peek = this.index >= this.length ? $EOF : lang_1.StringWrapper.charCodeAt(this.input, this.index);\r\n    };\r\n    _HtmlTokenizer.prototype._attemptCharCode = function (charCode) {\r\n        if (this.peek === charCode) {\r\n            this._advance();\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    _HtmlTokenizer.prototype._attemptCharCodeCaseInsensitive = function (charCode) {\r\n        if (compareCharCodeCaseInsensitive(this.peek, charCode)) {\r\n            this._advance();\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    _HtmlTokenizer.prototype._requireCharCode = function (charCode) {\r\n        var location = this._getLocation();\r\n        if (!this._attemptCharCode(charCode)) {\r\n            throw this._createError(unexpectedCharacterErrorMsg(this.peek), location);\r\n        }\r\n    };\r\n    _HtmlTokenizer.prototype._attemptStr = function (chars) {\r\n        for (var i = 0; i < chars.length; i++) {\r\n            if (!this._attemptCharCode(lang_1.StringWrapper.charCodeAt(chars, i))) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    _HtmlTokenizer.prototype._attemptStrCaseInsensitive = function (chars) {\r\n        for (var i = 0; i < chars.length; i++) {\r\n            if (!this._attemptCharCodeCaseInsensitive(lang_1.StringWrapper.charCodeAt(chars, i))) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    _HtmlTokenizer.prototype._requireStr = function (chars) {\r\n        var location = this._getLocation();\r\n        if (!this._attemptStr(chars)) {\r\n            throw this._createError(unexpectedCharacterErrorMsg(this.peek), location);\r\n        }\r\n    };\r\n    _HtmlTokenizer.prototype._attemptCharCodeUntilFn = function (predicate) {\r\n        while (!predicate(this.peek)) {\r\n            this._advance();\r\n        }\r\n    };\r\n    _HtmlTokenizer.prototype._requireCharCodeUntilFn = function (predicate, len) {\r\n        var start = this._getLocation();\r\n        this._attemptCharCodeUntilFn(predicate);\r\n        if (this.index - start.offset < len) {\r\n            throw this._createError(unexpectedCharacterErrorMsg(this.peek), start);\r\n        }\r\n    };\r\n    _HtmlTokenizer.prototype._attemptUntilChar = function (char) {\r\n        while (this.peek !== char) {\r\n            this._advance();\r\n        }\r\n    };\r\n    _HtmlTokenizer.prototype._readChar = function (decodeEntities) {\r\n        if (decodeEntities && this.peek === $AMPERSAND) {\r\n            return this._decodeEntity();\r\n        }\r\n        else {\r\n            var index = this.index;\r\n            this._advance();\r\n            return this.input[index];\r\n        }\r\n    };\r\n    _HtmlTokenizer.prototype._decodeEntity = function () {\r\n        var start = this._getLocation();\r\n        this._advance();\r\n        if (this._attemptCharCode($HASH)) {\r\n            var isHex = this._attemptCharCode($x) || this._attemptCharCode($X);\r\n            var numberStart = this._getLocation().offset;\r\n            this._attemptCharCodeUntilFn(isDigitEntityEnd);\r\n            if (this.peek != $SEMICOLON) {\r\n                throw this._createError(unexpectedCharacterErrorMsg(this.peek), this._getLocation());\r\n            }\r\n            this._advance();\r\n            var strNum = this.input.substring(numberStart, this.index - 1);\r\n            try {\r\n                var charCode = lang_1.NumberWrapper.parseInt(strNum, isHex ? 16 : 10);\r\n                return lang_1.StringWrapper.fromCharCode(charCode);\r\n            }\r\n            catch (e) {\r\n                var entity = this.input.substring(start.offset + 1, this.index - 1);\r\n                throw this._createError(unknownEntityErrorMsg(entity), start);\r\n            }\r\n        }\r\n        else {\r\n            var startPosition = this._savePosition();\r\n            this._attemptCharCodeUntilFn(isNamedEntityEnd);\r\n            if (this.peek != $SEMICOLON) {\r\n                this._restorePosition(startPosition);\r\n                return '&';\r\n            }\r\n            this._advance();\r\n            var name_1 = this.input.substring(start.offset + 1, this.index - 1);\r\n            var char = html_tags_1.NAMED_ENTITIES[name_1];\r\n            if (lang_1.isBlank(char)) {\r\n                throw this._createError(unknownEntityErrorMsg(name_1), start);\r\n            }\r\n            return char;\r\n        }\r\n    };\r\n    _HtmlTokenizer.prototype._consumeRawText = function (decodeEntities, firstCharOfEnd, attemptEndRest) {\r\n        var tagCloseStart;\r\n        var textStart = this._getLocation();\r\n        this._beginToken(decodeEntities ? HtmlTokenType.ESCAPABLE_RAW_TEXT : HtmlTokenType.RAW_TEXT, textStart);\r\n        var parts = [];\r\n        while (true) {\r\n            tagCloseStart = this._getLocation();\r\n            if (this._attemptCharCode(firstCharOfEnd) && attemptEndRest()) {\r\n                break;\r\n            }\r\n            if (this.index > tagCloseStart.offset) {\r\n                parts.push(this.input.substring(tagCloseStart.offset, this.index));\r\n            }\r\n            while (this.peek !== firstCharOfEnd) {\r\n                parts.push(this._readChar(decodeEntities));\r\n            }\r\n        }\r\n        return this._endToken([this._processCarriageReturns(parts.join(''))], tagCloseStart);\r\n    };\r\n    _HtmlTokenizer.prototype._consumeComment = function (start) {\r\n        var _this = this;\r\n        this._beginToken(HtmlTokenType.COMMENT_START, start);\r\n        this._requireCharCode($MINUS);\r\n        this._endToken([]);\r\n        var textToken = this._consumeRawText(false, $MINUS, function () { return _this._attemptStr('->'); });\r\n        this._beginToken(HtmlTokenType.COMMENT_END, textToken.sourceSpan.end);\r\n        this._endToken([]);\r\n    };\r\n    _HtmlTokenizer.prototype._consumeCdata = function (start) {\r\n        var _this = this;\r\n        this._beginToken(HtmlTokenType.CDATA_START, start);\r\n        this._requireStr('CDATA[');\r\n        this._endToken([]);\r\n        var textToken = this._consumeRawText(false, $RBRACKET, function () { return _this._attemptStr(']>'); });\r\n        this._beginToken(HtmlTokenType.CDATA_END, textToken.sourceSpan.end);\r\n        this._endToken([]);\r\n    };\r\n    _HtmlTokenizer.prototype._consumeDocType = function (start) {\r\n        this._beginToken(HtmlTokenType.DOC_TYPE, start);\r\n        this._attemptUntilChar($GT);\r\n        this._advance();\r\n        this._endToken([this.input.substring(start.offset + 2, this.index - 1)]);\r\n    };\r\n    _HtmlTokenizer.prototype._consumePrefixAndName = function () {\r\n        var nameOrPrefixStart = this.index;\r\n        var prefix = null;\r\n        while (this.peek !== $COLON && !isPrefixEnd(this.peek)) {\r\n            this._advance();\r\n        }\r\n        var nameStart;\r\n        if (this.peek === $COLON) {\r\n            this._advance();\r\n            prefix = this.input.substring(nameOrPrefixStart, this.index - 1);\r\n            nameStart = this.index;\r\n        }\r\n        else {\r\n            nameStart = nameOrPrefixStart;\r\n        }\r\n        this._requireCharCodeUntilFn(isNameEnd, this.index === nameStart ? 1 : 0);\r\n        var name = this.input.substring(nameStart, this.index);\r\n        return [prefix, name];\r\n    };\r\n    _HtmlTokenizer.prototype._consumeTagOpen = function (start) {\r\n        var savedPos = this._savePosition();\r\n        var lowercaseTagName;\r\n        try {\r\n            if (!isAsciiLetter(this.peek)) {\r\n                throw this._createError(unexpectedCharacterErrorMsg(this.peek), this._getLocation());\r\n            }\r\n            var nameStart = this.index;\r\n            this._consumeTagOpenStart(start);\r\n            lowercaseTagName = this.input.substring(nameStart, this.index).toLowerCase();\r\n            this._attemptCharCodeUntilFn(isNotWhitespace);\r\n            while (this.peek !== $SLASH && this.peek !== $GT) {\r\n                this._consumeAttributeName();\r\n                this._attemptCharCodeUntilFn(isNotWhitespace);\r\n                if (this._attemptCharCode($EQ)) {\r\n                    this._attemptCharCodeUntilFn(isNotWhitespace);\r\n                    this._consumeAttributeValue();\r\n                }\r\n                this._attemptCharCodeUntilFn(isNotWhitespace);\r\n            }\r\n            this._consumeTagOpenEnd();\r\n        }\r\n        catch (e) {\r\n            if (e instanceof ControlFlowError) {\r\n                // When the start tag is invalid, assume we want a \"<\"\r\n                this._restorePosition(savedPos);\r\n                // Back to back text tokens are merged at the end\r\n                this._beginToken(HtmlTokenType.TEXT, start);\r\n                this._endToken(['<']);\r\n                return;\r\n            }\r\n            throw e;\r\n        }\r\n        var contentTokenType = html_tags_1.getHtmlTagDefinition(lowercaseTagName).contentType;\r\n        if (contentTokenType === html_tags_1.HtmlTagContentType.RAW_TEXT) {\r\n            this._consumeRawTextWithTagClose(lowercaseTagName, false);\r\n        }\r\n        else if (contentTokenType === html_tags_1.HtmlTagContentType.ESCAPABLE_RAW_TEXT) {\r\n            this._consumeRawTextWithTagClose(lowercaseTagName, true);\r\n        }\r\n    };\r\n    _HtmlTokenizer.prototype._consumeRawTextWithTagClose = function (lowercaseTagName, decodeEntities) {\r\n        var _this = this;\r\n        var textToken = this._consumeRawText(decodeEntities, $LT, function () {\r\n            if (!_this._attemptCharCode($SLASH))\r\n                return false;\r\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\r\n            if (!_this._attemptStrCaseInsensitive(lowercaseTagName))\r\n                return false;\r\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\r\n            if (!_this._attemptCharCode($GT))\r\n                return false;\r\n            return true;\r\n        });\r\n        this._beginToken(HtmlTokenType.TAG_CLOSE, textToken.sourceSpan.end);\r\n        this._endToken([null, lowercaseTagName]);\r\n    };\r\n    _HtmlTokenizer.prototype._consumeTagOpenStart = function (start) {\r\n        this._beginToken(HtmlTokenType.TAG_OPEN_START, start);\r\n        var parts = this._consumePrefixAndName();\r\n        this._endToken(parts);\r\n    };\r\n    _HtmlTokenizer.prototype._consumeAttributeName = function () {\r\n        this._beginToken(HtmlTokenType.ATTR_NAME);\r\n        var prefixAndName = this._consumePrefixAndName();\r\n        this._endToken(prefixAndName);\r\n    };\r\n    _HtmlTokenizer.prototype._consumeAttributeValue = function () {\r\n        this._beginToken(HtmlTokenType.ATTR_VALUE);\r\n        var value;\r\n        if (this.peek === $SQ || this.peek === $DQ) {\r\n            var quoteChar = this.peek;\r\n            this._advance();\r\n            var parts = [];\r\n            while (this.peek !== quoteChar) {\r\n                parts.push(this._readChar(true));\r\n            }\r\n            value = parts.join('');\r\n            this._advance();\r\n        }\r\n        else {\r\n            var valueStart = this.index;\r\n            this._requireCharCodeUntilFn(isNameEnd, 1);\r\n            value = this.input.substring(valueStart, this.index);\r\n        }\r\n        this._endToken([this._processCarriageReturns(value)]);\r\n    };\r\n    _HtmlTokenizer.prototype._consumeTagOpenEnd = function () {\r\n        var tokenType = this._attemptCharCode($SLASH) ? HtmlTokenType.TAG_OPEN_END_VOID :\r\n            HtmlTokenType.TAG_OPEN_END;\r\n        this._beginToken(tokenType);\r\n        this._requireCharCode($GT);\r\n        this._endToken([]);\r\n    };\r\n    _HtmlTokenizer.prototype._consumeTagClose = function (start) {\r\n        this._beginToken(HtmlTokenType.TAG_CLOSE, start);\r\n        this._attemptCharCodeUntilFn(isNotWhitespace);\r\n        var prefixAndName;\r\n        prefixAndName = this._consumePrefixAndName();\r\n        this._attemptCharCodeUntilFn(isNotWhitespace);\r\n        this._requireCharCode($GT);\r\n        this._endToken(prefixAndName);\r\n    };\r\n    _HtmlTokenizer.prototype._consumeText = function () {\r\n        var start = this._getLocation();\r\n        this._beginToken(HtmlTokenType.TEXT, start);\r\n        var parts = [this._readChar(true)];\r\n        while (!isTextEnd(this.peek)) {\r\n            parts.push(this._readChar(true));\r\n        }\r\n        this._endToken([this._processCarriageReturns(parts.join(''))]);\r\n    };\r\n    _HtmlTokenizer.prototype._savePosition = function () {\r\n        return [this.peek, this.index, this.column, this.line, this.tokens.length];\r\n    };\r\n    _HtmlTokenizer.prototype._restorePosition = function (position) {\r\n        this.peek = position[0];\r\n        this.index = position[1];\r\n        this.column = position[2];\r\n        this.line = position[3];\r\n        var nbTokens = position[4];\r\n        if (nbTokens < this.tokens.length) {\r\n            // remove any extra tokens\r\n            this.tokens = collection_1.ListWrapper.slice(this.tokens, 0, nbTokens);\r\n        }\r\n    };\r\n    return _HtmlTokenizer;\r\n})();\r\nfunction isNotWhitespace(code) {\r\n    return !isWhitespace(code) || code === $EOF;\r\n}\r\nfunction isWhitespace(code) {\r\n    return (code >= $TAB && code <= $SPACE) || (code === $NBSP);\r\n}\r\nfunction isNameEnd(code) {\r\n    return isWhitespace(code) || code === $GT || code === $SLASH || code === $SQ || code === $DQ ||\r\n        code === $EQ;\r\n}\r\nfunction isPrefixEnd(code) {\r\n    return (code < $a || $z < code) && (code < $A || $Z < code) && (code < $0 || code > $9);\r\n}\r\nfunction isDigitEntityEnd(code) {\r\n    return code == $SEMICOLON || code == $EOF || !isAsciiHexDigit(code);\r\n}\r\nfunction isNamedEntityEnd(code) {\r\n    return code == $SEMICOLON || code == $EOF || !isAsciiLetter(code);\r\n}\r\nfunction isTextEnd(code) {\r\n    return code === $LT || code === $EOF;\r\n}\r\nfunction isAsciiLetter(code) {\r\n    return code >= $a && code <= $z || code >= $A && code <= $Z;\r\n}\r\nfunction isAsciiHexDigit(code) {\r\n    return code >= $a && code <= $f || code >= $A && code <= $F || code >= $0 && code <= $9;\r\n}\r\nfunction compareCharCodeCaseInsensitive(code1, code2) {\r\n    return toUpperCaseCharCode(code1) == toUpperCaseCharCode(code2);\r\n}\r\nfunction toUpperCaseCharCode(code) {\r\n    return code >= $a && code <= $z ? code - $a + $A : code;\r\n}\r\nfunction mergeTextTokens(srcTokens) {\r\n    var dstTokens = [];\r\n    var lastDstToken;\r\n    for (var i = 0; i < srcTokens.length; i++) {\r\n        var token = srcTokens[i];\r\n        if (lang_1.isPresent(lastDstToken) && lastDstToken.type == HtmlTokenType.TEXT &&\r\n            token.type == HtmlTokenType.TEXT) {\r\n            lastDstToken.parts[0] += token.parts[0];\r\n            lastDstToken.sourceSpan.end = token.sourceSpan.end;\r\n        }\r\n        else {\r\n            lastDstToken = token;\r\n            dstTokens.push(lastDstToken);\r\n        }\r\n    }\r\n    return dstTokens;\r\n}\r\n//# sourceMappingURL=data:application/json;base64,\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/compiler/html_lexer.js\n ** module id = 207\n ** module chunks = 1\n **/","'use strict';var __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar di_1 = require('angular2/src/core/di');\r\nvar lang_1 = require('angular2/src/facade/lang');\r\nvar collection_1 = require('angular2/src/facade/collection');\r\nvar dom_adapter_1 = require('angular2/src/platform/dom/dom_adapter');\r\nvar html_tags_1 = require('angular2/src/compiler/html_tags');\r\nvar element_schema_registry_1 = require('./element_schema_registry');\r\nvar NAMESPACE_URIS = lang_1.CONST_EXPR({ 'xlink': 'http://www.w3.org/1999/xlink', 'svg': 'http://www.w3.org/2000/svg' });\r\nvar DomElementSchemaRegistry = (function (_super) {\r\n    __extends(DomElementSchemaRegistry, _super);\r\n    function DomElementSchemaRegistry() {\r\n        _super.apply(this, arguments);\r\n        this._protoElements = new Map();\r\n    }\r\n    DomElementSchemaRegistry.prototype._getProtoElement = function (tagName) {\r\n        var element = this._protoElements.get(tagName);\r\n        if (lang_1.isBlank(element)) {\r\n            var nsAndName = html_tags_1.splitNsName(tagName);\r\n            element = lang_1.isPresent(nsAndName[0]) ?\r\n                dom_adapter_1.DOM.createElementNS(NAMESPACE_URIS[nsAndName[0]], nsAndName[1]) :\r\n                dom_adapter_1.DOM.createElement(nsAndName[1]);\r\n            this._protoElements.set(tagName, element);\r\n        }\r\n        return element;\r\n    };\r\n    DomElementSchemaRegistry.prototype.hasProperty = function (tagName, propName) {\r\n        if (tagName.indexOf('-') !== -1) {\r\n            // can't tell now as we don't know which properties a custom element will get\r\n            // once it is instantiated\r\n            return true;\r\n        }\r\n        else {\r\n            var elm = this._getProtoElement(tagName);\r\n            return dom_adapter_1.DOM.hasProperty(elm, propName);\r\n        }\r\n    };\r\n    DomElementSchemaRegistry.prototype.getMappedPropName = function (propName) {\r\n        var mappedPropName = collection_1.StringMapWrapper.get(dom_adapter_1.DOM.attrToPropMap, propName);\r\n        return lang_1.isPresent(mappedPropName) ? mappedPropName : propName;\r\n    };\r\n    DomElementSchemaRegistry = __decorate([\r\n        di_1.Injectable(), \r\n        __metadata('design:paramtypes', [])\r\n    ], DomElementSchemaRegistry);\r\n    return DomElementSchemaRegistry;\r\n})(element_schema_registry_1.ElementSchemaRegistry);\r\nexports.DomElementSchemaRegistry = DomElementSchemaRegistry;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZG9tX2VsZW1lbnRfc2NoZW1hX3JlZ2lzdHJ5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYW5ndWxhcjIvc3JjL2NvbXBpbGVyL3NjaGVtYS9kb21fZWxlbWVudF9zY2hlbWFfcmVnaXN0cnkudHMiXSwibmFtZXMiOlsiRG9tRWxlbWVudFNjaGVtYVJlZ2lzdHJ5IiwiRG9tRWxlbWVudFNjaGVtYVJlZ2lzdHJ5LmNvbnN0cnVjdG9yIiwiRG9tRWxlbWVudFNjaGVtYVJlZ2lzdHJ5Ll9nZXRQcm90b0VsZW1lbnQiLCJEb21FbGVtZW50U2NoZW1hUmVnaXN0cnkuaGFzUHJvcGVydHkiLCJEb21FbGVtZW50U2NoZW1hUmVnaXN0cnkuZ2V0TWFwcGVkUHJvcE5hbWUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQUEsbUJBQXlCLHNCQUFzQixDQUFDLENBQUE7QUFDaEQscUJBQTZDLDBCQUEwQixDQUFDLENBQUE7QUFDeEUsMkJBQStCLGdDQUFnQyxDQUFDLENBQUE7QUFDaEUsNEJBQWtCLHVDQUF1QyxDQUFDLENBQUE7QUFDMUQsMEJBQTBCLGlDQUFpQyxDQUFDLENBQUE7QUFFNUQsd0NBQW9DLDJCQUEyQixDQUFDLENBQUE7QUFFaEUsSUFBTSxjQUFjLEdBQ2hCLGlCQUFVLENBQUMsRUFBQyxPQUFPLEVBQUUsOEJBQThCLEVBQUUsS0FBSyxFQUFFLDRCQUE0QixFQUFDLENBQUMsQ0FBQztBQUUvRjtJQUM4Q0EsNENBQXFCQTtJQURuRUE7UUFDOENDLDhCQUFxQkE7UUFDekRBLG1CQUFjQSxHQUFHQSxJQUFJQSxHQUFHQSxFQUFtQkEsQ0FBQ0E7SUE2QnREQSxDQUFDQTtJQTNCU0QsbURBQWdCQSxHQUF4QkEsVUFBeUJBLE9BQWVBO1FBQ3RDRSxJQUFJQSxPQUFPQSxHQUFHQSxJQUFJQSxDQUFDQSxjQUFjQSxDQUFDQSxHQUFHQSxDQUFDQSxPQUFPQSxDQUFDQSxDQUFDQTtRQUMvQ0EsRUFBRUEsQ0FBQ0EsQ0FBQ0EsY0FBT0EsQ0FBQ0EsT0FBT0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7WUFDckJBLElBQUlBLFNBQVNBLEdBQUdBLHVCQUFXQSxDQUFDQSxPQUFPQSxDQUFDQSxDQUFDQTtZQUNyQ0EsT0FBT0EsR0FBR0EsZ0JBQVNBLENBQUNBLFNBQVNBLENBQUNBLENBQUNBLENBQUNBLENBQUNBO2dCQUNuQkEsaUJBQUdBLENBQUNBLGVBQWVBLENBQUNBLGNBQWNBLENBQUNBLFNBQVNBLENBQUNBLENBQUNBLENBQUNBLENBQUNBLEVBQUVBLFNBQVNBLENBQUNBLENBQUNBLENBQUNBLENBQUNBO2dCQUMvREEsaUJBQUdBLENBQUNBLGFBQWFBLENBQUNBLFNBQVNBLENBQUNBLENBQUNBLENBQUNBLENBQUNBLENBQUNBO1lBQzlDQSxJQUFJQSxDQUFDQSxjQUFjQSxDQUFDQSxHQUFHQSxDQUFDQSxPQUFPQSxFQUFFQSxPQUFPQSxDQUFDQSxDQUFDQTtRQUM1Q0EsQ0FBQ0E7UUFDREEsTUFBTUEsQ0FBQ0EsT0FBT0EsQ0FBQ0E7SUFDakJBLENBQUNBO0lBRURGLDhDQUFXQSxHQUFYQSxVQUFZQSxPQUFlQSxFQUFFQSxRQUFnQkE7UUFDM0NHLEVBQUVBLENBQUNBLENBQUNBLE9BQU9BLENBQUNBLE9BQU9BLENBQUNBLEdBQUdBLENBQUNBLEtBQUtBLENBQUNBLENBQUNBLENBQUNBLENBQUNBLENBQUNBO1lBQ2hDQSw2RUFBNkVBO1lBQzdFQSwwQkFBMEJBO1lBQzFCQSxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQTtRQUNkQSxDQUFDQTtRQUFDQSxJQUFJQSxDQUFDQSxDQUFDQTtZQUNOQSxJQUFJQSxHQUFHQSxHQUFHQSxJQUFJQSxDQUFDQSxnQkFBZ0JBLENBQUNBLE9BQU9BLENBQUNBLENBQUNBO1lBQ3pDQSxNQUFNQSxDQUFDQSxpQkFBR0EsQ0FBQ0EsV0FBV0EsQ0FBQ0EsR0FBR0EsRUFBRUEsUUFBUUEsQ0FBQ0EsQ0FBQ0E7UUFDeENBLENBQUNBO0lBQ0hBLENBQUNBO0lBRURILG9EQUFpQkEsR0FBakJBLFVBQWtCQSxRQUFnQkE7UUFDaENJLElBQUlBLGNBQWNBLEdBQUdBLDZCQUFnQkEsQ0FBQ0EsR0FBR0EsQ0FBQ0EsaUJBQUdBLENBQUNBLGFBQWFBLEVBQUVBLFFBQVFBLENBQUNBLENBQUNBO1FBQ3ZFQSxNQUFNQSxDQUFDQSxnQkFBU0EsQ0FBQ0EsY0FBY0EsQ0FBQ0EsR0FBR0EsY0FBY0EsR0FBR0EsUUFBUUEsQ0FBQ0E7SUFDL0RBLENBQUNBO0lBOUJISjtRQUFDQSxlQUFVQSxFQUFFQTs7aUNBK0JaQTtJQUFEQSwrQkFBQ0E7QUFBREEsQ0FBQ0EsQUEvQkQsRUFDOEMsK0NBQXFCLEVBOEJsRTtBQTlCWSxnQ0FBd0IsMkJBOEJwQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtJbmplY3RhYmxlfSBmcm9tICdhbmd1bGFyMi9zcmMvY29yZS9kaSc7XG5pbXBvcnQge2lzUHJlc2VudCwgaXNCbGFuaywgQ09OU1RfRVhQUn0gZnJvbSAnYW5ndWxhcjIvc3JjL2ZhY2FkZS9sYW5nJztcbmltcG9ydCB7U3RyaW5nTWFwV3JhcHBlcn0gZnJvbSAnYW5ndWxhcjIvc3JjL2ZhY2FkZS9jb2xsZWN0aW9uJztcbmltcG9ydCB7RE9NfSBmcm9tICdhbmd1bGFyMi9zcmMvcGxhdGZvcm0vZG9tL2RvbV9hZGFwdGVyJztcbmltcG9ydCB7c3BsaXROc05hbWV9IGZyb20gJ2FuZ3VsYXIyL3NyYy9jb21waWxlci9odG1sX3RhZ3MnO1xuXG5pbXBvcnQge0VsZW1lbnRTY2hlbWFSZWdpc3RyeX0gZnJvbSAnLi9lbGVtZW50X3NjaGVtYV9yZWdpc3RyeSc7XG5cbmNvbnN0IE5BTUVTUEFDRV9VUklTID1cbiAgICBDT05TVF9FWFBSKHsneGxpbmsnOiAnaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluaycsICdzdmcnOiAnaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnfSk7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBEb21FbGVtZW50U2NoZW1hUmVnaXN0cnkgZXh0ZW5kcyBFbGVtZW50U2NoZW1hUmVnaXN0cnkge1xuICBwcml2YXRlIF9wcm90b0VsZW1lbnRzID0gbmV3IE1hcDxzdHJpbmcsIEVsZW1lbnQ+KCk7XG5cbiAgcHJpdmF0ZSBfZ2V0UHJvdG9FbGVtZW50KHRhZ05hbWU6IHN0cmluZyk6IEVsZW1lbnQge1xuICAgIHZhciBlbGVtZW50ID0gdGhpcy5fcHJvdG9FbGVtZW50cy5nZXQodGFnTmFtZSk7XG4gICAgaWYgKGlzQmxhbmsoZWxlbWVudCkpIHtcbiAgICAgIHZhciBuc0FuZE5hbWUgPSBzcGxpdE5zTmFtZSh0YWdOYW1lKTtcbiAgICAgIGVsZW1lbnQgPSBpc1ByZXNlbnQobnNBbmROYW1lWzBdKSA/XG4gICAgICAgICAgICAgICAgICAgIERPTS5jcmVhdGVFbGVtZW50TlMoTkFNRVNQQUNFX1VSSVNbbnNBbmROYW1lWzBdXSwgbnNBbmROYW1lWzFdKSA6XG4gICAgICAgICAgICAgICAgICAgIERPTS5jcmVhdGVFbGVtZW50KG5zQW5kTmFtZVsxXSk7XG4gICAgICB0aGlzLl9wcm90b0VsZW1lbnRzLnNldCh0YWdOYW1lLCBlbGVtZW50KTtcbiAgICB9XG4gICAgcmV0dXJuIGVsZW1lbnQ7XG4gIH1cblxuICBoYXNQcm9wZXJ0eSh0YWdOYW1lOiBzdHJpbmcsIHByb3BOYW1lOiBzdHJpbmcpOiBib29sZWFuIHtcbiAgICBpZiAodGFnTmFtZS5pbmRleE9mKCctJykgIT09IC0xKSB7XG4gICAgICAvLyBjYW4ndCB0ZWxsIG5vdyBhcyB3ZSBkb24ndCBrbm93IHdoaWNoIHByb3BlcnRpZXMgYSBjdXN0b20gZWxlbWVudCB3aWxsIGdldFxuICAgICAgLy8gb25jZSBpdCBpcyBpbnN0YW50aWF0ZWRcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgZWxtID0gdGhpcy5fZ2V0UHJvdG9FbGVtZW50KHRhZ05hbWUpO1xuICAgICAgcmV0dXJuIERPTS5oYXNQcm9wZXJ0eShlbG0sIHByb3BOYW1lKTtcbiAgICB9XG4gIH1cblxuICBnZXRNYXBwZWRQcm9wTmFtZShwcm9wTmFtZTogc3RyaW5nKTogc3RyaW5nIHtcbiAgICB2YXIgbWFwcGVkUHJvcE5hbWUgPSBTdHJpbmdNYXBXcmFwcGVyLmdldChET00uYXR0clRvUHJvcE1hcCwgcHJvcE5hbWUpO1xuICAgIHJldHVybiBpc1ByZXNlbnQobWFwcGVkUHJvcE5hbWUpID8gbWFwcGVkUHJvcE5hbWUgOiBwcm9wTmFtZTtcbiAgfVxufVxuIl19\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/compiler/schema/dom_element_schema_registry.js\n ** module id = 208\n ** module chunks = 1\n **/","'use strict';var collection_1 = require('angular2/src/facade/collection');\r\nvar lang_1 = require('angular2/src/facade/lang');\r\n/**\r\n * This file is a port of shadowCSS from webcomponents.js to TypeScript.\r\n *\r\n * Please make sure to keep to edits in sync with the source file.\r\n *\r\n * Source:\r\n * https://github.com/webcomponents/webcomponentsjs/blob/4efecd7e0e/src/ShadowCSS/ShadowCSS.js\r\n *\r\n * The original file level comment is reproduced below\r\n */\r\n/*\r\n  This is a limited shim for ShadowDOM css styling.\r\n  https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/shadow/index.html#styles\r\n\r\n  The intention here is to support only the styling features which can be\r\n  relatively simply implemented. The goal is to allow users to avoid the\r\n  most obvious pitfalls and do so without compromising performance significantly.\r\n  For ShadowDOM styling that's not covered here, a set of best practices\r\n  can be provided that should allow users to accomplish more complex styling.\r\n\r\n  The following is a list of specific ShadowDOM styling features and a brief\r\n  discussion of the approach used to shim.\r\n\r\n  Shimmed features:\r\n\r\n  * :host, :host-context: ShadowDOM allows styling of the shadowRoot's host\r\n  element using the :host rule. To shim this feature, the :host styles are\r\n  reformatted and prefixed with a given scope name and promoted to a\r\n  document level stylesheet.\r\n  For example, given a scope name of .foo, a rule like this:\r\n\r\n    :host {\r\n        background: red;\r\n      }\r\n    }\r\n\r\n  becomes:\r\n\r\n    .foo {\r\n      background: red;\r\n    }\r\n\r\n  * encapsultion: Styles defined within ShadowDOM, apply only to\r\n  dom inside the ShadowDOM. Polymer uses one of two techniques to implement\r\n  this feature.\r\n\r\n  By default, rules are prefixed with the host element tag name\r\n  as a descendant selector. This ensures styling does not leak out of the 'top'\r\n  of the element's ShadowDOM. For example,\r\n\r\n  div {\r\n      font-weight: bold;\r\n    }\r\n\r\n  becomes:\r\n\r\n  x-foo div {\r\n      font-weight: bold;\r\n    }\r\n\r\n  becomes:\r\n\r\n\r\n  Alternatively, if WebComponents.ShadowCSS.strictStyling is set to true then\r\n  selectors are scoped by adding an attribute selector suffix to each\r\n  simple selector that contains the host element tag name. Each element\r\n  in the element's ShadowDOM template is also given the scope attribute.\r\n  Thus, these rules match only elements that have the scope attribute.\r\n  For example, given a scope name of x-foo, a rule like this:\r\n\r\n    div {\r\n      font-weight: bold;\r\n    }\r\n\r\n  becomes:\r\n\r\n    div[x-foo] {\r\n      font-weight: bold;\r\n    }\r\n\r\n  Note that elements that are dynamically added to a scope must have the scope\r\n  selector added to them manually.\r\n\r\n  * upper/lower bound encapsulation: Styles which are defined outside a\r\n  shadowRoot should not cross the ShadowDOM boundary and should not apply\r\n  inside a shadowRoot.\r\n\r\n  This styling behavior is not emulated. Some possible ways to do this that\r\n  were rejected due to complexity and/or performance concerns include: (1) reset\r\n  every possible property for every possible selector for a given scope name;\r\n  (2) re-implement css in javascript.\r\n\r\n  As an alternative, users should make sure to use selectors\r\n  specific to the scope in which they are working.\r\n\r\n  * ::distributed: This behavior is not emulated. It's often not necessary\r\n  to style the contents of a specific insertion point and instead, descendants\r\n  of the host element can be styled selectively. Users can also create an\r\n  extra node around an insertion point and style that node's contents\r\n  via descendent selectors. For example, with a shadowRoot like this:\r\n\r\n    <style>\r\n      ::content(div) {\r\n        background: red;\r\n      }\r\n    </style>\r\n    <content></content>\r\n\r\n  could become:\r\n\r\n    <style>\r\n      / *@polyfill .content-container div * /\r\n      ::content(div) {\r\n        background: red;\r\n      }\r\n    </style>\r\n    <div class=\"content-container\">\r\n      <content></content>\r\n    </div>\r\n\r\n  Note the use of @polyfill in the comment above a ShadowDOM specific style\r\n  declaration. This is a directive to the styling shim to use the selector\r\n  in comments in lieu of the next selector when running under polyfill.\r\n*/\r\nvar ShadowCss = (function () {\r\n    function ShadowCss() {\r\n        this.strictStyling = true;\r\n    }\r\n    /*\r\n    * Shim some cssText with the given selector. Returns cssText that can\r\n    * be included in the document via WebComponents.ShadowCSS.addCssToDocument(css).\r\n    *\r\n    * When strictStyling is true:\r\n    * - selector is the attribute added to all elements inside the host,\r\n    * - hostSelector is the attribute added to the host itself.\r\n    */\r\n    ShadowCss.prototype.shimCssText = function (cssText, selector, hostSelector) {\r\n        if (hostSelector === void 0) { hostSelector = ''; }\r\n        cssText = stripComments(cssText);\r\n        cssText = this._insertDirectives(cssText);\r\n        return this._scopeCssText(cssText, selector, hostSelector);\r\n    };\r\n    ShadowCss.prototype._insertDirectives = function (cssText) {\r\n        cssText = this._insertPolyfillDirectivesInCssText(cssText);\r\n        return this._insertPolyfillRulesInCssText(cssText);\r\n    };\r\n    /*\r\n     * Process styles to convert native ShadowDOM rules that will trip\r\n     * up the css parser; we rely on decorating the stylesheet with inert rules.\r\n     *\r\n     * For example, we convert this rule:\r\n     *\r\n     * polyfill-next-selector { content: ':host menu-item'; }\r\n     * ::content menu-item {\r\n     *\r\n     * to this:\r\n     *\r\n     * scopeName menu-item {\r\n     *\r\n    **/\r\n    ShadowCss.prototype._insertPolyfillDirectivesInCssText = function (cssText) {\r\n        // Difference with webcomponents.js: does not handle comments\r\n        return lang_1.StringWrapper.replaceAllMapped(cssText, _cssContentNextSelectorRe, function (m) { return m[1] + '{'; });\r\n    };\r\n    /*\r\n     * Process styles to add rules which will only apply under the polyfill\r\n     *\r\n     * For example, we convert this rule:\r\n     *\r\n     * polyfill-rule {\r\n     *   content: ':host menu-item';\r\n     * ...\r\n     * }\r\n     *\r\n     * to this:\r\n     *\r\n     * scopeName menu-item {...}\r\n     *\r\n    **/\r\n    ShadowCss.prototype._insertPolyfillRulesInCssText = function (cssText) {\r\n        // Difference with webcomponents.js: does not handle comments\r\n        return lang_1.StringWrapper.replaceAllMapped(cssText, _cssContentRuleRe, function (m) {\r\n            var rule = m[0];\r\n            rule = lang_1.StringWrapper.replace(rule, m[1], '');\r\n            rule = lang_1.StringWrapper.replace(rule, m[2], '');\r\n            return m[3] + rule;\r\n        });\r\n    };\r\n    /* Ensure styles are scoped. Pseudo-scoping takes a rule like:\r\n     *\r\n     *  .foo {... }\r\n     *\r\n     *  and converts this to\r\n     *\r\n     *  scopeName .foo { ... }\r\n    */\r\n    ShadowCss.prototype._scopeCssText = function (cssText, scopeSelector, hostSelector) {\r\n        var unscoped = this._extractUnscopedRulesFromCssText(cssText);\r\n        cssText = this._insertPolyfillHostInCssText(cssText);\r\n        cssText = this._convertColonHost(cssText);\r\n        cssText = this._convertColonHostContext(cssText);\r\n        cssText = this._convertShadowDOMSelectors(cssText);\r\n        if (lang_1.isPresent(scopeSelector)) {\r\n            cssText = this._scopeSelectors(cssText, scopeSelector, hostSelector);\r\n        }\r\n        cssText = cssText + '\\n' + unscoped;\r\n        return cssText.trim();\r\n    };\r\n    /*\r\n     * Process styles to add rules which will only apply under the polyfill\r\n     * and do not process via CSSOM. (CSSOM is destructive to rules on rare\r\n     * occasions, e.g. -webkit-calc on Safari.)\r\n     * For example, we convert this rule:\r\n     *\r\n     * @polyfill-unscoped-rule {\r\n     *   content: 'menu-item';\r\n     * ... }\r\n     *\r\n     * to this:\r\n     *\r\n     * menu-item {...}\r\n     *\r\n    **/\r\n    ShadowCss.prototype._extractUnscopedRulesFromCssText = function (cssText) {\r\n        // Difference with webcomponents.js: does not handle comments\r\n        var r = '', m;\r\n        var matcher = lang_1.RegExpWrapper.matcher(_cssContentUnscopedRuleRe, cssText);\r\n        while (lang_1.isPresent(m = lang_1.RegExpMatcherWrapper.next(matcher))) {\r\n            var rule = m[0];\r\n            rule = lang_1.StringWrapper.replace(rule, m[2], '');\r\n            rule = lang_1.StringWrapper.replace(rule, m[1], m[3]);\r\n            r += rule + '\\n\\n';\r\n        }\r\n        return r;\r\n    };\r\n    /*\r\n     * convert a rule like :host(.foo) > .bar { }\r\n     *\r\n     * to\r\n     *\r\n     * scopeName.foo > .bar\r\n    */\r\n    ShadowCss.prototype._convertColonHost = function (cssText) {\r\n        return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);\r\n    };\r\n    /*\r\n     * convert a rule like :host-context(.foo) > .bar { }\r\n     *\r\n     * to\r\n     *\r\n     * scopeName.foo > .bar, .foo scopeName > .bar { }\r\n     *\r\n     * and\r\n     *\r\n     * :host-context(.foo:host) .bar { ... }\r\n     *\r\n     * to\r\n     *\r\n     * scopeName.foo .bar { ... }\r\n    */\r\n    ShadowCss.prototype._convertColonHostContext = function (cssText) {\r\n        return this._convertColonRule(cssText, _cssColonHostContextRe, this._colonHostContextPartReplacer);\r\n    };\r\n    ShadowCss.prototype._convertColonRule = function (cssText, regExp, partReplacer) {\r\n        // p1 = :host, p2 = contents of (), p3 rest of rule\r\n        return lang_1.StringWrapper.replaceAllMapped(cssText, regExp, function (m) {\r\n            if (lang_1.isPresent(m[2])) {\r\n                var parts = m[2].split(','), r = [];\r\n                for (var i = 0; i < parts.length; i++) {\r\n                    var p = parts[i];\r\n                    if (lang_1.isBlank(p))\r\n                        break;\r\n                    p = p.trim();\r\n                    r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\r\n                }\r\n                return r.join(',');\r\n            }\r\n            else {\r\n                return _polyfillHostNoCombinator + m[3];\r\n            }\r\n        });\r\n    };\r\n    ShadowCss.prototype._colonHostContextPartReplacer = function (host, part, suffix) {\r\n        if (lang_1.StringWrapper.contains(part, _polyfillHost)) {\r\n            return this._colonHostPartReplacer(host, part, suffix);\r\n        }\r\n        else {\r\n            return host + part + suffix + ', ' + part + ' ' + host + suffix;\r\n        }\r\n    };\r\n    ShadowCss.prototype._colonHostPartReplacer = function (host, part, suffix) {\r\n        return host + lang_1.StringWrapper.replace(part, _polyfillHost, '') + suffix;\r\n    };\r\n    /*\r\n     * Convert combinators like ::shadow and pseudo-elements like ::content\r\n     * by replacing with space.\r\n    */\r\n    ShadowCss.prototype._convertShadowDOMSelectors = function (cssText) {\r\n        for (var i = 0; i < _shadowDOMSelectorsRe.length; i++) {\r\n            cssText = lang_1.StringWrapper.replaceAll(cssText, _shadowDOMSelectorsRe[i], ' ');\r\n        }\r\n        return cssText;\r\n    };\r\n    // change a selector like 'div' to 'name div'\r\n    ShadowCss.prototype._scopeSelectors = function (cssText, scopeSelector, hostSelector) {\r\n        var _this = this;\r\n        return processRules(cssText, function (rule) {\r\n            var selector = rule.selector;\r\n            var content = rule.content;\r\n            if (rule.selector[0] != '@' || rule.selector.startsWith('@page')) {\r\n                selector =\r\n                    _this._scopeSelector(rule.selector, scopeSelector, hostSelector, _this.strictStyling);\r\n            }\r\n            else if (rule.selector.startsWith('@media')) {\r\n                content = _this._scopeSelectors(rule.content, scopeSelector, hostSelector);\r\n            }\r\n            return new CssRule(selector, content);\r\n        });\r\n    };\r\n    ShadowCss.prototype._scopeSelector = function (selector, scopeSelector, hostSelector, strict) {\r\n        var r = [], parts = selector.split(',');\r\n        for (var i = 0; i < parts.length; i++) {\r\n            var p = parts[i];\r\n            p = p.trim();\r\n            if (this._selectorNeedsScoping(p, scopeSelector)) {\r\n                p = strict && !lang_1.StringWrapper.contains(p, _polyfillHostNoCombinator) ?\r\n                    this._applyStrictSelectorScope(p, scopeSelector) :\r\n                    this._applySelectorScope(p, scopeSelector, hostSelector);\r\n            }\r\n            r.push(p);\r\n        }\r\n        return r.join(', ');\r\n    };\r\n    ShadowCss.prototype._selectorNeedsScoping = function (selector, scopeSelector) {\r\n        var re = this._makeScopeMatcher(scopeSelector);\r\n        return !lang_1.isPresent(lang_1.RegExpWrapper.firstMatch(re, selector));\r\n    };\r\n    ShadowCss.prototype._makeScopeMatcher = function (scopeSelector) {\r\n        var lre = /\\[/g;\r\n        var rre = /\\]/g;\r\n        scopeSelector = lang_1.StringWrapper.replaceAll(scopeSelector, lre, '\\\\[');\r\n        scopeSelector = lang_1.StringWrapper.replaceAll(scopeSelector, rre, '\\\\]');\r\n        return lang_1.RegExpWrapper.create('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\r\n    };\r\n    ShadowCss.prototype._applySelectorScope = function (selector, scopeSelector, hostSelector) {\r\n        // Difference from webcomponentsjs: scopeSelector could not be an array\r\n        return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);\r\n    };\r\n    // scope via name and [is=name]\r\n    ShadowCss.prototype._applySimpleSelectorScope = function (selector, scopeSelector, hostSelector) {\r\n        if (lang_1.isPresent(lang_1.RegExpWrapper.firstMatch(_polyfillHostRe, selector))) {\r\n            var replaceBy = this.strictStyling ? \"[\" + hostSelector + \"]\" : scopeSelector;\r\n            selector = lang_1.StringWrapper.replace(selector, _polyfillHostNoCombinator, replaceBy);\r\n            return lang_1.StringWrapper.replaceAll(selector, _polyfillHostRe, replaceBy + ' ');\r\n        }\r\n        else {\r\n            return scopeSelector + ' ' + selector;\r\n        }\r\n    };\r\n    // return a selector with [name] suffix on each simple selector\r\n    // e.g. .foo.bar > .zot becomes .foo[name].bar[name] > .zot[name]  /** @internal */\r\n    ShadowCss.prototype._applyStrictSelectorScope = function (selector, scopeSelector) {\r\n        var isRe = /\\[is=([^\\]]*)\\]/g;\r\n        scopeSelector = lang_1.StringWrapper.replaceAllMapped(scopeSelector, isRe, function (m) { return m[1]; });\r\n        var splits = [' ', '>', '+', '~'], scoped = selector, attrName = '[' + scopeSelector + ']';\r\n        for (var i = 0; i < splits.length; i++) {\r\n            var sep = splits[i];\r\n            var parts = scoped.split(sep);\r\n            scoped = parts.map(function (p) {\r\n                // remove :host since it should be unnecessary\r\n                var t = lang_1.StringWrapper.replaceAll(p.trim(), _polyfillHostRe, '');\r\n                if (t.length > 0 && !collection_1.ListWrapper.contains(splits, t) &&\r\n                    !lang_1.StringWrapper.contains(t, attrName)) {\r\n                    var re = /([^:]*)(:*)(.*)/g;\r\n                    var m = lang_1.RegExpWrapper.firstMatch(re, t);\r\n                    if (lang_1.isPresent(m)) {\r\n                        p = m[1] + attrName + m[2] + m[3];\r\n                    }\r\n                }\r\n                return p;\r\n            })\r\n                .join(sep);\r\n        }\r\n        return scoped;\r\n    };\r\n    ShadowCss.prototype._insertPolyfillHostInCssText = function (selector) {\r\n        selector = lang_1.StringWrapper.replaceAll(selector, _colonHostContextRe, _polyfillHostContext);\r\n        selector = lang_1.StringWrapper.replaceAll(selector, _colonHostRe, _polyfillHost);\r\n        return selector;\r\n    };\r\n    return ShadowCss;\r\n})();\r\nexports.ShadowCss = ShadowCss;\r\nvar _cssContentNextSelectorRe = /polyfill-next-selector[^}]*content:[\\s]*?['\"](.*?)['\"][;\\s]*}([^{]*?){/gim;\r\nvar _cssContentRuleRe = /(polyfill-rule)[^}]*(content:[\\s]*['\"](.*?)['\"])[;\\s]*[^}]*}/gim;\r\nvar _cssContentUnscopedRuleRe = /(polyfill-unscoped-rule)[^}]*(content:[\\s]*['\"](.*?)['\"])[;\\s]*[^}]*}/gim;\r\nvar _polyfillHost = '-shadowcsshost';\r\n// note: :host-context pre-processed to -shadowcsshostcontext.\r\nvar _polyfillHostContext = '-shadowcsscontext';\r\nvar _parenSuffix = ')(?:\\\\((' +\r\n    '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\r\n    ')\\\\))?([^,{]*)';\r\nvar _cssColonHostRe = lang_1.RegExpWrapper.create('(' + _polyfillHost + _parenSuffix, 'im');\r\nvar _cssColonHostContextRe = lang_1.RegExpWrapper.create('(' + _polyfillHostContext + _parenSuffix, 'im');\r\nvar _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\r\nvar _shadowDOMSelectorsRe = [\r\n    />>>/g,\r\n    /::shadow/g,\r\n    /::content/g,\r\n    // Deprecated selectors\r\n    // TODO(vicb): see https://github.com/angular/clang-format/issues/16\r\n    // clang-format off\r\n    /\\/deep\\//g,\r\n    /\\/shadow-deep\\//g,\r\n    /\\/shadow\\//g,\r\n];\r\nvar _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\r\nvar _polyfillHostRe = lang_1.RegExpWrapper.create(_polyfillHost, 'im');\r\nvar _colonHostRe = /:host/gim;\r\nvar _colonHostContextRe = /:host-context/gim;\r\nvar _commentRe = /\\/\\*[\\s\\S]*?\\*\\//g;\r\nfunction stripComments(input) {\r\n    return lang_1.StringWrapper.replaceAllMapped(input, _commentRe, function (_) { return ''; });\r\n}\r\nvar _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\r\nvar _curlyRe = /([{}])/g;\r\nvar OPEN_CURLY = '{';\r\nvar CLOSE_CURLY = '}';\r\nvar BLOCK_PLACEHOLDER = '%BLOCK%';\r\nvar CssRule = (function () {\r\n    function CssRule(selector, content) {\r\n        this.selector = selector;\r\n        this.content = content;\r\n    }\r\n    return CssRule;\r\n})();\r\nexports.CssRule = CssRule;\r\nfunction processRules(input, ruleCallback) {\r\n    var inputWithEscapedBlocks = escapeBlocks(input);\r\n    var nextBlockIndex = 0;\r\n    return lang_1.StringWrapper.replaceAllMapped(inputWithEscapedBlocks.escapedString, _ruleRe, function (m) {\r\n        var selector = m[2];\r\n        var content = '';\r\n        var suffix = m[4];\r\n        var contentPrefix = '';\r\n        if (lang_1.isPresent(m[4]) && m[4].startsWith('{' + BLOCK_PLACEHOLDER)) {\r\n            content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\r\n            suffix = m[4].substring(BLOCK_PLACEHOLDER.length + 1);\r\n            contentPrefix = '{';\r\n        }\r\n        var rule = ruleCallback(new CssRule(selector, content));\r\n        return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\r\n    });\r\n}\r\nexports.processRules = processRules;\r\nvar StringWithEscapedBlocks = (function () {\r\n    function StringWithEscapedBlocks(escapedString, blocks) {\r\n        this.escapedString = escapedString;\r\n        this.blocks = blocks;\r\n    }\r\n    return StringWithEscapedBlocks;\r\n})();\r\nfunction escapeBlocks(input) {\r\n    var inputParts = lang_1.StringWrapper.split(input, _curlyRe);\r\n    var resultParts = [];\r\n    var escapedBlocks = [];\r\n    var bracketCount = 0;\r\n    var currentBlockParts = [];\r\n    for (var partIndex = 0; partIndex < inputParts.length; partIndex++) {\r\n        var part = inputParts[partIndex];\r\n        if (part == CLOSE_CURLY) {\r\n            bracketCount--;\r\n        }\r\n        if (bracketCount > 0) {\r\n            currentBlockParts.push(part);\r\n        }\r\n        else {\r\n            if (currentBlockParts.length > 0) {\r\n                escapedBlocks.push(currentBlockParts.join(''));\r\n                resultParts.push(BLOCK_PLACEHOLDER);\r\n                currentBlockParts = [];\r\n            }\r\n            resultParts.push(part);\r\n        }\r\n        if (part == OPEN_CURLY) {\r\n            bracketCount++;\r\n        }\r\n    }\r\n    if (currentBlockParts.length > 0) {\r\n        escapedBlocks.push(currentBlockParts.join(''));\r\n        resultParts.push(BLOCK_PLACEHOLDER);\r\n    }\r\n    return new StringWithEscapedBlocks(resultParts.join(''), escapedBlocks);\r\n}\r\n//# sourceMappingURL=data:application/json;base64,\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/compiler/shadow_css.js\n ** module id = 209\n ** module chunks = 1\n **/","'use strict';var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar lang_1 = require('angular2/src/facade/lang');\r\n/**\r\n * Marks a function or method as an Angular 2 entrypoint. Only necessary in Dart code.\r\n *\r\n * The optional `name` parameter will be reflected in logs when the entry point is processed.\r\n *\r\n * See [the wiki][] for detailed documentation.\r\n * [the wiki]: https://github.com/angular/angular/wiki/Angular-2-Dart-Transformer#entry_points\r\n *\r\n * ## Example\r\n *\r\n * ```\r\n * @AngularEntrypoint(\"name-for-debug\")\r\n * void main() {\r\n *   bootstrap(MyComponent);\r\n * }\r\n * ```\r\n */\r\nvar AngularEntrypoint = (function () {\r\n    function AngularEntrypoint(name) {\r\n        this.name = name;\r\n    }\r\n    AngularEntrypoint = __decorate([\r\n        lang_1.CONST(), \r\n        __metadata('design:paramtypes', [String])\r\n    ], AngularEntrypoint);\r\n    return AngularEntrypoint;\r\n})();\r\nexports.AngularEntrypoint = AngularEntrypoint;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5ndWxhcl9lbnRyeXBvaW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYW5ndWxhcjIvc3JjL2NvcmUvYW5ndWxhcl9lbnRyeXBvaW50LnRzIl0sIm5hbWVzIjpbIkFuZ3VsYXJFbnRyeXBvaW50IiwiQW5ndWxhckVudHJ5cG9pbnQuY29uc3RydWN0b3IiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBLHFCQUFvQiwwQkFBMEIsQ0FBQyxDQUFBO0FBRS9DOzs7Ozs7Ozs7Ozs7Ozs7O0dBZ0JHO0FBQ0g7SUFFRUEsMkJBQW1CQSxJQUFhQTtRQUFiQyxTQUFJQSxHQUFKQSxJQUFJQSxDQUFTQTtJQUFHQSxDQUFDQTtJQUZ0Q0Q7UUFBQ0EsWUFBS0EsRUFBRUE7OzBCQUdQQTtJQUFEQSx3QkFBQ0E7QUFBREEsQ0FBQ0EsQUFIRCxJQUdDO0FBRlkseUJBQWlCLG9CQUU3QixDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDT05TVH0gZnJvbSAnYW5ndWxhcjIvc3JjL2ZhY2FkZS9sYW5nJztcblxuLyoqXG4gKiBNYXJrcyBhIGZ1bmN0aW9uIG9yIG1ldGhvZCBhcyBhbiBBbmd1bGFyIDIgZW50cnlwb2ludC4gT25seSBuZWNlc3NhcnkgaW4gRGFydCBjb2RlLlxuICpcbiAqIFRoZSBvcHRpb25hbCBgbmFtZWAgcGFyYW1ldGVyIHdpbGwgYmUgcmVmbGVjdGVkIGluIGxvZ3Mgd2hlbiB0aGUgZW50cnkgcG9pbnQgaXMgcHJvY2Vzc2VkLlxuICpcbiAqIFNlZSBbdGhlIHdpa2ldW10gZm9yIGRldGFpbGVkIGRvY3VtZW50YXRpb24uXG4gKiBbdGhlIHdpa2ldOiBodHRwczovL2dpdGh1Yi5jb20vYW5ndWxhci9hbmd1bGFyL3dpa2kvQW5ndWxhci0yLURhcnQtVHJhbnNmb3JtZXIjZW50cnlfcG9pbnRzXG4gKlxuICogIyMgRXhhbXBsZVxuICpcbiAqIGBgYFxuICogQEFuZ3VsYXJFbnRyeXBvaW50KFwibmFtZS1mb3ItZGVidWdcIilcbiAqIHZvaWQgbWFpbigpIHtcbiAqICAgYm9vdHN0cmFwKE15Q29tcG9uZW50KTtcbiAqIH1cbiAqIGBgYFxuICovXG5AQ09OU1QoKVxuZXhwb3J0IGNsYXNzIEFuZ3VsYXJFbnRyeXBvaW50IHtcbiAgY29uc3RydWN0b3IocHVibGljIG5hbWU/OiBTdHJpbmcpIHt9XG59XG4iXX0=\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/core/angular_entrypoint.js\n ** module id = 210\n ** module chunks = 1\n **/","'use strict';var lang_1 = require('angular2/src/facade/lang');\r\nvar debug_node_1 = require('angular2/src/core/debug/debug_node');\r\nvar DebugDomRootRenderer = (function () {\r\n    function DebugDomRootRenderer(_delegate) {\r\n        this._delegate = _delegate;\r\n    }\r\n    DebugDomRootRenderer.prototype.renderComponent = function (componentProto) {\r\n        return new DebugDomRenderer(this, this._delegate.renderComponent(componentProto));\r\n    };\r\n    return DebugDomRootRenderer;\r\n})();\r\nexports.DebugDomRootRenderer = DebugDomRootRenderer;\r\nvar DebugDomRenderer = (function () {\r\n    function DebugDomRenderer(_rootRenderer, _delegate) {\r\n        this._rootRenderer = _rootRenderer;\r\n        this._delegate = _delegate;\r\n    }\r\n    DebugDomRenderer.prototype.renderComponent = function (componentType) {\r\n        return this._rootRenderer.renderComponent(componentType);\r\n    };\r\n    DebugDomRenderer.prototype.selectRootElement = function (selector) {\r\n        var nativeEl = this._delegate.selectRootElement(selector);\r\n        var debugEl = new debug_node_1.DebugElement(nativeEl, null);\r\n        debug_node_1.indexDebugNode(debugEl);\r\n        return nativeEl;\r\n    };\r\n    DebugDomRenderer.prototype.createElement = function (parentElement, name) {\r\n        var nativeEl = this._delegate.createElement(parentElement, name);\r\n        var debugEl = new debug_node_1.DebugElement(nativeEl, debug_node_1.getDebugNode(parentElement));\r\n        debugEl.name = name;\r\n        debug_node_1.indexDebugNode(debugEl);\r\n        return nativeEl;\r\n    };\r\n    DebugDomRenderer.prototype.createViewRoot = function (hostElement) { return this._delegate.createViewRoot(hostElement); };\r\n    DebugDomRenderer.prototype.createTemplateAnchor = function (parentElement) {\r\n        var comment = this._delegate.createTemplateAnchor(parentElement);\r\n        var debugEl = new debug_node_1.DebugNode(comment, debug_node_1.getDebugNode(parentElement));\r\n        debug_node_1.indexDebugNode(debugEl);\r\n        return comment;\r\n    };\r\n    DebugDomRenderer.prototype.createText = function (parentElement, value) {\r\n        var text = this._delegate.createText(parentElement, value);\r\n        var debugEl = new debug_node_1.DebugNode(text, debug_node_1.getDebugNode(parentElement));\r\n        debug_node_1.indexDebugNode(debugEl);\r\n        return text;\r\n    };\r\n    DebugDomRenderer.prototype.projectNodes = function (parentElement, nodes) {\r\n        var debugParent = debug_node_1.getDebugNode(parentElement);\r\n        if (lang_1.isPresent(debugParent) && debugParent instanceof debug_node_1.DebugElement) {\r\n            nodes.forEach(function (node) { debugParent.addChild(debug_node_1.getDebugNode(node)); });\r\n        }\r\n        return this._delegate.projectNodes(parentElement, nodes);\r\n    };\r\n    DebugDomRenderer.prototype.attachViewAfter = function (node, viewRootNodes) {\r\n        var debugNode = debug_node_1.getDebugNode(node);\r\n        if (lang_1.isPresent(debugNode)) {\r\n            var debugParent = debugNode.parent;\r\n            if (viewRootNodes.length > 0 && lang_1.isPresent(debugParent)) {\r\n                var debugViewRootNodes = [];\r\n                viewRootNodes.forEach(function (rootNode) { return debugViewRootNodes.push(debug_node_1.getDebugNode(rootNode)); });\r\n                debugParent.insertChildrenAfter(debugNode, debugViewRootNodes);\r\n            }\r\n        }\r\n        return this._delegate.attachViewAfter(node, viewRootNodes);\r\n    };\r\n    DebugDomRenderer.prototype.detachView = function (viewRootNodes) {\r\n        viewRootNodes.forEach(function (node) {\r\n            var debugNode = debug_node_1.getDebugNode(node);\r\n            if (lang_1.isPresent(debugNode) && lang_1.isPresent(debugNode.parent)) {\r\n                debugNode.parent.removeChild(debugNode);\r\n            }\r\n        });\r\n        return this._delegate.detachView(viewRootNodes);\r\n    };\r\n    DebugDomRenderer.prototype.destroyView = function (hostElement, viewAllNodes) {\r\n        viewAllNodes.forEach(function (node) { debug_node_1.removeDebugNodeFromIndex(debug_node_1.getDebugNode(node)); });\r\n        return this._delegate.destroyView(hostElement, viewAllNodes);\r\n    };\r\n    DebugDomRenderer.prototype.listen = function (renderElement, name, callback) {\r\n        var debugEl = debug_node_1.getDebugNode(renderElement);\r\n        if (lang_1.isPresent(debugEl)) {\r\n            debugEl.listeners.push(new debug_node_1.EventListener(name, callback));\r\n        }\r\n        return this._delegate.listen(renderElement, name, callback);\r\n    };\r\n    DebugDomRenderer.prototype.listenGlobal = function (target, name, callback) {\r\n        return this._delegate.listenGlobal(target, name, callback);\r\n    };\r\n    DebugDomRenderer.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\r\n        var debugEl = debug_node_1.getDebugNode(renderElement);\r\n        if (lang_1.isPresent(debugEl) && debugEl instanceof debug_node_1.DebugElement) {\r\n            debugEl.properties.set(propertyName, propertyValue);\r\n        }\r\n        return this._delegate.setElementProperty(renderElement, propertyName, propertyValue);\r\n    };\r\n    DebugDomRenderer.prototype.setElementAttribute = function (renderElement, attributeName, attributeValue) {\r\n        var debugEl = debug_node_1.getDebugNode(renderElement);\r\n        if (lang_1.isPresent(debugEl) && debugEl instanceof debug_node_1.DebugElement) {\r\n            debugEl.attributes.set(attributeName, attributeValue);\r\n        }\r\n        return this._delegate.setElementAttribute(renderElement, attributeName, attributeValue);\r\n    };\r\n    /**\r\n     * Used only in debug mode to serialize property changes to comment nodes,\r\n     * such as <template> placeholders.\r\n     */\r\n    DebugDomRenderer.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) {\r\n        return this._delegate.setBindingDebugInfo(renderElement, propertyName, propertyValue);\r\n    };\r\n    /**\r\n     * Used only in development mode to set information needed by the DebugNode for this element.\r\n     */\r\n    DebugDomRenderer.prototype.setElementDebugInfo = function (renderElement, info) {\r\n        var debugEl = debug_node_1.getDebugNode(renderElement);\r\n        debugEl.setDebugInfo(info);\r\n        return this._delegate.setElementDebugInfo(renderElement, info);\r\n    };\r\n    DebugDomRenderer.prototype.setElementClass = function (renderElement, className, isAdd) {\r\n        return this._delegate.setElementClass(renderElement, className, isAdd);\r\n    };\r\n    DebugDomRenderer.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\r\n        return this._delegate.setElementStyle(renderElement, styleName, styleValue);\r\n    };\r\n    DebugDomRenderer.prototype.invokeElementMethod = function (renderElement, methodName, args) {\r\n        return this._delegate.invokeElementMethod(renderElement, methodName, args);\r\n    };\r\n    DebugDomRenderer.prototype.setText = function (renderNode, text) { return this._delegate.setText(renderNode, text); };\r\n    return DebugDomRenderer;\r\n})();\r\nexports.DebugDomRenderer = DebugDomRenderer;\r\n//# sourceMappingURL=data:application/json;base64,\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/core/debug/debug_renderer.js\n ** module id = 223\n ** module chunks = 1\n **/","'use strict';var lang_1 = require('angular2/src/facade/lang');\r\nvar interfaces_1 = require('./interfaces');\r\nfunction hasLifecycleHook(lcInterface, token) {\r\n    if (!(token instanceof lang_1.Type))\r\n        return false;\r\n    var proto = token.prototype;\r\n    switch (lcInterface) {\r\n        case interfaces_1.LifecycleHooks.AfterContentInit:\r\n            return !!proto.ngAfterContentInit;\r\n        case interfaces_1.LifecycleHooks.AfterContentChecked:\r\n            return !!proto.ngAfterContentChecked;\r\n        case interfaces_1.LifecycleHooks.AfterViewInit:\r\n            return !!proto.ngAfterViewInit;\r\n        case interfaces_1.LifecycleHooks.AfterViewChecked:\r\n            return !!proto.ngAfterViewChecked;\r\n        case interfaces_1.LifecycleHooks.OnChanges:\r\n            return !!proto.ngOnChanges;\r\n        case interfaces_1.LifecycleHooks.DoCheck:\r\n            return !!proto.ngDoCheck;\r\n        case interfaces_1.LifecycleHooks.OnDestroy:\r\n            return !!proto.ngOnDestroy;\r\n        case interfaces_1.LifecycleHooks.OnInit:\r\n            return !!proto.ngOnInit;\r\n        default:\r\n            return false;\r\n    }\r\n}\r\nexports.hasLifecycleHook = hasLifecycleHook;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlyZWN0aXZlX2xpZmVjeWNsZV9yZWZsZWN0b3IuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJhbmd1bGFyMi9zcmMvY29yZS9saW5rZXIvZGlyZWN0aXZlX2xpZmVjeWNsZV9yZWZsZWN0b3IudHMiXSwibmFtZXMiOlsiaGFzTGlmZWN5Y2xlSG9vayJdLCJtYXBwaW5ncyI6IkFBQUEscUJBQW1CLDBCQUEwQixDQUFDLENBQUE7QUFDOUMsMkJBQTZCLGNBQWMsQ0FBQyxDQUFBO0FBRTVDLDBCQUFpQyxXQUEyQixFQUFFLEtBQUs7SUFDakVBLEVBQUVBLENBQUNBLENBQUNBLENBQUNBLENBQUNBLEtBQUtBLFlBQVlBLFdBQUlBLENBQUNBLENBQUNBO1FBQUNBLE1BQU1BLENBQUNBLEtBQUtBLENBQUNBO0lBRTNDQSxJQUFJQSxLQUFLQSxHQUFTQSxLQUFNQSxDQUFDQSxTQUFTQSxDQUFDQTtJQUVuQ0EsTUFBTUEsQ0FBQ0EsQ0FBQ0EsV0FBV0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7UUFDcEJBLEtBQUtBLDJCQUFjQSxDQUFDQSxnQkFBZ0JBO1lBQ2xDQSxNQUFNQSxDQUFDQSxDQUFDQSxDQUFDQSxLQUFLQSxDQUFDQSxrQkFBa0JBLENBQUNBO1FBQ3BDQSxLQUFLQSwyQkFBY0EsQ0FBQ0EsbUJBQW1CQTtZQUNyQ0EsTUFBTUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsS0FBS0EsQ0FBQ0EscUJBQXFCQSxDQUFDQTtRQUN2Q0EsS0FBS0EsMkJBQWNBLENBQUNBLGFBQWFBO1lBQy9CQSxNQUFNQSxDQUFDQSxDQUFDQSxDQUFDQSxLQUFLQSxDQUFDQSxlQUFlQSxDQUFDQTtRQUNqQ0EsS0FBS0EsMkJBQWNBLENBQUNBLGdCQUFnQkE7WUFDbENBLE1BQU1BLENBQUNBLENBQUNBLENBQUNBLEtBQUtBLENBQUNBLGtCQUFrQkEsQ0FBQ0E7UUFDcENBLEtBQUtBLDJCQUFjQSxDQUFDQSxTQUFTQTtZQUMzQkEsTUFBTUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsS0FBS0EsQ0FBQ0EsV0FBV0EsQ0FBQ0E7UUFDN0JBLEtBQUtBLDJCQUFjQSxDQUFDQSxPQUFPQTtZQUN6QkEsTUFBTUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsS0FBS0EsQ0FBQ0EsU0FBU0EsQ0FBQ0E7UUFDM0JBLEtBQUtBLDJCQUFjQSxDQUFDQSxTQUFTQTtZQUMzQkEsTUFBTUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsS0FBS0EsQ0FBQ0EsV0FBV0EsQ0FBQ0E7UUFDN0JBLEtBQUtBLDJCQUFjQSxDQUFDQSxNQUFNQTtZQUN4QkEsTUFBTUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsS0FBS0EsQ0FBQ0EsUUFBUUEsQ0FBQ0E7UUFDMUJBO1lBQ0VBLE1BQU1BLENBQUNBLEtBQUtBLENBQUNBO0lBQ2pCQSxDQUFDQTtBQUNIQSxDQUFDQTtBQXpCZSx3QkFBZ0IsbUJBeUIvQixDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtUeXBlfSBmcm9tICdhbmd1bGFyMi9zcmMvZmFjYWRlL2xhbmcnO1xuaW1wb3J0IHtMaWZlY3ljbGVIb29rc30gZnJvbSAnLi9pbnRlcmZhY2VzJztcblxuZXhwb3J0IGZ1bmN0aW9uIGhhc0xpZmVjeWNsZUhvb2sobGNJbnRlcmZhY2U6IExpZmVjeWNsZUhvb2tzLCB0b2tlbik6IGJvb2xlYW4ge1xuICBpZiAoISh0b2tlbiBpbnN0YW5jZW9mIFR5cGUpKSByZXR1cm4gZmFsc2U7XG5cbiAgdmFyIHByb3RvID0gKDxhbnk+dG9rZW4pLnByb3RvdHlwZTtcblxuICBzd2l0Y2ggKGxjSW50ZXJmYWNlKSB7XG4gICAgY2FzZSBMaWZlY3ljbGVIb29rcy5BZnRlckNvbnRlbnRJbml0OlxuICAgICAgcmV0dXJuICEhcHJvdG8ubmdBZnRlckNvbnRlbnRJbml0O1xuICAgIGNhc2UgTGlmZWN5Y2xlSG9va3MuQWZ0ZXJDb250ZW50Q2hlY2tlZDpcbiAgICAgIHJldHVybiAhIXByb3RvLm5nQWZ0ZXJDb250ZW50Q2hlY2tlZDtcbiAgICBjYXNlIExpZmVjeWNsZUhvb2tzLkFmdGVyVmlld0luaXQ6XG4gICAgICByZXR1cm4gISFwcm90by5uZ0FmdGVyVmlld0luaXQ7XG4gICAgY2FzZSBMaWZlY3ljbGVIb29rcy5BZnRlclZpZXdDaGVja2VkOlxuICAgICAgcmV0dXJuICEhcHJvdG8ubmdBZnRlclZpZXdDaGVja2VkO1xuICAgIGNhc2UgTGlmZWN5Y2xlSG9va3MuT25DaGFuZ2VzOlxuICAgICAgcmV0dXJuICEhcHJvdG8ubmdPbkNoYW5nZXM7XG4gICAgY2FzZSBMaWZlY3ljbGVIb29rcy5Eb0NoZWNrOlxuICAgICAgcmV0dXJuICEhcHJvdG8ubmdEb0NoZWNrO1xuICAgIGNhc2UgTGlmZWN5Y2xlSG9va3MuT25EZXN0cm95OlxuICAgICAgcmV0dXJuICEhcHJvdG8ubmdPbkRlc3Ryb3k7XG4gICAgY2FzZSBMaWZlY3ljbGVIb29rcy5PbkluaXQ6XG4gICAgICByZXR1cm4gISFwcm90by5uZ09uSW5pdDtcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIGZhbHNlO1xuICB9XG59XG4iXX0=\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/core/linker/directive_lifecycle_reflector.js\n ** module id = 226\n ** module chunks = 1\n **/","'use strict';/**\r\n * This is here because DART requires it. It is noop in JS.\r\n */\r\nfunction wtfInit() { }\r\nexports.wtfInit = wtfInit;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid3RmX2luaXQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJhbmd1bGFyMi9zcmMvY29yZS9wcm9maWxlL3d0Zl9pbml0LnRzIl0sIm5hbWVzIjpbInd0ZkluaXQiXSwibWFwcGluZ3MiOiJBQUFBOztHQUVHO0FBQ0gscUJBQTJCQSxDQUFDQTtBQUFaLGVBQU8sVUFBSyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBUaGlzIGlzIGhlcmUgYmVjYXVzZSBEQVJUIHJlcXVpcmVzIGl0LiBJdCBpcyBub29wIGluIEpTLlxuICovXG5leHBvcnQgZnVuY3Rpb24gd3RmSW5pdCgpIHt9XG4iXX0=\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/core/profile/wtf_init.js\n ** module id = 230\n ** module chunks = 1\n **/","'use strict';/**\r\n * JS version of browser APIs. This library can only run in the browser.\r\n */\r\nvar win = window;\r\nexports.window = win;\r\nexports.document = window.document;\r\nexports.location = window.location;\r\nexports.gc = window['gc'] ? function () { return window['gc'](); } : function () { return null; };\r\nexports.performance = window['performance'] ? window['performance'] : null;\r\nexports.Event = window['Event'];\r\nexports.MouseEvent = window['MouseEvent'];\r\nexports.KeyboardEvent = window['KeyboardEvent'];\r\nexports.EventTarget = window['EventTarget'];\r\nexports.History = window['History'];\r\nexports.Location = window['Location'];\r\nexports.EventListener = window['EventListener'];\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnJvd3Nlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImFuZ3VsYXIyL3NyYy9mYWNhZGUvYnJvd3Nlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7R0FFRztBQUNILElBQUksR0FBRyxHQUFHLE1BQU07QUFFRCxjQUFNLE9BRko7QUFHTixnQkFBUSxHQUFHLE1BQU0sQ0FBQyxRQUFRLENBQUM7QUFDM0IsZ0JBQVEsR0FBRyxNQUFNLENBQUMsUUFBUSxDQUFDO0FBQzNCLFVBQUUsR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsY0FBTSxPQUFBLE1BQU0sQ0FBQyxJQUFJLENBQUMsRUFBRSxFQUFkLENBQWMsR0FBRyxjQUFNLE9BQUEsSUFBSSxFQUFKLENBQUksQ0FBQztBQUN0RCxtQkFBVyxHQUFHLE1BQU0sQ0FBQyxhQUFhLENBQUMsR0FBRyxNQUFNLENBQUMsYUFBYSxDQUFDLEdBQUcsSUFBSSxDQUFDO0FBQ2pFLGFBQUssR0FBRyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUM7QUFDeEIsa0JBQVUsR0FBRyxNQUFNLENBQUMsWUFBWSxDQUFDLENBQUM7QUFDbEMscUJBQWEsR0FBRyxNQUFNLENBQUMsZUFBZSxDQUFDLENBQUM7QUFDeEMsbUJBQVcsR0FBRyxNQUFNLENBQUMsYUFBYSxDQUFDLENBQUM7QUFDcEMsZUFBTyxHQUFHLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQztBQUM1QixnQkFBUSxHQUFHLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQztBQUM5QixxQkFBYSxHQUFHLE1BQU0sQ0FBQyxlQUFlLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogSlMgdmVyc2lvbiBvZiBicm93c2VyIEFQSXMuIFRoaXMgbGlicmFyeSBjYW4gb25seSBydW4gaW4gdGhlIGJyb3dzZXIuXG4gKi9cbnZhciB3aW4gPSB3aW5kb3c7XG5cbmV4cG9ydCB7d2luIGFzIHdpbmRvd307XG5leHBvcnQgdmFyIGRvY3VtZW50ID0gd2luZG93LmRvY3VtZW50O1xuZXhwb3J0IHZhciBsb2NhdGlvbiA9IHdpbmRvdy5sb2NhdGlvbjtcbmV4cG9ydCB2YXIgZ2MgPSB3aW5kb3dbJ2djJ10gPyAoKSA9PiB3aW5kb3dbJ2djJ10oKSA6ICgpID0+IG51bGw7XG5leHBvcnQgdmFyIHBlcmZvcm1hbmNlID0gd2luZG93WydwZXJmb3JtYW5jZSddID8gd2luZG93WydwZXJmb3JtYW5jZSddIDogbnVsbDtcbmV4cG9ydCBjb25zdCBFdmVudCA9IHdpbmRvd1snRXZlbnQnXTtcbmV4cG9ydCBjb25zdCBNb3VzZUV2ZW50ID0gd2luZG93WydNb3VzZUV2ZW50J107XG5leHBvcnQgY29uc3QgS2V5Ym9hcmRFdmVudCA9IHdpbmRvd1snS2V5Ym9hcmRFdmVudCddO1xuZXhwb3J0IGNvbnN0IEV2ZW50VGFyZ2V0ID0gd2luZG93WydFdmVudFRhcmdldCddO1xuZXhwb3J0IGNvbnN0IEhpc3RvcnkgPSB3aW5kb3dbJ0hpc3RvcnknXTtcbmV4cG9ydCBjb25zdCBMb2NhdGlvbiA9IHdpbmRvd1snTG9jYXRpb24nXTtcbmV4cG9ydCBjb25zdCBFdmVudExpc3RlbmVyID0gd2luZG93WydFdmVudExpc3RlbmVyJ107XG4iXX0=\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/facade/browser.js\n ** module id = 235\n ** module chunks = 1\n **/","'use strict';var __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar collection_1 = require('angular2/src/facade/collection');\r\nvar lang_1 = require('angular2/src/facade/lang');\r\nvar dom_adapter_1 = require('angular2/src/platform/dom/dom_adapter');\r\nvar xhr_impl_1 = require('angular2/src/platform/browser/xhr_impl');\r\n/**\r\n * Provides DOM operations in any browser environment.\r\n */\r\nvar GenericBrowserDomAdapter = (function (_super) {\r\n    __extends(GenericBrowserDomAdapter, _super);\r\n    function GenericBrowserDomAdapter() {\r\n        var _this = this;\r\n        _super.call(this);\r\n        this._animationPrefix = null;\r\n        this._transitionEnd = null;\r\n        try {\r\n            var element = this.createElement('div', this.defaultDoc());\r\n            if (lang_1.isPresent(this.getStyle(element, 'animationName'))) {\r\n                this._animationPrefix = '';\r\n            }\r\n            else {\r\n                var domPrefixes = ['Webkit', 'Moz', 'O', 'ms'];\r\n                for (var i = 0; i < domPrefixes.length; i++) {\r\n                    if (lang_1.isPresent(this.getStyle(element, domPrefixes[i] + 'AnimationName'))) {\r\n                        this._animationPrefix = '-' + domPrefixes[i].toLowerCase() + '-';\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            var transEndEventNames = {\r\n                WebkitTransition: 'webkitTransitionEnd',\r\n                MozTransition: 'transitionend',\r\n                OTransition: 'oTransitionEnd otransitionend',\r\n                transition: 'transitionend'\r\n            };\r\n            collection_1.StringMapWrapper.forEach(transEndEventNames, function (value, key) {\r\n                if (lang_1.isPresent(_this.getStyle(element, key))) {\r\n                    _this._transitionEnd = value;\r\n                }\r\n            });\r\n        }\r\n        catch (e) {\r\n            this._animationPrefix = null;\r\n            this._transitionEnd = null;\r\n        }\r\n    }\r\n    GenericBrowserDomAdapter.prototype.getXHR = function () { return xhr_impl_1.XHRImpl; };\r\n    GenericBrowserDomAdapter.prototype.getDistributedNodes = function (el) { return el.getDistributedNodes(); };\r\n    GenericBrowserDomAdapter.prototype.resolveAndSetHref = function (el, baseUrl, href) {\r\n        el.href = href == null ? baseUrl : baseUrl + '/../' + href;\r\n    };\r\n    GenericBrowserDomAdapter.prototype.supportsDOMEvents = function () { return true; };\r\n    GenericBrowserDomAdapter.prototype.supportsNativeShadowDOM = function () {\r\n        return lang_1.isFunction(this.defaultDoc().body.createShadowRoot);\r\n    };\r\n    GenericBrowserDomAdapter.prototype.getAnimationPrefix = function () {\r\n        return lang_1.isPresent(this._animationPrefix) ? this._animationPrefix : \"\";\r\n    };\r\n    GenericBrowserDomAdapter.prototype.getTransitionEnd = function () { return lang_1.isPresent(this._transitionEnd) ? this._transitionEnd : \"\"; };\r\n    GenericBrowserDomAdapter.prototype.supportsAnimation = function () {\r\n        return lang_1.isPresent(this._animationPrefix) && lang_1.isPresent(this._transitionEnd);\r\n    };\r\n    return GenericBrowserDomAdapter;\r\n})(dom_adapter_1.DomAdapter);\r\nexports.GenericBrowserDomAdapter = GenericBrowserDomAdapter;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2VuZXJpY19icm93c2VyX2FkYXB0ZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJhbmd1bGFyMi9zcmMvcGxhdGZvcm0vYnJvd3Nlci9nZW5lcmljX2Jyb3dzZXJfYWRhcHRlci50cyJdLCJuYW1lcyI6WyJHZW5lcmljQnJvd3NlckRvbUFkYXB0ZXIiLCJHZW5lcmljQnJvd3NlckRvbUFkYXB0ZXIuY29uc3RydWN0b3IiLCJHZW5lcmljQnJvd3NlckRvbUFkYXB0ZXIuZ2V0WEhSIiwiR2VuZXJpY0Jyb3dzZXJEb21BZGFwdGVyLmdldERpc3RyaWJ1dGVkTm9kZXMiLCJHZW5lcmljQnJvd3NlckRvbUFkYXB0ZXIucmVzb2x2ZUFuZFNldEhyZWYiLCJHZW5lcmljQnJvd3NlckRvbUFkYXB0ZXIuc3VwcG9ydHNET01FdmVudHMiLCJHZW5lcmljQnJvd3NlckRvbUFkYXB0ZXIuc3VwcG9ydHNOYXRpdmVTaGFkb3dET00iLCJHZW5lcmljQnJvd3NlckRvbUFkYXB0ZXIuZ2V0QW5pbWF0aW9uUHJlZml4IiwiR2VuZXJpY0Jyb3dzZXJEb21BZGFwdGVyLmdldFRyYW5zaXRpb25FbmQiLCJHZW5lcmljQnJvd3NlckRvbUFkYXB0ZXIuc3VwcG9ydHNBbmltYXRpb24iXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsMkJBQTRDLGdDQUFnQyxDQUFDLENBQUE7QUFDN0UscUJBQTBDLDBCQUEwQixDQUFDLENBQUE7QUFDckUsNEJBQXlCLHVDQUF1QyxDQUFDLENBQUE7QUFDakUseUJBQXNCLHdDQUF3QyxDQUFDLENBQUE7QUFHL0Q7O0dBRUc7QUFDSDtJQUF1REEsNENBQVVBO0lBRy9EQTtRQUhGQyxpQkFtRENBO1FBL0NHQSxpQkFBT0EsQ0FBQ0E7UUFIRkEscUJBQWdCQSxHQUFXQSxJQUFJQSxDQUFDQTtRQUNoQ0EsbUJBQWNBLEdBQVdBLElBQUlBLENBQUNBO1FBR3BDQSxJQUFJQSxDQUFDQTtZQUNIQSxJQUFJQSxPQUFPQSxHQUFHQSxJQUFJQSxDQUFDQSxhQUFh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QUFJQSxDQUFDQSxVQUFVQSxFQUFFQSxDQUFDQSxJQUFLQSxDQUFDQSxnQkFBZ0JBLENBQUNBLENBQUNBO0lBQ3BFQSxDQUFDQTtJQUNETixxREFBa0JBLEdBQWxCQTtRQUNFTyxNQUFNQSxDQUFDQSxnQkFBU0EsQ0FBQ0EsSUFBSUEsQ0FBQ0EsZ0JBQWdCQSxDQUFDQSxHQUFHQSxJQUFJQSxDQUFDQSxnQkFBZ0JBLEdBQUdBLEVBQUVBLENBQUNBO0lBQ3ZFQSxDQUFDQTtJQUNEUCxtREFBZ0JBLEdBQWhCQSxjQUE2QlEsTUFBTUEsQ0FBQ0EsZ0JBQVNBLENBQUNBLElBQUlBLENBQUNBLGNBQWNBLENBQUNBLEdBQUdBLElBQUlBLENBQUNBLGNBQWNBLEdBQUdBLEVBQUVBLENBQUNBLENBQUNBLENBQUNBO0lBQ2hHUixvREFBaUJBLEdBQWpCQTtRQUNFUyxNQUFNQSxDQUFDQSxnQkFBU0EsQ0FBQ0EsSUFBSUEsQ0FBQ0EsZ0JBQWdCQSxDQUFDQSxJQUFJQSxnQkFBU0EsQ0FBQ0EsSUFBSUEsQ0FBQ0EsY0FBY0EsQ0FBQ0EsQ0FBQ0E7SUFDNUVBLENBQUNBO0lBQ0hULCtCQUFDQTtBQUFEQSxDQUFDQSxBQW5ERCxFQUF1RCx3QkFBVSxFQW1EaEU7QUFuRHFCLGdDQUF3QiwyQkFtRDdDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0xpc3RXcmFwcGVyLCBTdHJpbmdNYXBXcmFwcGVyfSBmcm9tICdhbmd1bGFyMi9zcmMvZmFjYWRlL2NvbGxlY3Rpb24nO1xuaW1wb3J0IHtpc1ByZXNlbnQsIGlzRnVuY3Rpb24sIFR5cGV9IGZyb20gJ2FuZ3VsYXIyL3NyYy9mYWNhZGUvbGFuZyc7XG5pbXBvcnQge0RvbUFkYXB0ZXJ9IGZyb20gJ2FuZ3VsYXIyL3NyYy9wbGF0Zm9ybS9kb20vZG9tX2FkYXB0ZXInO1xuaW1wb3J0IHtYSFJJbXBsfSBmcm9tICdhbmd1bGFyMi9zcmMvcGxhdGZvcm0vYnJvd3Nlci94aHJfaW1wbCc7XG5cblxuLyoqXG4gKiBQcm92aWRlcyBET00gb3BlcmF0aW9ucyBpbiBhbnkgYnJvd3NlciBlbnZpcm9ubWVudC5cbiAqL1xuZXhwb3J0IGFic3RyYWN0IGNsYXNzIEdlbmVyaWNCcm93c2VyRG9tQWRhcHRlciBleHRlbmRzIERvbUFkYXB0ZXIge1xuICBwcml2YXRlIF9hbmltYXRpb25QcmVmaXg6IHN0cmluZyA9IG51bGw7XG4gIHByaXZhdGUgX3RyYW5zaXRpb25FbmQ6IHN0cmluZyA9IG51bGw7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG4gICAgdHJ5IHtcbiAgICAgIHZhciBlbGVtZW50ID0gdGhpcy5jcmVhdGVFbGVtZW50KCdkaXYnLCB0aGlzLmRlZmF1bHREb2MoKSk7XG4gICAgICBpZiAoaXNQcmVzZW50KHRoaXMuZ2V0U3R5bGUoZWxlbWVudCwgJ2FuaW1hdGlvbk5hbWUnKSkpIHtcbiAgICAgICAgdGhpcy5fYW5pbWF0aW9uUHJlZml4ID0gJyc7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YXIgZG9tUHJlZml4ZXMgPSBbJ1dlYmtpdCcsICdNb3onLCAnTycsICdtcyddO1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGRvbVByZWZpeGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgaWYgKGlzUHJlc2VudCh0aGlzLmdldFN0eWxlKGVsZW1lbnQsIGRvbVByZWZpeGVzW2ldICsgJ0FuaW1hdGlvbk5hbWUnKSkpIHtcbiAgICAgICAgICAgIHRoaXMuX2FuaW1hdGlvblByZWZpeCA9ICctJyArIGRvbVByZWZpeGVzW2ldLnRvTG93ZXJDYXNlKCkgKyAnLSc7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHZhciB0cmFuc0VuZEV2ZW50TmFtZXM6IHtba2V5OiBzdHJpbmddOiBzdHJpbmd9ID0ge1xuICAgICAgICBXZWJraXRUcmFuc2l0aW9uOiAnd2Via2l0VHJhbnNpdGlvbkVuZCcsXG4gICAgICAgIE1velRyYW5zaXRpb246ICd0cmFuc2l0aW9uZW5kJyxcbiAgICAgICAgT1RyYW5zaXRpb246ICdvVHJhbnNpdGlvbkVuZCBvdHJhbnNpdGlvbmVuZCcsXG4gICAgICAgIHRyYW5zaXRpb246ICd0cmFuc2l0aW9uZW5kJ1xuICAgICAgfTtcbiAgICAgIFN0cmluZ01hcFdyYXBwZXIuZm9yRWFjaCh0cmFuc0VuZEV2ZW50TmFtZXMsICh2YWx1ZSwga2V5KSA9PiB7XG4gICAgICAgIGlmIChpc1ByZXNlbnQodGhpcy5nZXRTdHlsZShlbGVtZW50LCBrZXkpKSkge1xuICAgICAgICAgIHRoaXMuX3RyYW5zaXRpb25FbmQgPSB2YWx1ZTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgdGhpcy5fYW5pbWF0aW9uUHJlZml4ID0gbnVsbDtcbiAgICAgIHRoaXMuX3RyYW5zaXRpb25FbmQgPSBudWxsO1xuICAgIH1cbiAgfVxuXG4gIGdldFhIUigpOiBUeXBlIHsgcmV0dXJuIFhIUkltcGw7IH1cbiAgZ2V0RGlzdHJpYnV0ZWROb2RlcyhlbDogSFRNTEVsZW1lbnQpOiBOb2RlW10geyByZXR1cm4gKDxhbnk+ZWwpLmdldERpc3RyaWJ1dGVkTm9kZXMoKTsgfVxuICByZXNvbHZlQW5kU2V0SHJlZihlbDogSFRNTEFuY2hvckVsZW1lbnQsIGJhc2VVcmw6IHN0cmluZywgaHJlZjogc3RyaW5nKSB7XG4gICAgZWwuaHJlZiA9IGhyZWYgPT0gbnVsbCA/IGJhc2VVcmwgOiBiYXNlVXJsICsgJy8uLi8nICsgaHJlZjtcbiAgfVxuICBzdXBwb3J0c0RPTUV2ZW50cygpOiBib29sZWFuIHsgcmV0dXJuIHRydWU7IH1cbiAgc3VwcG9ydHNOYXRpdmVTaGFkb3dET00oKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIGlzRnVuY3Rpb24oKDxhbnk+dGhpcy5kZWZhdWx0RG9jKCkuYm9keSkuY3JlYXRlU2hhZG93Um9vdCk7XG4gIH1cbiAgZ2V0QW5pbWF0aW9uUHJlZml4KCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIGlzUHJlc2VudCh0aGlzLl9hbmltYXRpb25QcmVmaXgpID8gdGhpcy5fYW5pbWF0aW9uUHJlZml4IDogXCJcIjtcbiAgfVxuICBnZXRUcmFuc2l0aW9uRW5kKCk6IHN0cmluZyB7IHJldHVybiBpc1ByZXNlbnQodGhpcy5fdHJhbnNpdGlvbkVuZCkgPyB0aGlzLl90cmFuc2l0aW9uRW5kIDogXCJcIjsgfVxuICBzdXBwb3J0c0FuaW1hdGlvbigpOiBib29sZWFuIHtcbiAgICByZXR1cm4gaXNQcmVzZW50KHRoaXMuX2FuaW1hdGlvblByZWZpeCkgJiYgaXNQcmVzZW50KHRoaXMuX3RyYW5zaXRpb25FbmQpO1xuICB9XG59XG4iXX0=\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/platform/browser/generic_browser_adapter.js\n ** module id = 237\n ** module chunks = 1\n **/","'use strict';var collection_1 = require('angular2/src/facade/collection');\r\nvar lang_1 = require('angular2/src/facade/lang');\r\nvar dom_adapter_1 = require('angular2/src/platform/dom/dom_adapter');\r\nvar core_1 = require('angular2/core');\r\nvar PublicTestability = (function () {\r\n    function PublicTestability(testability) {\r\n        this._testability = testability;\r\n    }\r\n    PublicTestability.prototype.isStable = function () { return this._testability.isStable(); };\r\n    PublicTestability.prototype.whenStable = function (callback) { this._testability.whenStable(callback); };\r\n    PublicTestability.prototype.findBindings = function (using, provider, exactMatch) {\r\n        return this.findProviders(using, provider, exactMatch);\r\n    };\r\n    PublicTestability.prototype.findProviders = function (using, provider, exactMatch) {\r\n        return this._testability.findBindings(using, provider, exactMatch);\r\n    };\r\n    return PublicTestability;\r\n})();\r\nvar BrowserGetTestability = (function () {\r\n    function BrowserGetTestability() {\r\n    }\r\n    BrowserGetTestability.init = function () { core_1.setTestabilityGetter(new BrowserGetTestability()); };\r\n    BrowserGetTestability.prototype.addToWindow = function (registry) {\r\n        lang_1.global.getAngularTestability = function (elem, findInAncestors) {\r\n            if (findInAncestors === void 0) { findInAncestors = true; }\r\n            var testability = registry.findTestabilityInTree(elem, findInAncestors);\r\n            if (testability == null) {\r\n                throw new Error('Could not find testability for element.');\r\n            }\r\n            return new PublicTestability(testability);\r\n        };\r\n        lang_1.global.getAllAngularTestabilities = function () {\r\n            var testabilities = registry.getAllTestabilities();\r\n            return testabilities.map(function (testability) { return new PublicTestability(testability); });\r\n        };\r\n        var whenAllStable = function (callback) {\r\n            var testabilities = lang_1.global.getAllAngularTestabilities();\r\n            var count = testabilities.length;\r\n            var didWork = false;\r\n            var decrement = function (didWork_) {\r\n                didWork = didWork || didWork_;\r\n                count--;\r\n                if (count == 0) {\r\n                    callback(didWork);\r\n                }\r\n            };\r\n            testabilities.forEach(function (testability) { testability.whenStable(decrement); });\r\n        };\r\n        if (!lang_1.global.frameworkStabilizers) {\r\n            lang_1.global.frameworkStabilizers = collection_1.ListWrapper.createGrowableSize(0);\r\n        }\r\n        lang_1.global.frameworkStabilizers.push(whenAllStable);\r\n    };\r\n    BrowserGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\r\n        if (elem == null) {\r\n            return null;\r\n        }\r\n        var t = registry.getTestability(elem);\r\n        if (lang_1.isPresent(t)) {\r\n            return t;\r\n        }\r\n        else if (!findInAncestors) {\r\n            return null;\r\n        }\r\n        if (dom_adapter_1.DOM.isShadowRoot(elem)) {\r\n            return this.findTestabilityInTree(registry, dom_adapter_1.DOM.getHost(elem), true);\r\n        }\r\n        return this.findTestabilityInTree(registry, dom_adapter_1.DOM.parentElement(elem), true);\r\n    };\r\n    return BrowserGetTestability;\r\n})();\r\nexports.BrowserGetTestability = BrowserGetTestability;\r\n//# sourceMappingURL=data:application/json;base64,\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/platform/browser/testability.js\n ** module id = 238\n ** module chunks = 1\n **/","'use strict';var dom_adapter_1 = require('angular2/src/platform/dom/dom_adapter');\r\n/**\r\n * A service that can be used to get and set the title of a current HTML document.\r\n *\r\n * Since an Angular 2 application can't be bootstrapped on the entire HTML document (`<html>` tag)\r\n * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\r\n * (representing the `<title>` tag). Instead, this service can be used to set and get the current\r\n * title value.\r\n */\r\nvar Title = (function () {\r\n    function Title() {\r\n    }\r\n    /**\r\n     * Get the title of the current HTML document.\r\n     * @returns {string}\r\n     */\r\n    Title.prototype.getTitle = function () { return dom_adapter_1.DOM.getTitle(); };\r\n    /**\r\n     * Set the title of the current HTML document.\r\n     * @param newTitle\r\n     */\r\n    Title.prototype.setTitle = function (newTitle) { dom_adapter_1.DOM.setTitle(newTitle); };\r\n    return Title;\r\n})();\r\nexports.Title = Title;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGl0bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJhbmd1bGFyMi9zcmMvcGxhdGZvcm0vYnJvd3Nlci90aXRsZS50cyJdLCJuYW1lcyI6WyJUaXRsZSIsIlRpdGxlLmNvbnN0cnVjdG9yIiwiVGl0bGUuZ2V0VGl0bGUiLCJUaXRsZS5zZXRUaXRsZSJdLCJtYXBwaW5ncyI6IkFBQUEsNEJBQWtCLHVDQUF1QyxDQUFDLENBQUE7QUFFMUQ7Ozs7Ozs7R0FPRztBQUNIO0lBQUFBO0lBWUFDLENBQUNBO0lBWENEOzs7T0FHR0E7SUFDSEEsd0JBQVFBLEdBQVJBLGNBQXFCRSxNQUFNQSxDQUFDQSxpQkFBR0EsQ0FBQ0EsUUFBUUEsRUFBRUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7SUFFN0NGOzs7T0FHR0E7SUFDSEEsd0JBQVFBLEdBQVJBLFVBQVNBLFFBQWdCQSxJQUFJRyxpQkFBR0EsQ0FBQ0EsUUFBUUEsQ0FBQ0EsUUFBUUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7SUFDeERILFlBQUNBO0FBQURBLENBQUNBLEFBWkQsSUFZQztBQVpZLGFBQUssUUFZakIsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RE9NfSBmcm9tICdhbmd1bGFyMi9zcmMvcGxhdGZvcm0vZG9tL2RvbV9hZGFwdGVyJztcblxuLyoqXG4gKiBBIHNlcnZpY2UgdGhhdCBjYW4gYmUgdXNlZCB0byBnZXQgYW5kIHNldCB0aGUgdGl0bGUgb2YgYSBjdXJyZW50IEhUTUwgZG9jdW1lbnQuXG4gKlxuICogU2luY2UgYW4gQW5ndWxhciAyIGFwcGxpY2F0aW9uIGNhbid0IGJlIGJvb3RzdHJhcHBlZCBvbiB0aGUgZW50aXJlIEhUTUwgZG9jdW1lbnQgKGA8aHRtbD5gIHRhZylcbiAqIGl0IGlzIG5vdCBwb3NzaWJsZSB0byBiaW5kIHRvIHRoZSBgdGV4dGAgcHJvcGVydHkgb2YgdGhlIGBIVE1MVGl0bGVFbGVtZW50YCBlbGVtZW50c1xuICogKHJlcHJlc2VudGluZyB0aGUgYDx0aXRsZT5gIHRhZykuIEluc3RlYWQsIHRoaXMgc2VydmljZSBjYW4gYmUgdXNlZCB0byBzZXQgYW5kIGdldCB0aGUgY3VycmVudFxuICogdGl0bGUgdmFsdWUuXG4gKi9cbmV4cG9ydCBjbGFzcyBUaXRsZSB7XG4gIC8qKlxuICAgKiBHZXQgdGhlIHRpdGxlIG9mIHRoZSBjdXJyZW50IEhUTUwgZG9jdW1lbnQuXG4gICAqIEByZXR1cm5zIHtzdHJpbmd9XG4gICAqL1xuICBnZXRUaXRsZSgpOiBzdHJpbmcgeyByZXR1cm4gRE9NLmdldFRpdGxlKCk7IH1cblxuICAvKipcbiAgICogU2V0IHRoZSB0aXRsZSBvZiB0aGUgY3VycmVudCBIVE1MIGRvY3VtZW50LlxuICAgKiBAcGFyYW0gbmV3VGl0bGVcbiAgICovXG4gIHNldFRpdGxlKG5ld1RpdGxlOiBzdHJpbmcpIHsgRE9NLnNldFRpdGxlKG5ld1RpdGxlKTsgfVxufVxuIl19\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/platform/browser/title.js\n ** module id = 239\n ** module chunks = 1\n **/","'use strict';var application_ref_1 = require('angular2/src/core/application_ref');\r\nvar lang_1 = require('angular2/src/facade/lang');\r\nvar browser_1 = require('angular2/src/facade/browser');\r\nvar dom_adapter_1 = require('angular2/src/platform/dom/dom_adapter');\r\n/**\r\n * Entry point for all Angular debug tools. This object corresponds to the `ng`\r\n * global variable accessible in the dev console.\r\n */\r\nvar AngularTools = (function () {\r\n    function AngularTools(ref) {\r\n        this.profiler = new AngularProfiler(ref);\r\n    }\r\n    return AngularTools;\r\n})();\r\nexports.AngularTools = AngularTools;\r\n/**\r\n * Entry point for all Angular profiling-related debug tools. This object\r\n * corresponds to the `ng.profiler` in the dev console.\r\n */\r\nvar AngularProfiler = (function () {\r\n    function AngularProfiler(ref) {\r\n        this.appRef = ref.injector.get(application_ref_1.ApplicationRef);\r\n    }\r\n    /**\r\n     * Exercises change detection in a loop and then prints the average amount of\r\n     * time in milliseconds how long a single round of change detection takes for\r\n     * the current state of the UI. It runs a minimum of 5 rounds for a minimum\r\n     * of 500 milliseconds.\r\n     *\r\n     * Optionally, a user may pass a `config` parameter containing a map of\r\n     * options. Supported options are:\r\n     *\r\n     * `record` (boolean) - causes the profiler to record a CPU profile while\r\n     * it exercises the change detector. Example:\r\n     *\r\n     * ```\r\n     * ng.profiler.timeChangeDetection({record: true})\r\n     * ```\r\n     */\r\n    AngularProfiler.prototype.timeChangeDetection = function (config) {\r\n        var record = lang_1.isPresent(config) && config['record'];\r\n        var profileName = 'Change Detection';\r\n        // Profiler is not available in Android browsers, nor in IE 9 without dev tools opened\r\n        var isProfilerAvailable = lang_1.isPresent(browser_1.window.console.profile);\r\n        if (record && isProfilerAvailable) {\r\n            browser_1.window.console.profile(profileName);\r\n        }\r\n        var start = dom_adapter_1.DOM.performanceNow();\r\n        var numTicks = 0;\r\n        while (numTicks < 5 || (dom_adapter_1.DOM.performanceNow() - start) < 500) {\r\n            this.appRef.tick();\r\n            numTicks++;\r\n        }\r\n        var end = dom_adapter_1.DOM.performanceNow();\r\n        if (record && isProfilerAvailable) {\r\n            // need to cast to <any> because type checker thinks there's no argument\r\n            // while in fact there is:\r\n            //\r\n            // https://developer.mozilla.org/en-US/docs/Web/API/Console/profileEnd\r\n            browser_1.window.console.profileEnd(profileName);\r\n        }\r\n        var msPerTick = (end - start) / numTicks;\r\n        browser_1.window.console.log(\"ran \" + numTicks + \" change detection cycles\");\r\n        browser_1.window.console.log(lang_1.NumberWrapper.toFixed(msPerTick, 2) + \" ms per check\");\r\n    };\r\n    return AngularProfiler;\r\n})();\r\nexports.AngularProfiler = AngularProfiler;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbW9uX3Rvb2xzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYW5ndWxhcjIvc3JjL3BsYXRmb3JtL2Jyb3dzZXIvdG9vbHMvY29tbW9uX3Rvb2xzLnRzIl0sIm5hbWVzIjpbIkFuZ3VsYXJUb29scyIsIkFuZ3VsYXJUb29scy5jb25zdHJ1Y3RvciIsIkFuZ3VsYXJQcm9maWxlciIsIkFuZ3VsYXJQcm9maWxlci5jb25zdHJ1Y3RvciIsIkFuZ3VsYXJQcm9maWxlci50aW1lQ2hhbmdlRGV0ZWN0aW9uIl0sIm1hcHBpbmdzIjoiQUFBQSxnQ0FBNkIsbUNBQW1DLENBQUMsQ0FBQTtBQUVqRSxxQkFBdUMsMEJBQTBCLENBQUMsQ0FBQTtBQUNsRSx3QkFBcUIsNkJBQTZCLENBQUMsQ0FBQTtBQUNuRCw0QkFBa0IsdUNBQXVDLENBQUMsQ0FBQTtBQUUxRDs7O0dBR0c7QUFDSDtJQUdFQSxzQkFBWUEsR0FBaUJBO1FBQUlDLElBQUlBLENBQUNBLFFBQVFBLEdBQUdBLElBQUlBLGVBQWVBLENBQUNBLEdBQUdBLENBQUNBLENBQUNBO0lBQUNBLENBQUNBO0lBQzlFRCxtQkFBQ0E7QUFBREEsQ0FBQ0EsQUFKRCxJQUlDO0FBSlksb0JBQVksZUFJeEIsQ0FBQTtBQUVEOzs7R0FHRztBQUNIO0lBR0VFLHlCQUFZQSxHQUFpQkE7UUFDM0JDLElBQUlBLENBQUNBLE1BQU1BLEdBQW1CQSxHQUFJQSxDQUFDQSxRQUFRQSxDQUFDQSxHQUFHQSxDQUFDQSxnQ0FBY0EsQ0FBQ0EsQ0FBQ0E7SUFDbEVBLENBQUNBO0lBRUREOzs7Ozs7Ozs7Ozs7Ozs7T0FlR0E7SUFDSEEsNkNBQW1CQSxHQUFuQkEsVUFBb0JBLE1BQVdBO1FBQzdCRSxJQUFJQSxNQUFNQSxHQUFHQSxnQkFBU0EsQ0FBQ0EsTUFBTUEsQ0FBQ0EsSUFBSUEsTUFBTUEsQ0FBQ0EsUUFBUUEsQ0FBQ0EsQ0FBQ0E7UUFDbkRBLElBQUlBLFdBQVdBLEdBQUdBLGtCQUFrQkEsQ0FBQ0E7UUFDckNBLHNGQUFzRkE7UUFDdEZBLElBQUlBLG1CQUFtQkEsR0FBR0EsZ0JBQVNBLENBQUNBLGdCQUFNQSxDQUFDQSxPQUFPQSxDQUFDQSxPQUFPQSxDQUFDQSxDQUFDQTtRQUM1REEsRUFBRUEsQ0FBQ0EsQ0FBQ0EsTUFBTUEsSUFBSUEsbUJBQW1CQSxDQUFDQSxDQUFDQSxDQUFDQTtZQUNsQ0EsZ0JBQU1BLENBQUNBLE9BQU9BLENBQUNBLE9BQU9BLENBQUNBLFdBQVdBLENBQUNBLENBQUNBO1FBQ3RDQSxDQUFDQTtRQUNEQSxJQUFJQSxLQUFLQSxHQUFHQSxpQkFBR0EsQ0FBQ0EsY0FBY0EsRUFBRUEsQ0FBQ0E7UUFDakNBLElBQUlBLFFBQVFBLEdBQUdBLENBQUNBLENBQUNBO1FBQ2pCQSxPQUFPQSxRQUFRQSxHQUFHQSxDQUFDQSxJQUFJQSxDQUFDQSxpQkFBR0EsQ0FBQ0EsY0FBY0EsRUFBRUEsR0FBR0EsS0FBS0EsQ0FBQ0EsR0FBR0EsR0FBR0EsRUFBRUEsQ0FBQ0E7WUFDNURBLElBQUlBLENBQUNBLE1BQU1BLENBQUNBLElBQUlBLEVBQUVBLENBQUNBO1lBQ25CQSxRQUFRQSxFQUFFQSxDQUFDQTtRQUNiQSxDQUFDQTtRQUNEQSxJQUFJQSxHQUFHQSxHQUFHQSxpQkFBR0EsQ0FBQ0EsY0FBY0EsRUFBRUEsQ0FBQ0E7UUFDL0JBLEVBQUVBLENBQUNBLENBQUNBLE1BQU1BLElBQUlBLG1CQUFtQkEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7WUFDbENBLHdFQUF3RUE7WUFDeEVBLDBCQUEwQkE7WUFDMUJBLEVBQUVBO1lBQ0ZBLHNFQUFzRUE7WUFDaEVBLGdCQUFNQSxDQUFDQSxPQUFPQSxDQUFDQSxVQUFXQSxDQUFDQSxXQUFXQSxDQUFDQSxDQUFDQTtRQUNoREEsQ0FBQ0E7UUFDREEsSUFBSUEsU0FBU0EsR0FBR0EsQ0FBQ0EsR0FBR0EsR0FBR0EsS0FBS0EsQ0FBQ0EsR0FBR0EsUUFBUUEsQ0FBQ0E7UUFDekNBLGdCQUFNQSxDQUFDQSxPQUFPQSxDQUFDQSxHQUFHQSxDQUFDQSxTQUFPQSxRQUFRQSw2QkFBMEJBLENBQUNBLENBQUNBO1FBQzlEQSxnQkFBTUEsQ0FBQ0EsT0FBT0EsQ0FBQ0EsR0FBR0EsQ0FBSUEsb0JBQWFBLENBQUNBLE9BQU9BLENBQUNBLFNBQVNBLEVBQUVBLENBQUNBLENBQUNBLGtCQUFlQSxDQUFDQSxDQUFDQTtJQUM1RUEsQ0FBQ0E7SUFDSEYsc0JBQUNBO0FBQURBLENBQUNBLEFBakRELElBaURDO0FBakRZLHVCQUFlLGtCQWlEM0IsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7QXBwbGljYXRpb25SZWZ9IGZyb20gJ2FuZ3VsYXIyL3NyYy9jb3JlL2FwcGxpY2F0aW9uX3JlZic7XG5pbXBvcnQge0NvbXBvbmVudFJlZiwgQ29tcG9uZW50UmVmX30gZnJvbSAnYW5ndWxhcjIvc3JjL2NvcmUvbGlua2VyL2R5bmFtaWNfY29tcG9uZW50X2xvYWRlcic7XG5pbXBvcnQge2lzUHJlc2VudCwgTnVtYmVyV3JhcHBlcn0gZnJvbSAnYW5ndWxhcjIvc3JjL2ZhY2FkZS9sYW5nJztcbmltcG9ydCB7d2luZG93fSBmcm9tICdhbmd1bGFyMi9zcmMvZmFjYWRlL2Jyb3dzZXInO1xuaW1wb3J0IHtET019IGZyb20gJ2FuZ3VsYXIyL3NyYy9wbGF0Zm9ybS9kb20vZG9tX2FkYXB0ZXInO1xuXG4vKipcbiAqIEVudHJ5IHBvaW50IGZvciBhbGwgQW5ndWxhciBkZWJ1ZyB0b29scy4gVGhpcyBvYmplY3QgY29ycmVzcG9uZHMgdG8gdGhlIGBuZ2BcbiAqIGdsb2JhbCB2YXJpYWJsZSBhY2Nlc3NpYmxlIGluIHRoZSBkZXYgY29uc29sZS5cbiAqL1xuZXhwb3J0IGNsYXNzIEFuZ3VsYXJUb29scyB7XG4gIHByb2ZpbGVyOiBBbmd1bGFyUHJvZmlsZXI7XG5cbiAgY29uc3RydWN0b3IocmVmOiBDb21wb25lbnRSZWYpIHsgdGhpcy5wcm9maWxlciA9IG5ldyBBbmd1bGFyUHJvZmlsZXIocmVmKTsgfVxufVxuXG4vKipcbiAqIEVudHJ5IHBvaW50IGZvciBhbGwgQW5ndWxhciBwcm9maWxpbmctcmVsYXRlZCBkZWJ1ZyB0b29scy4gVGhpcyBvYmplY3RcbiAqIGNvcnJlc3BvbmRzIHRvIHRoZSBgbmcucHJvZmlsZXJgIGluIHRoZSBkZXYgY29uc29sZS5cbiAqL1xuZXhwb3J0IGNsYXNzIEFuZ3VsYXJQcm9maWxlciB7XG4gIGFwcFJlZjogQXBwbGljYXRpb25SZWY7XG5cbiAgY29uc3RydWN0b3IocmVmOiBDb21wb25lbnRSZWYpIHtcbiAgICB0aGlzLmFwcFJlZiA9ICg8Q29tcG9uZW50UmVmXz5yZWYpLmluamVjdG9yLmdldChBcHBsaWNhdGlvblJlZik7XG4gIH1cblxuICAvKipcbiAgICogRXhlcmNpc2VzIGNoYW5nZSBkZXRlY3Rpb24gaW4gYSBsb29wIGFuZCB0aGVuIHByaW50cyB0aGUgYXZlcmFnZSBhbW91bnQgb2ZcbiAgICogdGltZSBpbiBtaWxsaXNlY29uZHMgaG93IGxvbmcgYSBzaW5nbGUgcm91bmQgb2YgY2hhbmdlIGRldGVjdGlvbiB0YWtlcyBmb3JcbiAgICogdGhlIGN1cnJlbnQgc3RhdGUgb2YgdGhlIFVJLiBJdCBydW5zIGEgbWluaW11bSBvZiA1IHJvdW5kcyBmb3IgYSBtaW5pbXVtXG4gICAqIG9mIDUwMCBtaWxsaXNlY29uZHMuXG4gICAqXG4gICAqIE9wdGlvbmFsbHksIGEgdXNlciBtYXkgcGFzcyBhIGBjb25maWdgIHBhcmFtZXRlciBjb250YWluaW5nIGEgbWFwIG9mXG4gICAqIG9wdGlvbnMuIFN1cHBvcnRlZCBvcHRpb25zIGFyZTpcbiAgICpcbiAgICogYHJlY29yZGAgKGJvb2xlYW4pIC0gY2F1c2VzIHRoZSBwcm9maWxlciB0byByZWNvcmQgYSBDUFUgcHJvZmlsZSB3aGlsZVxuICAgKiBpdCBleGVyY2lzZXMgdGhlIGNoYW5nZSBkZXRlY3Rvci4gRXhhbXBsZTpcbiAgICpcbiAgICogYGBgXG4gICAqIG5nLnByb2ZpbGVyLnRpbWVDaGFuZ2VEZXRlY3Rpb24oe3JlY29yZDogdHJ1ZX0pXG4gICAqIGBgYFxuICAgKi9cbiAgdGltZUNoYW5nZURldGVjdGlvbihjb25maWc6IGFueSkge1xuICAgIHZhciByZWNvcmQgPSBpc1ByZXNlbnQoY29uZmlnKSAmJiBjb25maWdbJ3JlY29yZCddO1xuICAgIHZhciBwcm9maWxlTmFtZSA9ICdDaGFuZ2UgRGV0ZWN0aW9uJztcbiAgICAvLyBQcm9maWxlciBpcyBub3QgYXZhaWxhYmxlIGluIEFuZHJvaWQgYnJvd3NlcnMsIG5vciBpbiBJRSA5IHdpdGhvdXQgZGV2IHRvb2xzIG9wZW5lZFxuICAgIHZhciBpc1Byb2ZpbGVyQXZhaWxhYmxlID0gaXNQcmVzZW50KHdpbmRvdy5jb25zb2xlLnByb2ZpbGUpO1xuICAgIGlmIChyZWNvcmQgJiYgaXNQcm9maWxlckF2YWlsYWJsZSkge1xuICAgICAgd2luZG93LmNvbnNvbGUucHJvZmlsZShwcm9maWxlTmFtZSk7XG4gICAgfVxuICAgIHZhciBzdGFydCA9IERPTS5wZXJmb3JtYW5jZU5vdygpO1xuICAgIHZhciBudW1UaWNrcyA9IDA7XG4gICAgd2hpbGUgKG51bVRpY2tzIDwgNSB8fCAoRE9NLnBlcmZvcm1hbmNlTm93KCkgLSBzdGFydCkgPCA1MDApIHtcbiAgICAgIHRoaXMuYXBwUmVmLnRpY2soKTtcbiAgICAgIG51bVRpY2tzKys7XG4gICAgfVxuICAgIHZhciBlbmQgPSBET00ucGVyZm9ybWFuY2VOb3coKTtcbiAgICBpZiAocmVjb3JkICYmIGlzUHJvZmlsZXJBdmFpbGFibGUpIHtcbiAgICAgIC8vIG5lZWQgdG8gY2FzdCB0byA8YW55PiBiZWNhdXNlIHR5cGUgY2hlY2tlciB0aGlua3MgdGhlcmUncyBubyBhcmd1bWVudFxuICAgICAgLy8gd2hpbGUgaW4gZmFjdCB0aGVyZSBpczpcbiAgICAgIC8vXG4gICAgICAvLyBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9BUEkvQ29uc29sZS9wcm9maWxlRW5kXG4gICAgICAoPGFueT53aW5kb3cuY29uc29sZS5wcm9maWxlRW5kKShwcm9maWxlTmFtZSk7XG4gICAgfVxuICAgIHZhciBtc1BlclRpY2sgPSAoZW5kIC0gc3RhcnQpIC8gbnVtVGlja3M7XG4gICAgd2luZG93LmNvbnNvbGUubG9nKGByYW4gJHtudW1UaWNrc30gY2hhbmdlIGRldGVjdGlvbiBjeWNsZXNgKTtcbiAgICB3aW5kb3cuY29uc29sZS5sb2coYCR7TnVtYmVyV3JhcHBlci50b0ZpeGVkKG1zUGVyVGljaywgMil9IG1zIHBlciBjaGVja2ApO1xuICB9XG59XG4iXX0=\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/platform/browser/tools/common_tools.js\n ** module id = 240\n ** module chunks = 1\n **/","'use strict';var lang_1 = require('angular2/src/facade/lang');\r\nvar common_tools_1 = require('./common_tools');\r\nvar context = lang_1.global;\r\n/**\r\n * Enabled Angular 2 debug tools that are accessible via your browser's\r\n * developer console.\r\n *\r\n * Usage:\r\n *\r\n * 1. Open developer console (e.g. in Chrome Ctrl + Shift + j)\r\n * 1. Type `ng.` (usually the console will show auto-complete suggestion)\r\n * 1. Try the change detection profiler `ng.profiler.timeChangeDetection()`\r\n *    then hit Enter.\r\n */\r\nfunction enableDebugTools(ref) {\r\n    context.ng = new common_tools_1.AngularTools(ref);\r\n}\r\nexports.enableDebugTools = enableDebugTools;\r\n/**\r\n * Disables Angular 2 tools.\r\n */\r\nfunction disableDebugTools() {\r\n    delete context.ng;\r\n}\r\nexports.disableDebugTools = disableDebugTools;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9vbHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJhbmd1bGFyMi9zcmMvcGxhdGZvcm0vYnJvd3Nlci90b29scy90b29scy50cyJdLCJuYW1lcyI6WyJlbmFibGVEZWJ1Z1Rvb2xzIiwiZGlzYWJsZURlYnVnVG9vbHMiXSwibWFwcGluZ3MiOiJBQUFBLHFCQUFxQiwwQkFBMEIsQ0FBQyxDQUFBO0FBRWhELDZCQUEyQixnQkFBZ0IsQ0FBQyxDQUFBO0FBRTVDLElBQUksT0FBTyxHQUFRLGFBQU0sQ0FBQztBQUUxQjs7Ozs7Ozs7OztHQVVHO0FBQ0gsMEJBQWlDLEdBQWlCO0lBQ2hEQSxPQUFPQSxDQUFDQSxFQUFFQSxHQUFHQSxJQUFJQSwyQkFBWUEsQ0FBQ0EsR0FBR0EsQ0FBQ0EsQ0FBQ0E7QUFDckNBLENBQUNBO0FBRmUsd0JBQWdCLG1CQUUvQixDQUFBO0FBRUQ7O0dBRUc7QUFDSDtJQUNFQyxPQUFPQSxPQUFPQSxDQUFDQSxFQUFFQSxDQUFDQTtBQUNwQkEsQ0FBQ0E7QUFGZSx5QkFBaUIsb0JBRWhDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2dsb2JhbH0gZnJvbSAnYW5ndWxhcjIvc3JjL2ZhY2FkZS9sYW5nJztcbmltcG9ydCB7Q29tcG9uZW50UmVmfSBmcm9tICdhbmd1bGFyMi9zcmMvY29yZS9saW5rZXIvZHluYW1pY19jb21wb25lbnRfbG9hZGVyJztcbmltcG9ydCB7QW5ndWxhclRvb2xzfSBmcm9tICcuL2NvbW1vbl90b29scyc7XG5cbnZhciBjb250ZXh0ID0gPGFueT5nbG9iYWw7XG5cbi8qKlxuICogRW5hYmxlZCBBbmd1bGFyIDIgZGVidWcgdG9vbHMgdGhhdCBhcmUgYWNjZXNzaWJsZSB2aWEgeW91ciBicm93c2VyJ3NcbiAqIGRldmVsb3BlciBjb25zb2xlLlxuICpcbiAqIFVzYWdlOlxuICpcbiAqIDEuIE9wZW4gZGV2ZWxvcGVyIGNvbnNvbGUgKGUuZy4gaW4gQ2hyb21lIEN0cmwgKyBTaGlmdCArIGopXG4gKiAxLiBUeXBlIGBuZy5gICh1c3VhbGx5IHRoZSBjb25zb2xlIHdpbGwgc2hvdyBhdXRvLWNvbXBsZXRlIHN1Z2dlc3Rpb24pXG4gKiAxLiBUcnkgdGhlIGNoYW5nZSBkZXRlY3Rpb24gcHJvZmlsZXIgYG5nLnByb2ZpbGVyLnRpbWVDaGFuZ2VEZXRlY3Rpb24oKWBcbiAqICAgIHRoZW4gaGl0IEVudGVyLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZW5hYmxlRGVidWdUb29scyhyZWY6IENvbXBvbmVudFJlZik6IHZvaWQge1xuICBjb250ZXh0Lm5nID0gbmV3IEFuZ3VsYXJUb29scyhyZWYpO1xufVxuXG4vKipcbiAqIERpc2FibGVzIEFuZ3VsYXIgMiB0b29scy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRpc2FibGVEZWJ1Z1Rvb2xzKCk6IHZvaWQge1xuICBkZWxldGUgY29udGV4dC5uZztcbn1cbiJdfQ==\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/platform/browser/tools/tools.js\n ** module id = 241\n ** module chunks = 1\n **/","'use strict';var lang_1 = require('angular2/src/facade/lang');\r\nvar dom_adapter_1 = require('angular2/src/platform/dom/dom_adapter');\r\n/**\r\n * Predicates for use with {@link DebugElement}'s query functions.\r\n */\r\nvar By = (function () {\r\n    function By() {\r\n    }\r\n    /**\r\n     * Match all elements.\r\n     *\r\n     * ## Example\r\n     *\r\n     * {@example platform/dom/debug/ts/by/by.ts region='by_all'}\r\n     */\r\n    By.all = function () { return function (debugElement) { return true; }; };\r\n    /**\r\n     * Match elements by the given CSS selector.\r\n     *\r\n     * ## Example\r\n     *\r\n     * {@example platform/dom/debug/ts/by/by.ts region='by_css'}\r\n     */\r\n    By.css = function (selector) {\r\n        return function (debugElement) {\r\n            return lang_1.isPresent(debugElement.nativeElement) ?\r\n                dom_adapter_1.DOM.elementMatches(debugElement.nativeElement, selector) :\r\n                false;\r\n        };\r\n    };\r\n    /**\r\n     * Match elements that have the given directive present.\r\n     *\r\n     * ## Example\r\n     *\r\n     * {@example platform/dom/debug/ts/by/by.ts region='by_directive'}\r\n     */\r\n    By.directive = function (type) {\r\n        return function (debugElement) { return debugElement.providerTokens.indexOf(type) !== -1; };\r\n    };\r\n    return By;\r\n})();\r\nexports.By = By;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJhbmd1bGFyMi9zcmMvcGxhdGZvcm0vZG9tL2RlYnVnL2J5LnRzIl0sIm5hbWVzIjpbIkJ5IiwiQnkuY29uc3RydWN0b3IiLCJCeS5hbGwiLCJCeS5jc3MiLCJCeS5kaXJlY3RpdmUiXSwibWFwcGluZ3MiOiJBQUFBLHFCQUF1QywwQkFBMEIsQ0FBQyxDQUFBO0FBRWxFLDRCQUFrQix1Q0FBdUMsQ0FBQyxDQUFBO0FBRzFEOztHQUVHO0FBQ0g7SUFBQUE7SUFtQ0FDLENBQUNBO0lBbENDRDs7Ozs7O09BTUdBO0lBQ0lBLE1BQUdBLEdBQVZBLGNBQXdDRSxNQUFNQSxDQUFDQSxVQUFDQSxZQUFZQSxJQUFLQSxPQUFBQSxJQUFJQSxFQUFKQSxDQUFJQSxDQUFDQSxDQUFDQSxDQUFDQTtJQUV4RUY7Ozs7OztPQU1HQTtJQUNJQSxNQUFHQSxHQUFWQSxVQUFXQSxRQUFnQkE7UUFDekJHLE1BQU1BLENBQUNBLFVBQUNBLFlBQVlBO1lBQ2xCQSxNQUFNQSxDQUFDQSxnQkFBU0EsQ0FBQ0EsWUFBWUEsQ0FBQ0EsYUFBYUEsQ0FBQ0E7Z0JBQ2pDQSxpQkFBR0EsQ0FBQ0EsY0FBY0EsQ0FBQ0EsWUFBWUEsQ0FBQ0EsYUFBYUEsRUFBRUEsUUFBUUEsQ0FBQ0E7Z0JBQ3hEQSxLQUFLQSxDQUFDQTtRQUNuQkEsQ0FBQ0EsQ0FBQ0E7SUFDSkEsQ0FBQ0E7SUFFREg7Ozs7OztPQU1HQTtJQUNJQSxZQUFTQSxHQUFoQkEsVUFBaUJBLElBQVVBO1FBQ3pCSSxNQUFNQSxDQUFDQSxVQUFDQSxZQUFZQSxJQUFPQSxNQUFNQSxDQUFDQSxZQUFZQSxDQUFDQSxjQUFjQSxDQUFDQSxPQUFPQSxDQUFDQSxJQUFJQSxDQUFDQSxLQUFLQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQTtJQUN4RkEsQ0FBQ0E7SUFDSEosU0FBQ0E7QUFBREEsQ0FBQ0EsQUFuQ0QsSUFtQ0M7QUFuQ1ksVUFBRSxLQW1DZCxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtUeXBlLCBpc1ByZXNlbnQsIGlzQmxhbmt9IGZyb20gJ2FuZ3VsYXIyL3NyYy9mYWNhZGUvbGFuZyc7XG5pbXBvcnQge1ByZWRpY2F0ZX0gZnJvbSAnYW5ndWxhcjIvc3JjL2ZhY2FkZS9jb2xsZWN0aW9uJztcbmltcG9ydCB7RE9NfSBmcm9tICdhbmd1bGFyMi9zcmMvcGxhdGZvcm0vZG9tL2RvbV9hZGFwdGVyJztcbmltcG9ydCB7RGVidWdFbGVtZW50fSBmcm9tICdhbmd1bGFyMi9jb3JlJztcblxuLyoqXG4gKiBQcmVkaWNhdGVzIGZvciB1c2Ugd2l0aCB7QGxpbmsgRGVidWdFbGVtZW50fSdzIHF1ZXJ5IGZ1bmN0aW9ucy5cbiAqL1xuZXhwb3J0IGNsYXNzIEJ5IHtcbiAgLyoqXG4gICAqIE1hdGNoIGFsbCBlbGVtZW50cy5cbiAgICpcbiAgICogIyMgRXhhbXBsZVxuICAgKlxuICAgKiB7QGV4YW1wbGUgcGxhdGZvcm0vZG9tL2RlYnVnL3RzL2J5L2J5LnRzIHJlZ2lvbj0nYnlfYWxsJ31cbiAgICovXG4gIHN0YXRpYyBhbGwoKTogUHJlZGljYXRlPERlYnVnRWxlbWVudD4geyByZXR1cm4gKGRlYnVnRWxlbWVudCkgPT4gdHJ1ZTsgfVxuXG4gIC8qKlxuICAgKiBNYXRjaCBlbGVtZW50cyBieSB0aGUgZ2l2ZW4gQ1NTIHNlbGVjdG9yLlxuICAgKlxuICAgKiAjIyBFeGFtcGxlXG4gICAqXG4gICAqIHtAZXhhbXBsZSBwbGF0Zm9ybS9kb20vZGVidWcvdHMvYnkvYnkudHMgcmVnaW9uPSdieV9jc3MnfVxuICAgKi9cbiAgc3RhdGljIGNzcyhzZWxlY3Rvcjogc3RyaW5nKTogUHJlZGljYXRlPERlYnVnRWxlbWVudD4ge1xuICAgIHJldHVybiAoZGVidWdFbGVtZW50KSA9PiB7XG4gICAgICByZXR1cm4gaXNQcmVzZW50KGRlYnVnRWxlbWVudC5uYXRpdmVFbGVtZW50KSA/XG4gICAgICAgICAgICAgICAgIERPTS5lbGVtZW50TWF0Y2hlcyhkZWJ1Z0VsZW1lbnQubmF0aXZlRWxlbWVudCwgc2VsZWN0b3IpIDpcbiAgICAgICAgICAgICAgICAgZmFsc2U7XG4gICAgfTtcbiAgfVxuXG4gIC8qKlxuICAgKiBNYXRjaCBlbGVtZW50cyB0aGF0IGhhdmUgdGhlIGdpdmVuIGRpcmVjdGl2ZSBwcmVzZW50LlxuICAgKlxuICAgKiAjIyBFeGFtcGxlXG4gICAqXG4gICAqIHtAZXhhbXBsZSBwbGF0Zm9ybS9kb20vZGVidWcvdHMvYnkvYnkudHMgcmVnaW9uPSdieV9kaXJlY3RpdmUnfVxuICAgKi9cbiAgc3RhdGljIGRpcmVjdGl2ZSh0eXBlOiBUeXBlKTogUHJlZGljYXRlPERlYnVnRWxlbWVudD4ge1xuICAgIHJldHVybiAoZGVidWdFbGVtZW50KSA9PiB7IHJldHVybiBkZWJ1Z0VsZW1lbnQucHJvdmlkZXJUb2tlbnMuaW5kZXhPZih0eXBlKSAhPT0gLTE7IH07XG4gIH1cbn1cbiJdfQ==\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/platform/dom/debug/by.js\n ** module id = 242\n ** module chunks = 1\n **/","'use strict';var lang_1 = require('angular2/src/facade/lang');\r\nvar di_1 = require('angular2/src/core/di');\r\nvar dom_adapter_1 = require('angular2/src/platform/dom/dom_adapter');\r\nvar debug_node_1 = require('angular2/src/core/debug/debug_node');\r\nvar dom_renderer_1 = require('angular2/src/platform/dom/dom_renderer');\r\nvar core_1 = require('angular2/core');\r\nvar debug_renderer_1 = require('angular2/src/core/debug/debug_renderer');\r\nvar INSPECT_GLOBAL_NAME = 'ng.probe';\r\n/**\r\n * Returns a {@link DebugElement} for the given native DOM element, or\r\n * null if the given native element does not have an Angular view associated\r\n * with it.\r\n */\r\nfunction inspectNativeElement(element) {\r\n    return debug_node_1.getDebugNode(element);\r\n}\r\nexports.inspectNativeElement = inspectNativeElement;\r\nfunction _createConditionalRootRenderer(rootRenderer) {\r\n    if (lang_1.assertionsEnabled()) {\r\n        return _createRootRenderer(rootRenderer);\r\n    }\r\n    return rootRenderer;\r\n}\r\nfunction _createRootRenderer(rootRenderer) {\r\n    dom_adapter_1.DOM.setGlobalVar(INSPECT_GLOBAL_NAME, inspectNativeElement);\r\n    return new debug_renderer_1.DebugDomRootRenderer(rootRenderer);\r\n}\r\n/**\r\n * Providers which support debugging Angular applications (e.g. via `ng.probe`).\r\n */\r\nexports.ELEMENT_PROBE_PROVIDERS = lang_1.CONST_EXPR([\r\n    new di_1.Provider(core_1.RootRenderer, { useFactory: _createConditionalRootRenderer, deps: [dom_renderer_1.DomRootRenderer] })\r\n]);\r\nexports.ELEMENT_PROBE_PROVIDERS_PROD_MODE = lang_1.CONST_EXPR([new di_1.Provider(core_1.RootRenderer, { useFactory: _createRootRenderer, deps: [dom_renderer_1.DomRootRenderer] })]);\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmdfcHJvYmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJhbmd1bGFyMi9zcmMvcGxhdGZvcm0vZG9tL2RlYnVnL25nX3Byb2JlLnRzIl0sIm5hbWVzIjpbImluc3BlY3ROYXRpdmVFbGVtZW50IiwiX2NyZWF0ZUNvbmRpdGlvbmFsUm9vdFJlbmRlcmVyIiwiX2NyZWF0ZVJvb3RSZW5kZXJlciJdLCJtYXBwaW5ncyI6IkFBQUEscUJBQXVELDBCQUEwQixDQUFDLENBQUE7QUFDbEYsbUJBQTRDLHNCQUFzQixDQUFDLENBQUE7QUFDbkUsNEJBQWtCLHVDQUF1QyxDQUFDLENBQUE7QUFDMUQsMkJBQXNDLG9DQUFvQyxDQUFDLENBQUE7QUFDM0UsNkJBQThCLHdDQUF3QyxDQUFDLENBQUE7QUFDdkUscUJBQTJCLGVBQWUsQ0FBQyxDQUFBO0FBQzNDLCtCQUFtQyx3Q0FBd0MsQ0FBQyxDQUFBO0FBRzVFLElBQU0sbUJBQW1CLEdBQUcsVUFBVSxDQUFDO0FBRXZDOzs7O0dBSUc7QUFDSCw4QkFBcUMsT0FBTztJQUMxQ0EsTUFBTUEsQ0FBQ0EseUJBQVlBLENBQUNBLE9BQU9BLENBQUNBLENBQUNBO0FBQy9CQSxDQUFDQTtBQUZlLDRCQUFvQix1QkFFbkMsQ0FBQTtBQUVELHdDQUF3QyxZQUFZO0lBQ2xEQyxFQUFFQSxDQUFDQSxDQUFDQSx3QkFBaUJBLEVBQUVBLENBQUNBLENBQUNBLENBQUNBO1FBQ3hCQSxNQUFNQSxDQUFDQSxtQkFBbUJBLENBQUNBLFlBQVlBLENBQUNBLENBQUNBO0lBQzNDQSxDQUFDQTtJQUNEQSxNQUFNQSxDQUFDQSxZQUFZQSxDQUFDQTtBQUN0QkEsQ0FBQ0E7QUFFRCw2QkFBNkIsWUFBWTtJQUN2Q0MsaUJBQUdBLENBQUNBLFlBQVlBLENBQUNBLG1CQUFtQkEsRUFBRUEsb0JBQW9CQSxDQUFDQSxDQUFDQTtJQUM1REEsTUFBTUEsQ0FBQ0EsSUFBSUEscUNBQW9CQSxDQUFDQSxZQUFZQSxDQUFDQSxDQUFDQTtBQUNoREEsQ0FBQ0E7QUFFRDs7R0FFRztBQUNVLCtCQUF1QixHQUFVLGlCQUFVLENBQUM7SUFDdkQsSUFBSSxhQUFRLENBQUMsbUJBQVksRUFDWixFQUFDLFVBQVUsRUFBRSw4QkFBOEIsRUFBRSxJQUFJLEVBQUUsQ0FBQyw4QkFBZSxDQUFDLEVBQUMsQ0FBQztDQUNwRixDQUFDLENBQUM7QUFFVSx5Q0FBaUMsR0FBVSxpQkFBVSxDQUM5RCxDQUFDLElBQUksYUFBUSxDQUFDLG1CQUFZLEVBQUUsRUFBQyxVQUFVLEVBQUUsbUJBQW1CLEVBQUUsSUFBSSxFQUFFLENBQUMsOEJBQWUsQ0FBQyxFQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NPTlNUX0VYUFIsIGFzc2VydGlvbnNFbmFibGVkLCBpc1ByZXNlbnR9IGZyb20gJ2FuZ3VsYXIyL3NyYy9mYWNhZGUvbGFuZyc7XG5pbXBvcnQge0luamVjdGFibGUsIHByb3ZpZGUsIFByb3ZpZGVyfSBmcm9tICdhbmd1bGFyMi9zcmMvY29yZS9kaSc7XG5pbXBvcnQge0RPTX0gZnJvbSAnYW5ndWxhcjIvc3JjL3BsYXRmb3JtL2RvbS9kb21fYWRhcHRlcic7XG5pbXBvcnQge0RlYnVnTm9kZSwgZ2V0RGVidWdOb2RlfSBmcm9tICdhbmd1bGFyMi9zcmMvY29yZS9kZWJ1Zy9kZWJ1Z19ub2RlJztcbmltcG9ydCB7RG9tUm9vdFJlbmRlcmVyfSBmcm9tICdhbmd1bGFyMi9zcmMvcGxhdGZvcm0vZG9tL2RvbV9yZW5kZXJlcic7XG5pbXBvcnQge1Jvb3RSZW5kZXJlcn0gZnJvbSAnYW5ndWxhcjIvY29yZSc7XG5pbXBvcnQge0RlYnVnRG9tUm9vdFJlbmRlcmVyfSBmcm9tICdhbmd1bGFyMi9zcmMvY29yZS9kZWJ1Zy9kZWJ1Z19yZW5kZXJlcic7XG5cblxuY29uc3QgSU5TUEVDVF9HTE9CQUxfTkFNRSA9ICduZy5wcm9iZSc7XG5cbi8qKlxuICogUmV0dXJucyBhIHtAbGluayBEZWJ1Z0VsZW1lbnR9IGZvciB0aGUgZ2l2ZW4gbmF0aXZlIERPTSBlbGVtZW50LCBvclxuICogbnVsbCBpZiB0aGUgZ2l2ZW4gbmF0aXZlIGVsZW1lbnQgZG9lcyBub3QgaGF2ZSBhbiBBbmd1bGFyIHZpZXcgYXNzb2NpYXRlZFxuICogd2l0aCBpdC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGluc3BlY3ROYXRpdmVFbGVtZW50KGVsZW1lbnQpOiBEZWJ1Z05vZGUge1xuICByZXR1cm4gZ2V0RGVidWdOb2RlKGVsZW1lbnQpO1xufVxuXG5mdW5jdGlvbiBfY3JlYXRlQ29uZGl0aW9uYWxSb290UmVuZGVyZXIocm9vdFJlbmRlcmVyKSB7XG4gIGlmIChhc3NlcnRpb25zRW5hYmxlZCgpKSB7XG4gICAgcmV0dXJuIF9jcmVhdGVSb290UmVuZGVyZXIocm9vdFJlbmRlcmVyKTtcbiAgfVxuICByZXR1cm4gcm9vdFJlbmRlcmVyO1xufVxuXG5mdW5jdGlvbiBfY3JlYXRlUm9vdFJlbmRlcmVyKHJvb3RSZW5kZXJlcikge1xuICBET00uc2V0R2xvYmFsVmFyKElOU1BFQ1RfR0xPQkFMX05BTUUsIGluc3BlY3ROYXRpdmVFbGVtZW50KTtcbiAgcmV0dXJuIG5ldyBEZWJ1Z0RvbVJvb3RSZW5kZXJlcihyb290UmVuZGVyZXIpO1xufVxuXG4vKipcbiAqIFByb3ZpZGVycyB3aGljaCBzdXBwb3J0IGRlYnVnZ2luZyBBbmd1bGFyIGFwcGxpY2F0aW9ucyAoZS5nLiB2aWEgYG5nLnByb2JlYCkuXG4gKi9cbmV4cG9ydCBjb25zdCBFTEVNRU5UX1BST0JFX1BST1ZJREVSUzogYW55W10gPSBDT05TVF9FWFBSKFtcbiAgbmV3IFByb3ZpZGVyKFJvb3RSZW5kZXJlcixcbiAgICAgICAgICAgICAgIHt1c2VGYWN0b3J5OiBfY3JlYXRlQ29uZGl0aW9uYWxSb290UmVuZGVyZXIsIGRlcHM6IFtEb21Sb290UmVuZGVyZXJdfSlcbl0pO1xuXG5leHBvcnQgY29uc3QgRUxFTUVOVF9QUk9CRV9QUk9WSURFUlNfUFJPRF9NT0RFOiBhbnlbXSA9IENPTlNUX0VYUFIoXG4gICAgW25ldyBQcm92aWRlcihSb290UmVuZGVyZXIsIHt1c2VGYWN0b3J5OiBfY3JlYXRlUm9vdFJlbmRlcmVyLCBkZXBzOiBbRG9tUm9vdFJlbmRlcmVyXX0pXSk7XG4iXX0=\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/platform/dom/debug/ng_probe.js\n ** module id = 243\n ** module chunks = 1\n **/","'use strict';var __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar event_manager_1 = require('./event_manager');\r\nvar collection_1 = require('angular2/src/facade/collection');\r\nvar _eventNames = {\r\n    // pan\r\n    'pan': true,\r\n    'panstart': true,\r\n    'panmove': true,\r\n    'panend': true,\r\n    'pancancel': true,\r\n    'panleft': true,\r\n    'panright': true,\r\n    'panup': true,\r\n    'pandown': true,\r\n    // pinch\r\n    'pinch': true,\r\n    'pinchstart': true,\r\n    'pinchmove': true,\r\n    'pinchend': true,\r\n    'pinchcancel': true,\r\n    'pinchin': true,\r\n    'pinchout': true,\r\n    // press\r\n    'press': true,\r\n    'pressup': true,\r\n    // rotate\r\n    'rotate': true,\r\n    'rotatestart': true,\r\n    'rotatemove': true,\r\n    'rotateend': true,\r\n    'rotatecancel': true,\r\n    // swipe\r\n    'swipe': true,\r\n    'swipeleft': true,\r\n    'swiperight': true,\r\n    'swipeup': true,\r\n    'swipedown': true,\r\n    // tap\r\n    'tap': true,\r\n};\r\nvar HammerGesturesPluginCommon = (function (_super) {\r\n    __extends(HammerGesturesPluginCommon, _super);\r\n    function HammerGesturesPluginCommon() {\r\n        _super.call(this);\r\n    }\r\n    HammerGesturesPluginCommon.prototype.supports = function (eventName) {\r\n        eventName = eventName.toLowerCase();\r\n        return collection_1.StringMapWrapper.contains(_eventNames, eventName);\r\n    };\r\n    return HammerGesturesPluginCommon;\r\n})(event_manager_1.EventManagerPlugin);\r\nexports.HammerGesturesPluginCommon = HammerGesturesPluginCommon;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFtbWVyX2NvbW1vbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImFuZ3VsYXIyL3NyYy9wbGF0Zm9ybS9kb20vZXZlbnRzL2hhbW1lcl9jb21tb24udHMiXSwibmFtZXMiOlsiSGFtbWVyR2VzdHVyZXNQbHVnaW5Db21tb24iLCJIYW1tZXJHZXN0dXJlc1BsdWdpbkNvbW1vbi5jb25zdHJ1Y3RvciIsIkhhbW1lckdlc3R1cmVzUGx1Z2luQ29tbW9uLnN1cHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7OztBQUFBLDhCQUFpQyxpQkFBaUIsQ0FBQyxDQUFBO0FBQ25ELDJCQUErQixnQ0FBZ0MsQ0FBQyxDQUFBO0FBRWhFLElBQUksV0FBVyxHQUFHO0lBQ2hCLE1BQU07SUFDTixLQUFLLEVBQUUsSUFBSTtJQUNYLFVBQVUsRUFBRSxJQUFJO0lBQ2hCLFNBQVMsRUFBRSxJQUFJO0lBQ2YsUUFBUSxFQUFFLElBQUk7SUFDZCxXQUFXLEVBQUUsSUFBSTtJQUNqQixTQUFTLEVBQUUsSUFBSTtJQUNmLFVBQVUsRUFBRSxJQUFJO0lBQ2hCLE9BQU8sRUFBRSxJQUFJO0lBQ2IsU0FBUyxFQUFFLElBQUk7SUFDZixRQUFRO0lBQ1IsT0FBTyxFQUFFLElBQUk7SUFDYixZQUFZLEVBQUUsSUFBSTtJQUNsQixXQUFXLEVBQUUsSUFBSTtJQUNqQixVQUFVLEVBQUUsSUFBSTtJQUNoQixhQUFhLEVBQUUsSUFBSTtJQUNuQixTQUFTLEVBQUUsSUFBSTtJQUNmLFVBQVUsRUFBRSxJQUFJO0lBQ2hCLFFBQVE7SUFDUixPQUFPLEVBQUUsSUFBSTtJQUNiLFNBQVMsRUFBRSxJQUFJO0lBQ2YsU0FBUztJQUNULFFBQVEsRUFBRSxJQUFJO0lBQ2QsYUFBYSxFQUFFLElBQUk7SUFDbkIsWUFBWSxFQUFFLElBQUk7SUFDbEIsV0FBVyxFQUFFLElBQUk7SUFDakIsY0FBYyxFQUFFLElBQUk7SUFDcEIsUUFBUTtJQUNSLE9BQU8sRUFBRSxJQUFJO0lBQ2IsV0FBVyxFQUFFLElBQUk7SUFDakIsWUFBWSxFQUFFLElBQUk7SUFDbEIsU0FBUyxFQUFFLElBQUk7SUFDZixXQUFXLEVBQUUsSUFBSTtJQUNqQixNQUFNO0lBQ04sS0FBSyxFQUFFLElBQUk7Q0FDWixDQUFDO0FBR0Y7SUFBZ0RBLDhDQUFrQkE7SUFDaEVBO1FBQWdCQyxpQkFBT0EsQ0FBQ0E7SUFBQ0EsQ0FBQ0E7SUFFMUJELDZDQUFRQSxHQUFSQSxVQUFTQSxTQUFpQkE7UUFDeEJFLFNBQVNBLEdBQUdBLFNBQVNBLENBQUNBLFdBQVdBLEVBQUVBLENBQUNBO1FBQ3BDQSxNQUFNQSxDQUFDQSw2QkFBZ0JBLENBQUNBLFFBQVFBLENBQUNBLFdBQVdBLEVBQUVBLFNBQVNBLENBQUNBLENBQUNBO0lBQzNEQSxDQUFDQTtJQUNIRixpQ0FBQ0E7QUFBREEsQ0FBQ0EsQUFQRCxFQUFnRCxrQ0FBa0IsRUFPakU7QUFQWSxrQ0FBMEIsNkJBT3RDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0V2ZW50TWFuYWdlclBsdWdpbn0gZnJvbSAnLi9ldmVudF9tYW5hZ2VyJztcbmltcG9ydCB7U3RyaW5nTWFwV3JhcHBlcn0gZnJvbSAnYW5ndWxhcjIvc3JjL2ZhY2FkZS9jb2xsZWN0aW9uJztcblxudmFyIF9ldmVudE5hbWVzID0ge1xuICAvLyBwYW5cbiAgJ3Bhbic6IHRydWUsXG4gICdwYW5zdGFydCc6IHRydWUsXG4gICdwYW5tb3ZlJzogdHJ1ZSxcbiAgJ3BhbmVuZCc6IHRydWUsXG4gICdwYW5jYW5jZWwnOiB0cnVlLFxuICAncGFubGVmdCc6IHRydWUsXG4gICdwYW5yaWdodCc6IHRydWUsXG4gICdwYW51cCc6IHRydWUsXG4gICdwYW5kb3duJzogdHJ1ZSxcbiAgLy8gcGluY2hcbiAgJ3BpbmNoJzogdHJ1ZSxcbiAgJ3BpbmNoc3RhcnQnOiB0cnVlLFxuICAncGluY2htb3ZlJzogdHJ1ZSxcbiAgJ3BpbmNoZW5kJzogdHJ1ZSxcbiAgJ3BpbmNoY2FuY2VsJzogdHJ1ZSxcbiAgJ3BpbmNoaW4nOiB0cnVlLFxuICAncGluY2hvdXQnOiB0cnVlLFxuICAvLyBwcmVzc1xuICAncHJlc3MnOiB0cnVlLFxuICAncHJlc3N1cCc6IHRydWUsXG4gIC8vIHJvdGF0ZVxuICAncm90YXRlJzogdHJ1ZSxcbiAgJ3JvdGF0ZXN0YXJ0JzogdHJ1ZSxcbiAgJ3JvdGF0ZW1vdmUnOiB0cnVlLFxuICAncm90YXRlZW5kJzogdHJ1ZSxcbiAgJ3JvdGF0ZWNhbmNlbCc6IHRydWUsXG4gIC8vIHN3aXBlXG4gICdzd2lwZSc6IHRydWUsXG4gICdzd2lwZWxlZnQnOiB0cnVlLFxuICAnc3dpcGVyaWdodCc6IHRydWUsXG4gICdzd2lwZXVwJzogdHJ1ZSxcbiAgJ3N3aXBlZG93bic6IHRydWUsXG4gIC8vIHRhcFxuICAndGFwJzogdHJ1ZSxcbn07XG5cblxuZXhwb3J0IGNsYXNzIEhhbW1lckdlc3R1cmVzUGx1Z2luQ29tbW9uIGV4dGVuZHMgRXZlbnRNYW5hZ2VyUGx1Z2luIHtcbiAgY29uc3RydWN0b3IoKSB7IHN1cGVyKCk7IH1cblxuICBzdXBwb3J0cyhldmVudE5hbWU6IHN0cmluZyk6IGJvb2xlYW4ge1xuICAgIGV2ZW50TmFtZSA9IGV2ZW50TmFtZS50b0xvd2VyQ2FzZSgpO1xuICAgIHJldHVybiBTdHJpbmdNYXBXcmFwcGVyLmNvbnRhaW5zKF9ldmVudE5hbWVzLCBldmVudE5hbWUpO1xuICB9XG59XG4iXX0=\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/platform/dom/events/hammer_common.js\n ** module id = 244\n ** module chunks = 1\n **/","'use strict';var __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar hammer_common_1 = require('./hammer_common');\r\nvar lang_1 = require('angular2/src/facade/lang');\r\nvar exceptions_1 = require('angular2/src/facade/exceptions');\r\nvar di_1 = require('angular2/src/core/di');\r\nvar HammerGesturesPlugin = (function (_super) {\r\n    __extends(HammerGesturesPlugin, _super);\r\n    function HammerGesturesPlugin() {\r\n        _super.apply(this, arguments);\r\n    }\r\n    HammerGesturesPlugin.prototype.supports = function (eventName) {\r\n        if (!_super.prototype.supports.call(this, eventName))\r\n            return false;\r\n        if (!lang_1.isPresent(window['Hammer'])) {\r\n            throw new exceptions_1.BaseException(\"Hammer.js is not loaded, can not bind \" + eventName + \" event\");\r\n        }\r\n        return true;\r\n    };\r\n    HammerGesturesPlugin.prototype.addEventListener = function (element, eventName, handler) {\r\n        var zone = this.manager.getZone();\r\n        eventName = eventName.toLowerCase();\r\n        return zone.runOutsideAngular(function () {\r\n            // Creating the manager bind events, must be done outside of angular\r\n            var mc = new Hammer(element);\r\n            mc.get('pinch').set({ enable: true });\r\n            mc.get('rotate').set({ enable: true });\r\n            var handler = function (eventObj) { zone.run(function () { handler(eventObj); }); };\r\n            mc.on(eventName, handler);\r\n            return function () { mc.off(eventName, handler); };\r\n        });\r\n    };\r\n    HammerGesturesPlugin = __decorate([\r\n        di_1.Injectable(), \r\n        __metadata('design:paramtypes', [])\r\n    ], HammerGesturesPlugin);\r\n    return HammerGesturesPlugin;\r\n})(hammer_common_1.HammerGesturesPluginCommon);\r\nexports.HammerGesturesPlugin = HammerGesturesPlugin;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFtbWVyX2dlc3R1cmVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYW5ndWxhcjIvc3JjL3BsYXRmb3JtL2RvbS9ldmVudHMvaGFtbWVyX2dlc3R1cmVzLnRzIl0sIm5hbWVzIjpbIkhhbW1lckdlc3R1cmVzUGx1Z2luIiwiSGFtbWVyR2VzdHVyZXNQbHVnaW4uY29uc3RydWN0b3IiLCJIYW1tZXJHZXN0dXJlc1BsdWdpbi5zdXBwb3J0cyIsIkhhbW1lckdlc3R1cmVzUGx1Z2luLmFkZEV2ZW50TGlzdGVuZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQUEsOEJBQXlDLGlCQUFpQixDQUFDLENBQUE7QUFDM0QscUJBQXdCLDBCQUEwQixDQUFDLENBQUE7QUFDbkQsMkJBQThDLGdDQUFnQyxDQUFDLENBQUE7QUFDL0UsbUJBQXlCLHNCQUFzQixDQUFDLENBQUE7QUFFaEQ7SUFDMENBLHdDQUEwQkE7SUFEcEVBO1FBQzBDQyw4QkFBMEJBO0lBeUJwRUEsQ0FBQ0E7SUF4QkNELHVDQUFRQSxHQUFSQSxVQUFTQSxTQUFpQkE7UUFDeEJFLEVBQUVBLENBQUNBLENBQUNBLENBQUNBLGdCQUFLQSxDQUFDQSxRQUFRQSxZQUFDQSxTQUFTQSxDQUFDQSxDQUFDQTtZQUFDQSxNQUFNQSxDQUFDQSxLQUFLQSxDQUFDQTtRQUU3Q0EsRUFBRUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsZ0JBQVNBLENBQUNBLE1BQU1BLENBQUNBLFFBQVFBLENBQUNBLENBQUNBLENBQUNBLENBQUNBLENBQUNBO1lBQ2pDQSxNQUFNQSxJQUFJQSwwQkFBYUEsQ0FBQ0EsMkNBQXlDQSxTQUFTQSxXQUFRQSxDQUFDQSxDQUFDQTtRQUN0RkEsQ0FBQ0E7UUFFREEsTUFBTUEsQ0FBQ0EsSUFBSUEsQ0FBQ0E7SUFDZEEsQ0FBQ0E7SUFFREYsK0NBQWdCQSxHQUFoQkEsVUFBaUJBLE9BQW9CQSxFQUFFQSxTQUFpQkEsRUFBRUEsT0FBaUJBO1FBQ3pFRyxJQUFJQSxJQUFJQSxHQUFHQSxJQUFJQSxDQUFDQSxPQUFPQSxDQUFDQSxPQUFPQSxFQUFFQSxDQUFDQTtRQUNsQ0EsU0FBU0EsR0FBR0EsU0FBU0EsQ0FBQ0EsV0FBV0EsRUFBRUEsQ0FBQ0E7UUFFcENBLE1BQU1BLENBQUNBLElBQUlBLENBQUNBLGlCQUFpQkEsQ0FBQ0E7WUFDNUIsb0VBQW9FO1lBQ3BFLElBQUksRUFBRSxHQUFHLElBQUksTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1lBQzdCLEVBQUUsQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLENBQUMsR0FBRyxDQUFDLEVBQUMsTUFBTSxFQUFFLElBQUksRUFBQyxDQUFDLENBQUM7WUFDcEMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsQ0FBQyxHQUFHLENBQUMsRUFBQyxNQUFNLEVBQUUsSUFBSSxFQUFDLENBQUMsQ0FBQztZQUNyQyxJQUFJLE9BQU8sR0FBRyxVQUFTLFFBQVEsSUFBSSxJQUFJLENBQUMsR0FBRyxDQUFDLGNBQWEsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDbEYsRUFBRSxDQUFDLEVBQUUsQ0FBQyxTQUFTLEVBQUUsT0FBTyxDQUFDLENBQUM7WUFDMUIsTUFBTSxDQUFDLGNBQVEsRUFBRSxDQUFDLEdBQUcsQ0FBQyxTQUFTLEVBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDL0MsQ0FBQyxDQUFDQSxDQUFDQTtJQUNMQSxDQUFDQTtJQXpCSEg7UUFBQ0EsZUFBVUEsRUFBRUE7OzZCQTBCWkE7SUFBREEsMkJBQUNBO0FBQURBLENBQUNBLEFBMUJELEVBQzBDLDBDQUEwQixFQXlCbkU7QUF6QlksNEJBQW9CLHVCQXlCaEMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SGFtbWVyR2VzdHVyZXNQbHVnaW5Db21tb259IGZyb20gJy4vaGFtbWVyX2NvbW1vbic7XG5pbXBvcnQge2lzUHJlc2VudH0gZnJvbSAnYW5ndWxhcjIvc3JjL2ZhY2FkZS9sYW5nJztcbmltcG9ydCB7QmFzZUV4Y2VwdGlvbiwgV3JhcHBlZEV4Y2VwdGlvbn0gZnJvbSAnYW5ndWxhcjIvc3JjL2ZhY2FkZS9leGNlcHRpb25zJztcbmltcG9ydCB7SW5qZWN0YWJsZX0gZnJvbSAnYW5ndWxhcjIvc3JjL2NvcmUvZGknO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgSGFtbWVyR2VzdHVyZXNQbHVnaW4gZXh0ZW5kcyBIYW1tZXJHZXN0dXJlc1BsdWdpbkNvbW1vbiB7XG4gIHN1cHBvcnRzKGV2ZW50TmFtZTogc3RyaW5nKTogYm9vbGVhbiB7XG4gICAgaWYgKCFzdXBlci5zdXBwb3J0cyhldmVudE5hbWUpKSByZXR1cm4gZmFsc2U7XG5cbiAgICBpZiAoIWlzUHJlc2VudCh3aW5kb3dbJ0hhbW1lciddKSkge1xuICAgICAgdGhyb3cgbmV3IEJhc2VFeGNlcHRpb24oYEhhbW1lci5qcyBpcyBub3QgbG9hZGVkLCBjYW4gbm90IGJpbmQgJHtldmVudE5hbWV9IGV2ZW50YCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICBhZGRFdmVudExpc3RlbmVyKGVsZW1lbnQ6IEhUTUxFbGVtZW50LCBldmVudE5hbWU6IHN0cmluZywgaGFuZGxlcjogRnVuY3Rpb24pOiBGdW5jdGlvbiB7XG4gICAgdmFyIHpvbmUgPSB0aGlzLm1hbmFnZXIuZ2V0Wm9uZSgpO1xuICAgIGV2ZW50TmFtZSA9IGV2ZW50TmFtZS50b0xvd2VyQ2FzZSgpO1xuXG4gICAgcmV0dXJuIHpvbmUucnVuT3V0c2lkZUFuZ3VsYXIoZnVuY3Rpb24oKSB7XG4gICAgICAvLyBDcmVhdGluZyB0aGUgbWFuYWdlciBiaW5kIGV2ZW50cywgbXVzdCBiZSBkb25lIG91dHNpZGUgb2YgYW5ndWxhclxuICAgICAgdmFyIG1jID0gbmV3IEhhbW1lcihlbGVtZW50KTtcbiAgICAgIG1jLmdldCgncGluY2gnKS5zZXQoe2VuYWJsZTogdHJ1ZX0pO1xuICAgICAgbWMuZ2V0KCdyb3RhdGUnKS5zZXQoe2VuYWJsZTogdHJ1ZX0pO1xuICAgICAgdmFyIGhhbmRsZXIgPSBmdW5jdGlvbihldmVudE9iaikgeyB6b25lLnJ1bihmdW5jdGlvbigpIHsgaGFuZGxlcihldmVudE9iaik7IH0pOyB9O1xuICAgICAgbWMub24oZXZlbnROYW1lLCBoYW5kbGVyKTtcbiAgICAgIHJldHVybiAoKSA9PiB7IG1jLm9mZihldmVudE5hbWUsIGhhbmRsZXIpOyB9O1xuICAgIH0pO1xuICB9XG59XG4iXX0=\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/platform/dom/events/hammer_gestures.js\n ** module id = 245\n ** module chunks = 1\n **/","'use strict';var __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar dom_adapter_1 = require('angular2/src/platform/dom/dom_adapter');\r\nvar lang_1 = require('angular2/src/facade/lang');\r\nvar collection_1 = require('angular2/src/facade/collection');\r\nvar event_manager_1 = require('./event_manager');\r\nvar di_1 = require('angular2/src/core/di');\r\nvar modifierKeys = ['alt', 'control', 'meta', 'shift'];\r\nvar modifierKeyGetters = {\r\n    'alt': function (event) { return event.altKey; },\r\n    'control': function (event) { return event.ctrlKey; },\r\n    'meta': function (event) { return event.metaKey; },\r\n    'shift': function (event) { return event.shiftKey; }\r\n};\r\nvar KeyEventsPlugin = (function (_super) {\r\n    __extends(KeyEventsPlugin, _super);\r\n    function KeyEventsPlugin() {\r\n        _super.call(this);\r\n    }\r\n    KeyEventsPlugin.prototype.supports = function (eventName) {\r\n        return lang_1.isPresent(KeyEventsPlugin.parseEventName(eventName));\r\n    };\r\n    KeyEventsPlugin.prototype.addEventListener = function (element, eventName, handler) {\r\n        var parsedEvent = KeyEventsPlugin.parseEventName(eventName);\r\n        var outsideHandler = KeyEventsPlugin.eventCallback(element, collection_1.StringMapWrapper.get(parsedEvent, 'fullKey'), handler, this.manager.getZone());\r\n        return this.manager.getZone().runOutsideAngular(function () {\r\n            return dom_adapter_1.DOM.onAndCancel(element, collection_1.StringMapWrapper.get(parsedEvent, 'domEventName'), outsideHandler);\r\n        });\r\n    };\r\n    KeyEventsPlugin.parseEventName = function (eventName) {\r\n        var parts = eventName.toLowerCase().split('.');\r\n        var domEventName = parts.shift();\r\n        if ((parts.length === 0) ||\r\n            !(lang_1.StringWrapper.equals(domEventName, 'keydown') ||\r\n                lang_1.StringWrapper.equals(domEventName, 'keyup'))) {\r\n            return null;\r\n        }\r\n        var key = KeyEventsPlugin._normalizeKey(parts.pop());\r\n        var fullKey = '';\r\n        modifierKeys.forEach(function (modifierName) {\r\n            if (collection_1.ListWrapper.contains(parts, modifierName)) {\r\n                collection_1.ListWrapper.remove(parts, modifierName);\r\n                fullKey += modifierName + '.';\r\n            }\r\n        });\r\n        fullKey += key;\r\n        if (parts.length != 0 || key.length === 0) {\r\n            // returning null instead of throwing to let another plugin process the event\r\n            return null;\r\n        }\r\n        var result = collection_1.StringMapWrapper.create();\r\n        collection_1.StringMapWrapper.set(result, 'domEventName', domEventName);\r\n        collection_1.StringMapWrapper.set(result, 'fullKey', fullKey);\r\n        return result;\r\n    };\r\n    KeyEventsPlugin.getEventFullKey = function (event) {\r\n        var fullKey = '';\r\n        var key = dom_adapter_1.DOM.getEventKey(event);\r\n        key = key.toLowerCase();\r\n        if (lang_1.StringWrapper.equals(key, ' ')) {\r\n            key = 'space'; // for readability\r\n        }\r\n        else if (lang_1.StringWrapper.equals(key, '.')) {\r\n            key = 'dot'; // because '.' is used as a separator in event names\r\n        }\r\n        modifierKeys.forEach(function (modifierName) {\r\n            if (modifierName != key) {\r\n                var modifierGetter = collection_1.StringMapWrapper.get(modifierKeyGetters, modifierName);\r\n                if (modifierGetter(event)) {\r\n                    fullKey += modifierName + '.';\r\n                }\r\n            }\r\n        });\r\n        fullKey += key;\r\n        return fullKey;\r\n    };\r\n    KeyEventsPlugin.eventCallback = function (element, fullKey, handler, zone) {\r\n        return function (event) {\r\n            if (lang_1.StringWrapper.equals(KeyEventsPlugin.getEventFullKey(event), fullKey)) {\r\n                zone.run(function () { return handler(event); });\r\n            }\r\n        };\r\n    };\r\n    /** @internal */\r\n    KeyEventsPlugin._normalizeKey = function (keyName) {\r\n        // TODO: switch to a StringMap if the mapping grows too much\r\n        switch (keyName) {\r\n            case 'esc':\r\n                return 'escape';\r\n            default:\r\n                return keyName;\r\n        }\r\n    };\r\n    KeyEventsPlugin = __decorate([\r\n        di_1.Injectable(), \r\n        __metadata('design:paramtypes', [])\r\n    ], KeyEventsPlugin);\r\n    return KeyEventsPlugin;\r\n})(event_manager_1.EventManagerPlugin);\r\nexports.KeyEventsPlugin = KeyEventsPlugin;\r\n//# sourceMappingURL=data:application/json;base64,\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/platform/dom/events/key_events.js\n ** module id = 246\n ** module chunks = 1\n **/","'use strict';// Note: This class is only here so that we can reference it from TypeScript code.\r\n// The actual implementation lives under modules_dart.\r\n// TODO(tbosch): Move the corresponding code into angular2/src/compiler once\r\n// the new compiler is done.\r\nvar Codegen = (function () {\r\n    function Codegen(moduleAlias) {\r\n    }\r\n    Codegen.prototype.generate = function (typeName, changeDetectorTypeName, def) {\r\n        throw \"Not implemented in JS\";\r\n    };\r\n    Codegen.prototype.toString = function () { throw \"Not implemented in JS\"; };\r\n    return Codegen;\r\n})();\r\nexports.Codegen = Codegen;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhbmdlX2RldGVjdG9yX2NvZGVnZW4uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJhbmd1bGFyMi9zcmMvdHJhbnNmb3JtL3RlbXBsYXRlX2NvbXBpbGVyL2NoYW5nZV9kZXRlY3Rvcl9jb2RlZ2VuLnRzIl0sIm5hbWVzIjpbIkNvZGVnZW4iLCJDb2RlZ2VuLmNvbnN0cnVjdG9yIiwiQ29kZWdlbi5nZW5lcmF0ZSIsIkNvZGVnZW4udG9TdHJpbmciXSwibWFwcGluZ3MiOiJBQUlBLGtGQUFrRjtBQUNsRixzREFBc0Q7QUFDdEQsNEVBQTRFO0FBQzVFLDRCQUE0QjtBQUM1QjtJQUNFQSxpQkFBWUEsV0FBbUJBO0lBQUdDLENBQUNBO0lBQ25DRCwwQkFBUUEsR0FBUkEsVUFBU0EsUUFBZ0JBLEVBQUVBLHNCQUE4QkEsRUFBRUEsR0FBNkJBO1FBQ3RGRSxNQUFNQSx1QkFBdUJBLENBQUNBO0lBQ2hDQSxDQUFDQTtJQUNERiwwQkFBUUEsR0FBUkEsY0FBcUJHLE1BQU1BLHVCQUF1QkEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7SUFDdkRILGNBQUNBO0FBQURBLENBQUNBLEFBTkQsSUFNQztBQU5ZLGVBQU8sVUFNbkIsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENoYW5nZURldGVjdG9yRGVmaW5pdGlvbixcbn0gZnJvbSAnYW5ndWxhcjIvc3JjL2NvcmUvY2hhbmdlX2RldGVjdGlvbi9jaGFuZ2VfZGV0ZWN0aW9uJztcblxuLy8gTm90ZTogVGhpcyBjbGFzcyBpcyBvbmx5IGhlcmUgc28gdGhhdCB3ZSBjYW4gcmVmZXJlbmNlIGl0IGZyb20gVHlwZVNjcmlwdCBjb2RlLlxuLy8gVGhlIGFjdHVhbCBpbXBsZW1lbnRhdGlvbiBsaXZlcyB1bmRlciBtb2R1bGVzX2RhcnQuXG4vLyBUT0RPKHRib3NjaCk6IE1vdmUgdGhlIGNvcnJlc3BvbmRpbmcgY29kZSBpbnRvIGFuZ3VsYXIyL3NyYy9jb21waWxlciBvbmNlXG4vLyB0aGUgbmV3IGNvbXBpbGVyIGlzIGRvbmUuXG5leHBvcnQgY2xhc3MgQ29kZWdlbiB7XG4gIGNvbnN0cnVjdG9yKG1vZHVsZUFsaWFzOiBzdHJpbmcpIHt9XG4gIGdlbmVyYXRlKHR5cGVOYW1lOiBzdHJpbmcsIGNoYW5nZURldGVjdG9yVHlwZU5hbWU6IHN0cmluZywgZGVmOiBDaGFuZ2VEZXRlY3RvckRlZmluaXRpb24pOiB2b2lkIHtcbiAgICB0aHJvdyBcIk5vdCBpbXBsZW1lbnRlZCBpbiBKU1wiO1xuICB9XG4gIHRvU3RyaW5nKCk6IHN0cmluZyB7IHRocm93IFwiTm90IGltcGxlbWVudGVkIGluIEpTXCI7IH1cbn1cbiJdfQ==\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular2/src/transform/template_compiler/change_detector_codegen.js\n ** module id = 247\n ** module chunks = 1\n **/","import {Component} from 'angular2/core';\n\n@Component({\n  selector: 'gapminder-app',\n  template: `\n    <alert type=\"info\">Here will be new and shiny gapminder.org</alert>\n  `,\n})\nexport class AppComponent {\n  type:string = 'app component';\n\n  constructor() {\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./app/app.component.ts\n **/"],"sourceRoot":""}